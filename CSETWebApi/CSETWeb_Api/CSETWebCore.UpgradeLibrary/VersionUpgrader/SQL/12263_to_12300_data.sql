/*
Run this script on:

(localdb)\INLLocalDB2022.CSETWeb12263    -  This database will be modified

to synchronize it with:

(localdb)\INLLocalDB2022.CSETWeb12300

You are recommended to back up your database before running this script

Script created by SQL Data Compare version 14.10.9.22680 from Red Gate Software Ltd at 10/31/2024 11:31:43 AM

*/
		
SET NUMERIC_ROUNDABORT OFF
GO
SET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS, NOCOUNT ON
GO
SET DATEFORMAT YMD
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL Serializable
GO
BEGIN TRANSACTION

PRINT(N'Disable DML triggers on [dbo].[MATURITY_GROUPINGS]')
ALTER TABLE [dbo].[MATURITY_GROUPINGS] DISABLE TRIGGER [trg_update_maturity_groupings]

PRINT(N'Drop constraints from [dbo].[MATURITY_REFERENCES]')
ALTER TABLE [dbo].[MATURITY_REFERENCES] NOCHECK CONSTRAINT [FK_MATURITY_REFERENCES_GEN_FILE]
ALTER TABLE [dbo].[MATURITY_REFERENCES] NOCHECK CONSTRAINT [FK_MATURITY_REFERENCES_MATURITY_QUESTIONS]

PRINT(N'Drop constraints from [dbo].[MATURITY_QUESTIONS]')
ALTER TABLE [dbo].[MATURITY_QUESTIONS] NOCHECK CONSTRAINT [FK__MATURITY___Matur__5B638405]
ALTER TABLE [dbo].[MATURITY_QUESTIONS] NOCHECK CONSTRAINT [FK_MATURITY_QUESTIONS_MATURITY_GROUPINGS]
ALTER TABLE [dbo].[MATURITY_QUESTIONS] NOCHECK CONSTRAINT [FK_MATURITY_QUESTIONS_MATURITY_LEVELS]
ALTER TABLE [dbo].[MATURITY_QUESTIONS] NOCHECK CONSTRAINT [FK_MATURITY_QUESTIONS_MATURITY_MODELS]
ALTER TABLE [dbo].[MATURITY_QUESTIONS] NOCHECK CONSTRAINT [FK_MATURITY_QUESTIONS_MATURITY_OPTIONS]
ALTER TABLE [dbo].[MATURITY_QUESTIONS] NOCHECK CONSTRAINT [FK_MATURITY_QUESTIONS_MATURITY_QUESTION_TYPES]
ALTER TABLE [dbo].[MATURITY_QUESTIONS] NOCHECK CONSTRAINT [FK_MATURITY_QUESTIONS_MATURITY_QUESTIONS]

PRINT(N'Drop constraint FK__HYDRO_DAT__Mat_Q__38652BE2 from [dbo].[HYDRO_DATA]')
ALTER TABLE [dbo].[HYDRO_DATA] NOCHECK CONSTRAINT [FK__HYDRO_DAT__Mat_Q__38652BE2]

PRINT(N'Drop constraint FK_MATURITY_QUESTIONS_MAT_QUESTION_ID from [dbo].[ISE_ACTIONS]')
ALTER TABLE [dbo].[ISE_ACTIONS] NOCHECK CONSTRAINT [FK_MATURITY_QUESTIONS_MAT_QUESTION_ID]

PRINT(N'Drop constraint FK_MATURITY_ANSWER_OPTIONS_MATURITY_QUESTIONS1 from [dbo].[MATURITY_ANSWER_OPTIONS]')
ALTER TABLE [dbo].[MATURITY_ANSWER_OPTIONS] NOCHECK CONSTRAINT [FK_MATURITY_ANSWER_OPTIONS_MATURITY_QUESTIONS1]

PRINT(N'Drop constraint FK_MATURITY_QUESTION_PROPS_MATURITY_QUESTIONS from [dbo].[MATURITY_QUESTION_PROPS]')
ALTER TABLE [dbo].[MATURITY_QUESTION_PROPS] NOCHECK CONSTRAINT [FK_MATURITY_QUESTION_PROPS_MATURITY_QUESTIONS]

PRINT(N'Drop constraint FK_MATURITY_REFERENCE_TEXT_MATURITY_QUESTIONS from [dbo].[MATURITY_REFERENCE_TEXT]')
ALTER TABLE [dbo].[MATURITY_REFERENCE_TEXT] NOCHECK CONSTRAINT [FK_MATURITY_REFERENCE_TEXT_MATURITY_QUESTIONS]

PRINT(N'Drop constraint FK_MATURITY_SUB_MODEL_QUESTIONS_MATURITY_QUESTIONS from [dbo].[MATURITY_SUB_MODEL_QUESTIONS]')
ALTER TABLE [dbo].[MATURITY_SUB_MODEL_QUESTIONS] NOCHECK CONSTRAINT [FK_MATURITY_SUB_MODEL_QUESTIONS_MATURITY_QUESTIONS]

PRINT(N'Drop constraint FK_TTP_MAT_QUESTION_MATURITY_QUESTIONS from [dbo].[TTP_MAT_QUESTION]')
ALTER TABLE [dbo].[TTP_MAT_QUESTION] NOCHECK CONSTRAINT [FK_TTP_MAT_QUESTION_MATURITY_QUESTIONS]

PRINT(N'Drop constraints from [dbo].[REQUIREMENT_QUESTIONS_SETS]')
ALTER TABLE [dbo].[REQUIREMENT_QUESTIONS_SETS] NOCHECK CONSTRAINT [FK_REQUIREMENT_QUESTIONS_SETS_NEW_QUESTION]
ALTER TABLE [dbo].[REQUIREMENT_QUESTIONS_SETS] NOCHECK CONSTRAINT [FK_REQUIREMENT_QUESTIONS_SETS_NEW_REQUIREMENT]
ALTER TABLE [dbo].[REQUIREMENT_QUESTIONS_SETS] NOCHECK CONSTRAINT [FK_REQUIREMENT_QUESTIONS_SETS_SETS]

PRINT(N'Drop constraints from [dbo].[PARAMETER_REQUIREMENTS]')
ALTER TABLE [dbo].[PARAMETER_REQUIREMENTS] NOCHECK CONSTRAINT [FK_Parameter_Requirements_NEW_REQUIREMENT]
ALTER TABLE [dbo].[PARAMETER_REQUIREMENTS] NOCHECK CONSTRAINT [FK_Parameter_Requirements_Parameters]

PRINT(N'Drop constraints from [dbo].[NEW_QUESTION_LEVELS]')
ALTER TABLE [dbo].[NEW_QUESTION_LEVELS] NOCHECK CONSTRAINT [FK_NEW_QUESTION_LEVELS_NEW_QUESTION_SETS]
ALTER TABLE [dbo].[NEW_QUESTION_LEVELS] NOCHECK CONSTRAINT [FK_NEW_QUESTION_LEVELS_UNIVERSAL_SAL_LEVEL]

PRINT(N'Drop constraints from [dbo].[NCSF_FULL_TO_MID]')
ALTER TABLE [dbo].[NCSF_FULL_TO_MID] NOCHECK CONSTRAINT [FK_NCSF_FULL_TO_MID_NCSF_CONVERSION_MAPPINGS_FULL]
ALTER TABLE [dbo].[NCSF_FULL_TO_MID] NOCHECK CONSTRAINT [FK_NCSF_FULL_TO_MID_NCSF_CONVERSION_MAPPINGS_MID]

PRINT(N'Drop constraints from [dbo].[NCSF_ENTRY_TO_MID]')
ALTER TABLE [dbo].[NCSF_ENTRY_TO_MID] NOCHECK CONSTRAINT [FK_NCSF_ENTRY_TO_MID_NCSF_CONVERSION_MAPPINGS_ENTRY]
ALTER TABLE [dbo].[NCSF_ENTRY_TO_MID] NOCHECK CONSTRAINT [FK_NCSF_ENTRY_TO_MID_NCSF_CONVERSION_MAPPINGS_MID]

PRINT(N'Drop constraints from [dbo].[MATURITY_LEVELS]')
ALTER TABLE [dbo].[MATURITY_LEVELS] NOCHECK CONSTRAINT [FK_MATURITY_LEVELS_MATURITY_MODELS]

PRINT(N'Drop constraints from [dbo].[MATURITY_GROUPINGS]')
ALTER TABLE [dbo].[MATURITY_GROUPINGS] NOCHECK CONSTRAINT [FK_MATURITY_GROUPINGS_MATURITY_GROUPING_TYPES]
ALTER TABLE [dbo].[MATURITY_GROUPINGS] NOCHECK CONSTRAINT [FK_MATURITY_GROUPINGS_MATURITY_MODELS]

PRINT(N'Drop constraint FK_MATURITY_DOMAIN_REMARKS_MATURITY_GROUPINGS from [dbo].[MATURITY_DOMAIN_REMARKS]')
ALTER TABLE [dbo].[MATURITY_DOMAIN_REMARKS] NOCHECK CONSTRAINT [FK_MATURITY_DOMAIN_REMARKS_MATURITY_GROUPINGS]

PRINT(N'Drop constraints from [dbo].[GALLERY_GROUP_DETAILS]')
ALTER TABLE [dbo].[GALLERY_GROUP_DETAILS] NOCHECK CONSTRAINT [FK_GALLERY_GROUP_DETAILS_GALLERY_GROUP]
ALTER TABLE [dbo].[GALLERY_GROUP_DETAILS] NOCHECK CONSTRAINT [FK_GALLERY_GROUP_DETAILS_GALLERY_ITEM]

PRINT(N'Drop constraint FK_ASSESSMENT_PARAMETERS_PARAMETERS from [dbo].[PARAMETER_ASSESSMENT]')
ALTER TABLE [dbo].[PARAMETER_ASSESSMENT] NOCHECK CONSTRAINT [FK_ASSESSMENT_PARAMETERS_PARAMETERS]

PRINT(N'Drop constraint FK_PARAMETER_VALUES_PARAMETERS from [dbo].[PARAMETER_VALUES]')
ALTER TABLE [dbo].[PARAMETER_VALUES] NOCHECK CONSTRAINT [FK_PARAMETER_VALUES_PARAMETERS]

PRINT(N'Drop constraints from [dbo].[NEW_REQUIREMENT]')
ALTER TABLE [dbo].[NEW_REQUIREMENT] NOCHECK CONSTRAINT [FK_NEW_REQUIREMENT_NCSF_Category]
ALTER TABLE [dbo].[NEW_REQUIREMENT] NOCHECK CONSTRAINT [FK_NEW_REQUIREMENT_QUESTION_GROUP_HEADING]
ALTER TABLE [dbo].[NEW_REQUIREMENT] NOCHECK CONSTRAINT [FK_NEW_REQUIREMENT_SETS]
ALTER TABLE [dbo].[NEW_REQUIREMENT] NOCHECK CONSTRAINT [FK_NEW_REQUIREMENT_STANDARD_CATEGORY]

PRINT(N'Drop constraint FK_FINANCIAL_REQUIREMENTS_NEW_REQUIREMENT from [dbo].[FINANCIAL_REQUIREMENTS]')
ALTER TABLE [dbo].[FINANCIAL_REQUIREMENTS] NOCHECK CONSTRAINT [FK_FINANCIAL_REQUIREMENTS_NEW_REQUIREMENT]

PRINT(N'Drop constraint FK_NERC_RISK_RANKING_NEW_REQUIREMENT from [dbo].[NERC_RISK_RANKING]')
ALTER TABLE [dbo].[NERC_RISK_RANKING] NOCHECK CONSTRAINT [FK_NERC_RISK_RANKING_NEW_REQUIREMENT]

PRINT(N'Drop constraint FK_REQUIREMENT_LEVELS_NEW_REQUIREMENT from [dbo].[REQUIREMENT_LEVELS]')
ALTER TABLE [dbo].[REQUIREMENT_LEVELS] NOCHECK CONSTRAINT [FK_REQUIREMENT_LEVELS_NEW_REQUIREMENT]

PRINT(N'Drop constraint FK_REQUIREMENT_REFERENCE_TEXT_NEW_REQUIREMENT from [dbo].[REQUIREMENT_REFERENCE_TEXT]')
ALTER TABLE [dbo].[REQUIREMENT_REFERENCE_TEXT] NOCHECK CONSTRAINT [FK_REQUIREMENT_REFERENCE_TEXT_NEW_REQUIREMENT]

PRINT(N'Drop constraint FK_REQUIREMENT_REFERENCES_NEW_REQUIREMENT from [dbo].[REQUIREMENT_REFERENCES]')
ALTER TABLE [dbo].[REQUIREMENT_REFERENCES] NOCHECK CONSTRAINT [FK_REQUIREMENT_REFERENCES_NEW_REQUIREMENT]

PRINT(N'Drop constraint FK_REQUIREMENT_SETS_NEW_REQUIREMENT from [dbo].[REQUIREMENT_SETS]')
ALTER TABLE [dbo].[REQUIREMENT_SETS] NOCHECK CONSTRAINT [FK_REQUIREMENT_SETS_NEW_REQUIREMENT]

PRINT(N'Drop constraints from [dbo].[NEW_QUESTION_SETS]')
ALTER TABLE [dbo].[NEW_QUESTION_SETS] NOCHECK CONSTRAINT [FK_NEW_QUESTION_SETS_NEW_QUESTION]
ALTER TABLE [dbo].[NEW_QUESTION_SETS] NOCHECK CONSTRAINT [FK_NEW_QUESTION_SETS_SETS]

PRINT(N'Drop constraints from [dbo].[MATURITY_MODELS]')
ALTER TABLE [dbo].[MATURITY_MODELS] NOCHECK CONSTRAINT [FK_MATURITY_MODELS_MATURITY_LEVEL_USAGE_TYPES]

PRINT(N'Drop constraint FK_ANALYTICS_MATURITY_GROUPINGS_MATURITY_MODELS from [dbo].[ANALYTICS_MATURITY_GROUPINGS]')
ALTER TABLE [dbo].[ANALYTICS_MATURITY_GROUPINGS] NOCHECK CONSTRAINT [FK_ANALYTICS_MATURITY_GROUPINGS_MATURITY_MODELS]

PRINT(N'Drop constraint FK__AVAILABLE__model__6F6A7CB2 from [dbo].[AVAILABLE_MATURITY_MODELS]')
ALTER TABLE [dbo].[AVAILABLE_MATURITY_MODELS] NOCHECK CONSTRAINT [FK__AVAILABLE__model__6F6A7CB2]

PRINT(N'Drop constraint FK_MODES_SETS_MATURITY_MODELS_MATURITY_MODELS from [dbo].[MODES_SETS_MATURITY_MODELS]')
ALTER TABLE [dbo].[MODES_SETS_MATURITY_MODELS] NOCHECK CONSTRAINT [FK_MODES_SETS_MATURITY_MODELS_MATURITY_MODELS]

PRINT(N'Drop constraints from [dbo].[GEN_FILE]')
ALTER TABLE [dbo].[GEN_FILE] NOCHECK CONSTRAINT [FK_GEN_FILE_FILE_REF_KEYS]
ALTER TABLE [dbo].[GEN_FILE] NOCHECK CONSTRAINT [FK_GEN_FILE_FILE_TYPE]

PRINT(N'Drop constraint FILE_KEYWORDS_GEN_FILE_FK from [dbo].[FILE_KEYWORDS]')
ALTER TABLE [dbo].[FILE_KEYWORDS] NOCHECK CONSTRAINT [FILE_KEYWORDS_GEN_FILE_FK]

PRINT(N'Drop constraint FK_GEN_FILE_LIB_PATH_CORL_GEN_FILE from [dbo].[GEN_FILE_LIB_PATH_CORL]')
ALTER TABLE [dbo].[GEN_FILE_LIB_PATH_CORL] NOCHECK CONSTRAINT [FK_GEN_FILE_LIB_PATH_CORL_GEN_FILE]

PRINT(N'Drop constraint FK_REQUIREMENT_REFERENCES_GEN_FILE from [dbo].[REQUIREMENT_REFERENCES]')
ALTER TABLE [dbo].[REQUIREMENT_REFERENCES] NOCHECK CONSTRAINT [FK_REQUIREMENT_REFERENCES_GEN_FILE]

PRINT(N'Drop constraint FK_SET_FILES_GEN_FILE from [dbo].[SET_FILES]')
ALTER TABLE [dbo].[SET_FILES] NOCHECK CONSTRAINT [FK_SET_FILES_GEN_FILE]

PRINT(N'Drop constraint FK_ASSESSMENTS_GALLERY_ITEM from [dbo].[ASSESSMENTS]')
ALTER TABLE [dbo].[ASSESSMENTS] NOCHECK CONSTRAINT [FK_ASSESSMENTS_GALLERY_ITEM]

PRINT(N'Update rows in [dbo].[MATURITY_QUESTIONS]')
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Question_Text]=N'Is two-factor authentication implemented for all privileged (e.g. system administrators) and remote users?' WHERE [Mat_Question_Id] = 1915
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Question_Title]=N'AC.L1-B.1.I', [Question_Text]=N'<p>Limit information system access to authorized users, processes acting on behalf of authorized users, or devices (including other information systems).</p>&#10;&#10;<p><b>Determine if:</b></p>&#10;<ol class="alpha-bracket">&#10; <li>authorized users are identified;</li>&#10;<li>processes acting on behalf of authorized users are identified;</li>&#10;<li>devices (and other systems) authorized to connect to the system are identified;</li>&#10;<li>system access is limited to authorized users;</li>&#10;<li>system access is limited to processes acting on behalf of authorized users; and</li>&#10;<li>system access is limited to authorized devices (including other systems).</li>&#10;</ol>&#10;&#10;', [Supplemental_Info]=N'<div><b>ASSESSMENT OBJECTIVES [NIST SP 800-171A]&#160;</b></div><div>Determine if:&#160;</div><div>[a] authorized users are identified;&#160;</div><div>[b] processes acting on behalf of authorized users are identified;&#160;</div><div>[c] devices (and other systems) authorized to connect to the system are identified;&#160;</div><div>[d] system access is limited to authorized users;&#160;</div><div>[e] system access is limited to processes acting on behalf of authorized users; and&#160;</div><div>[f] system access is limited to authorized devices (including other systems).&#160;</div><div><br></div><div><b>POTENTIAL ASSESSMENT METHODS AND OBJECTS [NIST SP 800-171A]</b></div><div><b>Examine</b></div><div>[SELECT FROM: Access control policy; procedures addressing account management; system&#10;security plan; system design documentation; system configuration settings and associated &#10;documentation; list of active system accounts and the name of the individual associated with &#10;each account; notifications or records of recently transferred, separated, or terminated &#10;employees; list of conditions for group and role membership; list of recently disabled system &#10;accounts along with the name of the individual associated with each account; access &#10;authorization records; account management compliance reviews; system monitoring &#10;records; system audit logs and records; list of devices and systems authorized to connect to &#10;organizational systems; other relevant documents or records].&#160;</div><div><b>Interview&#160;</b></div><div>[SELECT FROM: Personnel with account management responsibilities; system or network &#10;administrators; personnel with information security responsibilities].&#160;</div><div><b>Test&#160;</b></div><div>[SELECT FROM: Organizational processes for managing system accounts; mechanisms for &#10;implementing account management]<br><b><br>DISCUSSION [NIST SP 800-171 R2]&#160;</b></div><div>Access control policies (e.g., identity- or role-based policies, control matrices, and &#10;cryptography) control access between active entities or subjects (i.e., users or processes &#10;acting on behalf of users) and passive entities or objects (e.g., devices, files, records, and &#10;domains) in systems. Access enforcement mechanisms can be employed at the application &#10;and service level to provide increased information security. Other systems include systems &#10;internal and external to the organization. This requirement focuses on account management &#10;for systems and applications. The definition of and enforcement of access authorizations, &#10;other than those determined by account type (e.g., privileged verses [sic] non-privileged) are &#10;addressed in requirement 3.1.2.&#160;</div><div><br></div>&#10;<div><b>FURTHER DISCUSSION&#160;</b></div><div><i><b>NOTE: This section is derived from CMMC 1.02 guidance for informational purposes only. It will be updated when the CMMC 2.0 publications become available.</b></i></div><div>Identify users, processes, and devices that are allowed to use company computers and can &#10;log on to the company network [a]. Automated updates and other automatic processes &#10;should be associated with the user who initiated (authorized) the process [b]. Limit the &#10;devices (e.g., printers) that can be accessed by company computers [c]. Set up your system &#10;so that only authorized users, processes, and devices can access the company network [d,e,f].&#10;This practice, AC.1.001, controls system access based on user, process or device &#10;identity. AC.1.001 leverages IA.1.076 which provides a vetted and trusted identity for access &#10;control required by AC.1.001.&#160;</div><div><b>Example 1&#160;</b></div><div>Your company maintains a list of all personnel authorized to use company information &#10;systems [a]. This list is used to support identification and authentication activities conducted &#10;by IT when authorizing access to systems [a,d].&#160;</div><div><b>Example 2&#160;</b></div><div>A coworker wants to buy a new multi-function printer/scanner/fax device and make it &#10;available on the company network. You explain that the company controls system and device &#10;access to the network, and will prevent network access by unauthorized systems and devices &#10;[c]. You help the coworker submit a ticket that asks for the printer to be granted access to &#10;the network and appropriate leadership approves the device [f].&#160;</div><div><b>Potential Assessment Considerations</b></div><div>&#160;&#8226; Is a list of authorized users maintained that defines their identities and roles [a]?&#160;</div><div>&#160;&#8226; Are account requests authorized before system access is granted [d,e,f]?<br></div><div><b><br></b></div><div><b>KEY REFERENCES</b></div><div><ul><li>FAR Clause 52.204-21 b.1.i </li><li>NIST SP 800-171 Rev 2 3.1.1</li></ul><div><b>ADDITIONAL REFERENCES</b></div><ul><li>CIS Controls v7.1 1.4, 1.6, 5.1, 14.6, 15.10, 16.8, 16.9, 16.11</li><li>NIST CSF v1.1 PR.AC-1, PR.AC-3, PR.AC-4, PR.AC-6, PR.PT-3, PR.PT-4</li><li>CERT RMM v1.2 TM:SG4.SP1</li><li>NIST SP 800-53 Rev 4 AC-2, AC- 3, AC-17</li><li>AU ACSC Essential Eigh<span>t</span></li></ul></div>', [Scope]=N'', [Recommend_Action]=N'', [Risk_Addressed]=N'', [Services]=N'' WHERE [Mat_Question_Id] = 4785
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Question_Text]=N'<p>Limit information system access to the types of transactions and functions that authorized users are permitted to execute.</p>&#10;&#10;<div><b>Determine if:</b>&#10;     <ol class="alpha-bracket">&#10;          <li>the types of transactions and functions that authorized users are permitted to execute are defined; and&#10;          </li>&#10;          <li>system access is limited to the defined types of transactions and functions for authorized users.</li>&#10;     </ol>&#10;</div>', [Scope]=N'', [Recommend_Action]=N'', [Risk_Addressed]=N'', [Services]=N'' WHERE [Mat_Question_Id] = 4879
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>  <ul>  <li>Organization has implemented a documented System Lifecycle management process for applications and assets throughout the facility networks.  The process is enforced, reviewed, and updated at least annually.  As part of this process, any applications or assets that are no longer supported have been removed from the system.</li>    </ul>    <div class="sub-header-2">In Progress</div>  <ul>  <li>Organization has began drafting the required documented System Lifecycle management process for applications and assets throughout the facility networks.  Unsupported applications and assets have been identified and the removal process has started</li>    </ul>    <div class="sub-header-2">Scoped</div>  <ul>  <li>Organization has identified the required documented System Lifecycle management process for applications and assets throughout the facility networks.  Unsupported applications and assets have been identified</li>    </ul>    <div class="sub-header-2">Not Implemented</div>  <ul>  <li>Organization does not have a documented System Lifecycle management process for applications and assets throughout the facility networks.  Unsupported applications and assets have not been identified or removed.</li>  </ul>  </div>' WHERE [Mat_Question_Id] = 8500
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>  <ul>  <li>Organization has implemented an ongoing program to identify and inventory unused IT/OT services and devices on the networks, and then disable and/or remove them within a specified amount of time not to exceed 180 days.</li>    </ul>    <div class="sub-header-2">In Progress</div>  <ul>  <li>Facility has documented all systems, applications, and services running on their network and has started to disable all unnecessary systems, applications, and services.</li>    </ul>    <div class="sub-header-2">Scoped</div>  <ul>  <li>Facility has documented all systems, applications, and services running on their network and has not disables all unnecessary systems, applications, and services.</li>    </ul>    <div class="sub-header-2">Not Implemented</div>  <ul>  <li>Organization does not have a program to detect unused IT/OT services and devices on the networks.  Unused services and devices have not been removed.</li>  </ul>  </div>' WHERE [Mat_Question_Id] = 8501
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>  <ul>  <li>Organization has established a Mobile Device Management program that is enforced, documented, and reviewed and updated at least annually.  The MDM program requires asset and application inventory of any mobile device on the the network.  The program should also clearly define and publish an acceptable use policy for mobile devices. The program should also include policies about Bring Your Own Device (BYOD) requirements.</li>    </ul>    <div class="sub-header-2">In Progress</div>  <ul>  <li>Organization has  a Mobile Device Management program that enforcement has started. It is documented, and has a requirement to be reviewed and updated at least annually.  The MDM program requires asset and application inventory of any mobile device on the the network.  The program should also clearly define and publish an acceptable use policy for mobile devices. The program should also include policies about Bring Your Own Device (BYOD) requirements.</li>    </ul>    <div class="sub-header-2">Scoped</div>  <ul>  <li>Organization has documented  a Mobile Device Management program. It is currently unforced.   The MDM program requires asset and application inventory of any mobile device on the the network.  The program should also clearly define and publish an acceptable use policy for mobile devices. The program should also include policies about Bring Your Own Device (BYOD) requirements.</li>    </ul>    <div class="sub-header-2">Not Implemented</div>  <ul>  <li>Organization does not have a mobile device management program.  The organization doesn''t track either assets or applications, and has no insight into what devices may be present on their network.</li>  </ul>  </div>' WHERE [Mat_Question_Id] = 8502
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Are sensitive data, including credentials, not stored in plaintext anywhere in the organization and can it only be accessed by authenticated and authorized users?</li>
<li>Are credentials stored in a secure manner, such as with a credential/password manager or vault, or other privileged account management solution?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9880
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Do necessary communications paths between the IT and OT networks pass through an intermediary, such as a properly configured firewall, bastion host, “jump box,” or a demilitarized zone?  Do these get closely monitored, capture network logs, and only allow connections from approved assets?</li>
<li>Are all connections to the OT network denied by default unless explicitly allowed (e.g., by IP address and port) for specific system functionality?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9881
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>On all corporate email infrastructure are the following in place: (1) STARTTLS is enabled, (2) SPF and DKIM are enabled, and (3) DMARC is enabled and set to “reject"?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9882
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Are all unsuccessful logins logged and sent to an organization''s security team or relevant logging system?</li>
<li>Are security teams notified (e.g., by an alert) after a specific number of consecutive, unsuccessful login attempts in a short period (e.g., five failed attempts in two minutes)?</li>
<li>Is the alert logged and stored in the relevant security or ticketing system for retroactive analysis?</li>
<li>Does a system-enforced policy prevent future logins for the suspicious account?  (for some minimum time, or until the account is re-enabled by a privileged user, if such a policy is available, e.g., Windows 11 can automatically lock out accounts for 10 minutes after 10 incorrect logins over a 10-minute period. )</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9883
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>In addition to basic cybersecurity training, do personnel who maintain or secure OT as part of their regular duties receive OT-specific cybersecurity training on at least an annual basis?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9884
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organization implement MFA for access to assets using the strongest available method for that asset (see questions below for scope). MFA options sorted by strength, high to low, are as follows: 
   1. Hardware-based, phishing-resistant MFA (e.g., FIDO/WebAuthn or PKI based - see CISA guidance in “Resources”); 
   2. If such hardware-based MFA is not available, then mobile app-based soft tokens (preferably push notification with number matching) or emerging technology such as FIDO passkeys are used; 
   3. MFA via SMS or voice only used when no other options are possible. 

IT: All IT accounts leverage MFA to access organizational resources. Prioritize accounts with highest risk, such as privileged administrative accounts for key IT systems.</li>
<li>Same question as above but here answer for OT, if applicable.
OT: Within OT environments, MFA is enabled on all accounts and systems that can be accessed remotely, including vendors/maintenance accounts, remotely accessible user and engineering workstations, and remotely accessible human-machine interfaces (HMIs).</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9885
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Do all organizational employees and contractors receive at least annual trainings that cover basic security concepts, such as phishing, business email compromise, basic operational security (OPSEC), password security, etc., as well as foster an internal culture of security and cyber awareness?</li>
<li>Do new employees receive initial cybersecurity training within 10 days of onboarding and recurring training on at least an annual basis?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9886
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organization implement an administrative policy or automated process that requires approval before new hardware, firmware, or software/ software version is installed or deployed?</li>
<li>Does the organization maintain a risk-informed allowlist of approved hardware, firmware, and software that includes specification of approved versions, when technically feasible?</li>
<li>For OT assets specifically, are these actions also aligned with defined change control and testing activities?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9887
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Is there a system-enforced policy that disables Microsoft Office macros, or similar embedded code, enforced by default on all devices?</li>
<li>If macros must be enabled in specific circumstances, is there a policy for authorized users to request that macros are enabled on specific assets?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9888
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organization maintain an inventory of all assets with an IP address, including OT?</li>
<li>Is the inventory updated periodically, at least on a monthly basis?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9889
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organizations maintain policies and processes to ensure that unauthorized media and hardware are not connected to IT and OT assets, such as by limiting use of USB devices and removable media or disabling AutoRun?</li>
<li>OT: When feasible, does the organization establish procedures to remove, disable, or otherwise secure physical ports to prevent the connection of unauthorized devices, or establish procedures for granting access through approved exceptions?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9890
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organization maintain accurate documentation describing the baseline and current configuration details of all critical IT and OT assets?</li>
<li>Are periodic reviews and updates performed and tracked on a recurring basis?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9891
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Are access- and security-focused (e.g., IDS/IDPS, firewall, DLP, VPN) logs collected and stored for use in both detection and incident response activities (e.g., forensics)?</li>
<li>Are security teams notified when a critical log source is disabled, such as Windows Event Logging?</li>
<li>OT: For OT assets where logs are non-standard or not available, are network traffic and communications to and from logless assets collected?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9892
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Are logs stored in a central system, such as a security information and event management (SIEM) tool or central database, and can only be accessed or modified by authorized and authenticated users?</li>
<li>Are logs stored for a duration informed by risk or pertinent regulatory guidelines?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9893
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organizations provision unique and separate credentials for similar services and asset access on  IT and OT networks? (E.g., users do not (or cannot) reuse passwords for accounts, applications, services, etc.  Service accounts/machine accounts have passwords that are unique from all member user accounts.)</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9894
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organization apply a defined and enforced administrative process to all departing employees by the day of their departure that revokes and securely returns all physical badges, key cards, tokens, etc.,?</li>
<li>Does the organization apply a defined and enforced administrative process to all departing employees by the day of their departure that  disables all user accounts and access to organizational resources?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9895
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organization have a designated individual identified as responsible and accountable for planning, resourcing, and execution of cybersecurity activities?  (e.g., a CISO)</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9896
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organization have a designated individual identified as responsible and accountable for planning, resourcing, and execution of OT cybersecurity activities?  (this may be the same position as identified in 1.B)</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9897
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p>
<div class="sub-header-2">Implemented</div>  <ul>
<li>Does the organization enforce an organization-wide policy and/or process that requires changing default manufacturer passwords for any/all hardware, software, and firmware before putting on any internal or external network?  (This includes IT assets for OT, such as OT administration web pages)</li>
<li>In instances where changing default passwords is not feasible (e.g., a control system with a hard-coded password), does the organization implement and document appropriate compensating security controls, and monitor logs for network traffic and login attempts on those devices?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>    
<div class="sub-header-2">In Progress</div>  <ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>    
<div class="sub-header-2">Scoped</div>  <ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>    
<div class="sub-header-2">Not Implemented</div>  <ul>
<li>None of the above implementation levels are met.</li>
</ul>  
</div>' WHERE [Mat_Question_Id] = 9898
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p>
<div class="sub-header-2">Implemented</div>  <ul>
<li><p>Does the organization have a system-enforced policy that requires a minimum password length of 15* or more characters for all password-protected IT assets, and all OT assets where technically feasible?**  Organizations should consider leveraging passphrases and password managers to make it easier for users to maintain sufficiently long passwords.</p>
<p>* Modern attacker tools can crack eight-character passwords quickly. Length is a more impactful and important factor in password strength than complexity or frequent password rotations. Long passwords are also easier for users to create and remember.</p>
<p>** OT assets that use a central authentication mechanism (such as Active Directory) are most important to address. Examples of low-risk OT assets that may not be technically feasible include those in remote locations, such as on offshore rigs or wind turbines.</p>
</li>
<li>In instances where minimum password lengths are not technically feasible, are compensating controls applied and recorded, and all login attempts to those assets logged?</li>
<li>Are assets that cannot support passwords of sufficient strength length prioritized for upgrade or replacement?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>    
<div class="sub-header-2">In Progress</div>  <ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>    
<div class="sub-header-2">Scoped</div>  <ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>    
<div class="sub-header-2">Not Implemented</div>  <ul>
<li>None of the above implementation levels are met.</li>
</ul>  
</div>' WHERE [Mat_Question_Id] = 9899
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organization sponsor at least one “pizza party” or equivalent social gathering per year that is focused on strengthening working relationships between IT and OT security personnel, and is not a working event (such as providing meals during an incident response)?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9900
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>1.E (IT) Are all Known Exploited Vulnerabilities in internet-facing systems mitigated within a risk-informed span of time?</li>
<li>1.E (OT) For OT assets where patching is either not possible or may substantially compromise availability or safety, are compensating controls applied and recorded, such that the ability of threat actors to exploit the vulnerabilities is reduced?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9901
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organization maintain codified policy and procedures on to whom and how to report all confirmed cybersecurity incidents to appropriate external entities (e.g., state/federal regulators or SRMA''s as required, ISAC/ISAO, as well as CISA)?</li>
<li>Does the organization report known incidents to CISA as well as other necessary parties within time frames directed by applicable regulatory guidance or in the absence of guidance, as soon as safely capable?
(This goal will be revisited following full implementation of the Cyber Incident Reporting for Critical Infrastructure Act of 2022.)</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9902
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Consistent with NIST SP 800-53 Revision 5 (https://csrc.nist.gov/publications/detail/sp/800-53/rev-5/final), does the organization maintain a public, easily discoverable method for security researchers to notify (e.g., via email address or web form) its security teams of vulnerable, misconfigured, or otherwise exploitable assets?</li>
<li>Are valid submissions acknowledged and responded to in a timely manner, taking into account the completeness and complexity of the vulnerability?</li>
<li>Are validated and exploitable weaknesses mitigated consistent with their severity?</li>
<li>Does the organization protect security researchers sharing vulnerabilities discovered in good faith under Safe Harbor rules?</li>
<li>In instances where vulnerabilities are validated and disclosed, does the organization give public acknowledgement to the researcher who originally submitted the notification?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9903
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Do all organiztional assets on the public internet expose no exploitable services, such as RDP?  If exploitable services must be exposed, are appropriate compensating controls implemented to prevent common forms of abuse and exploitation?</li>
<li>Are all unnecessary OS applications and network protocols disabled on internet-facing assets?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9904
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organization have no OT assets on the public internet, unless explicitly required for operation?</li>
<li>Are all exceptions (i.e., OT assets on the public internet) justified and documented, anddo they have additional protections in place to prevent and detect exploitation attempts (e.g., logging, MFA, mandatory access via proxy or other intermediary)?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9905
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organization engage with a third party with demonstrated expertise in cybersecurity to regularly validate the effectiveness and coverage of its cybersecurity defenses?  (e.g., does a third party conduct penetration tests, bug bounties, incident simulations, or table-top exercises, both unannounced and announced tests?)</li>
<li>Are high-impact findings from previous tests mitigated in a timely manner and not re-observed in future tests?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9906
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organizations’ procurement documents include cybersecurity requirements and questions, which are evaluated in vendor selection such that, given two offerings of roughly similar cost and function, the more secure offering and/or supplier is preferred?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9907
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Do procurement documents and contracts, such as service-level agreements (SLAs), stipulate that vendors and/or service providers notify the procuring customer of security incidents within a risk-informed time frame, as determined by the organization?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9908
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organization''s procurement documents and contracts, such as SLAs, stipulate that vendors and/or service providers notify the procuring customer of confirmed security vulnerabilities in their assets within a risk informed time frame, as determined by the organization?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9909
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p>
<div class="sub-header-2">Implemented</div>  <ul>
<li>Does the organization deploy security.txt files that conform to the recommendations in RFC 9116 on all public-facing web domains?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>    
<div class="sub-header-2">In Progress</div>  <ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>    
<div class="sub-header-2">Scoped</div>  <ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>    
<div class="sub-header-2">Not Implemented</div>  <ul>
<li>None of the above implementation levels are met.</li>
</ul>  
</div>' WHERE [Mat_Question_Id] = 9910
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organization have, maintain, update, and regularly drill IT and OT cybersecurity incident response plans for both common and organization-specific (e.g., by sector, locality) threat scenarios and TTPs?</li>
<li>When conducted, are tests or drills as realistic as feasible?</li>
<li>Are IR plans drilled at least annually and are they updated within a risk-informed time frame following the lessons learned portion of any exercise or drill?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9911
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Are all systems that are necessary for operations backed up on a regular cadence, no less than once per year?</li>
<li>Are backups stored separately from the source systems and tested on a recurring basis, no less than once per year?</li>
<li>Does stored information for OT assets include at a minimum: configurations, roles, PLC logic, engineering drawings, and tools?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9912
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organization maintain accurate documentation describing updated network topology and relevant information across all IT and OT networks?</li>
<li>Are periodic reviews and updates performed and tracked on a recurring basis?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9913
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Is properly configured and up-to-date transport layer security (TLS) used toprotect data in transit, when technically feasible?</li>
<li>Does the organization also plan to identify any use of outdated or weak encryption, update these to sufficiently strong algorithms, and consider managing implications of post-quantum cryptography?</li>
<li>OT: To minimize the impact to latency and availability; is encryption used where feasible, usually for OT communications connecting with remote/external assets?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9914
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organization have a list of threat and cyber actor TTPs that are relevant to it?</li>
<li>Does the organization maintain the ability (such as via rules, alerting, or commercial prevention and detection systems) to detect instances of those key threats?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9915
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organization have no user accounts with administrator or super-user privileges?</li>
<li>Do administrators maintain separate user accounts for all actions and activities not associated with the administrator role (e.g., for business email, web browsing)?</li>
<li>Are privileges reevaluated on a recurring basis to validate continued need for a given set of permissions?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9916
UPDATE [dbo].[MATURITY_QUESTIONS] SET [Implementation_Guides]=N'<p class="fst-italic">All bullets for an answer option must be satisfied to meet the criteria for that answer.</p><div class="sub-header-2">Implemented</div>
<ul>
<li>Does the organization develop, maintain, and execute plans to recover and restore to service business or mission-critical assets or systems that might be impacted by a cybersecurity incident?</li>
<li>Is the control in place, such that any remaining gaps are relatively minor?  (< 3% gaps)</li>
</ul>
<div class="sub-header-2">In Progress</div>
<ul>
<li>Is the organization actively working to implement this control, such that it is at least 10% implemented?</li>
</ul>
<div class="sub-header-2">Scoped</div>
<ul>
<li>Does the organization have a plan and funding allocated to implement this goal?  (i.e., at least a POA&M with allocated funding for it?)</li>
</ul>
<div class="sub-header-2">Not Implemented</div>
<ul>
<li>None of the above implementation levels are met.</li>
</ul>
' WHERE [Mat_Question_Id] = 9917
PRINT(N'Operation applied to 44 rows out of 44')

PRINT(N'Update row in [dbo].[GALLERY_GROUP_DETAILS]')
UPDATE [dbo].[GALLERY_GROUP_DETAILS] SET [Column_Index]=3 WHERE [Group_Detail_Id] = 115

PRINT(N'Update rows in [dbo].[NEW_REQUIREMENT]')
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=6 WHERE [Requirement_Id] = 36403
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=13 WHERE [Requirement_Id] = 36404
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=29 WHERE [Requirement_Id] = 36405
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=18 WHERE [Requirement_Id] = 36406
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=24 WHERE [Requirement_Id] = 36407
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=12 WHERE [Requirement_Id] = 36408
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=14 WHERE [Requirement_Id] = 36409
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=11 WHERE [Requirement_Id] = 36410
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=20 WHERE [Requirement_Id] = 36411
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=16 WHERE [Requirement_Id] = 36412
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=17 WHERE [Requirement_Id] = 36413
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=21 WHERE [Requirement_Id] = 36414
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=5 WHERE [Requirement_Id] = 36415
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=4 WHERE [Requirement_Id] = 36416
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=26 WHERE [Requirement_Id] = 36417
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=1 WHERE [Requirement_Id] = 36418
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=25 WHERE [Requirement_Id] = 36419
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=10 WHERE [Requirement_Id] = 36420
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=30 WHERE [Requirement_Id] = 36421
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=22 WHERE [Requirement_Id] = 36422
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=28 WHERE [Requirement_Id] = 36423
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=2 WHERE [Requirement_Id] = 36424
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=35 WHERE [Requirement_Id] = 36425
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=7 WHERE [Requirement_Id] = 36426
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=8 WHERE [Requirement_Id] = 36427
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=27 WHERE [Requirement_Id] = 36428
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=19 WHERE [Requirement_Id] = 36429
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=31 WHERE [Requirement_Id] = 36430
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=32 WHERE [Requirement_Id] = 36431
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=33 WHERE [Requirement_Id] = 36432
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=3 WHERE [Requirement_Id] = 36433
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=66 WHERE [Requirement_Id] = 36434
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=15 WHERE [Requirement_Id] = 36435
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=23 WHERE [Requirement_Id] = 36436
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=34 WHERE [Requirement_Id] = 36437
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=9 WHERE [Requirement_Id] = 36438
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=36 WHERE [Requirement_Id] = 36439
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=37 WHERE [Requirement_Id] = 36440
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=38 WHERE [Requirement_Id] = 36441
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=39 WHERE [Requirement_Id] = 36442
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=40 WHERE [Requirement_Id] = 36443
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=41 WHERE [Requirement_Id] = 36444
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=42 WHERE [Requirement_Id] = 36445
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=43 WHERE [Requirement_Id] = 36446
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=44 WHERE [Requirement_Id] = 36447
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=45 WHERE [Requirement_Id] = 36448
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=46 WHERE [Requirement_Id] = 36449
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=47 WHERE [Requirement_Id] = 36450
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=48 WHERE [Requirement_Id] = 36451
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=49 WHERE [Requirement_Id] = 36452
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=50 WHERE [Requirement_Id] = 36453
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=51 WHERE [Requirement_Id] = 36454
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=52 WHERE [Requirement_Id] = 36455
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=53 WHERE [Requirement_Id] = 36456
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=54 WHERE [Requirement_Id] = 36457
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=55 WHERE [Requirement_Id] = 36458
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=56 WHERE [Requirement_Id] = 36459
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=57 WHERE [Requirement_Id] = 36460
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=58 WHERE [Requirement_Id] = 36461
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=59 WHERE [Requirement_Id] = 36462
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=60 WHERE [Requirement_Id] = 36463
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=61 WHERE [Requirement_Id] = 36464
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=62 WHERE [Requirement_Id] = 36465
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=63 WHERE [Requirement_Id] = 36466
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=64 WHERE [Requirement_Id] = 36467
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=65 WHERE [Requirement_Id] = 36468
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=67 WHERE [Requirement_Id] = 36469
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=68 WHERE [Requirement_Id] = 36470
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=69 WHERE [Requirement_Id] = 36471
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=70 WHERE [Requirement_Id] = 36472
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=71 WHERE [Requirement_Id] = 36473
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=72 WHERE [Requirement_Id] = 36474
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=73 WHERE [Requirement_Id] = 36475
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=74 WHERE [Requirement_Id] = 36476
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=75 WHERE [Requirement_Id] = 36477
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=76 WHERE [Requirement_Id] = 36478
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=77 WHERE [Requirement_Id] = 36479
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=78 WHERE [Requirement_Id] = 36480
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=79 WHERE [Requirement_Id] = 36481
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=80 WHERE [Requirement_Id] = 36482
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=81 WHERE [Requirement_Id] = 36483
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=82 WHERE [Requirement_Id] = 36484
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=83 WHERE [Requirement_Id] = 36485
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=84 WHERE [Requirement_Id] = 36486
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=85 WHERE [Requirement_Id] = 36487
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=86 WHERE [Requirement_Id] = 36488
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=87 WHERE [Requirement_Id] = 36489
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=88 WHERE [Requirement_Id] = 36490
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=89 WHERE [Requirement_Id] = 36491
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=90 WHERE [Requirement_Id] = 36492
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=91 WHERE [Requirement_Id] = 36493
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=92 WHERE [Requirement_Id] = 36494
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=93 WHERE [Requirement_Id] = 36495
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=94 WHERE [Requirement_Id] = 36496
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=95 WHERE [Requirement_Id] = 36497
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=96 WHERE [Requirement_Id] = 36498
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=97 WHERE [Requirement_Id] = 36499
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=98 WHERE [Requirement_Id] = 36500
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=99 WHERE [Requirement_Id] = 36501
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=100 WHERE [Requirement_Id] = 36502
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=101 WHERE [Requirement_Id] = 36503
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=102 WHERE [Requirement_Id] = 36504
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=103 WHERE [Requirement_Id] = 36505
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=104 WHERE [Requirement_Id] = 36506
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=105 WHERE [Requirement_Id] = 36507
UPDATE [dbo].[NEW_REQUIREMENT] SET [Ranking]=106 WHERE [Requirement_Id] = 36508
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Is the security management plan exercised at least once per year?' WHERE [Requirement_Id] = 37243
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Has the security management plan been coordinated with local law enforcement?' WHERE [Requirement_Id] = 37246
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Is mail and/or packages stored in a secure area while awaiting further processing?' WHERE [Requirement_Id] = 37260
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Are all items secured immediately once delivered to the receiving point/loading dock by the courier?' WHERE [Requirement_Id] = 37261
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'What percentage of the facility is enclosed in fencing?  (Please explain in the comments section)' WHERE [Requirement_Id] = 37271
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Are all external air intakes at least 10 feet from the ground or have adequate access control to prevent unauthorized access?' WHERE [Requirement_Id] = 37280
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Is the footage monitored proactively (select "yes"), or only when an incident needs to be reviewed (select "no")?', [Supplemental_Info]=N'Monitoring the footage in real-time provides inceased situational awareness.' WHERE [Requirement_Id] = 37285
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Does the video surveillance system store footage for at least 30 days without being prompted to save the footage for a longer period of time?' WHERE [Requirement_Id] = 37290
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'When in full bloom, is all foliage and vegetation at a clear distance as to not interfere with the camera system?' WHERE [Requirement_Id] = 37307
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Are the alarm arming and de-arming codes issued on a limited basis and to the appropriate people?' WHERE [Requirement_Id] = 37315
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Is it policy to limit access to the facility to any group not affiliated with tenant organizations (i.e. gatherings in an auditorium, etc.)?' WHERE [Requirement_Id] = 37324
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Are all primary access doors secured and require a staff member (physically or electronically) to access as appropriate?' WHERE [Requirement_Id] = 37336
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Is proper standoff in place to prevent any unauthorized vehicle be placed (legally or illegally) within 400 feet of the facility?' WHERE [Requirement_Id] = 37351
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Does the facility designed in such a way to prevent one or more avenues of high speed approach?', [Supplemental_Info]=N'The security working group should explore options which best fit the needs of the organization and facility.' WHERE [Requirement_Id] = 37352
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Are some interior lights activated during off hours?' WHERE [Requirement_Id] = 37358
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'When in full bloom, is all foliage and vegetation at a clear distance as to not interfere with security lighting?' WHERE [Requirement_Id] = 37359
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Does the security working group actively participate in the planning process of all special events held at the facility that draw large crowds or increased visibility to the event/venue?' WHERE [Requirement_Id] = 37385
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Are local first responders made aware of the increase in population due to special events and/or potential threats?' WHERE [Requirement_Id] = 37386
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'When calling 911, can a caller simply pick up the phone and call without a prefix digit to get an outside line? (i.e. 8 or 9 to dial outside)' WHERE [Requirement_Id] = 37392
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Is the organization free of any surrounding areas/facilities/operations/objects, etc. beyond the control of the organization that could pose a potential hazard to the facility?' WHERE [Requirement_Id] = 37394
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Is the organization free of any high crime areas which could pose a potential hazard to the facility?' WHERE [Requirement_Id] = 37395
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Does the security working group oversee policy and operations for all situations  regarding employees having regular contact with children or other high vulnerability groups as part of their daily responsibilities/duties/tasks?                           ' WHERE [Requirement_Id] = 37411
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Are employees accused or convicted of any offense requiring compliance with sex offender registry/restrictions required by policy to notify the appropriate personnel?' WHERE [Requirement_Id] = 37413
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'How are uniforms stored in a secure manner before they are issued and after they are collected?' WHERE [Requirement_Id] = 37425
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Does the organization prohibit former employees from gaining casual access to the facility and sensitive areas?' WHERE [Requirement_Id] = 37426
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Are trees and roots located at an adequate distance of the lines/cables/pipes in such a way to prevent an interruption of services?' WHERE [Requirement_Id] = 37439
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Are utility assets in parking areas secured, to prevent being struck by a vehicle?' WHERE [Requirement_Id] = 37440
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Are utility assets in loading dock areas secured, to prevent being struck by a vehicle?' WHERE [Requirement_Id] = 37441
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Are utility assets secured from accidental damage, vandalism or sabotage?' WHERE [Requirement_Id] = 37442
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Are the dumpsters/recycling bins located at a safe distance to prevent a potential fire hazard? ' WHERE [Requirement_Id] = 37470
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Is the facility/grounds free from the threat of standing water or flooding? (Please explain in the comments section)' WHERE [Requirement_Id] = 37476
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Are exterior electrical outlets controlled by a switch or secured from unauthorized use?  ' WHERE [Requirement_Id] = 37480
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Are fuels and/or other hazardous items stored in a secure manner which meets or exceeds regulations?' WHERE [Requirement_Id] = 37481
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Is the facility free of any exterior areas near the facility that are infrequently observed by a staff member?' WHERE [Requirement_Id] = 37485
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Are all exterior doors equipped with outward facing hinges secured in a manner to prevent unauthorized access?' WHERE [Requirement_Id] = 37490
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Do all persons with access to PII have a valid need-to-know?' WHERE [Requirement_Id] = 37505
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. OT access by vendors and maintenance staff can occur over a very large facility footprint or geographic area and into unobserved spaces such as mechanical/electrical rooms, ceilings, floors, field substations, switch and valve vaults, and pump stations. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: IA-1, PM-9, PM-24, PS-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. OT access by vendors and maintenance staff can occur over a large facility footprint or geographic area and into unobserved spaces, such as mechanical or electrical rooms, ceilings, floors, field substations, switch and valve vaults, and pump stations. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Access Control Policy and Procedures</b></p>a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:

1. [Selection (one or more): Organization-level; Mission/business process-level; System level] access control policy that:
(a) Addresses purpose, scope, roles, responsibilities, management commitment,
coordination among organizational entities, and compliance; and
(b) Is consistent with applicable laws, executive orders, directives, regulations, policies,
standards, and guidelines; and

2. Procedures to facilitate the implementation of the access control policy and the
associated access controls;
b. Designate an [Assignment: organization-defined official] to manage the development,
documentation, and dissemination of the access control policy and procedures; and
c. Review and update the current access control:
1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and
2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].
' WHERE [Requirement_Id] = 37523
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Limit the number of concurrent sessions for each system account and/or account type to one session for both general and privileged users, unless documented in the SSP and approved by the AO. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> The number, account type, and privileges of concurrent sessions considers the roles and responsibilities of the affected individuals. Example compensating controls include providing increased auditing measures. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: SC-23

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The number, account type, and privileges of concurrent sessions consider the roles and responsibilities of the affected individuals. Example compensating controls include providing increased auditing measures. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Concurrent Session Control</b></p>Limit the number of concurrent sessions for each [Assignment: organization-defined account and/or account type] to [Assignment: organization-defined number].' WHERE [Requirement_Id] = 37524
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Prevent further access to the system by automatically initiating a device lock after 15 minutes of inactivity. [a: WMATA System Implementation Statement]</li>
<li>b. Retain the device lock until the user reestablishes access using established identification and authentication procedures. [b: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> This control assumes a staffed environment where users interact with system displays. This control may be tailored appropriately where systems do not have displays configured, systems are placed in an access-controlled facility or locked enclosure, or immediate operator response is required in emergency situations. Example compensating controls include locating the display in an area with physical access controls that limit access to individuals with permission and need-to-know for the displayed information. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-2, AC-7, IA-11, PL-4
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: This control assumes a staffed environment where users interact with system displays. This control may be tailored appropriately where systems do not have displays configured, systems are placed in an access-controlled facility or locked enclosure, or immediate operator response is required in emergency situations. Example compensating controls include locating the display in an area with physical access controls that limit access to individuals with permission and need-to-know for the displayed information. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Device Lock</b></p>a. Prevent further access to the system by [Selection (one or more): initiating a device lock after [Assignment: organization-defined time period] of inactivity; requiring the user to initiate a device lock before leaving the system unattended]; andb. Retain the device lock until the user reestablishes access using established identification and authentication procedures.' WHERE [Requirement_Id] = 37525
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Conceal, via the device lock, information previously visible on the display with a publicly viewable image. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Physical protection may be employed to prevent access to a display or prevent attachment of a display. In situations where the OT cannot conceal displayed information, the organization employs nonautomated mechanisms or procedures as compensating controls in accordance with the general tailoring guidance. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Physical protection may be employed to prevent access to a display or the attachment of a display. When the OT cannot conceal displayed information, the organization employs nonautomated mechanisms or procedures as compensating controls in accordance with the general tailoring guidance. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Device Lock | Pattern-hiding Displays</b></p>Conceal, via the device lock, information previously visible on the display with a publicly viewable image.' WHERE [Requirement_Id] = 37526
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Automatically terminate a user session when it has been idle for more than 15 minutes, as a result of a targeted response to certain types of incidents, or time-of-day restrictions on system use as documented in the SSP. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Example compensating controls include providing increased auditing measures or limiting remote access privileges to key personnel. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: MA-4, SC-10, SC-23

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Example compensating controls include providing increased auditing measures or limiting remote access privileges to key personnel. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Session Termination</b></p>Automatically terminate a user session after [Assignment: organization-defined conditions or trigger events requiring session disconnect].' WHERE [Requirement_Id] = 37527
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Actions permitted within information systems or networks that do not require identification and authentication are: [a: WMATA System Implementation Statement]</li>
<li>i) General user and general public access to public websites or other publicly accessible WMATA systems, not otherwise protected by security controls; or [a.i: WMATA System Implementation Statement]</li>
<li>ii) Other defined and approved use cases. [a.ii: WMATA System Implementation Statement]</li>
<li>b. System/business owners must identify and provide justification in the Account Management Plan user actions that can be performed on systems not requiring identification and authentication. Justification must specify the following: [b: WMATA System Implementation Statement]</li>
<li>i) Actions that can be performed on the information system without identification and authentication limited to the extent necessary to accomplish Mission/Business Objectives; [b.i: WMATA System Implementation Statement]</li>
<li>ii) Identification of the responsible entity for ensuring access control and monitoring is conducted; [b.ii: WMATA System Implementation Statement]</li>
<li>iii) Supporting rationale for not requiring identification and authentication; and [b.iii: WMATA System Implementation Statement]</li>
<li>iv) Identification of compensating security controls at the directory and file level for all application specific and system accounts which do not require authentication. Implement only using least privilege, with access given only to necessary directories and files. [b.iv: WMATA System Implementation Statement]</li>

Related Controls: AC-8, IA-2, PL-2

', [Supplemental_Info]=N'<p><b>Permitted Actions Without Identification or Authentication</b></p>a. Identify [Assignment: organization-defined user actions] that can be performed on the system without identification or authentication consistent with organizational mission and business functions; andb. Document and provide supporting rationale in the security plan for the system, user actions not requiring identification or authentication.' WHERE [Requirement_Id] = 37528
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Establish and document usage restrictions, configuration/connection requirements, and implementation guidance for each type of remote access allowed; and [a: WMATA System Implementation Statement]</li>
<li>b. Authorize each type of remote access to the system prior to allowing such connections. Such connections shall include, but are not limited to: [b: WMATA System Implementation Statement]</li>
<li>i) For access to the WMATA network, users shall leverage Secure Socket Layer (SSL) VPN, IPSec VPN, or an alternate Virtual Infrastructure as approved by the AO under the following use cases: [b.i: WMATA System Implementation Statement]</li>
<li>(1) Third-party vendors who require access to WMATA systems and networks; [b.i.1: WMATA System Implementation Statement]</li>
<li>(2) Personnel or systems requiring secure Site-to-site connection; [b.i.2: WMATA System Implementation Statement]</li>
<li>(3) Users not using WMATA corporate systems; and [b.i.3: WMATA System Implementation Statement]</li>
<li>(4) Privileged remote access users [b.i.4: WMATA System Implementation Statement]</li>
<li>ii) Multi-factor Authentication (MFA) is required for remote access. [b.ii: WMATA System Implementation Statement]</li>
<li>iii) Data shall not be transferred from Virtual Infrastructure to a local device. [b.iii: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> In situations where the OT cannot implement any or all of the components of this control, the organization employs other mechanisms or procedures as compensating controls in accordance with the general tailoring practice. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-2, AC-3, AC-4, AC-18, AC-19, AC-20, CA-3, CM-10, IA-2, IA-3, IA-8, MA-4, PE-17, PL-2, PL-4, SC-10, SC-12, SC-13, SI-4
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: When the OT cannot implement any or all of the components of this control, the organization employs other mechanisms or procedures as compensating controls in accordance with the general tailoring guidance. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Remote Access</b></p>a. Establish and document usage restrictions, configuration/connection requirements, and implementation guidance for each type of remote access allowed; andb. Authorize each type of remote access to the system prior to allowing such connections.' WHERE [Requirement_Id] = 37529
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Employ automated mechanisms to monitor and control remote access methods. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Example compensating controls include employing nonautomated mechanisms or procedures as compensating controls. Compensating controls could include limiting remote access to a specified period of time or placing a call from the OT site to the authenticated remote entity. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AU-2, AU-6, AU-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Example compensating controls include employing nonautomated mechanisms or procedures as compensating controls. Compensating controls could include limiting remote access to a specified period of time or placing a call from the OT site to the authenticated remote entity. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Remote Access | Monitoring and Control</b></p>Employ automated mechanisms to monitor and control remote access methods.' WHERE [Requirement_Id] = 37530
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Implement [Assignment: organization-defined mechanisms] to authenticate [Assignment: organization-defined remote commands]. [WMATA System Implementation Statement]

Related Controls: SC-12, SC-13, SC-23

<b><u>NIST 800-82 Rev 3:</u></b>
Rationale for adding AC-17 (10) to MOD and HIGH baselines: The ability to authenticate remote commands is important to prevent unauthorized commands that may have immediate or serious consequences, such as injury, death, property damage, the loss of high-value assets, the failure of mission or business functions, or compromise of sensitive information. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Remote Access | Authenticate Remote Commands</b></p>Implement [Assignment: organization-defined mechanisms] to authenticate [Assignment: organization-defined remote commands].' WHERE [Requirement_Id] = 37531
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Implement cryptographic mechanisms to protect the confidentiality and integrity of remote access sessions. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Encryption-based technologies should be used to support the confidentiality and integrity of remote access sessions. While OT devices often lack the ability to support modern encryption, additional devices (e.g., VPNs) can be added to support these features. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: SC-8, SC-12, SC-13

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Encryption-based technologies should be used to support the confidentiality and integrity of remote access sessions. While OT devices often lack the ability to support modern encryption, additional devices (e.g., VPNs) can be added to support these features. This control should not be confused with SC-8 – Transmission Confidentiality and Integrity, which discusses confidentiality and integrity requirements for general communications, including between OT devices. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Remote Access | Protection of Confidentiality and Integrity Using Encryption</b></p>Implement cryptographic mechanisms to protect the confidentiality and integrity of remote access sessions.' WHERE [Requirement_Id] = 37532
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Route remote accesses through authorized and managed network access control points. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Example compensating controls include connection-specific manual authentication of the remote entity. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: SC-7

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Example compensating controls include connection-specific manual authentication of the remote entity. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Remote Access | Managed Access Control Points</b></p>Route remote accesses through authorized and managed network access control points.' WHERE [Requirement_Id] = 37533
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Authorize the execution of privileged commands and access to security-relevant information via remote access only in a format that provides assessable evidence and for the following needs: [WMATA System Implementation Statement]

<li>(1) Administrators (security or system) managing devices in a secure zone via an AO- approved dedicated host (e.g., Virtual Desktop Infrastructure (VDI), jump server, or bastion host); and [1: WMATA System Implementation Statement]</li>
<li>(2) Document the rationale for remote access in the security plan for the system. [2: WMATA System Implementation Statement]</li>

Related Controls: AC-6, SC-12, SC-13


', [Supplemental_Info]=N'<p><b> Privileged Commands and Access</b></p>(a) Authorize the execution of privileged commands and access to security-relevant information via remote access only in a format that provides assessable evidence and for the following needs: [Assignment: organization-defined needs]; and(b) Document the rationale for remote access in the security plan for the system.' WHERE [Requirement_Id] = 37534
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Provide the capability to disconnect or disable remote access to the system within [Assignment: organization-defined time period]. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Implementation of the remote access disconnect should not impact OT operations. OT personnel should be trained on how to use the remote access disconnect. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Implementation of the remote access disconnect should not impact OT operations. OT personnel should be trained on how to use the remote access disconnect. [NIST 800-82 Rev 3_OT Discussion: WMATA System Implementation Statement]

Rationale for adding AC-17 (9) to LOW, MOD, and HIGH baselines: As more OT systems become accessible remotely, the capability to disconnect or disable remote access is critical to managing risk and may be required to provide stable and safe operations. [NIST 800-82 Rev 3_Rationale: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Remote Access | Disconnect or Disable Access</b></p>Provide the capability to disconnect or disable remote access to the system within [Assignment: organization-defined time period].' WHERE [Requirement_Id] = 37535
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Establish and document configuration requirements, connection requirements, and implementation guidance for each type of wireless access; and [a: WMATA System Implementation Statement]</li>
<li>b. The AO shall authorize each type of wireless access to the system prior to allowing such connections. [b: WMATA System Implementation Statement]</li>
<li>c. The following wireless technologies are prohibited in the WMATA environment unless otherwise authorized by the CISO: [c: WMATA System Implementation Statement]</li>
<li>i) Microwave; [c.i: WMATA System Implementation Statement]</li>
<li>ii) Packet radio (ultra-high frequency, very high frequency, satellite communications, and Internet of Things (IoT) wireless radio frequency); [c.ii: WMATA System Implementation Statement]</li>
<li>iii) 802.11 technologies; [c.iii: WMATA System Implementation Statement]</li>
<li>iv) Bluetooth in accordance with NIST SP 800-121 Rev. 2, Guide to Bluetooth Security; and [c.iv: WMATA System Implementation Statement]</li>
<li>v) Cellular [c.v: WMATA System Implementation Statement]</li>
<li>d. No other forms of hotspots (e.g., Windows 10 as a hotspot) shall be permitted. [d: WMATA System Implementation Statement]</li>
<li>e. Tethering shall only be permitted between WMATA issued devices. Devices with network access used for tethering shall be on the WMATA corporate network. [e: WMATA System Implementation Statement]</li>
<li>f. In addition, the following requirements shall be met in the deployment, configuration, administration of wireless networks: [f: WMATA System Implementation Statement]</li>
<li>i) Wireless network design and implementation must incorporate WIPS. [f.i: WMATA System Implementation Statement]</li>
<li>ii) Only wireless access points authorized by the AO shall be connected to an internal WMATA network. [f.ii: WMATA System Implementation Statement]</li>
<li>iii) Only WMATA-owned or leased equipment with installed authentication certificates shall be permitted access to an internal WLAN. Systems and devices without approved authentication certificates shall be restricted to the WMATA guest network. [f.iii: WMATA System Implementation Statement]</li>
<li>iv) With the exception of public and guest wireless access, all wireless networks shall use authentication protocols that provide authenticator protection and mutual authentication. [f.iv: WMATA System Implementation Statement]</li>
<li>v) Contractors, vendors and visitors to WMATA facilities permitted to use personal or non- WMATA issued devices shall be restricted to the WMATA guest network. [f.v: WMATA System Implementation Statement]</li>
<li>vi) All system configurations shall be hardened using DISA STIGs as specified in Control 3.4 Configuration Management, Section 6, “CM-6 Configuration Settings.” [f.iv: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> In situations where OT cannot implement any or all of the components of this control, the organization employs other mechanisms or procedures as compensating controls in accordance with eh the general tailoring guidance. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-2, AC-3, AC-17, AC-19, CA-9, CM-6, CM-7, IA-2, IA-3, IA-8, PL-4, SI-4
<li>g. Security Controls Enhancement(s): [g: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: When OT cannot implement any or all of the components of this control, the organization employs other mechanisms or procedures as compensating controls in accordance with the general tailoring guidance. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Wireless Access</b></p>a. Establish configuration requirements, connection requirements, and implementation guidance for each type of wireless access; andb. Authorize each type of wireless access to the system prior to allowing such connections.' WHERE [Requirement_Id] = 37536
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>(1) Protect wireless access to the system using authentication of devices leveraging requirements in accordance with Control 3.17 System and Communications Protection, Section 10, “SC-13 Cryptographic Protection”; and [1: WMATA System Implementation Statement]</li>
<li>(2) Enhance the protection of wireless access to the system using authentication of users if deemed necessary by the AO [2: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Implementation of authentication and encryption is driven by the OT environment. There are some scenarios where devices and users cannot all be authenticated and encrypted due to operational or technology constraints. In such scenarios, compensating controls include providing increased auditing for wireless access, limiting wireless access privileges to key personnel, or using AC-18 (5) to reduce the boundary of wireless access. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: SC-8, SC-12, SC-13

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The implementation of authentication and encryption is driven by the OT environment. If devices and users cannot all be authenticated and encrypted due to operational or technology constraints, compensating controls include providing increased auditing for wireless access, limiting wireless access privileges to key personnel, or using AC-18 (5) to reduce the boundary of wireless access. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Wireless Access | Authentication and Encryption</b></p>Protect wireless access to the system using authentication of [Selection (one or more): users; devices] and encryption.' WHERE [Requirement_Id] = 37537
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Disable, when not intended for use, wireless networking capabilities embedded within system components prior to issuance and deployment. [WMATA System Implementation Statement]



', [Supplemental_Info]=N'<p><b> Disable Wireless Networking</b></p>Disable, when not intended for use, wireless networking capabilities embedded within system components prior to issuance and deployment.' WHERE [Requirement_Id] = 37538
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Identify and explicitly authorize users allowed to independently configure wireless networking capabilities. [WMATA System Implementation Statement]

Related Controls: SC-7, SC-15

', [Supplemental_Info]=N'<p><b> Restrict Configurations by Users</b></p>Identify and explicitly authorize users allowed to independently configure wireless networking capabilities.' WHERE [Requirement_Id] = 37539
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Select radio antennas and calibrate transmission power levels to reduce the probability that signals from wireless access points can be received outside of organization-controlled boundaries. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Availability and interference for wireless signals may be a concern within OT environments. Antennas and power levels should be designated to overcome and achieve availability goals. Where confidentiality is concerned, antennas and power levels can also be designed to minimize signal exposure outside of the facility. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Availability and interference for wireless signals may be a concern within OT environments. Antennas and power levels should be designed to overcome and achieve availability goals. Where confidentiality is concerned, antennas and power levels can also be designed to minimize signal exposure outside of the facility. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Wireless Access | Antennas and Transmission Power Levels</b></p>Select radio antennas and calibrate transmission power levels to reduce the probability that signals from wireless access points can be received outside of organization-controlled boundaries.' WHERE [Requirement_Id] = 37540
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Establish configuration requirements, connection requirements, and implementation guidance for organization-controlled mobile devices, to include when such devices are outside of controlled areas; [a: WMATA System Implementation Statement]</li>
<li>i) All mobile devices shall receive updates minimally every 30 days, or more frequently based on the risk profile of the system as determined by the AO. [a.i: WMATA System Implementation Statement]</li>
<li>ii) Emergency updates may require a system to connect or be capable of connecting in advance of scheduled updates. [a.ii: WMATA System Implementation Statement]</li>
<li>iii) All mobile devices must connect to the WMATA network via VPN, direct connection, or must have updates managed by an approved Mobile Device Management (MDM) solution. [a.iii: WMATA System Implementation Statement]</li>
<li>b. Authorize the connection of mobile devices to organizational systems; [b: WMATA System Implementation Statement]</li>
<li>c. All mobile devices shall be configured with a secure baseline in accordance with Control 3.4 Configuration Management, Section 6, “CM-6 Configuration Settings”; [c: WMATA System Implementation Statement]</li>
<li>d. Enable wireless connectivity in compliance with Control 3.1 Access Control, Section 14, “AC- 18 Wireless Access”; [d: WMATA System Implementation Statement]</li>
<li>e. All mobile devices shall have a screen lock and/or timeout set in accordance with Control 3.1 Access Control, Section 11, “AC-12 Session Termination”; and [e: WMATA System Implementation Statement]</li>
<li>f. Purge or wipe information from mobile devices remotely if systems or components are lost or obtained by unauthorized individuals. [f: WMATA System Implementation Statement]</li>
Related Controls: AC-3, AC-4, AC-7, AC-11, AC-12, AC-17, AC-18, AC-20, CA-9, CM-2, CM-6, IA-2, IA-3, MP-2, MP-4, MP-5, MP-7, PL-4, SC-7, SI-3, SI-4
<li>g. Security Controls Enhancement(s): [g: WMATA System Implementation Statement]</li>

', [Supplemental_Info]=N'<p><b>Access Control for Mobile Devices</b></p>a. Establish configuration requirements, connection requirements, and implementation guidance for organization-controlled mobile devices, to include when such devices are outside of controlled areas; andb. Authorize the connection of mobile devices to organizational systems.' WHERE [Requirement_Id] = 37541
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>(1) Employ full-device encryption or container-based encryption to protect the confidentiality and integrity of information on all devices (e.g., laptops, desktops, servers, mobile devices, tablets, thumb drives, etc.) which are authorized to process and store WMATA data, specifically: [1: WMATA System Implementation Statement]</li>
<li>(a) Devices leveraging Microsoft Windows shall employ full disk encryption via BitLocker; [1.a: WMATA System Implementation Statement]</li>
<li>(b) Devices leveraging non-Windows operating systems shall leverage full disk encryption as approved by the AO; [1.b: WMATA System Implementation Statement]</li>
<li>(c) Personal or WMATA owned mobile devices shall leverage container-based encryption using an MDM solution. Container configuration shall consider access to, processing, storage and transmission capabilities of WMATA data (e.g., email, text, pictures, documents, downloads, on-board sensors that allow the device to capture information, and/or built-in features for synchronizing local data with remote locations). Container based solutions shall include functionality for the remote wiping, purging, or disablement of the container and all contents therein. [1.c: WMATA System Implementation Statement]</li>
<li>(2) When available, systems shall employ products on the NIST Cryptographic Module Validation Program, WMATA Approved Product List, and as defined in WMATA policy. [2: WMATA System Implementation Statement]</li>

Related Controls: SC-12, SC-13, SC-28

', [Supplemental_Info]=N'<p><b> Full Device or Container-based Encryption</b></p>Employ [Selection: full-device encryption; container-based encryption] to protect the confidentiality and integrity of information on [Assignment: organization-defined mobile devices].' WHERE [Requirement_Id] = 37542
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Define and document the types of accounts allowed and specifically prohibited for use within the system; [a: WMATA System Implementation Statement]</li>
<li>b. Assign account managers; [b: WMATA System Implementation Statement]</li>
<li>c. Require approval and role-based training for group and role membership; [c: WMATA System Implementation Statement]</li>
<li>d. Specify: [d: WMATA System Implementation Statement]</li>
<li>i) Authorized users of the system; [d.i: WMATA System Implementation Statement]</li>
<li>ii) Group and role membership; and [d.ii: WMATA System Implementation Statement]</li>
<li>iii) Access authorizations (i.e., privileges and entitlements) and account attributes for each account when applicable. [d.iii: WMATA System Implementation Statement]</li>
<li>e. Require approvals by required stakeholders with access control responsibilities of the accreditation boundary for requests to create accounts; [e: WMATA System Implementation Statement]</li>
<li>f. Create, enable, modify, disable, and remove accounts in accordance with: [f: WMATA System Implementation Statement]</li>
<li>i) Control 3.1 Access Control, Section 5, “AC-5 Separation of Duties” and Section 6, “AC- 6 Least Privilege”; [f.i: WMATA System Implementation Statement]</li>
<li>ii) Standard Operating Procedures (SOP) and Work Instructions (WI); and [f.ii: WMATA System Implementation Statement]</li>
<li>iii) Security Configuration Checklists to include Defense Information Systems Agency (DISA) Security Technical Implementation Guides (STIGs) and Center for Internet Security (CIS) Benchmarks; [f.iii: WMATA System Implementation Statement]</li>
<li>g. Monitor the use of accounts; [g: WMATA System Implementation Statement]</li>
<li>h. Notify account managers, other required stakeholders, and designated organizational personnel with access control responsibilities of the accreditation boundary immediately, but no later than twenty-four hours when: [h: WMATA System Implementation Statement]</li>
<li>i) accounts are no longer required; [h.i: WMATA System Implementation Statement]</li>
<li>ii) users are terminated or transferred; and [h.ii: WMATA System Implementation Statement]</li>
<li>iii) system usage or need-to-know changes for an individual; [h.iii: WMATA System Implementation Statement]</li>
<li>i. Authorize access to the system based on the following: [i: WMATA System Implementation Statement]</li>
<li>i) A valid access authorization; [i.i: WMATA System Implementation Statement]</li>
<li>ii) Intended system usage (i.e., based on role, type of account, time of day, day of week, and point of origin); and [i.ii: WMATA System Implementation Statement]</li>
<li>iii) Control 3.1 Access Control, Section 5, “AC-5 Separation of Duties” and Section 6, “AC- 6 Least Privilege”. [i.iii: WMATA System Implementation Statement]</li>
<li>j. Review accounts for compliance with account management requirements: [j: WMATA System Implementation Statement]</li>
<li>i) Annual recertification is required for all user accounts; and [j.i: WMATA System Implementation Statement]</li>
<li>ii) Quarterly recertification is required for all privileged user accounts in accordance with Control 3.1 Access Control, Section 6, “AC-6 Least Privilege”. [ j.ii: WMATA System Implementation Statement]</li>
<li>k. Establish and implement a process for changing shared or group account authenticators (if deployed) when individuals are removed from the group in accordance with Control 3.9 Identification and Authentication, Section 5, “IA-5 Authenticator Management”; and [k: WMATA System Implementation Statement]</li>
<li>l. Align account management processes with personnel termination and transfer processes. [l: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> In OT systems, physical security, personnel security, intrusion detection, or auditing measures may assist in supporting this control objective. [OT Systems Only 1: WMATA System Implementation Statement]
<b><u>OT Systems Only:</u></b> OT systems may assist in supporting this control objective through physical security, personnel security, intrusion detection, or auditing. [OT Systems Only 2: WMATA System Implementation Statement]
Related Controls : AC-3, AC-5, AC-6, AC-17, AC-18, AC-20, AU-2, AU-12, CM-5, IA-2, IA-4, IA-5, IA-8, MA-3, MA-5, PE-2, PL-4, PS-2, PS-4, PS-5, PS-7, PT-2, PT-3, SC-7, SC-12, SC-13
<li>m. Security Controls Enhancement(s): [m: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: In OT systems, physical security, personnel security, intrusion detection, or auditing measures may support this control objective. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Account Management</b></p>a. Define and document the types of accounts allowed and specifically prohibited for use within the system;b. Assign account managers;c. Require [Assignment: organization-defined prerequisites and criteria] for group and role membership;d. Specify:    1. Authorized users of the system;    2. Group and role membership; and    3. Access authorizations (i.e., privileges) and [Assignment: organization-defined attributes (as required)] for each account;e. Require approvals by [Assignment: organization-defined personnel or roles] for requests to create accounts;f. Create, enable, modify, disable, and remove accounts in accordance with [Assignment: organization-defined policy, procedures, prerequisites, and criteria];g. Monitor the use of accounts;h. Notify account managers and [Assignment: organization-defined personnel or roles] within:    1. [Assignment: organization-defined time period] when accounts are no longer required;    2. [Assignment: organization-defined time period] when users are terminated or transferred; and    3. [Assignment: organization-defined time period] when system usage or need-to-know changes for an individual;i. Authorize access to the system based on:    1. A valid access authorization;    2. Intended system usage; and    3. [Assignment: organization-defined attributes (as required)];j. Review accounts for compliance with account management requirements [Assignment: organization-defined frequency];k. Establish and implement a process for changing shared or group account authenticators (if deployed) when individuals are removed from the group; andl. Align account management processes with personnel termination and transfer processes.' WHERE [Requirement_Id] = 37543
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Automate the management of system accounts. [WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b> Automated System Account Management</b></p>Support the management of system accounts using [Assignment: organization-defined automated mechanisms].' WHERE [Requirement_Id] = 37544
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>(1) Enforce only authorized access as specified in Control 3.1 Access Control, Section 2, “AC-2 Account Management”, for all accounts. [1: WMATA System Implementation Statement]</li>
<li>(2) No users of WMATA systems have an inherent right to WMATA electronic access, and such access is at the discretion of executive and senior leadership. [2: WMATA System Implementation Statement]</li>
<li>(3) Information technology equipment availability and/or limitations may preclude an employee or contractor from having electronic access. [3: WMATA System Implementation Statement]</li>
<li>(4) Use of WMATA electronic access for non-WMATA purposes may be revoked or limited at any time by appropriate WMATA department heads/office directors. [4: WMATA System Implementation Statement]</li>

', [Supplemental_Info]=N'<p><b> Usage Conditions</b></p>Enforce [Assignment: organization-defined circumstances and/or usage conditions] for [Assignment: organization-defined system accounts].' WHERE [Requirement_Id] = 37545
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>(1) Monitor all accounts for atypical or suspicious usage; and [1: WMATA System Implementation Statement]</li>
<li>(2) Report atypical usage of accounts to required stakeholders. [2: WMATA System Implementation Statement]</li>

Related Controls: AU-6, AU-7, CA-7, IR-8, SI-4

', [Supplemental_Info]=N'<p><b> Account Monitoring for Atypical Usage</b></p>(a) Monitor system accounts for [Assignment: organization-defined atypical usage]; and(b) Report atypical usage of system accounts to [Assignment: organization-defined personnel or roles].' WHERE [Requirement_Id] = 37546
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Disable accounts of individuals as referenced in Control 3.1 Access Control, Section 2, “AC-2 (3) Disable Accounts." [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Close coordination occurs between OT, Human Resources (HR), IT, and Physical Security personnel to ensure timely removal of high-risk individuals. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AU-6, SI-4

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Close coordination occurs between OT, HR, IT, and physical security personnel to ensure the timely removal of high-risk individuals. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Disable Accounts for High-risk Individuals</b></p>Disable accounts of individuals within [Assignment: organization-defined time period] of discovery of [Assignment: organization-defined significant risks].' WHERE [Requirement_Id] = 37547
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Under normal usage temporary or emergency accounts are not authorized except where approved by the CISO. The removal or disabling of such accounts shall be automatic after a predefined time period. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> In situations where the OT (e.g., field devices) cannot support temporary or emergency accounts, this enhancement does not apply. Example compensating controls include employing nonautomated mechanisms or procedures. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: When the OT (e.g., field devices) cannot support temporary or emergency accounts, this enhancement does not apply. Example compensating controls include employing nonautomated mechanisms or procedures. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Automated Temporary and Emergency Account Management</b></p>Automatically [Selection: remove; disable] temporary and emergency accounts after [Assignment: organization-defined time period for each type of account].' WHERE [Requirement_Id] = 37548
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Accounts will be disabled when they: [1: WMATA System Implementation Statement]</li>
<li>(a) Have expired; [1.a: WMATA System Implementation Statement]</li>
<li>(b) Are no longer associated with a user or individual; or [1.b: WMATA System Implementation Statement]</li>
<li>(c) Are in violation of organizational policy. [1.c: WMATA System Implementation Statement]</li>
<li>(2) Accounts shall be disabled within designated timeframes based on the following: [2: WMATA System Implementation Statement]</li>
<li>(a) For high categorized systems, high-risk individuals and privileged accounts, access shall be disabled within 30 minutes. [2.a: WMATA System Implementation Statement]</li>
<li>(b) For systems categorized as moderate, access shall be disabled within 60 minutes. [2.b: WMATA System Implementation Statement]</li>
<li>(c) For all other systems, access shall be disabled no later than 24 hours. [2.c: WMATA System Implementation Statement]</li>
<li>(3) Inactive accounts shall be disabled: [3: WMATA System Implementation Statement]</li>
<li>(a) For general users, not to exceed 90 days of inactivity; and [3.a: WMATA System Implementation Statement]</li>
<li>(b) For privileged users, 90 days or less of inactivity, based on the categorization of the system, individual risk levels, and account type. [3.b: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b> Disable Accounts</b></p>Disable accounts within [Assignment: organization-defined time period] when the accounts:(a) Have expired;(b) Are no longer associated with a user or individual;(c) Are in violation of organizational policy; or(d) Have been inactive for [Assignment: organization-defined time period].' WHERE [Requirement_Id] = 37549
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Information systems shall automatically audit account creation, modification, enabling, disabling, and removal actions, and notify the appropriate personnel of these events. [WMATA System Implementation Statement]

Related Controls: AU-2, AU-6

', [Supplemental_Info]=N'<p><b> Automated Audit Actions</b></p>Automatically audit account creation, modification, enabling, disabling, and removal actions.' WHERE [Requirement_Id] = 37550
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Require that users are logged out when the session inactivity time has exceeded the designated threshold as established by the AO. At a minimum, users are required to log out after 24 hours. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> This control enhancement defines situations or timeframes in which users log out of accounts in policy; automatic enforcement is not addressed by this control enhancement. Organizations determine if this control enhancement is appropriate for the mission and/or functions of the OT system and define the timeframe or scenarios. If no timeframe or scenario(s) apply, the organization-defined parameter reflects as such. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-11 

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: This control enhancement defines situations or timeframes in which users log out of accounts in the policy. Automatic enforcement is not addressed by this control enhancement. Organizations determine whether this control enhancement is appropriate for the mission and/or functions of the OT system and define the timeframe or scenarios. If no timeframe or scenarios apply, the organization-defined parameter reflects as much. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Inactivity Logout</b></p>Require that users log out when [Assignment: organization-defined time period of expected inactivity or description of when to log out].' WHERE [Requirement_Id] = 37551
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Establish terms, conditions, and controls that shall be implemented on external systems, consistent with the trust relationships established with other organizations owning, operating, and/or maintaining external systems, allowing authorized individuals to: [a: WMATA System Implementation Statement]</li>
<li>i) Access the system from external systems; and a.i) [a.i: WMATA System Implementation Statement]</li>
<li>ii) Process, store, or transmit organization-controlled information using external systems; or a.ii) [a.ii: WMATA System Implementation Statement]</li>
<li>b. Prohibit the use of unauthorized systems and devices. [b: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b>Organizations refine the definition of “external” to reflect lines of authority and responsibility; granularity of organization entity; and their relationships. An organization may consider a system to be external if that system performs different functions, implements different policies, falls under different management authorities, or does not provide sufficient visibility into the implementation of controls to allow the establishment of a satisfactory trust relationship. For example, an OT system and a business data processing system may be considered external to each other depending on the organization’s system boundaries. [OT Systems Only 1: WMATA System Implementation Statement]
Access to an OT for support by a business partner, such as a vendor or support contractor, is another common example. The definition and trustworthiness of external systems is reexamined with respect to OT functions, purposes, technology, and limitations to establish a clearly documented technical or business case for use and acceptance of the risk inherent in the use of an external system. [OT Systems Only 2: WMATA System Implementation Statement]
Related Controls: AC-2, AC-3, AC-17, AC-19, CA-3, PL-2, PL-4, SA-9, SC-7
<li>c. Security Controls Enhancement(s): [WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Organizations refine the definition of “external” to reflect lines of authority and responsibility, the granularity of an organization entity, and their relationships. An organization may consider a system to be external if that system performs different functions, implements different policies, falls under different management authorities, or does not provide sufficient visibility into the implementation of controls to allow the establishment of a satisfactory trust relationship. For example, an OT system and a business data processing system may be considered external to each other depending on the organization’s system boundaries. [NIST 800-82 Rev 3_OT Discussion: WMATA System Implementation Statement]

Access to an OT for support by a business partner, such as a vendor or support contractor, is another common example. The definition and trustworthiness of external systems is reexamined with respect to OT functions, purposes, technology, and limitations to establish a clearly documented technical or business case for use and an acceptance of the risk inherent in the use of an external system. [NIST 800-82 Rev 3_Access to OT: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Use of External Systems</b></p>a. [Selection (one or more): Establish [Assignment: organization-defined terms and conditions]; Identify [Assignment: organization-defined controls asserted to be implemented on external systems]], consistent with the trust relationships established with other organizations owning, operating, and/or maintaining external systems, allowing authorized individuals to:     1. Access the system from external systems; and     2. Process, store, or transmit organization-controlled information using external systems; orb. Prohibit the use of [Assignment: organizationally-defined types of external systems].' WHERE [Requirement_Id] = 37552
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>(1) Permit authorized individuals to use an external system to access the system or to process, store, or transmit organization-controlled information only after: [1: WMATA System Implementation Statement]</li>
<li>(a) Verification of the implementation of controls on the external system as specified in the organization’s security and privacy policies and security and privacy plans; or [1.a: WMATA System Implementation Statement]</li>
<li>(b) Retention of approved system connection or processing agreements with the organizational entity hosting the external system. [1.b: WMATA System Implementation Statement]</li>

Related Controls: CA-2

', [Supplemental_Info]=N'<p><b> Limits on Authorized Use</b></p>Permit authorized individuals to use an external system to access the system or to process, store, or transmit organization-controlled information only after:(a) Verification of the implementation of controls on the external system as specified in the organization’s security and privacy policies and security and privacy plans; or(b) Retention of approved system connection or processing agreements with the organizational entity hosting the external system.' WHERE [Requirement_Id] = 37553
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>(1) Restrict the use of organization-controlled portable storage devices on external systems using encryption. [1: WMATA System Implementation Statement]</li>

Related Controls: MP-7, SC-41

', [Supplemental_Info]=N'<p><b> Portable Storage Devices — Restricted Use</b></p>Restrict the use of organization-controlled portable storage devices by authorized individuals on external systems using [Assignment: organization-defined restrictions].' WHERE [Requirement_Id] = 37554
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Enable authorized users to determine whether access authorizations assigned to a sharing partner match the information’s access and use restrictions for information sharing circumstances; and [a: WMATA System Implementation Statement]</li>
<li>b. Employ automated mechanisms when possible, to assist users in making information sharing and collaboration decisions. [b: WMATA System Implementation Statement]</li>
<li>c. Information sharing shall apply to information that may be restricted in some manner based on formal or administrative determination. Examples of such information include, contract- sensitive information, Health Insurance Portability and Accountability Act (HIPAA) information, Payment card industry (PCI) information, privileged information, proprietary information, and personally identifiable information. [c: WMATA System Implementation Statement]</li>
<li>d. Organizational data and systems approved for sharing with external partners must have written agreements regarding the responsibilities of the external partner that address the business, security and technical requirements regarding the use and custodial responsibilities of the data and systems. [d: WMATA System Implementation Statement]</li>
<li>e. If the sharing of data or systems with external partners is a component of a service, and not otherwise governed by legal requirements, the organizations may choose to use a Service Level Agreement (SLA) that clearly defines the responsibilities, services, priorities and performance metrics of the services to be provided. [e: WMATA System Implementation Statement]</li>
<li>f. Organization software or information systems that allow the sharing of files and data containing restricted and/or highly restricted information shall be used to share data only if the appropriate security controls, as documented in the SSP, are properly configured and implemented. Appropriate security controls shall include the following: [f: WMATA System Implementation Statement]</li>
<li>i) Authentication controls to ensure that authorized users are identified. [f.i: WMATA System Implementation Statement]</li>
<li>ii) Access controls to limit an individual’s access to only the restricted and/or highly restricted data necessary for that person to perform his/her role. [f.ii: WMATA System Implementation Statement]</li>
<li>iii) Authorization controls to enforce version control and record retention requirements such that only designated individuals are able to modify or delete sensitive or critical records. [f.iii: WMATA System Implementation Statement]</li>
<li>iv) Audit controls that record individual actions on files and records, such as file fication. [f.iv: WMATA System Implementation Statement]</li>
<li>v) Audit logs shall be retained in accordance with the Audit and Accountability control. [f.v: WMATA System Implementation Statement]</li>

Related Controls: AC-3, AC-4, PT-2, PT-7, RA-3, SC-15

', [Supplemental_Info]=N'<p><b>Information Sharing</b></p>a. Enable authorized users to determine whether access authorizations assigned to a sharing partner match the information’s access and use restrictions for [Assignment: organization-defined information sharing circumstances where user discretion is required]; andb. Employ [Assignment: organization-defined automated mechanisms or manual processes] to assist users in making information sharing and collaboration decisions.' WHERE [Requirement_Id] = 37555
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Designate individuals authorized to make information publicly accessible; [a: WMATA System Implementation Statement]</li>
<li>b. Train authorized individuals to ensure that publicly accessible information does not contain nonpublic information in accordance with Control 3.8 Data Sensitivity, Section 9, “Categorization of Information." [b: WMATA System Implementation Statement]</li>
<li>c. Review the proposed content of information prior to posting onto the publicly accessible system to ensure that nonpublic information is not included; and [c: WMATA System Implementation Statement]</li>
<li>d. Review the content on the publicly accessible system for nonpublic information quarterly, and remove such information, if discovered. [d: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Generally, public access to OT systems is not permitted. Select information may be transferred to a publicly accessible system, possibly with added controls. The organization should review what information is being made accessible prior to publication. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-3, AT-2, AT-3

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Generally, public access to OT systems is not permitted. Select information may be transferred to a publicly accessible system, possibly with added controls. The organization should review what information is being made accessible prior to publication. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Publicly Accessible Content</b></p>a. Designate individuals authorized to make information publicly accessible;b. Train authorized individuals to ensure that publicly accessible information does not contain nonpublic information;c. Review the proposed content of information prior to posting onto the publicly accessible system to ensure that nonpublic information is not included; andd. Review the content on the publicly accessible system for nonpublic information [Assignment: organization-defined frequency] and remove such information, if discovered.' WHERE [Requirement_Id] = 37556
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Implement a reference monitor for operating systems. [a: WMATA System Implementation Statement]</li>

Related Controls: AC-3, SA-8, SA-17, SC-3, SC-39, SI-13

', [Supplemental_Info]=N'<p><b>Reference Monitor</b></p>Implement a reference monitor for [Assignment: organization-defined access control policies] that is tamperproof, always invoked, and small enough to be subject to analysis and testing, the completeness of which can be assured.' WHERE [Requirement_Id] = 37557
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Enforce approved authorizations for logical access to information and system resources in accordance with applicable access control processes and procedures. [a: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> The organization ensures that access enforcement mechanisms do not adversely impact the operational performance of the OT. Example compensating controls include encapsulation. Policy for logical access control to non-addressable and non-routable system resources and the associated information is made explicit. Access control mechanisms include hardware, firmware, and software that control the device or have device access, such as device drivers and communications controllers. Physical access control may serve as a compensating control for logical access control; however, it may not provide sufficient granularity in situations where users require access to different functions. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-2, AC-4, AC-5, AC-6, AC-17, AC-18, AC-19, AC-20, AC-21, AC-22, AC-25, AT-2, AT-3, AU-9, CA-9, CM-5, CM-11, IA-2, IA-5, IA-6, IA-7, IA-11, MA-3, MA-4, MA-5, MP-4, PM-2, PS-3, PT-2, PT-3, SA-17, SC-2, SC-3, SC-4, SC-12, SC-13, SC-28, SI-4, SI-8
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization ensures that access enforcement mechanisms do not adversely impact the operational performance of the OT. Example compensating controls include encapsulation. The policy for logical access control to non-addressable and non-routable system resources and the associated information is made explicit. Access control mechanisms include hardware, firmware, and software that control the device or have device access, such as device drivers and communications controllers. Physical access control may serve as a compensating control for logical access control. However, it may not provide sufficient granularity when users require access to different functions. [NIST 800-82 Rev 3: WMATA System Implementation Statement]




', [Supplemental_Info]=N'<p><b>Access Enforcement</b></p>Enforce approved authorizations for logical access to information and system resources in accordance with applicable access control policies.' WHERE [Requirement_Id] = 37558
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Restrict access to data repositories containing [Assignment: organization-defined information types]. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> The organization identifies and restricts access to information that could impact the OT environment, accounting for information types that are sensitive, proprietary, contain trade secrets, or support safety functions. [OT Systems Only: WMATA System Implementation Statement]
	
Related Controls: CM-8, CM-12, PM-5

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization identifies and restricts access to information that could impact the OT environment and accounts for information types that are sensitive, proprietary, contain trade secrets, or support safety functions. [NIST 800-82 Rev 3_OT Discussion: WMATA System Implementation Statement]

Rationale for adding AC-3 (11) to HIGH baseline: The loss of availability, integrity, and confidentiality of certain types of information that reside on a high-impact OT system may result in severe or catastrophic adverse effects on operations, assets, or individuals, including severe 
degradation or loss of mission capability, major damage to organizational assets, or harm to individuals involving the loss of life or life-threatening injuries. [NIST 800-82 Rev 3_Rationale: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Access Enforcement | Restrict Access to Specific Information Types</b></p>Restrict access to data repositories containing [Assignment: organization-defined information types].' WHERE [Requirement_Id] = 37559
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Provide mechanisms, such as request forms and applications interfaces to enable individuals to access their personally identifiable information (PII). [WMATA System Implementation Statement]

Related Controls: IA-8, PM-20, PM-21, PM-22, PT-6

', [Supplemental_Info]=N'<p><b> Individual Access</b></p>Provide [Assignment: organization-defined mechanisms] to enable individuals to have access to the following elements of their personally identifiable information: [Assignment: organization-defined elements].' WHERE [Requirement_Id] = 37560
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Enforce role-based access control over defined subjects and objects by controlling access. Each system shall establish an account management plan, inclusive of roles and responsibilities required to execute the plan, pursuant to Control 3.1 Access Control, Section 2, “AC-2 Account Management.” [WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b> Role Based Access Control</b></p>Enforce a role-based access control policy over defined subjects and objects and control access based upon [Assignment: organization-defined roles and users authorized to assume such roles].' WHERE [Requirement_Id] = 37561
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Ensure that the flow of information within the system, and between connected systems, is documented and authorized. All WMATA systems shall have a Data Flow Diagram that documents the storage movement, and processing of data in the system. [a: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Information flow policy may be achieved using a combination of logical and physical flow restriction techniques. Inspection of message content may enforce information flow policy. For example, industrial OT protocols may be restricted using inbound and outbound traffic rules on a network control device between OT and IT networks. For non-routable communication such as serial connections, devices may be configured to limit commands to and from specific tags within the OT device. Information flow policy may be supported by labeling or coloring physical connectors to aid in connecting networks. Devices that do not have a business need to communicate should not be connected (i.e., air gapped). [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-3, AC-6, AC-17, AC-19, AC-21, AU-10, CA-3, CA-9, CM-7, PL-9, PM-24, SA-17, SC-4, SC-7
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Information flow policy may be achieved using a combination of logical and physical flow restriction techniques. The inspection of message content may enforce information flow policy. For example, industrial OT protocols may be restricted using inbound and outbound traffic rules on a network control device between OT and IT networks. For non-routable communication, such as serial connections, devices may be configured to limit commands to and from specific tags within the OT device. The information flow policy may be supported by labeling or coloring physical connectors to aid in connecting networks. Devices that do not have a business need to communicate should not be connected (i.e., air gapped). [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Information Flow Enforcement</b></p>Enforce approved authorizations for controlling the flow of information within the system and between connected systems based on [Assignment: organization-defined information flow control policies].' WHERE [Requirement_Id] = 37562
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Prevent encrypted information from bypassing flow control mechanisms to include content checking, security policy filters, and data type identifiers by: [WMATA System Implementation Statement]

<li>(1) Decrypting the information; [1: WMATA System Implementation Statement]</li>
<li>(2) Blocking the flow of the unauthorized encrypted information; [2: WMATA System Implementation Statement]</li>
<li>(3) Terminating communications sessions attempting to pass unauthorized encrypted information; [3: WMATA System Implementation Statement]</li>

Related Controls: SI-4

', [Supplemental_Info]=N'<p><b> Flow Control of Encrypted Information</b></p>Prevent encrypted information from bypassing [Assignment: organization-defined information flow control mechanisms] by [Selection (one or more): decrypting the information; blocking the flow of the encrypted information; terminating communications sessions attempting to pass encrypted information; [Assignment: organization-defined procedure or method]].' WHERE [Requirement_Id] = 37563
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. The following roles shall have duties separated: [a: WMATA System Implementation Statement]</li>
<li>i) General user activities (e.g., resource or file access); [a.i: WMATA System Implementation Statement]</li>
<li>ii) System and application development (e.g., programmers); [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Database administration and management (e.g., database administrators) [a.iii: WMATA System Implementation Statement]</li>
<li>iv) Technical operations and system or network administration (e.g., system administrator, and network administrator, system maintenance personnel); and [a.iv: WMATA System Implementation Statement]</li>
<li>v) Security Administration and Management (e.g., Security Administrator, ISSM/O). [a.v: WMATA System Implementation Statement]</li>
<li>b. Define system access authorizations to support separation of duties. [b: WMATA System Implementation Statement]</li>
<li>c. An individual user may have a general user account and one privileged level account only unless additional accesses are documented and approved in the Account Management Plan. [c: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Example compensating controls include providing increased personnel security and auditing. The organization carefully considers the appropriateness of a single individual performing multiple critical roles. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-2, AC-3, AC-6, AU-9, CM-5, CM-11, CP-9, IA-2, IA-4, IA-5, IA-12, MA-3, MA-5, PS-2, SA-8, SA-17

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Example compensating controls include providing increased personnel security and auditing. The organization carefully considers the appropriateness of a single individual performing multiple critical roles. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Separation of Duties</b></p>a. Identify and document [Assignment: organization-defined duties of individuals requiring separation]; andb. Define system access authorizations to support separation of duties.' WHERE [Requirement_Id] = 37564
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Employ the principle of least privilege, allowing only authorized accesses for users (or processes acting on behalf of users) that are necessary to accomplish assigned organizational tasks in accordance with WMATA missions and business functions. Least privilege applies to all stages of the System Development Lifecycle (SDLC). [a: WMATA System Implementation Statement]</li>
<li>b. Only authorized individuals shall access, manage, and perform updates to sensitive information as classified in Control 3.8 Data Sensitivity. [b: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Example compensating controls include providing increased personnel security and auditing. The organization carefully considers the appropriateness of a single individual having multiple critical privileges. System privilege models may be tailored to enforce integrity and availability (e.g., lower privileges include read access and higher privileges include write access). [OT Systems Only: WMATA System Implementation Statement]
Related Controls : AC-2, AC-3, AC-5, CM-5, CM-11, PL-2, PM-12, SA-8, SA-15, SA-17
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Example compensating controls include providing increased personnel security and auditing. The organization carefully considers the appropriateness of a single individual having multiple critical privileges. System privilege models may be tailored to enforce integrity and availability (e.g., lower privileges include read access, and higher privileges include write access). [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Least Privilege</b></p>Employ the principle of least privilege, allowing only authorized accesses for users (or processes acting on behalf of users) that are necessary to accomplish assigned organizational tasks.' WHERE [Requirement_Id] = 37565
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>(1) All security functions deployed in hardware, software, and firmware shall be documented in the System Security Plan (SSP) and all security functions shall be clearly annotated. [1: WMATA System Implementation Statement]</li>
<li>(2) Authorize access for individuals or roles to security functions, to include security administrators, system administrators, system security officers, system programmers, and other privileged users, inclusive of: [2: WMATA System Implementation Statement]</li>
<li>(a) Security functions (deployed in hardware, software, and firmware) to include establishing system accounts, configuring access authorizations (i.e., permissions, privileges), configuring settings for events to be audited, and establishing intrusion detection parameters; and [2.a: WMATA System Implementation Statement]</li>
<li>(b) Security-relevant information, to include filtering rules for routers or firewalls, configuration parameters for security services, cryptographic key management information, and access control lists. [2.b: WMATA System Implementation Statement]</li>
<li>(c) All other security functions defined in the SSP. [2.c: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> In situations where the OT components (e.g., PLCs) cannot support logging of privileged functions, other system components within the authorization boundary may be used (e.g., engineering workstations or physical access monitoring). [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-17, AC-18, AC-19, AU-9, PE-2

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: When OT components (e.g., PLCs) cannot support the logging of privileged functions, other system components within the authorization boundary may be used (e.g., engineering workstations or physical access monitoring). [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Least Privilege | Authorize Access to Security Functions</b></p>Authorize access for [Assignment: organization-defined individuals or roles] to:(a) [Assignment: organization-defined security functions (deployed in hardware, software, and firmware)]; and(b) [Assignment: organization-defined security-relevant information].' WHERE [Requirement_Id] = 37566
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Prevent non-privileged users from executing privileged functions. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Example compensating controls include enhanced auditing. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Example compensating controls include enhanced auditing. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Least Privilege | Prohibit Non-privileged Users from Executing Privileged Functions</b></p>Prevent non-privileged users from executing privileged functions.' WHERE [Requirement_Id] = 37567
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Require that users of system accounts (or roles) with access to security functions or security-relevant information use non-privileged accounts or roles, when accessing non- security functions. Security functions include but are not limited to those functions described in Control 3.1 Access Control, Section 6, (b), (i), “AC-6 (1) Authorize Access to Security Function.” [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> In situations where the OT components (e.g., PLCs) cannot support logging of privileged functions, other system components within the authorization boundary may be used (e.g., engineering workstations or physical access monitoring). [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-17, AC-18, AC-19, PL-4

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: When OT components (e.g., PLCs) cannot support the logging of privileged functions, other system components within the authorization boundary may be used (e.g., engineering workstations or physical access monitoring). [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Least Privilege | Non-privileged Access for Nonsecurity Functions</b></p>Require that users of system accounts (or roles) with access to [Assignment: organization-defined security functions or security-relevant information] use non-privileged accounts or roles, when accessing nonsecurity functions.' WHERE [Requirement_Id] = 37568
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Authorize network access to privileged commands only for assigned duties and/or responsibilities and document the rationale for such access in the SSP. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> In situations where the OT components (e.g., PLCs) cannot support logging of privileged functions, other system components within the authorization boundary may be used (e.g., engineering workstations or physical access monitoring). [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-17, AC-18, AC-19

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: When OT components (e.g., PLCs) cannot support the logging of privileged functions, other system components within the authorization boundary may be used (e.g., engineering workstations or physical access monitoring). [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Least Privilege | Network Access to Privileged Commands</b></p>Authorize network access to [Assignment: organization-defined privileged commands] only for [Assignment: organization-defined compelling operational needs] and document the rationale for such access in the security plan for the system.' WHERE [Requirement_Id] = 37569
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Restrict privileged accounts on the system to authorized personnel as documented in the Enterprise Identity and Access Management (EIAM) system. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> In situations where the OT components (e.g., PLCs) cannot support logging of privileged functions, other system components within the authorization boundary may be used (e.g., engineering workstations or physical access monitoring). [OT Systems Only: WMATA System Implementation Statement]

Related Controls: IA-2, MA-3, MA-4

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: When OT components (e.g., PLCs) cannot support the logging of privileged functions, other system components within the authorization boundary may be used (e.g., engineering workstations or physical access monitoring). [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Least Privilege | Privileged Accounts</b></p>Restrict privileged accounts on the system to [Assignment: organization-defined personnel or roles].' WHERE [Requirement_Id] = 37570
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>(1) Review and recertify annually the privileges assigned to general users and roles or classes of users to validate the need for such privileges; and [1: WMATA System Implementation Statement]</li>
<li>(2) Review and recertify quarterly the privileges assigned to privileged users and any associated roles to validate the need for such privileges; and [2: WMATA System Implementation Statement]</li>
<li>(3) Reassign or remove privileges, if necessary, to correctly reflect organizational mission and business needs. [3: WMATA System Implementation Statement]</li>

Related Controls: CA-7

', [Supplemental_Info]=N'<p><b> Review of User Privileges</b></p>(a) Review [Assignment: organization-defined frequency] the privileges assigned to [Assignment: organization-defined roles or classes of users] to validate the need for such privileges; and(b) Reassign or remove privileges, if necessary, to correctly reflect organizational mission and business needs.' WHERE [Requirement_Id] = 37571
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Log the execution of privileged functions. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> In situations where the OT components (e.g., PLCs) cannot support logging of privileged functions, other system components within the authorization boundary may be used (e.g., engineering workstations or physical access monitoring). [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AU-2, AU-3, AU-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: When OT components (e.g., PLCs) cannot support the logging of privileged functions, other system components within the authorization boundary may be used (e.g., engineering workstations or physical access monitoring). [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Least Privilege | Log Use of Privileged Functions</b></p>Log the execution of privileged functions.' WHERE [Requirement_Id] = 37572
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
When the maximum number of unsuccessful attempts is exceeded: [WMATA System Implementation Statement]

<li>a. Enforce a limit of three failed invalid logon attempts by a user during a 15-minute time period; [a: WMATA System Implementation Statement]</li>
<li>b. Automatically lock the account or node until released by an administrator when the maximum number of unsuccessful attempts is exceeded. See Control 3.9 Identification and Authentication control; [b: WMATA System Implementation Statement]</li>
<li>c. Automate unlocking of a system as documented in the SSP and approved by the AO; and [c: WMATA System Implementation Statement]</li>
<li>d. For public-facing or Intranet web-based applications, automatically lock the account until released by an administrator or prompt the user to answer a secret question in addition to requiring a Completely Automated Public Turing test to tell Computer and Humans Apart (CAPTCHA) or answering challenge questions to prevent automated attacks. [d: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Many OT systems remain in continuous operation and operators remain logged onto the system at all times. A “log-over” capability may be employed. Example compensating controls include logging or recording all unsuccessful login attempts and alerting OT security personnel through alarms or other means when the number of organization-defined consecutive invalid access attempts is exceeded. Unsuccessful logon attempt limits are enforced for accounts (e.g., administrator) or systems (e.g., engineering workstations) not required for continuous operation. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-2, AU-2, AU-6, IA-5

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Many OT systems remain in continuous operation, and operators remain logged onto the system at all times. A “log-over” capability may be employed. Example compensating controls include logging or recording all unsuccessful logon attempts and alerting OT security personnel through alarms or other means when the number of organization-defined consecutive invalid access attempts is exceeded. Unsuccessful logon attempt limits are enforced for accounts (e.g., administrator) or systems (e.g., engineering workstations) that are not required for continuous operation. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Unsuccessful Logon Attempts</b></p>a. Enforce a limit of [Assignment: organization-defined number] consecutive invalid logon attempts by a user during a [Assignment: organization-defined time period]; andb. Automatically [Selection (one or more): lock the account or node for an [Assignment: organization-defined time period]; lock the account or node until released by an administrator; delay next logon prompt per [Assignment: organization-defined delay algorithm]; notify system administrator; take other [Assignment: organization-defined action]] when the maximum number of unsuccessful attempts is exceeded.' WHERE [Requirement_Id] = 37573
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Display the official WMATA system use notification to users before granting access to the system that provides privacy and security notices consistent with applicable laws, directives, regulations, policies, standards, and guidelines and state that: [a: WMATA System Implementation Statement]</li>
<li>i) Users are accessing a WMATA system; [a.i: WMATA System Implementation Statement]</li>
<li>ii) System usage may be monitored, recorded, and subject to audit; [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Unauthorized use of the system is prohibited and subject to criminal and civil penalties; and [a.iii: WMATA System Implementation Statement]</li>
<li>iv) Use of the system indicates consent to monitoring and recording; [a.iv: WMATA System Implementation Statement]</li>
<li>b. Retain the notification message or banner on the screen until users acknowledge the usage conditions and take explicit actions to logon to or further access the system; and [b: WMATA System Implementation Statement]</li>
<li>c. For publicly accessible systems: [c: WMATA System Implementation Statement]</li>
<li>i) Display the official WMATA system use notice before granting access to publicly accessible systems. System use notices shall be displayed on all user logon pages. [c.i: WMATA System Implementation Statement]</li>
<li>ii) Display references, if any, to monitoring, recording, or auditing that are consistent with privacy accommodations for such systems that generally prohibit those activities; and [c.ii: WMATA System Implementation Statement]</li>
<li>iii) Include a description of the authorized uses of the system. [c.iii: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Many OT systems must remain in continuous operation and system use notification may not be supported or effective. Example compensating controls include posting physical notices in OT facilities or providing recurring training on system use prior to permitting access. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-14, PL-4, SI-4

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Many OT systems must remain in continuous operation, and system use notification may not be supported or effective. Example compensating controls include posting physical notices in OT facilities or providing recurring training on system use prior to permitting access. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>System Use Notification</b></p>a. Display [Assignment: organization-defined system use notification message or banner] to users before granting access to the system that provides privacy and security notices consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines and state that:     1. Users are accessing a U.S. Government system;     2. System usage may be monitored, recorded, and subject to audit;     3. Unauthorized use of the system is prohibited and subject to criminal and civil penalties; and     4. Use of the system indicates consent to monitoring and recording;b. Retain the notification message or banner on the screen until users acknowledge the usage conditions and take explicit actions to log on to or further access the system; andc. For publicly accessible systems:     1. Display system use information [Assignment: organization-defined conditions], before granting further access to the publicly accessible      system;     2. Display references, if any, to monitoring, recording, or auditing that are consistent with privacy accommodations for such systems that      generally prohibit those activities; and     3. Include a description of the authorized uses of the system.' WHERE [Requirement_Id] = 37574
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement] 

Related Controls: PM-9, PS-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Awareness and Training Policy and Procedures</b></p>a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:     1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] awareness and training policy that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and          (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and     2. Procedures to facilitate the implementation of the awareness and training policy and the associated awareness and training controls;          b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the           awareness and training policy and procedures; and          c. Review and update the current awareness and training:               1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and               2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37575
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Provide security and privacy literacy training to users: [a: WMATA System Implementation Statement]</li>
<li>i) As part of initial training for new users and annually thereafter; and [a.i: WMATA System Implementation Statement]</li>
<li>ii) When required by system changes or following events that may precipitate an update to literacy training and awareness content. [a.ii: WMATA System Implementation Statement]</li>
<li>b. Employ techniques to increase the security and privacy awareness of users, such as: [b: WMATA System Implementation Statement]</li>
<li>i) Displaying posters; [b.i: WMATA System Implementation Statement]</li>
<li>ii) Offering supplies inscribed with security and privacy reminders; [b.ii: WMATA System Implementation Statement]</li>
<li>iii) Displaying logon screen and screensaver messages; [b.iii: WMATA System Implementation Statement]</li>
<li>iv) Generating email advisories or notices from organizational officials; and [b.iv: WMATA System Implementation Statement]</li>
<li>v) Conducting awareness events. [b.v: WMATA System Implementation Statement]</li>
<li>c. Update literacy training and awareness content annually and following events that may precipitate an update, including but not limited to assessment or audit findings, cybersecurity or privacy incidents, or changes in applicable laws, directives, regulations, policies, standards, and guidelines; and [c: WMATA System Implementation Statement]</li>
<li>d. Incorporate lessons learned from internal or external cybersecurity incidents or breaches into literacy training and awareness techniques. [d: WMATA System Implementation Statement]</li>
<li>e. Mandate security awareness and training for users within 90 days of initial employment and annually thereafter; and [e: WMATA System Implementation Statement]</li>
<li>f. For suspended accounts, reinstate network access after successfully completing the Security Awareness Training course. [f: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Security awareness training includes initial and periodic review of OT-specific policies, standard operating procedures, security trends, and vulnerabilities. The OT security awareness program is consistent with the requirements of the security awareness and training policy established by the organization. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-3, AC-17, AC-22, AT-3, AT-4, CP-3, IA-4, IR-2, IR-7, IR-9, PL-4, PM-13, PM-21, PS-7, PT-2, SA-8, SA-16
<li>g. Security Controls Enhancement(s): [g: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Security awareness training includes initial and periodic review of OT-specific policies, standard operating procedures, security trends, and vulnerabilities. The OT security awareness program is consistent with the requirements of the security awareness and training policy established by the organization. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Literacy Training and Awareness</b></p>a. Provide security and privacy literacy training to system users (including managers, senior executives, and contractors):     1. As part of initial training for new users and [Assignment: organization-defined frequency] thereafter; and     2. When required by system changes or following [Assignment: organization-defined events];b. Employ the following techniques to increase the security and privacy awareness of system users [Assignment: organization-defined awareness techniques];c. Update literacy training and awareness content [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; andd. Incorporate lessons learned from internal or external security incidents or breaches into literacy training and awareness techniques.' WHERE [Requirement_Id] = 37576
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Provide literacy training on recognizing and reporting potential indicators of insider threat. [WMATA System Implementation Statement]

Related Controls: IR-9, PM-12

', [Supplemental_Info]=N'<p><b> Insider Threat</b></p>Provide literacy training on recognizing and reporting potential indicators of insider threat.' WHERE [Requirement_Id] = 37577
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>(1) Provide literacy training on recognizing and reporting potential and actual instances of social engineering and social mining. [1: WMATA System Implementation Statement]</li>
<li>f. Mandate security awareness and training for users within 90 days of initial employment and annually thereafter; and [f: WMATA System Implementation Statement]</li>
<li>g. For suspended accounts, reinstate network access after successfully completing the Security Awareness Training course. [g: WMATA System Implementation Statement]</li>


', [Supplemental_Info]=N'<p><b> Social Engineering and Mining</b></p>Provide literacy training on recognizing and reporting potential and actual instances of social engineering and social mining.' WHERE [Requirement_Id] = 37578
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Provide literacy training on recognizing suspicious communications and anomalous behavior in organizational systems using [Assignment: organization-defined indicators of malicious code]. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Identify and communicate suspicious and anomalous behaviors within the OT environment. Some examples of OT suspicious or anomalous behavior may include a PLC still in programming mode when it is expected to be in run mode, process trips with undetermined root cause, malware on an HMI, unexpected mouse movement, or process changes that are not being performed by the operator. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Identify and communicate suspicious and anomalous behaviors within the OT environment. Some examples of OT suspicious or anomalous behavior may include a PLC still in programming mode when it is expected to be in run mode, process trips with an undetermined root cause, malware on an HMI, unexpected mouse movement, or process changes that are not being performed by the operator. [NIST 800-82 Rev 3_OT Discussion: WMATA System Implementation Statement]

Rationale for adding AT-2 (4) to MOD and HIGH baselines: Training OT personnel on potentially suspicious communications and anomalous behaviors as well as the actions to take if anomalous system behavior occurs can supplement system detection and protection mechanisms 
for improved response. [NIST 800-82 Rev 3_Rationale: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Literacy Training and Awareness | Suspicious Communications and Anomalous System Behavior</b></p>Provide literacy training on recognizing suspicious communications and anomalous behavior in organizational systems using [Assignment: organization-defined indicators of malicious code].' WHERE [Requirement_Id] = 37579
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Provide role-based (e.g., user, privileged user, etc.) security and privacy training to personnel: [a: WMATA System Implementation Statement]</li>
<li>i) Before authorizing access to the system, information, or performing assigned duties, and annually thereafter; and [a.i: WMATA System Implementation Statement]</li>
<li>ii) When required by system changes; [a.ii: WMATA System Implementation Statement]</li>
<li>b. Update role-based training content annually and following events that may precipitate an update, including but not limited to, assessment or audit findings, cybersecurity or privacy incidents, or changes in applicable laws, directives, regulations, policies, standards, and guidelines; and [b: WMATA System Implementation Statement]</li>
<li>c. Incorporate lessons learned from internal or external cybersecurity incidents or breaches into role-based training. [c: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Security training includes initial and periodic review of OT-specific policies, standard operating procedures, security trends, and vulnerabilities. The OT security training program is consistent with the requirements of the security awareness and training policy established by the organization. The training may be customized for specific OT roles, which could include operators, maintainers, engineers, supervisors, and administrators. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-3, AC-17, AC-22, AT-2, AT-4, CP-3, IR-2, IR-4, IR-7, IR-9, PL-4, PM-13, PM-23, PS-7, PS-9, SA-3, SA-8, SA-11, SA-16, SR-5, SR-6, SR-11
<li>d. Security Controls Enhancement(s): [d: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Security training includes initial and periodic review of OT-specific policies, standard operating procedures, security trends, and vulnerabilities. The OT security training program is consistent with the requirements of the security awareness and training policy 
established by the organization. The training may be customized for specific OT roles, which could include operators, maintainers, engineers, supervisors, and administrators. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Role-based Training</b></p>a. Provide role-based security and privacy training to personnel with the following roles and responsibilities: [Assignment: organization-defined roles and responsibilities]:     1. Before authorizing access to the system, information, or performing assigned duties, and [Assignment: organization-defined frequency]      thereafter; and     2. When required by system changes;b. Update role-based training content [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; andc. Incorporate lessons learned from internal or external security incidents or breaches into role-based training.' WHERE [Requirement_Id] = 37580
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Provide applicable personnel with initial and annual training in the employment and operation of personally identifiable information processing and transparency controls. [WMATA System Implementation Statement]

Related Controls: PT-2, PT-3, PT-5, PT-6

', [Supplemental_Info]=N'<p><b> Processing Personally Identifiable Information</b></p>Provide [Assignment: organization-defined personnel or roles] with initial and [Assignment: organization-defined frequency] training in the employment and operation of personally identifiable information processing and transparency controls.' WHERE [Requirement_Id] = 37581
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Document and monitor information security and privacy training activities, including security and privacy awareness training and specific role-based security and privacy training; [a: WMATA System Implementation Statement]</li>
<li>b. Retain individual training records to align with enterprise learning and management application requirements; and [b: WMATA System Implementation Statement]</li>
<li>c. Reporting training compliance minimally on a quarterly basis. [c: WMATA System Implementation Statement]</li>

Related Controls: AT-2, AT-3, CP-3, IR-2, PM-14, SI-12




', [Supplemental_Info]=N'<p><b>Training Records</b></p>a. Document and monitor information security and privacy training activities, including security and privacy awareness training and specific role-based security and privacy training; andb. Retain individual training records for [Assignment: organization-defined time period].' WHERE [Requirement_Id] = 37582
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement]

Related Controls: PM-9, PS-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Audit and Accountability Policy and Procedures</b></p>a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:     1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] audit and accountability policy that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and          (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and     2. Procedures to facilitate the implementation of the audit and accountability policy and the associated audit and accountability controls;b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the audit and accountability policy and procedures; andc. Review and update the current audit and accountability:     1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and     2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37583
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Provide irrefutable evidence that an individual (or process acting on behalf of an individual) has performed actions to include creating information, sending and receiving messages, and approving information. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> OT devices may not enforce non-repudiation of audit records and may require compensating controls. Example compensating controls include physical security systems, cameras to monitor user access, or a separate device for log collection. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AU-9, SA-8, PM-12, SC-8, SC-12, SC-13, SC-17, SC-23

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: OT devices may not enforce non-repudiation of audit records and may require compensating controls. Example compensating controls include physical security systems, cameras to monitor user access, or a separate device for log collection. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Non-repudiation</b></p>Provide irrefutable evidence that an individual (or process acting on behalf of an individual) has performed [Assignment: organization-defined actions to be covered by non-repudiation].' WHERE [Requirement_Id] = 37584
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Retain audit records for all WMATA systems for at least five years or longer if specified by applicable regulation, law, or external compliance mandate to provide support for after-the- fact investigations of incidents and to meet regulatory and organizational information retention requirements. [a: WMATA System Implementation Statement]</li>

Related Controls: AU-2, AU-4, AU-5, AU-6, AU-9, MP-6, RA-5, SI-12



', [Supplemental_Info]=N'<p><b>Audit Record Retention</b></p>Retain audit records for [Assignment: organization-defined time period consistent with records retention policy] to provide support for after-the-fact investigations of incidents and to meet regulatory and organizational information retention requirements.' WHERE [Requirement_Id] = 37585
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Provide audit record generation capability for the event types the system is capable of auditing in accordance with Control 3.3 Audit and Accountability, Section 2, (a), “AU-2 Event Logging”, on all system components; [a: WMATA System Implementation Statement]</li>
<li>b. Allow required stakeholders to select the event types that are to be logged by specific components of the system; and [b: WMATA System Implementation Statement]</li>
<li>c. Generate audit records for the event types in accordance with Control 3.3 Audit and Accountability, Section 2, (c), “AU-2 Event Logging”, that includes the audit record content in accordance with Control 3.3 Audit and Accountability, Section 3, “AU-3 Content of Audit Records. [c: WMATA System Implementation Statement]</li>

Related Controls: AC-6, AC-17, AU-2, AU-3, AU-4, AU-5, AU-6, AU-7, CM-5, MA-4, MP-4, PM-12, SA-8, SC-18, SI-3, SI-4, SI-7, SI-10

<li>d. Security Controls Enhancement(s): [d: WMATA System Implementation Statement]</li>




', [Supplemental_Info]=N'<p><b>Audit Record Generation</b></p>a. Provide audit record generation capability for the event types the system is capable of auditing as defined in AU-2a on [Assignment: organization-defined system components];b. Allow [Assignment: organization-defined personnel or roles] to select the event types that are to be logged by specific components of the system; andc. Generate audit records for the event types defined in AU-2c that include the audit record content defined in AU-3.' WHERE [Requirement_Id] = 37586
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Compile audit records from all system components into a system-wide (logical or physical) audit trail that is time-correlated to within 30 seconds of WMATA standard time as defined in WMATA policy. All systems shall use network time. [WMATA System Implementation Statement]

Related Controls: AU-8, SC-45

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Example compensating controls include providing time-correlated audit records on a separate system. [NIST 800-82 Rev 3: WMATA System Implementation Statement]




', [Supplemental_Info]=N'<p><b>Audit Record Generation | System-wide and Time-correlated Audit Trail</b></p>Compile audit records from [Assignment: organization-defined system components] into a system-wide (logical or physical) audit trail that is time-correlated to within [Assignment: organization-defined level of tolerance for the relationship between time stamps of individual records in the audit trail].' WHERE [Requirement_Id] = 37587
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Provide and implement the capability for system administrators to change the criteria for logging to be performed on information systems based on System Owner requirements as approved by the AO. [WMATA System Implementation Statement] 

Related Controls: AC-3

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Example compensating controls include employing nonautomated mechanisms or procedures. [NIST 800-82 Rev 3: WMATA System Implementation Statement]


', [Supplemental_Info]=N'<p><b>Audit Record Generation | Changes by Authorized Individuals</b></p>Provide and implement the capability for [Assignment: organization-defined individuals or roles] to change the logging to be performed on [Assignment: organization-defined system components] based on [Assignment: organization-defined selectable event criteria] within [Assignment: organization-defined time thresholds].' WHERE [Requirement_Id] = 37588
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Provide and implement the capability for [Assignment: organization-defined users or roles] to [Selection (one or more): record; view; hear; log] the content of a user session under [Assignment: organization-defined circumstances]; and [a: WMATA System Implementation Statement] </li>
<li>b. Develop, integrate, and use session auditing activities in consultation with legal counsel and in accordance with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines. [b: WMATA System Implementation Statement] </li>

', [Supplemental_Info]=N'<p><b>Session Audit</b></p>a. Provide and implement the capability for [Assignment: organization-defined users or roles] to [Selection (one or more): record; view; hear; log] the content of a user session under [Assignment: organization-defined circumstances]; andb. Develop, integrate, and use session auditing activities in consultation with legal counsel and in accordance with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines.' WHERE [Requirement_Id] = 37589
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Identify the types of events that the system is capable of logging in support of the audit function and document those events in the System Security Plans (SSP). Additionally, all exceptions to the audit event types shall be authorized by the AO and documented in SSPs. This list includes but is not limited to: [a: WMATA System Implementation Statement]</li>
<li>i) Password changes; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Failed or successful logons or accesses related to systems; [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Logoffs; [a.iii: WMATA System Implementation Statement]</li>
<li>iv) Security or privacy attribute changes; [a.iv: WMATA System Implementation Statement]</li>
<li>v) Administrative privilege usage; [a.v: WMATA System Implementation Statement]</li>
<li>vi) Personal Identity Verification (PIV) credential usage; [a.vi: WMATA System Implementation Statement]</li>
<li>vii) Data action changes; [a.vii: WMATA System Implementation Statement]</li>
<li>viii) Query parameters; [a.viii: WMATA System Implementation Statement]</li>
<li>ix) External credential usage; [a.ix: WMATA System Implementation Statement]</li>
<li>x) Encryption errors or failures occur; [a.x: WMATA System Implementation Statement]</li>
<li>xi) Authentication events to include successful and unsuccessful (failed): [a.xi: WMATA System Implementation Statement]</li>
<li>(1) Information Requests and Server Responses; [a.xi.1: WMATA System Implementation Statement]</li>
<li>(2) Identities of individuals or processes; [a.xi.2: WMATA System Implementation Statement]</li>
<li>(3) IP addresses involved; [a.xi.3: WMATA System Implementation Statement]</li>
<li>(4) Use of credentials for logical access to systems or physical access to facilities; [a.xi.4: WMATA System Implementation Statement]</li>
<li>xii) User activities to include event types, locations, dates and times of activities within the system; event success and failure; data and object access, modifications and deletions; queries and query parameter access, modifications and deletions; and attempts to access system objects (e.g., files, folders, registry keys, and printers); [a.xii: WMATA System Implementation Statement]</li>
<li>xiii) Privileged functions to include the creation, modification, disablement, and deletion (removal) of accounts; audit logs; sensitive information (includes security or privacy attributes or data); administrator events and event success and failure (activities, such as windows “runas” or Linux “su” use, use of suid/guid, chown, su); starting and stopping of services and audit functions, installation and modifications to system software/application, firmware, processes and services; [a.xiii: WMATA System Implementation Statement]</li>
<li>xiv) Software, firmware and hardware errors, and system resources involved; [a.xiv: WMATA System Implementation Statement]</li>
<li>xv) Web applications shall log all user and administrator activity to include application and service startup, shutdown and failure; authentication and authorization successes and failures; data access, account creation, modifications, deletions, and permission changes; and [a.xv: WMATA System Implementation Statement]</li>
<li>xvi) Additional types of events may be required based on emerging threats or federal recommendations. [a.xvi: WMATA System Implementation Statement]</li>
<li>b. Coordinate the event logging function with other organizational entities requiring audit-related information to guide and inform the selection criteria for events to be logged. [b: WMATA System Implementation Statement]</li>
<li>c. All events in accordance with Control 3.3 Audit and Accountability, Section 2, “AU-2 Event Logging”, shall be logged as they occur, and for each incidence of the occurrence, and any required alert and/or notifications shall be implemented in compliance with Control 3.3 Audit and Accountability, Section 5, (b), (iv), “AU-5 (2) Real-Time Alerts”; [c: WMATA System Implementation Statement]</li>
<li>d. Provide a rationale for why the event types selected for logging are deemed to be adequate to support after-the-fact investigations of incidents; and [d:WMATA System Implementation Statement]</li>
<li>e. Review and update the event types selected for logging annually. [e: WMATA System Implementation Statement]</li>
<li>f. All systems or applications that store, process, or transmit sensitive information as defined in WMATA policy, shall log access, modification, and deletion to sensitive information. When feasible, the content associated with the sensitive information (e.g., credit card numbers, Social Security Numbers (SSN), Protected Health Information (PHI), Electronic (ePHI), etc.) shall not be stored in audit records in accordance with Control 3.3 Audit and Accountability, Section 3, (f), (i), AU-3 (1) “Additional Audit Information” and Section 3, (f), (ii), AU-3 (3) “Limit Personally Identifiable Information (PII) Elements.” [f: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Organizations may want to include relevant OT events (e.g., alerts, alarms, configuration and status changes, operator actions) in their event logging, which may be designated as audit events. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-2, AC-3, AC-6, AC-7, AC-8, AC-17, AU-3, AU-4, AU-5, AU-6, AU-7, AU-11, AU-12, CM-3, CM-5, CM-6, IA-3, MA-4, MP-4, PE-3, PM-21, PT-2, PT-7, RA-8, SA-8, SC-7, SC-18, SI-3, SI-4, SI-7, SI-10, SI-11

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Organizations may want to include relevant OT events (e.g., alerts, alarms, configuration and status changes, operator actions) in their event logging, which may be designated as audit events. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Event Logging</b></p>a. Identify the types of events that the system is capable of logging in support of the audit function: [Assignment: organization-defined event types that the system is capable of logging];b. Coordinate the event logging function with other organizational entities requiring audit-related information to guide and inform the selection criteria for events to be logged;c. Specify the following event types for logging within the system: [Assignment: organization-defined event types (subset of the event types defined in AU-2a.) along with the frequency of (or situation requiring) logging for each identified event type];d. Provide a rationale for why the event types selected for logging are deemed to be adequate to support after-the-fact investigations of incidents; ande. Review and update the event types selected for logging [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37590
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Ensure that audit records contain information that establishes the following: [WMATA System Implementation Statement]

<li>a. What type of event occurred; [a: WMATA System Implementation Statement]</li>
<li>b. When the event occurred; [b: WMATA System Implementation Statement]</li>
<li>c. Where the event occurred; [c: WMATA System Implementation Statement]</li>
<li>d. Source of the event; [d: WMATA System Implementation Statement]</li>
<li>e. Outcome of the event; and [e: WMATA System Implementation Statement]</li>
<li>f. Identity of any individuals, subjects, or objects/entities associated with the event. [f: WMATA System Implementation Statement]</li>
Related Controls: AU-2, AU-8, AU-12, MA-4, PL-9, SA-8, SI-7, SI-11
<li>g. Security Controls Enhancement(s): [g: WMATA System Implementation Statement]</li>

', [Supplemental_Info]=N'<p><b>Content of Audit Records</b></p>a. What type of event occurred;b. When the event occurred;c. Where the event occurred;d. Source of the event;e. Outcome of the event; andf. Identity of any individuals, subjects, or objects/entities associated with the event.' WHERE [Requirement_Id] = 37591
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Generate audit records that contain content specified in Control 3.3 Audit and Accountability, Section 3, AU-3 (a) – (c), “Content of Audit Records”. In addition, ensure that audit records contain access control or flow control rules that are invoked, and individual user identities are used for access to group accounts. [WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b> Additional Audit Information</b></p>Generate audit records containing the following additional information: [Assignment: organization-defined additional information].' WHERE [Requirement_Id] = 37592
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Limit PII and other forms of sensitive data in accordance with Control 3.8 Data Sensitivity, in audit records to the maximum extent feasible. [WMATA System Implementation Statement]

Related Controls: RA-3

', [Supplemental_Info]=N'<p><b> Limit Personally Identifiable Information Elements</b></p>Limit personally identifiable information contained in audit records to the following elements identified in the privacy risk assessment: [Assignment: organization-defined elements].' WHERE [Requirement_Id] = 37593
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Allocate audit log storage capacity to accommodate application or system requirements. Assess capacity requirements for audit logging to never exceed 75% capacity. Exceptions to the capacity limit in the range of 76-89% must be approved by the AO and include the following justifications: [WMATA System Implementation Statement]

<li>a. Demonstrated acceptable system performance above 75% capacity limit; [a: WMATA System Implementation Statement]</li>
<li>b. Define the limited business impact of system failure; [b: WMATA System Implementation Statement]</li>
<li>c. Business explanation why 75% capacity limit cannot be achieved; [c: WMATA System Implementation Statement]</li>
<li>1) Capacity limit shall not exceed 90%. [c.1: WMATA System Implementation Statement]</li>
<li>2) Reassess capacity requirements whenever exceeding the authorized threshold. Additionally, reassessing capacity requirements for audit logging based on system changes, performance, and alerts. [c.2: WMATA System Implementation Statement]</li>
Related Controls: AU-2, AU-5, AU-6, AU-7, AU-9, AU-11, AU-12, SI-4
<li>d. Security Controls Enhancement(s): [d:WMATA System Implementation Statement]</li>

', [Supplemental_Info]=N'<p><b>Audit Log Storage Capacity</b></p>Allocate audit log storage capacity to accommodate [Assignment: organization-defined audit log retention requirements].' WHERE [Requirement_Id] = 37594
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Transfer audit logs [Assignment: organization-defined frequency] to a different system, system component, or media other than the system or system component conducting the logging. [WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Rationale for adding AU-4 (1) to LOW, MOD, and HIGH baselines: Organizational requirements may require the storage of very large amounts of data, which OT components may not be able to support directly. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Audit Log Storage Capacity | Transfer to Alternate Storage</b></p>Transfer audit logs [Assignment: organization-defined frequency] to a different system, system component, or media other than the system or system component conducting the logging.' WHERE [Requirement_Id] = 37595
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Alert the required stakeholders immediately in the event of an audit logging process failure; and [a: WMATA System Implementation Statement]</li>
<li>b. Take the following additional actions: [b: WMATA System Implementation Statement]</li>
<li>i) Systems shall specify in the SSP actions that are taken in the event of an audit processing failure, to include overwriting oldest audit records and shutting down the system. All database systems shall comply with hardening checklists (e.g., STIGs/Benchmarks) and shutdown in the event there is an audit processing failure. [b.i: WMATA System Implementation Statement]</li>
<li>(1) If overwriting is to be employed, audit logs shall be centralized or moved to external storage to preserve the audit content in accordance with Control 3.3 Audit and Accountability, Section 11, “AU-11 Audit Record Retention.” [b.i.1: WMATA System Implementation Statement]</li>
<li>(2) If the system is to be shut down due to an audit process failure, the relevant Audit and Accountability (AU), Planning (PL) and Contingency Planning (CP) controls within the SSP and associated contingency plan and/or Information System Contingency Plan (ISCP) shall be updated to reflect how operations shall be maintained in the event of a em component outage. [b.i.2.i: WMATA System Implementation Statement] All systems shall have functional audit generation capabilities.</li>
<li>ii) In the event of an audit process logging failure, investigate root cause and create an incident: [b.i.2.ii: WMATA System Implementation Statement]</li>
<li>(1) With Metro Enterprise Monitoring Center (MEMC) for operational incidents; and [b.i.2.ii.1: WMATA System Implementation Statement]</li>
<li>(2) With DMCS for malicious or cybersecurity incidents. [b.i.2.ii.2: WMATA System Implementation Statement]</li>
Related Controls: AU-2, AU-4, AU-7, AU-9, AU-11, AU-12, SI-4, SI-12
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>


', [Supplemental_Info]=N'<p><b>Response to Audit Logging Process Failures</b></p>a. Alert [Assignment: organization-defined personnel or roles] within [Assignment: organization-defined time period] in the event of an audit logging process failure; andb. Take the following additional actions: [Assignment: organization-defined additional actions].' WHERE [Requirement_Id] = 37596
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Provide a warning to MEMC and any other required stakeholders, immediately when allocated audit log storage volume reaches 75%, and again at 90% of repository maximum audit log storage capacity. [WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b> Storage Capacity Warning</b></p>Provide a warning to [Assignment: organization-defined personnel, roles, and/or locations] within [Assignment: organization-defined time period] when allocated audit log storage volume reaches [Assignment: organization-defined percentage] of repository maximum audit log storage capacity.' WHERE [Requirement_Id] = 37597
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Provide an alert immediately to the required stakeholders when the following audit failure events occur, at a minimum: [WMATA System Implementation Statement]

<li>(1) System and service is stopped or severely degraded, or [1: WMATA System Implementation Statement]</li>
<li>(2) Audit processing capability or component failures or errors occur within a system, to include: [2: WMATA System Implementation Statement]</li>
<li>(a) Audit log is full; and [2.a: WMATA System Implementation Statement]</li>
<li>(b) Audit log cannot log authentication attempts and responses. [2.b: WMATA System Implementation Statement]</li>

', [Supplemental_Info]=N'<p><b> Real-time Alerts</b></p>Provide an alert within [Assignment: organization-defined real-time period] to [Assignment: organization-defined personnel, roles, and/or locations] when the following audit failure events occur: [Assignment: organization-defined audit logging failure events requiring real-time alerts].' WHERE [Requirement_Id] = 37598
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Review and analyze system audit records at least monthly for indications of defined inappropriate or unusual activity and the potential impact of the inappropriate or unusual activity; [a: WMATA System Implementation Statement]</li>
<li>b. Report findings to required stakeholders and DMCS; and [b: WMATA System Implementation Statement]</li>
<li>c. Adjust the level of audit record review, analysis, and reporting within the system when there is a change in risk based on law enforcement information, intelligence information, or other credible sources of information. [c: WMATA System Implementation Statement]</li>
Related Controls: AC-2, AC-3, AC-5, AC-6, AC-7, AC-17, AU-7, CA-2, CA-7, CM-2, CM-5, CM-6, CM-10, CM-11, IA-2, IA-3, IA-5, IA-8, IR-5, MA-4, MP-4, PE-3, PE-6, RA-5, SA-8, SC-7, SI-3, SI-4, SI-7
<li>d. Security Controls Enhancement(s): [d: WMATA System Implementation Statement]</li>


', [Supplemental_Info]=N'<p><b>Audit Record Review, Analysis, and Reporting</b></p>a. Review and analyze system audit records [Assignment: organization-defined frequency] for indications of [Assignment: organization-defined inappropriate or unusual activity] and the potential impact of the inappropriate or unusual activity;b. Report findings to [Assignment: organization-defined personnel or roles]; andc. Adjust the level of audit record review, analysis, and reporting within the system when there is a change in risk based on law enforcement information, intelligence information, or other credible sources of information.' WHERE [Requirement_Id] = 37599
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Integrate audit record review, analysis, and reporting processes via an enterprise solution (or solutions) to enable services, such as incident response, continuous monitoring, contingency planning, and investigation and response to suspicious activities. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Example compensating controls include manual mechanisms or procedures. For devices where audit records cannot be feasibly collected, periodic manual review may be necessary. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: PM-7

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Example compensating controls include manual mechanisms or procedures. For devices where audit records cannot be feasibly collected, periodic manual review may be necessary. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Audit Record Review, Analysis, and Reporting | Automated Process Integration</b></p>Integrate audit record review, analysis, and reporting processes using [Assignment: organization-defined automated mechanisms].' WHERE [Requirement_Id] = 37600
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Analyze and correlate audit records across different repositories to gain organization-wide situational awareness. [WMATA System Implementation Statement]

Related Controls: AU-12, IR-4

', [Supplemental_Info]=N'<p><b> Correlate Audit Record Repositories</b></p>Analyze and correlate audit records across different repositories to gain organization-wide situational awareness.' WHERE [Requirement_Id] = 37601
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Integrate analysis of audit records with analysis of vulnerability scanning information; performance data; and system monitoring information at a minimum to further enhance the ability to identify inappropriate or unusual activity. [WMATA System Implementation Statement]

Related Controls: AU-12, IR-4

', [Supplemental_Info]=N'<p><b> Integrated Analysis of Audit Records</b></p>Integrate analysis of audit records with analysis of [Selection (one or more): vulnerability scanning information; performance data; system monitoring information; [Assignment: organization-defined data/information collected from other sources]] to further enhance the ability to identify inappropriate or unusual activity.' WHERE [Requirement_Id] = 37602
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Correlate information from audit records with information obtained from monitoring physical access to further enhance the ability to identify suspicious, inappropriate, unusual, or malevolent activity. [WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b> Correlation with Physical Monitoring</b></p>Correlate information from audit records with information obtained from monitoring physical access to further enhance the ability to identify suspicious, inappropriate, unusual, or malevolent activity.' WHERE [Requirement_Id] = 37603
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Supports on-demand audit record review, analysis, and reporting requirements and after- the-fact investigations of incidents; and [a: WMATA System Implementation Statement]</li>
<li>b. Does not alter the original content or time ordering of audit records. [b: WMATA System Implementation Statement]</li>
Related Controls: AC-2, AU-2, AU-3, AU-4, AU-5, AU-6, AU-12, CM-5, IA-5, IR-4, PM-12, SI-4
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>

', [Supplemental_Info]=N'<p><b>Audit Record Reduction and Report Generation</b></p>a. Supports on-demand audit record review, analysis, and reporting requirements and after-the-fact investigations of incidents; andb. Does not alter the original content or time ordering of audit records.' WHERE [Requirement_Id] = 37604
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Provide and implement the capability to process, sort, and search audit records for events of interest based on the following content: system resources involved, information objects accessed, identities of individuals or processes, event types, event locations, event dates and times, IP addresses involved, and event success or failure. The DM department may define event criteria to any degree of granularity required, such as locations selectable by a general networking location or by a specific system component. [WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b> Automatic Processing</b></p>Provide and implement the capability to process, sort, and search audit records for events of interest based on the following content: [Assignment: organization-defined fields within audit records].' WHERE [Requirement_Id] = 37605
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Use internal system clocks to generate time stamps for audit records; and [a: WMATA System Implementation Statement]</li>
<li>b. Record time stamps for audit records that meet accuracy to within 100 milliseconds and that use Coordinated Universal Time (UTC), have a fixed local time offset from UTC, or include the local time offset as part of the time stamp. [b: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Example compensating controls include using a separate system designated as an authoritative time source. See related control SC-45. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AU-3, AU-12, SC-45

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Example compensating controls include using a separate system designated as an authoritative time source. See related control SC-45. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Time Stamps</b></p>a. Use internal system clocks to generate time stamps for audit records; andb. Record time stamps for audit records that meet [Assignment: organization-defined granularity of time measurement] and that use Coordinated Universal Time, have a fixed local time offset from Coordinated Universal Time, or that include the local time offset as part of the time stamp.' WHERE [Requirement_Id] = 37606
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Protect audit information and audit logging tools from unauthorized access, modification, and deletion; and [a: WMATA System Implementation Statement]</li>
<li>b. Alert required stakeholders upon detection of unauthorized access, modification, or deletion of audit information. [b: WMATA System Implementation Statement]</li>
Related Controls: AC-3, AC-6, AU-6, AU-11, MP-2, MP-4, PE-2, PE-3, PE-6, SA-8, SC-8, SI-4
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>

', [Supplemental_Info]=N'<p><b>Protection of Audit Information</b></p>a. Protect audit information and audit logging tools from unauthorized access, modification, and deletion; andb. Alert [Assignment: organization-defined personnel or roles] upon detection of unauthorized access, modification, or deletion of audit information.' WHERE [Requirement_Id] = 37607
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Store audit records at least daily in a repository that is part of a physically different system or system component than the system or component being audited. [WMATA System Implementation Statement]

Related Controls: AU-4, AU-5

', [Supplemental_Info]=N'<p><b> Store on Separate Physical Systems or Components</b></p>Store audit records [Assignment: organization-defined frequency] in a repository that is part of a physically different system or system component than the system or component being audited.' WHERE [Requirement_Id] = 37608
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Implement cryptographic mechanisms to protect the integrity of audit information and audit tools. [WMATA System Implementation Statement]

Related Controls: AU-10, SC-12, SC-13

', [Supplemental_Info]=N'<p><b> Cryptographic Protection</b></p>Implement cryptographic mechanisms to protect the integrity of audit information and audit tools.' WHERE [Requirement_Id] = 37609
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Authorize access to management of audit logging functionality to only: [WMATA System Implementation Statement]
<li>(1) Required stakeholders based on least privileges for the purposes of configuring and supporting information systems; and [1: WMATA System Implementation Statement]</li>
<li>(2) All DMCS Cyber Fusion Center (CFC) personnel. [2: WMATA System Implementation Statement]</li>

Related Controls: AC-5

', [Supplemental_Info]=N'<p><b> Access by Subset of Privileged Users</b></p>Authorize access to management of audit logging functionality to only [Assignment: organization-defined subset of privileged users or roles].' WHERE [Requirement_Id] = 37610
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement]

Related Controls: PM-9, PS-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Assessment, Authorization and Monitoring Policy and Procedures</b></p>a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:     1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] assessment, authorization, and monitoring      policy that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and          (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and     2. Procedures to facilitate the implementation of the assessment, authorization, and monitoring policy and the associated assessment, authorization, and monitoring controls;b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the assessment, authorization, and monitoring policy and procedures; andc. Review and update the current assessment, authorization, and monitoring:     1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and     2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37611
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Select the appropriate assessor or assessment team for the type of assessment to be conducted; [a: WMATA System Implementation Statement]</li>
<li>b. Develop a control assessment plan that describes the scope of the assessment including: [b: WMATA System Implementation Statement]</li>
<li>i) Controls and control enhancements under assessment; [b.i: WMATA System Implementation Statement]</li>
<li>ii) Assessment procedures to be used to determine control effectiveness; and [b.ii: WMATA System Implementation Statement]</li>
<li>iii) Assessment environment, assessment team, and assessment roles and responsibilities; [b.iii: WMATA System Implementation Statement]</li>
<li>c. Ensure the control assessment plan is reviewed and approved by the AO or designated representative prior to conducting the assessment; [c: WMATA System Implementation Statement]</li>
<li>d. Assess the controls in the system and its environment of operation annually, or after any significant change, to determine the extent to which the controls are implemented correctly, operating as intended, and producing the desired outcome with respect to meeting established security and privacy requirements; [d: WMATA System Implementation Statement]</li>
<li>e. Produce a control assessment report that document the results of the assessment; and [e: WMATA System Implementation Statement]</li>
<li>f. Provide the results of the control assessment to the required stakeholders. [f: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Assessments are performed and documented by qualified assessors (i.e., experienced in assessing OT) authorized by the organization. The individual/group conducting the assessment fully understands the organizational information security policies and procedures, the OT security policies and procedures, and the specific health, safety, and environmental risks associated with a particular facility and/or process. The organization ensures that the assessment does not affect system operation or result in unintentional system modification. If assessment activities must be performed on the production OT, it may need to be taken off-line before an assessment can be conducted, or the assessment should be scheduled to occur during planned OT outages whenever possible. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-20, CA-5, CA-6, CA-7, PM-9, RA-5, SA-11, SI-3, SI-12, SR-2, SR-3
<li>g. Security Controls Enhancement(s): [g: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Assessments are performed and documented by qualified assessors (i.e., experienced in assessing OT) authorized by the organization. The individual or group conducting the assessment fully understands the organizational information security policies and procedures, the OT security policies and procedures, and the specific health, safety, and environmental risks associated with a particular facility and/or process. The organization ensures that the assessment does not affect system operation or result in unintentional system modification. If assessment activities must be performed on the production OT, it may need to be taken offline before an assessment can be conducted, or the assessment should be scheduled to occur during planned OT outages whenever possible. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Control Assessments</b></p>a. Select the appropriate assessor or assessment team for the type of assessment to be conducted;b. Develop a control assessment plan that describes the scope of the assessment including:     1. Controls and control enhancements under assessment;     2. Assessment procedures to be used to determine control effectiveness; and     3. Assessment environment, assessment team, and assessment roles and responsibilities;c. Ensure the control assessment plan is reviewed and approved by the authorizing official or designated representative prior to conducting the assessment;d. Assess the controls in the system and its environment of operation [Assignment: organization-defined frequency] to determine the extent to which the controls are implemented correctly, operating as intended, and producing the desired outcome with respect to meeting established security and privacy requirements;e. Produce a control assessment report that document the results of the assessment; andf. Provide the results of the control assessment to [Assignment: organization-defined individuals or roles].' WHERE [Requirement_Id] = 37612
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Employ independent assessors or assessment teams to conduct security control assessments. [WMATA System Implementation Statement]


', [Supplemental_Info]=N'<p><b> Independent Assessors</b></p>Employ independent assessors or assessment teams to conduct control assessments.' WHERE [Requirement_Id] = 37613
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Conduct announced and/or unannounced control assessments at least once prior to a system receiving authorization to move into a production environment, after a significant change, and annually thereafter for all systems in production, to include one or more of the following at the discretion of the AO: [WMATA System Implementation Statement]

<li>(1) Leverage current vulnerability scan results; [1: WMATA System Implementation Statement]</li>
<li>(2) Penetration testing in compliance with Control 3.2 Assessment, Authorization and Monitoring, Section 7, “CA-8 Penetration Testing”; [2: WMATA System Implementation Statement]</li>
<li>(3) In-depth user activity monitoring; [3: WMATA System Implementation Statement]</li>
<li>(4) Security instrumentation; [4: WMATA System Implementation Statement]</li>
<li>(5) Automated security test cases; [5: WMATA System Implementation Statement]</li>
<li>(6) Simulate malicious user activities and conduct testing; [6: WMATA System Implementation Statement]</li>
<li>(7) Insider threat assessment; [7: WMATA System Implementation Statement]</li>
<li>(8) Performance and load testing; and [8: WMATA System Implementation Statement]</li>
<li>(9) Data leakage or data loss assessment [9: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> The organization conducts risk analysis to support selection of an assessment target (e.g., the live system, an off-line replica or lab system). [OT Systems Only: WMATA System Implementation Statement]

Related Controls: PE-3, SI-2

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization conducts risk analysis to support the selection of an assessment target (e.g., the live system, an offline replica, or lab system). [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b> Specialized Assessments</b></p>Include as part of control assessments, [Assignment: organization-defined frequency], [Selection: announced; unannounced], [Selection (one or more): in-depth monitoring; security instrumentation; automated security test cases; vulnerability scanning; malicious user testing; insider threat assessment; performance and load testing; data leakage or data loss assessment; [Assignment: organization-defined other forms of assessment]].' WHERE [Requirement_Id] = 37614
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Approve and manage the exchange of information between systems using appropriate exchange agreements; and [a: WMATA System Implementation Statement]</li>
<li>b. Document, as part of each exchange agreement, the interface characteristics, security and privacy requirements, controls, and responsibilities for each system, and the impact level of the information communicated; and [b: WMATA System Implementation Statement]</li>
<li>c. Review and update the agreements annually. [c: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Organizations perform risk-benefit analysis to support determining whether an OT should be connected to other system(s). The authorizing official (AO) fully understands the organizational information security policies and procedures; the OT security policies and procedures; the risks to organizational operations and assets, individuals, other organizations, and the nation associated with the connection to other system(s); the individuals and organizations that operate and maintain the systems, including maintenance contractors or service providers; and the specific health, safety, and environmental risks associated with a particular interconnection. Connections from the OT environment to other security zones may cross the authorization boundary, such that two different authorizing officials may be required to approve the connection. Decisions to accept risk are documented.[OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-4, AC-20, CA-6, IA-3, IR-4, PL-2, PT-7, RA-3, SA-9, SC-7, SI-12
<li>d. Security Controls Enhancement(s): [d: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Organizations perform risk-benefit analysis to determine whether an OT should be connected to other systems. The authorizing official (AO) fully understands the organizational information security policies and procedures; the OT security policies and procedures; the risks to organizational operations and assets, individuals, other organizations, and the Nation associated with the connection to other systems; the individuals and organizations that operate and maintain the systems, including maintenance contractors or service providers; and the specific health, safety, and environmental risks associated with a particular interconnection. Connections from the OT environment to other security zones may cross the authorization boundary such that two different authorizing officials may be required to approve the connection. Decisions to accept risk are documented. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Information Exchange</b></p>a. Approve and manage the exchange of information between the system and other systems using [Selection (one or more): interconnection security agreements; information exchange security agreements; memoranda of understanding or agreement; service level agreements; user agreements; nondisclosure agreements; [Assignment: organization-defined type of agreement]];b. Document, as part of each exchange agreement, the interface characteristics, security and privacy requirements, controls, and responsibilities for each system, and the impact level of the information communicated; andc. Review and update the agreements [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37615
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N' 
Verify that individuals or systems transferring data between interconnecting systems have the requisite authorizations (i.e., write permissions or privileges) prior to accepting data. [WMATA System Implementation Statement]

Related Controls: AC-2, AC-3, AC-4

', [Supplemental_Info]=N'<p><b> Transfer Authorizations</b></p>Verify that individuals or systems transferring data between interconnecting systems have the requisite authorizations (i.e., write permissions or privileges) prior to accepting such data.' WHERE [Requirement_Id] = 37616
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Develop a plan of action and milestones for the system to document the planned remediation actions of the organization to correct weaknesses or deficiencies noted during the assessment of the controls and to reduce or eliminate known vulnerabilities in the system; and [a: WMATA System Implementation Statement]</li>
<li>b. Update existing plan of action and milestones monthly based on the findings from control assessments, independent audits or reviews, and continuous monitoring activities. [b: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> OT Discussion: Corrective actions identified in assessments may not be immediately actionable in an OT environment; therefore, short-term mitigations may be implemented to reduce risk as part of the gap closure plan or plan of action and milestones. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: CA-2, CA-7, PM-4, PM-7, RA-7, SI-2, SI-

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Corrective actions identified in assessments may not be immediately actionable in an OT environment. Therefore, short-term mitigations may be implemented to reduce risk as part of the gap closure plan or plan of action and milestones. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Plan of Action and Milestones</b></p>a. Develop a plan of action and milestones for the system to document the planned remediation actions of the organization to correct weaknesses or deficiencies noted during the assessment of the controls and to reduce or eliminate known vulnerabilities in the system; andb. Update existing plan of action and milestones [Assignment: organization-defined frequency] based on the findings from control assessments, independent audits or reviews, and continuous monitoring activities.' WHERE [Requirement_Id] = 37617
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Assign a senior official as the authorizing official for the system; [a: WMATA System Implementation Statement]</li>
<li>b. Assign a senior official as the authorizing official for common controls available for inheritance by organizational systems; [b: WMATA System Implementation Statement]</li>
<li>c. Ensure that the authorizing official for the system, before commencing operations: [c: WMATA System Implementation Statement]</li>
<li>i) Accepts the use of common controls inherited by the system; and [c.i: WMATA System Implementation Statement]</li>
<li>ii) Authorizes the system to operate; [c.ii: WMATA System Implementation Statement]</li>
<li>d. Ensure that the authorizing official for common controls authorizes the use of those controls for inheritance by organizational systems; [d: WMATA System Implementation Statement]</li>
<li>e. Update the authorizations annually. [e: WMATA System Implementation Statement]</li>

Related Controls: CA-2, CA-3, CA-7, PM-9, PM-10, RA-3, SA-10, SI-12

', [Supplemental_Info]=N'<p><b>Authorization</b></p>a. Assign a senior official as the authorizing official for the system;b. Assign a senior official as the authorizing official for common controls available for inheritance by organizational systems;c. Ensure that the authorizing official for the system, before commencing operations:     1. Accepts the use of common controls inherited by the system; and     2. Authorizes the system to operate;d. Ensure that the authorizing official for common controls authorizes the use of those controls for inheritance by organizational systems;e. Update the authorizations [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37618
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Develop a system-level continuous monitoring strategy and implement continuous monitoring in accordance with the organization-level continuous monitoring strategy that includes: [WMATA System Implementation Statement]

<li>a. Establishing the following system-level metrics to be monitored: [a: WMATA System Implementation Statement]</li>
<li>i) Tier 1 (Organization-wide Metrics): [a.i: WMATA System Implementation Statement]</li>
<li>(1) Number of Assessed and Authorized systems per year; [a.i.1: WMATA System Implementation Statement]</li>
<li>(2) Number of authorized and unauthorized information systems components per quarter (includes systems with End of Life (EOL) components); [a.i.2: WMATA System Implementation Statement]</li>
<li>(3) Number of software vulnerabilities by mission/business function, categorized by Critical, High, Moderate and Low impact/risk per quarter; [a.i.3: WMATA System Implementation Statement]</li>
<li>(4) Number of POAMs open and closed per quarter; [a.i.4: WMATA System Implementation Statement]</li>
<li>(5) Rate of compliance to the annual cybersecurity awareness and training certification; and [a.i.5: WMATA System Implementation Statement]</li>
<li>(6) Rate of noncompliance to the annual cybersecurity awareness and training certification. [a.i.6: WMATA System Implementation Statement]</li>
<li>ii) Tier 2 (Mission/Business Process Metrics): [a.ii: WMATA System Implementation Statement]</li>
<li>(1) Number of authorized and unauthorized information systems components per month (includes systems with EOL components); [a.ii.1: WMATA System Implementation Statement]</li>
<li>(2) Number of software vulnerabilities by mission/business function, categorized by Critical, High, Moderate and Low impact/risk per month; [a.ii.2: WMATA System Implementation Statement]</li>
<li>(3) Number of POAMs open and closed per month; and [a.ii.3: WMATA System Implementation Statement]</li>
<li>(4) Number of ISCM security control failures per month, [a.ii.4: WMATA System Implementation Statement]</li>
<li>iii) Tier 3 (System-level Metrics): [a.iii: WMATA System Implementation Statement]</li>
<li>(1) Number of software vulnerabilities by system; [a.iii.1: WMATA System Implementation Statement]</li>
<li>(2) Number of authorized and unauthorized information systems components per month (includes systems with EOL components); [a.iii.2: WMATA System Implementation Statement]</li>
<li>(3) Number of software vulnerabilities by mission/business function, categorized by Critical, High, Moderate and Low impact/risk per month; [a.iii.3: WMATA System Implementation Statement]</li>
<li>(4) Number of POAMs open and closed per month; and [a.iii.4: WMATA System Implementation Statement]</li>
<li>(5) Number of ISCM security control failures based on the review monthly. [a.iii.5: WMATA System Implementation Statement]</li>
<li>b. Assess and monitor control effectiveness in alignment with the frequencies defined in the continuous monitoring strategy; [b: WMATA System Implementation Statement]</li>
<li>c. Ongoing control assessments in accordance with the continuous monitoring strategy; [c: WMATA System Implementation Statement]</li>
<li>d. Ongoing monitoring of system and organization-defined metrics in accordance with the continuous monitoring strategy; [d: WMATA System Implementation Statement]</li>
<li>e. Correlation and analysis of information generated by control assessments and monitoring; [e: WMATA System Implementation Statement]</li>
<li>f. Response actions to address results of the analysis of control assessment and monitoring information; and [f: WMATA System Implementation Statement]</li>
<li>g. Reporting the security and privacy status of the system to the AO annually. [g: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Continuous monitoring programs for OT are designed, documented, and implemented with input from OT personnel. The organization ensures that continuous monitoring does not interfere with OT functions. The individual/group designing and conducting the continuous monitoring for the OT systems implements monitoring consistent with the organizational information security policies and procedures, the OT security policies and procedures, and the specific health, safety, and environmental risks associated with a particular facility and/or process. Continuous monitoring can be automated or manual at a frequency sufficient to support risk-based decisions. For example, the organization may determine for lower-risk, isolated systems to monitor event logs manually on a specified frequency less often than for higher-risk, networked systems. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-2, AC-6, AC-17, AT-4, AU-6, CA-2, CA-5, CA-6, CM-3, CM-4, CM-6, CM-11, IA-5, IR-5, MA-2, MA-3, MA-4, PE-3, PE-6, PE-14, PE-16, PL-2, PM-4, PM-6, PM-9, PM-10, PM-12, PM-14, PM-23, PM-28, PM-31, PS-7, PT-7, RA-3, RA-5, RA-7, SA-8, SA-9, SA-11, SC-5, SC-7, SC-18, SI-3, SI-4, SI-12, SR-6
<li>h. Security Controls Enhancement(s): [h: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Continuous monitoring programs for OT are designed, documented, and implemented with input from OT personnel. The organization ensures that continuous monitoring does not interfere with OT functions. The individual or group designing and conducting the continuous monitoring for the OT systems implements a monitoring program that is consistent with the organizational information security policies and procedures, the OT security policies and procedures, and the specific health, safety, and environmental risks associated with a particular facility and/or process. Continuous monitoring can be automated or manual at a frequency sufficient to support risk-based decisions. For example, the organization may monitor event logs manually on a specified frequency less often for lower-risk, isolated systems than for higher-risk, networked systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Continuous Monitoring</b></p>Develop a system-level continuous monitoring strategy and implement continuous monitoring in accordance with the organization-level continuous monitoring strategy that includes:a. Establishing the following system-level metrics to be monitored: [Assignment: organization-defined system-level metrics];b. Establishing [Assignment: organization-defined frequencies] for monitoring and [Assignment: organization-defined frequencies] for assessment of control effectiveness;c. Ongoing control assessments in accordance with the continuous monitoring strategy;d. Ongoing monitoring of system and organization-defined metrics in accordance with the continuous monitoring strategy;e. Correlation and analysis of information generated by control assessments and monitoring;f. Response actions to address results of the analysis of control assessment and monitoring information; andg. Reporting the security and privacy status of the system to [Assignment: organization-defined personnel or roles] [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37619
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Employ independent assessors or assessment teams to monitor the controls in the system on an ongoing basis. [WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b> Independent Assessment</b></p>Employ independent assessors or assessment teams to monitor the controls in the system on an ongoing basis.' WHERE [Requirement_Id] = 37620
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Ensure risk monitoring is an integral part of the continuous monitoring strategy that includes the following: [WMATA System Implementation Statement]

<li>(1) Effectiveness monitoring; [1: WMATA System Implementation Statement]</li>
<li>(2) Compliance monitoring; and [2: WMATA System Implementation Statement]</li>
<li>(3) Change monitoring. [3: WMATA System Implementation Statement]</li>

', [Supplemental_Info]=N'<p><b> Risk Monitoring</b></p>Ensure risk monitoring is an integral part of the continuous monitoring strategy that includes the following:(a) Effectiveness monitoring;(b) Compliance monitoring; and(c) Change monitoring.' WHERE [Requirement_Id] = 37621
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Conduct penetration testing annually or as prescribed and approved by the AO in the SSP. Penetration testing shall be performed at the discretion of DMCS on new products and services before deployment within WMATA’s computing environment or prior to hosting WMATA data on the system/service. [a: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Penetration testing is used with care on OT networks to ensure that OT functions are not adversely impacted by the testing process. In general, OT systems are highly sensitive to timing constraints and have limited resources. Example compensating controls include employing a replicated, virtualized, or simulated system to conduct penetration testing. Production OT may need to be taken off-line before testing can be conducted. If OT systems are taken off-line for testing, tests are scheduled to occur during planned OT outages whenever possible. If penetration testing is performed on non-OT networks, extra care is taken to ensure that tests do not propagate into the OT network. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: RA-5, RA-10, SA-11, SR-5, SR-6
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Penetration testing is used with care on OT networks to ensure that OT functions are not adversely impacted by the testing process. In general, OT systems are highly sensitive to timing constraints and have limited resources. Example compensating controls include employing a replicated, virtualized, or simulated system to conduct penetration testing. Production OT may need to be taken offline before testing can be conducted. If OT systems are taken offline for testing, tests are scheduled to occur during planned OT outages whenever possible. If penetration testing is performed on non-OT networks, extra care is taken to ensure that tests do not propagate into the OT network. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Penetration Testing</b></p>Conduct penetration testing [Assignment: organization-defined frequency] on [Assignment: organization-defined systems or system components].' WHERE [Requirement_Id] = 37622
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Employ an independent penetration testing agent or team to perform penetration testing on the system or system components. [WMATA System Implementation Statement]

Related Controls: CA-2

<b><u>NIST 800-82 Rev 3:</u></b>
Rationale for removing CA-8 (1) from HIGH baseline: Specific expertise is necessary to conduct effective penetration testing on OT systems, and it may not be feasible to identify independent personnel with the appropriate skillset or knowledge to perform penetration testing on an OT 
environment. While an independent penetration test agent or team is recommended, it may not be feasible for all high-impact OT systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Penetration Testing | Independent Penetration Testing Agent or Team</b></p>Employ an independent penetration testing agent or team to perform penetration testing on the system or system components.' WHERE [Requirement_Id] = 37623
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Authorize internal connections of system components or classes of components that are a part of the same system to include, but not limited to, mobile devices (e.g., smartphones and tablets), notebook and desktop computers, printers, copiers, facsimile machines, scanners, sensors, and servers; [a: WMATA System Implementation Statement]</li>
<li>b. Document, for each internal connection, the interface characteristics, security and privacy requirements, and the nature of the information communicated; [b: WMATA System Implementation Statement]</li>
<li>c. Terminate internal system connections when no longer needed or as documented in an approved change order as a part of the configuration change control process, in accordance with Control 3.4 Configuration Management; and [c: WMATA System Implementation Statement]</li>
<li>d. Review annually the continued need for each internal connection. [d: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Organizations perform risk-benefit analysis to determine whether OT equipment should be connected to other internal system components, then document these connections. The AO fully understands the potential risks associated with approving individual connections or approving a class of components to be connected. As an example, the AO may broadly approve the connection of any sensors limited to 4 to 20 milliamp (mA) communication, while other connection types (e.g., serial or ethernet) require individual approval. Decisions to accept risk are documented. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-3, AC-4, AC-18, AC-19, CM-2, IA-3, SC-7, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Organizations perform risk-benefit analysis to determine whether OT equipment should be connected to other internal system components and then document those connections. The AO fully understands the potential risks associated with approving individual connections or approving a class of components to be connected. For example, the AO may broadly approve the connection of any sensors limited to 4 to 20 milliamp (mA) communication, while other connection types (e.g., serial or Ethernet) require individual approval. Decisions to accept risk are documented. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Internal System Connections</b></p>a. Authorize internal connections of [Assignment: organization-defined system components or classes of components] to the system;b. Document, for each internal connection, the interface characteristics, security and privacy requirements, and the nature of the information communicated;c. Terminate internal system connections after [Assignment: organization-defined conditions]; andd. Review [Assignment: organization-defined frequency] the continued need for each internal connection.' WHERE [Requirement_Id] = 37624
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement]

Related Controls: PM-9, PS-8, SA-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Configuration Management Policy and Procedures</b></p>a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:     1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] configuration management policy that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and          (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and     2. Procedures to facilitate the implementation of the configuration management policy and the associated configuration management controls;b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the configuration management policy and procedures; andc. Review and update the current configuration management:     1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and     2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37625
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Use software and associated documentation in accordance with contract agreements and copyright laws. [a: WMATA System Implementation Statement]</li>
<li>b. Track the use of software and associated documentation protected by quantity licenses to control copying and distribution; and [b: WMATA System Implementation Statement]</li>
<li>c. Control and document the use of peer-to-peer file sharing technology to ensure that this capability is not used for the unauthorized distribution, display, performance, or reproduction of copyrighted work. [c: WMATA System Implementation Statement]</li>

Related Controls: AC-17, AU-6, CM-7, CM-8, PM-30, SC-7
', [Supplemental_Info]=N'<p><b>Software Usage Restrictions</b></p>a. Use software and associated documentation in accordance with contract agreements and copyright laws;b. Track the use of software and associated documentation protected by quantity licenses to control copying and distribution; andc. Control and document the use of peer-to-peer file sharing technology to ensure that this capability is not used for the unauthorized distribution, display, performance, or reproduction of copyrighted work.' WHERE [Requirement_Id] = 37626
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Users without authorized privileges shall not be permitted to install software on corporate systems; [a: WMATA System Implementation Statement]</li>
<li>b. Enforce software installation policies using procedural and automated methods. [b: WMATA System Implementation Statement]</li>
<li>c. Monitor policy compliance on a continual basis. [c: WMATA System Implementation Statement]</li>

Related Controls: AC-3, AU-6, CM-2, CM-3, CM-5, CM-6, CM-7, CM-8, PL-4, SI-4, SI-7
', [Supplemental_Info]=N'<p><b>User-installed Software</b></p>a. Establish [Assignment: organization-defined policies] governing the installation of software by users;b. Enforce software installation policies through the following methods: [Assignment: organization-defined methods]; andc. Monitor policy compliance [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37627
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Identify and document the location(s) of information and the specific system components on which the information is processed and stored. [a: WMATA System Implementation Statement]</li>
<li>b. Identify and document the users who have access to the system and system components where the information is processed and stored; and [b: WMATA System Implementation Statement]</li>
<li>c. Document changes to the location (i.e., system or system components) where the information is processed and stored. [c: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Organizations identify specific information types or components to track where information is being processed and stored. Information to consider in the OT environment may include shared account passwords; PLC backup files; detailed network drawings; and risk assessments that identify specific threats with the environment. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-2, AC-3, AC-4, AC-6, CM-8, PM-5, RA-2, SA-4, SA-8, SA-17, SC-4, SC-28, SI-4, SI-7
<li>d. Security Controls Enhancement(s): [d: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Organizations identify specific information types or components to track where information is being processed and stored. Information to consider in the OT environment may include shared account passwords, PLC backup files, detailed network drawings, and risk 
assessments that identify specific threats with the environment. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Information Location</b></p>a. Identify and document the location of [Assignment: organization-defined information] and the specific system components on which the information is processed and stored;b. Identify and document the users who have access to the system and system components where the information is processed and stored; andc. Document changes to the location (i.e., system or system components) where the information is processed and stored.' WHERE [Requirement_Id] = 37628
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Use automated tools to identify information by information type (including sensitive information) on system components to ensure controls are in place to protect organizational information and individual privacy. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Automated Tools to Support Information Location</b></p>Use automated tools to identify [Assignment: organization-defined information by information type] on [Assignment: organization-defined system components] to ensure controls are in place to protect organizational information and individual privacy.' WHERE [Requirement_Id] = 37629
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'
<li>a. Develop, document, and maintain, under configuration control, a current baseline configuration of the system; and [a: WMATA System Implementation Statement]</li>
<li>b. Review and update the baseline configuration of the system: [b: WMATA System Implementation Statement]</li>
<li>i) At least annually; [b.i: WMATA System Implementation Statement]</li>
<li>ii) When required due to a significant change; and [b.ii: WMATA System Implementation Statement]</li>
<li>iii) When system components are installed or upgraded. [b.iii: WMATA System Implementation Statement]</li>
Related Controls: AC-19, AU-6, CA-9, CM-1, CM-3, CM-5, CM-6, CM-8, CM-9, CP-9, CP-10, CP-12, MA-2, PL-8, PM-5, SA-8, SA-10, SA-15, SC-18
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>



', [Supplemental_Info]=N'<p><b>Baseline Configuration</b></p>a. Develop, document, and maintain under configuration control, a current baseline configuration of the system; andb. Review and update the baseline configuration of the system:     1. [Assignment: organization-defined frequency];     2. When required due to [Assignment: organization-defined circumstances]; and     3. When system components are installed or upgraded.' WHERE [Requirement_Id] = 37630
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Maintain the currency, completeness, accuracy, and availability of the baseline configuration of the system using configuration management tools; hardware, software, firmware inventory tools, and network management tools. Automated tools shall be employed consistent with Control 3.4 Configuration Management, Section 8, (c), (ii), “CM-8 (2) Automated Maintenance”, to ensure that system component inventory and baseline configurations are aligned. Automated tools shall be employed at the organization level, mission and business process level, and system level on workstations, servers, notebook computers, network components, and mobile devices. [WMATA System Implementation Statement]

Note: See Control 3.4 Configuration Management, Section 8, “CM-8 System Component Inventory” for a list of required system component inventory requirements, and Control 3.4 Configuration Management, Section 6, “CM-6 Configuration Settings” for secure baseline configuration requirements. [Note: WMATA System Implementation Statement]

Related Controls: CM-7, CM-6, CM-8, IA-3, RA-5
', [Supplemental_Info]=N'<p><b> Automation Support for Accuracy and Currency</b></p>Maintain the currency, completeness, accuracy, and availability of the baseline configuration of the system using [Assignment: organization-defined automated mechanisms].' WHERE [Requirement_Id] = 37631
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Retain no less than two previous versions of baseline configurations of the system to support rollback. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Retention of Previous Configurations</b></p>Retain [Assignment: organization-defined number] of previous versions of baseline configurations of the system to support rollback.' WHERE [Requirement_Id] = 37632
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Issue mobile systems or devices to include laptops, tablets, and mobile phones with sanitized hard drives, limited applications, and more stringent configuration settings to include all applicable security checklist settings set forth in Control 3.4 Configuration Management, Section 6, “CM-6 Configuration Settings”, to individuals traveling to locations that the organization deems to be of significant risk to include international travel; and [1: WMATA System Implementation Statement]</li>

<li>(2) Apply the following controls to the systems or components when the individuals return from travel and examine the mobile systems or devices for signs of tampering. If any tampering is suspected, provide the mobile system or device to DMCS for forensic analysis. [2: WMATA System Implementation Statement]</li>

<li>(3) All mobile systems or devices shall be purged and reimaged upon return to WMATA. All mobile systems or devices shall be replaced if necessary. If replaced, the original mobile system or device will be disposed of in accordance with WMATA policy. [3: WMATA System Implementation Statement]</li>

Related Controls: CM-6, MP-4, MP-5
', [Supplemental_Info]=N'<p><b> Configure Systems and Components for High-risk Areas</b></p>(a) Issue [Assignment: organization-defined systems or system components] with [Assignment: organization-defined configurations] to individuals traveling to locations that the organization deems to be of significant risk; and(b) Apply the following controls to the systems or components when the individuals return from travel: [Assignment: organization-defined controls].' WHERE [Requirement_Id] = 37633
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Determine and document the types of changes to the system that are configuration- controlled; [a: WMATA System Implementation Statement]</li>
<li>b. Review proposed configuration-controlled changes to the system and approve or disapprove such changes with explicit consideration for security and privacy impact analyses; [b: WMATA System Implementation Statement]</li>
<li>c. Document configuration change decisions associated with the system; [c: WMATA System Implementation Statement]</li>
<li>d. Establish an enterprise CCB to review, approve, and coordinate all changes to WMATA systems, CIs, or system components; [d: WMATA System Implementation Statement]</li>
<li>e. Require all configuration changes to have business owner approval prior to the CCB; [e: WMATA System Implementation Statement]</li>
<li>f. Implement approved configuration-controlled changes to the system by non-developers; [f: WMATA System Implementation Statement]</li>
<li>g. Prior to implementation of approved configuration control changes pertaining to source code changes or software upgrades, create a backup of software and components based on a last known working configuration to ensure rollback capability prior to the implementation. [g: WMATA System Implementation Statement]</li>
<li>h. Prior to CCB approval configuration control changes, such as source code changes or software upgrades, shall be validated against a trusted source to ensure the integrity of the code or installation files. [h: WMATA System Implementation Statement]</li>
<li>i. Retain records of configuration-controlled changes to the system for at least five years or longer if specified by regulation, law, or external compliance mandate; [i: WMATA System Implementation Statement]</li>
<li>j. Monitor and review activities associated with configuration-controlled changes to the system; and [j: WMATA System Implementation Statement]</li>
<li>k. Coordinate and provide oversight for configuration change control activities through the CCB that convenes weekly. Normal changes shall be presented to the TWG prior to being presented at the CCB. [k: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Configuration change control procedures should align with the organization’s management of change practices. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: CA-7, CM-2, CM-4, CM-5, CM-6, CM-9, CM-11, IA-3, MA-2, PE-16, PT-6, RA-8, SA-8, SA-10, SC-28, SI-2, SI-3, SI-4, SI-7, SI-10, SR-11
<li>l. Security Controls Enhancement(s): [l: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Configuration change control procedures should align with the organization’s management of change practices. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Configuration Change Control</b></p>a. Determine and document the types of changes to the system that are configuration-controlled;b. Review proposed configuration-controlled changes to the system and approve or disapprove such changes with explicit consideration for security and privacy impact analyses;c. Document configuration change decisions associated with the system;d. Implement approved configuration-controlled changes to the system;e. Retain records of configuration-controlled changes to the system for [Assignment: organization-defined time period];f. Monitor and review activities associated with configuration-controlled changes to the system; andg. Coordinate and provide oversight for configuration change control activities through [Assignment: organization-defined configuration change control element] that convenes [Selection (one or more): [Assignment: organization-defined frequency]; when [Assignment: organization-defined configuration change conditions]].' WHERE [Requirement_Id] = 37634
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Use automated mechanisms to: [WMATA System Implementation Statement]

<li>(1) Document proposed changes to the system; [1: WMATA System Implementation Statement]</li>
<li>(2) Notify both the CCB and TWG of proposed changes to the system and request change approval as required; [2: WMATA System Implementation Statement]</li>
<li>(3) Highlight proposed changes to the system that have not been approved or disapproved within one month; [3: WMATA System Implementation Statement]</li>
<li>(4) Prohibit changes to the system until designated approvals are received; [4: WMATA System Implementation Statement]</li>
<li>(5) Document all changes to the system; and [5: WMATA System Implementation Statement]</li>
<li>(6) Notify the required stakeholders when approved changes to the system are completed. [6: WMATA System Implementation Statement]</li>
' WHERE [Requirement_Id] = 37635
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Test, validate, and document changes to the system before finalizing the implementation of the changes. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Testing, Validation, and Documentation of Changes</b></p>Test, validate, and document changes to the system before finalizing the implementation of the changes.' WHERE [Requirement_Id] = 37636
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Require the CISO and the Privacy Officer, or designees, to be members of the DM CCB. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Security and Privacy Representatives</b></p>Require [Assignment: organization-defined security and privacy representatives] to be members of the [Assignment: organization-defined configuration change control element].' WHERE [Requirement_Id] = 37637
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Ensure that cryptographic mechanisms used to provide the following controls are under configuration management: [WMATA System Implementation Statement]

<li>(1) Cryptographic Module Authentication [1: WMATA System Implementation Statement]</li>
<li>(2) Cryptographic Key Establishment and Management [2: WMATA System Implementation Statement]</li>
<li>(3) Cryptographic Protection [3: WMATA System Implementation Statement]</li>
<li>(4) Public Key Certificates [4: WMATA System Implementation Statement]</li>

Related Controls: SC-12
', [Supplemental_Info]=N'<p><b> Cryptography Management</b></p>Ensure that cryptographic mechanisms used to provide the following controls are under configuration management: [Assignment: organization-defined controls].' WHERE [Requirement_Id] = 37638
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Review changes to the system [Assignment: organization-defined frequency] or when [Assignment: organization-defined circumstances] to determine whether unauthorized changes have occurred.  [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> The organization takes into consideration OT-specific requirements when determining frequency and/or circumstances for reviewing system changes. As an example, safety instrumented systems may be justified for review of system changes on a predetermined frequency to ensure that no inadvertent changes have been made to the logic solver portion of a safety instrumented function. [OT Systems Only: WMATA System Implementation Statement]
	
Related Controls: AU-6, AU-7, CM-3

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization considers OT-specific requirements when determining the frequency and/or circumstances for reviewing system changes. For example, safety instrumented systems may be justified for the review of system changes on a predetermined frequency to ensure that no inadvertent changes have been made to the logic solver portion of a safety instrumented function. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Configuration Change Control | Review System Changes</b></p>Review changes to the system [Assignment: organization-defined frequency] or when [Assignment: organization-defined circumstances] to determine whether unauthorized changes have occurred.' WHERE [Requirement_Id] = 37639
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Prevent or restrict changes to the configuration of the system under the following circumstances: [Assignment: organization-defined circumstances]. [WMATA System Implementation Statement]
	
<b><u>OT Systems Only:</u></b> The organization prevents or restricts configuration changes based on a risk determination that the system should not be modified without additional permission. For example, some PLCs have physical key switches that are used to place the PLC in a mode that allows for programming changes. Physical key switches can restrict configuration changes so that physical access is required to make a modification to the system. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization prevents or restricts configuration changes based on a risk determination that the system should not be modified without additional permission. For example, some PLCs have physical key switches that are used to place the PLC in a mode that allows for programming changes. Physical key switches can restrict configuration changes so that physical access is required to make a modification to the system. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Configuration Change Control | Prevent or Restrict Configuration Changes</b></p>Prevent or restrict changes to the configuration of the system under the following circumstances: [Assignment: organization-defined circumstances].' WHERE [Requirement_Id] = 37640
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Analyze changes to the system to determine potential security and privacy impacts prior to change implementation. [a: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> The organization considers OT safety and security interdependencies. OT security and safety personnel are included in change process management if the change to the system may have an impact on safety or security. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: CA-7, CM-3, CM-8, CM-9, MA-2, RA-3, RA-5, RA-8, SA-5, SA-8, SA-10, SI-2
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization considers OT safety and security interdependencies. OT security and safety personnel are included in change process management if the change to the system may impact safety or security. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Impact Analyses</b></p>Analyze changes to the system to determine potential security and privacy impacts prior to change implementation.' WHERE [Requirement_Id] = 37641
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Analyze changes to the system in a separate test environment before implementation in an operational environment, looking for security and privacy impacts due to flaws,weaknesses, incompatibility, or intentional malice. [WMATA System Implementation Statement]

Related Controls: SA-11, SC-7
', [Supplemental_Info]=N'<p><b> Separate Test Environments</b></p>Analyze changes to the system in a separate test environment before implementation in an operational environment, looking for security and privacy impacts due to flaws, weaknesses, incompatibility, or intentional malice.' WHERE [Requirement_Id] = 37642
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'After system changes, verify that the impacted controls are implemented correctly, operating as intended, and producing the desired outcome regarding meeting the security and privacy requirements for the system. [WMATA System Implementation Statement]

Related Controls: SA-11, SC-3, SI-6
', [Supplemental_Info]=N'<p><b> Verification of Controls</b></p>After system changes, verify that the impacted controls are implemented correctly, operating as intended, and producing the desired outcome with regard to meeting the security and privacy requirements for the system.' WHERE [Requirement_Id] = 37643
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Define, document, approve, and enforce physical and logical access restrictions associated with changes to the system. [a: WMATA System Implementation Statement]</li>
<li>b. Restrict access for Developers to production application objects, elements, and data. [b: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Some OT devices allow for the configuration and use of mode change switches. Where available, these should be used to prevent unauthorized changes. As an example, many PLCs have key switches that allow the device to be placed in a programming mode or a running mode. Those PLCs should be placed in a running or remote mode to prevent unauthorized programming changes, and the key should be removed from the key switch and managed appropriately. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-3, AC-5, AC-6, CM-9, PE-3, SC-28, SI-2, SI-10
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Some OT devices allow for the configuration and use of mode change switches. Where available, these should be used to prevent unauthorized changes. For example, many PLCs have key switches that allow the device to be placed in a programming mode or a running 
<li>mode. Those PLCs should be placed in a running or remote mode to prevent unauthorized programming changes, and the key should be removed from the key switch and managed appropriately. [NIST 800-82 Rev 3: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Access Restrictions for Change</b></p>Define, document, approve, and enforce physical and logical access restrictions associated with changes to the system.' WHERE [Requirement_Id] = 37644
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Enforce access restrictions using DMCS-approved automated mechanisms; and [1: WMATA System Implementation Statement]</li>
<li>(2) Automatically generate audit records of the enforcement actions. [2: WMATA System Implementation Statement]</li>

Related Controls: AU-2, AU-6, AU-7, AU-12, CM-6, CM-11, SI-12
', [Supplemental_Info]=N'<p><b> Automated Access Enforcement and Audit Records</b></p>(a) Enforce access restrictions using [Assignment: organization-defined automated mechanisms]; and(b) Automatically generate audit records of the enforcement actions.' WHERE [Requirement_Id] = 37645
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Establish and document configuration settings for components employed within the system that reflect the most restrictive mode consistent with operational requirements using applicable Security Technical Implementation Guides (STIG) and the Center for Internet Security (CIS) Benchmarks designated and approved by DMCS, which results in approved security checklists. Applicable settings shall take precedence over other policy configuration settings unless otherwise approved by the Authorizing Officer (AO). [a: WMATA System Implementation Statement]</li>
<li>b. Implement the configuration settings based on the approved security checklist; [b: WMATA System Implementation Statement]</li>
<li>c. Identify, document, and receive approval from the AO for any deviations from established configuration settings. Temporary deviation requests shall be documented in a POA&M for continuous monitoring, tracking, and remediation, and specify any system component(s) and operational requirements that prevent implementation of the security setting(s); and [c: WMATA System Implementation Statement]</li>
<li>d. Monitor and control changes to the configuration settings in accordance with organizational policies and procedures. [d: WMATA System Implementation Statement]</li>
<li>e. All WMATA systems and devices shall have approved baselines in accordance with the configuration settings established in Control 3.4 Configuration Management, Section 6, “CM- 6 Configuration Settings”. [e: WMATA System Implementation Statement]</li>
Related Controls: AC-3, AC-19, AU-2, AU-6, CA-9, CM-2, CM-3, CM-5, CM-6, CM-7, CM-11, CP-7, CP-9, CP-10, IA-3, IA-5, PL-8, PL-9, RA-5, SA-4, SA-5, SA-8, SA-9, SC-18, SC-28, SI-2, SI-4, SI-6
<li>f. Security Controls Enhancement(s): [f: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Configuration Settings</b></p>a. Establish and document configuration settings for components employed within the system that reflect the most restrictive mode consistent with operational requirements using [Assignment: organization-defined common secure configurations];b. Implement the configuration settings;c. Identify, document, and approve any deviations from established configuration settings for [Assignment: organization-defined system components] based on [Assignment: organization-defined operational requirements]; andd. Monitor and control changes to the configuration settings in accordance with organizational policies and procedures.' WHERE [Requirement_Id] = 37646
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Manage, apply, and verify configuration settings for system components using DMCS approved automated mechanisms. [WMATA System Implementation Statement]</li>

Related Controls: CA-7
', [Supplemental_Info]=N'<p><b> Automated Management, Application, and Verification</b></p>Manage, apply, and verify configuration settings for [Assignment: organization-defined system components] using [Assignment: organization-defined automated mechanisms].' WHERE [Requirement_Id] = 37647
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Take the following actions in response to unauthorized changes to configuration settings: [1: WMATA System Implementation Statement]</li>
<li>(a) Alert designated personnel to restore authorized configuration settings or halt affected system processing. These requirements shall be documented in the SSP. [1.a: WMATA System Implementation Statement]</li>
<li>(b) If system processing is halted, execute the Information System Contingency Plan (ISCP)/Disaster Recovery Plan (DRP). [1.b: WMATA System Implementation Statement]</li>

Related Controls: IR-4, IR-6, SI-7
', [Supplemental_Info]=N'<p><b> Respond to Unauthorized Changes</b></p>Take the following actions in response to unauthorized changes to [Assignment: organization-defined configuration settings]: [Assignment: organization-defined actions].' WHERE [Requirement_Id] = 37648
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Configure the system to provide only mission essential capabilities consistent with the business mission or operations; and [a: WMATA System Implementation Statement]</li>
<li>b. Prohibit or restrict the use of the disallowed, unnecessary and nonsecure functions, ports, protocols, software, and/or services published in the PPSM to prevent unauthorized connection of components, transfer of information, and tunneling. [b: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> The organization implements least functionality by allowing only specified functions, protocols, and/or services required for OT operations. For non-routable protocols such as serial communications, interrupts could be disabled or set points could be made read-only except for privileged users to limit functionality. Ports are part of the address space in network protocols and are often associated with specific protocols or functions. For routable protocols, ports can be disabled on many networking devices to limit functionality to the minimum required for operation. [OT Systems Only: WMATA System Implementation Statement] 
Related Controls: AC-3, AC-4, CM-2, CM-5, CM-6, CM-11, RA-5, SA-4, SA-5, SA-8, SA-9, SA-15, SC-2, SC-3, SC-7, SI-4
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization implements least functionality by allowing only the specified functions, protocols, and/or services required for OT operations. For non-routable protocols, such as serial communications, interrupts could be disabled or set points could be made readonly except for privileged users to limit functionality. Ports are part of the address space in network protocols and are often associated with specific protocols or functions. For routable protocols, ports can be disabled on many networking devices to limit functionality to the minimum required for operation. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Least Functionality</b></p>a. Configure the system to provide only [Assignment: organization-defined mission essential capabilities]; andb. Prohibit or restrict the use of the following functions, ports, protocols, software, and/or services: [Assignment: organization-defined prohibited or restricted functions, system ports, protocols, software, and/or services].' WHERE [Requirement_Id] = 37649
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Review the system at least annually, as a part of system changes, or when a significant change occurs to identify unnecessary and/or nonsecure functions, ports, protocols, software, and services; and [1: WMATA System Implementation Statement]</li>
<li>(2) Disable or remove disallowed, unnecessary and nonsecure functions, ports, protocols, software, and services within the system. [2: WMATA System Implementation Statement]</li>

Related Controls: AC-18
', [Supplemental_Info]=N'<p><b> Periodic Review</b></p>(a) Review the system [Assignment: organization-defined frequency] to identify unnecessary and/or nonsecure functions, ports, protocols, software, and services; and(b) Disable or remove [Assignment: organization-defined functions, ports, protocols, software, and services within the system deemed to be unnecessary and/or nonsecure].' WHERE [Requirement_Id] = 37650
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Where feasible, limit component functionality to a single function per component. [1: WMATA System Implementation Statement]</li>
<li>(2) Remove unused or unnecessary software and disable unused or unnecessary physical and logical ports and protocols to prevent unauthorized connection of components, transfer of information, and tunneling. [2: WMATA System Implementation Statement]</li>
<li>(3) Employ network scanning tools, intrusion detection and prevention systems, and end-point protection technologies, such as firewalls and host-based intrusion detection systems, to identify and prevent the use of prohibited functions, protocols, ports, and services. [3: WMATA System Implementation Statement]</li>

Related Controls: CM-8, PL-4, PL-9, PM-5, PS-6
', [Supplemental_Info]=N'<p><b> Prevent Program Execution</b></p>Prevent program execution in accordance with [Selection (one or more): [Assignment: organization-defined policies, rules of behavior, and/or access agreements regarding software program usage and restrictions]; rules authorizing the terms and conditions of software program usage].' WHERE [Requirement_Id] = 37651
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) The operation of software, as designated on the APL, which are authorized to execute on the system; [1: WMATA System Implementation Statement]</li>
<li>(2) Employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs on the system; and [2: WMATA System Implementation Statement]</li>
<li>(3) Review and update the APL annually. [3: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> The set of applications that run in OT is relatively static, making allowlisting practical. DHS recommends using application allowlisting for OT equipment. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: CM-2, CM-6, CM-8, CM-10, PL-9, PM-5, SA-10, SI-7

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The set of applications that run in OT is relatively static, making allowlisting practical. DHS recommends using application allowlisting for OT equipment. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Least Functionality | Authorized Software</b></p>Unauthorized software programs can be limited to specific versions or from a specific source. The concept of prohibiting the execution of unauthorized software may also be applied to user actions, system ports and protocols, IP addresses/ranges, websites, and MAC addresses.' WHERE [Requirement_Id] = 37652
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Develop and document an inventory of system components within the enterprise CMDB that: [a: WMATA System Implementation Statement]</li>
<li>i) Accurately reflects the system; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Includes all components within the system; [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Does not include duplicate accounting of components or components assigned to any other system; [a.iii: WMATA System Implementation Statement]</li>
<li>iv) Is at the level of granularity deemed necessary for tracking and reporting; and [a.iv: WMATA System Implementation Statement]</li>
<li>v) Includes the following information to achieve system component accountability:  [a.v: WMATA System Implementation Statement]</li>
<li>(1) Hardware, software, and firmware inventories: [a.v.1: WMATA System Implementation Statement]</li>
<li>(a) Hardware inventory includes specifications (manufacturer, type, model, serial number, physical location).  [a.v.1.a: WMATA System Implementation Statement]</li>
<li>(b) Software inventory includes software name, software license information (minimally inclusive of expiration date, license type, number of licenses), serial numbers (if applicable), information system/component owner, IP/hostname, software products and version numbers for all components, application URLs (for scanning), responsible point of contact and role/organizational unit per Control 3.4 Configuration Management, Section 8, (c), (iv), “CM-8 (4) Accountability Information”, and for a networked component/device, the machine name (including DNS name, Netbios Name), network address (IPv4 & IPv6).  [a.v.1.b: WMATA System Implementation Statement]</li>
<li>(c) Firmware inventory includes vendor name, product, and version. [a.v.1.c: WMATA System Implementation Statement]</li>
<li>b. Review and update the system component inventory quarterly. Monitoring for any changes to the system component inventory and monitoring for the addition of unauthorized system components may be accomplished on an ongoing basis or by the periodic scanning of systems for that purpose. Automated mechanisms may also be used to prevent the connection of unauthorized components as noted in Control 3.4 Configuration Management Section 8, (c), (iii), “CM-8 (3) Automated Unauthorized Component Detection”. [b: WMATA System Implementation Statement]</li>
<li>c. Systems or system components that do not have or cannot support agents (e.g., IoT devices or sensors) shall be isolated, sandboxed, or segmented by placing them in separate domains or subnets, or by quarantining such components. [c: WMATA System Implementation Statement]</li>
Related Controls: CM-2, CM-7, CM-8, CM-9, CM-10, CM-11, CP-2, CP-9, MA-2, MA-6, PL-9, PM-5, SA-4, SA-5, SI-2, SR-4
<li>d. Security Controls Enhancement(s): [d: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>System Component Inventory</b></p>a. Develop and document an inventory of system components that:     1. Accurately reflects the system;     2. Includes all components within the system;     3. Does not include duplicate accounting of components or components assigned to any other system;     4. Is at the level of granularity deemed necessary for tracking and reporting; and     5. Includes the following information to achieve system component accountability: [Assignment: organization-defined information deemed      necessary to achieve effective system component accountability]; andb. Review and update the system component inventory [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37653
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Update the inventory of system components as part of component installations, removals, and system updates. [1: WMATA System Implementation Statement]</li>

Related Controls: PM-16
', [Supplemental_Info]=N'<p><b> Updates During Installation and Removal</b></p>Update the inventory of system components as part of component installations, removals, and system updates.' WHERE [Requirement_Id] = 37654
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Maintain the currency, completeness, accuracy, and availability of the inventory of system components using automated mechanisms to maintain the accuracy of the CMDB. [1: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b> Automated Maintenance</b></p>Maintain the currency, completeness, accuracy, and availability of the inventory of system components using [Assignment: organization-defined automated mechanisms].' WHERE [Requirement_Id] = 37655
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Immediately (real-time) remediate any detected unauthorized hardware, software, and firmware components within the system using automated mechanisms such as rogue system or device detectors, and Network Access Control (NAC); [1: WMATA System Implementation Statement]</li>
<li>(2) Take the following actions when unauthorized components are detected: quarantine the components; notify required stakeholders. [2: WMATA System Implementation Statement]</li>
<li>(3) Authorized components that fail to meet vulnerability management requirements shall be placed into a remediation zone until requirements are met. [3: WMATA System Implementation Statement]</li>

Related Controls: AC-19, CA-7, RA-5, SC-3, SC-39, SI-3, SI-4, SI-7
', [Supplemental_Info]=N'<p><b> Automated Unauthorized Component Detection</b></p>(a) Detect the presence of unauthorized hardware, software, and firmware components within the system using [Assignment: organization-defined automated mechanisms] [Assignment: organization-defined frequency]; and(b) Take the following actions when unauthorized components are detected: [Selection (one or more): disable network access by such components; isolate the components; notify [Assignment: organization-defined personnel or roles]].' WHERE [Requirement_Id] = 37656
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Include in the system component inventory information, a means for identifying by name and position the System Owner accountable for administering those components and by name and/or position the System Administrator responsible for administering those components. [1: WMATA System Implementation Statement]</li>

Related Controls: AC-3
', [Supplemental_Info]=N'<p><b> Accountability Information</b></p>Include in the system component inventory information, a means for identifying by [Selection (one or more): name; position; role], individuals responsible and accountable for administering those components.' WHERE [Requirement_Id] = 37657
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Develop, document, and implement a configuration management plan for the system that: [a: WMATA System Implementation Statement]</li>
<li>i) Addresses roles, responsibilities, and configuration management processes and procedures; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Establishes a process for identifying configuration items throughout the system development life cycle and for managing the configuration of the configuration items; [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Defines the configuration items for the system and places the configuration items under configuration management; [a.iii: WMATA System Implementation Statement]</li>
<li>iv) Is reviewed and approved by the business owner(s), system owner, and CCB; [a.iv: WMATA System Implementation Statement]</li>
<li>v) Protects the configuration management plan from unauthorized disclosure and modification; and [a.v: WMATA System Implementation Statement]</li>
<li>vi) Identifies a process for configuration monitoring. [a.vi: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Configuration management plans apply to internal and external (e.g., contractors, integrators) resources responsible for device configuration. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: CM-2, CM-3, CM-4, CM-5, CM-8, PL-2, RA-8, SA-10, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Configuration management plans apply to the internal and external (e.g., contractors, integrators) resources responsible for device configuration. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Configuration Management Plan</b></p>Develop, document, and implement a configuration management plan for the system that:a. Addresses roles, responsibilities, and configuration management processes and procedures;b. Establishes a process for identifying configuration items throughout the system development life cycle and for managing the configuration of the configuration items;c. Defines the configuration items for the system and places the configuration items under configuration management;d. Is reviewed and approved by [Assignment: organization-defined personnel or roles]; ande. Protects the configuration management plan from unauthorized disclosure and modification.' WHERE [Requirement_Id] = 37658
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement]

Related Controls: PM-9, PS-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Contingency Planning Policy and Procedures</b></p>a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:     1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] contingency planning policy that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and          (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and     2. Procedures to facilitate the implementation of the contingency planning policy and the associated contingency planning controls;b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the contingency planning policy and procedures; andc. Review and update the current contingency planning:     1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and     2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37659
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Provide for the recovery and reconstitution of the system to a known state within the time period specified in the CP consistent with recovery time and recovery point objectives in the BIA after a disruption, compromise, or failure. [a: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Reconstitution of the OT includes consideration whether system state variables should be restored to initial values or values before disruption (e.g., are valves restored to full open, full closed, or settings prior to disruption). Restoring system state variables may be disruptive to ongoing physical-processes (e.g., valves initially closed may adversely affect system cooling). [OT Systems Only: WMATA System Implementation Statement]
Related Controls: CP-2, CP-4, CP-6, CP-7, CP-9, IR-4, SA-8, SC-24, SI-13
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Reconstitution of the OT includes considering whether system state variables should be restored to initial values or the values before disruption (e.g., are valves restored to full open, full closed, or settings prior to disruption). Restoring system state variables may be disruptive to ongoing physical processes (e.g., valves initially closed may adversely affect system cooling). [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>System Recovery and Reconstitution</b></p>Provide for the recovery and reconstitution of the system to a known state within [Assignment: organization-defined time period consistent with recovery time and recovery point objectives] after a disruption, compromise, or failure.' WHERE [Requirement_Id] = 37660
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement transaction recovery for systems that are transaction-based to include database management systems (DBMS) and other transaction processing systems (e.g., systems that process financial transactions). When available, transaction rollback and journaling shall be implemented. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Transaction Recovery</b></p>Implement transaction recovery for systems that are transaction-based.' WHERE [Requirement_Id] = 37661
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Provide the capability to restore system components from configuration-controlled and integrity-protected information representing a known, operational state for the components within restoration time periods consistent with objectives specified in the CP and associated BIA. [WMATA System Implementation Statement]

Related Controls: CM-2, CM-6
', [Supplemental_Info]=N'<p><b> Restore Within Time Period</b></p>Provide the capability to restore system components within [Assignment: organization-defined restoration time periods] from configuration-controlled and integrity-protected information representing a known, operational state for the components.' WHERE [Requirement_Id] = 37662
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Protect system components used for recovery and reconstitution. [WMATA System Implementation Statement]

Related Controls: AC-3, AC-6, MP-2, MP-4, PE-3, PE-6

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Organizations should consider recovery and reconstitution timeframes when storing spare equipment, including environmental hazards that could damage the equipment. Storage locations and environments should be chosen appropriately for the type of backup equipment. [NIST 800-82 Rev 3_OT Discussion: WMATA System Implementation Statement]

Rationale for adding CP-10 (6) to MOD and HIGH baselines: OT system components stored without protection against environmental threats and unauthorized physical or logical access can be susceptible to compromise or damage. Certain system components may include embedded 
electronics that must be protected from environmental hazards. [NIST 800-82 Rev 3_Rationale: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>System Recovery and Reconstitution | Component Protection</b></p>Protect system components used for recovery and reconstitution.' WHERE [Requirement_Id] = 37663
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'When [Assignment: organization-defined conditions] are detected, enter a safe mode of operation with [Assignment: organization-defined restrictions of safe mode of operation]. [WMATA System Implementation Statement]
	
Related Controls: CM-2, SA-8, SC-24, SI-13, SI-17

<b><u>NIST 800-82 Rev 3:</u></b>
Rationale for adding CP-12 to LOW, MOD, and HIGH baselines: This control provides a framework for the organization to plan its policy and procedures for dealing with IT and OT conditions beyond its control in the environment of operations to minimize potential safety and environmental impacts. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Safe Mode</b></p>When [Assignment: organization-defined conditions] are detected, enter a safe mode of operation with [Assignment: organization-defined restrictions of safe mode of operation].' WHERE [Requirement_Id] = 37664
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Develop an ISCP for the system that: [a: WMATA System Implementation Statement]</li>
<li>i) Identifies essential mission and business functions and associated contingency requirements; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Provides recovery objectives, restoration priorities, and metrics; [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Addresses contingency roles, responsibilities, assigned individuals with contact information; [a.iii: WMATA System Implementation Statement]</li>
<li>iv) Addresses maintaining essential mission and business functions despite a system disruption, compromise, or failure; [a.iv: WMATA System Implementation Statement]</li>
<li>v) Addresses eventual, full system restoration without deterioration of the controls originally planned and implemented; [a.v: WMATA System Implementation Statement]</li>
<li>vi) Addresses the sharing of contingency information; and [a.vi: WMATA System Implementation Statement]</li>
<li>vii) Is reviewed and approved by the SO prior to submission to the AO for acceptance. [a.vii: WMATA System Implementation Statement]</li>
<li>b. Distribute copies of the ISCP to required stakeholders; [b: WMATA System Implementation Statement]</li>
<li>c. Coordinate contingency planning activities with incident handling activities; [c: WMATA System Implementation Statement]</li>
<li>d. Review the ISCP for the system annually; [d: WMATA System Implementation Statement]</li>
<li>e. Update the ISCP to address changes to the organization, system, or environment of operation and problems encountered during ISCP implementation, execution, or testing; [e: WMATA System Implementation Statement]</li>
<li>f. Communicate ISCP changes to required stakeholders; [f: WMATA System Implementation Statement]</li>
<li>g. Incorporate lessons learned from ISCP testing, training, or actual contingency activities into contingency testing and training; and [g: WMATA System Implementation Statement]</li>
<li>h. Protect the ISCP from unauthorized disclosure and modification. [h: WMATA System Implementation Statement]</li>
<li>i. Disaster Recovery Plan (DRP) </li>
Establish a DRP which applies to major, usually physical disruptions to service that deny access to the primary facility infrastructure for an extended period. A DRP is an information system-focused plan designed to restore operability of the target system, application, or computer facility infrastructure at an alternate site after an emergency. The DRP must provide for full restoration at the primary facility. The DRP may be supported by multiple information system contingency plans to address recovery of impacted individual systems once the alternate facility has been established. A DRP may support a Business Continuity Plan (BCP) or Continuity of Operation Plan (COOP) by recovering supporting systems for mission/business processes or mission essential functions at an alternate location. The DRP only addresses information system disruptions that require relocation of operations. [i: WMATA System Implementation Statement]
<b><u>OT Systems Only:</u></b> The organization defines contingency plans for categories of disruptions or failures. In the case of a contingency, the OT equipment executes preprogrammed functions such as alert the operator of the failure and then do nothing, alert the operator and then safely shut down the industrial process, or alert the operator and then maintain the last operational setting prior to failure. Contingency plans for widespread disruption may involve specialized organizations (e.g., FEMA, emergency services, regulatory authorities). [OT Systems Only: WMATA System Implementation Statement]
Related Controls: CP-3, CP-4, CP-6, CP-7, CP-8, CP-9, CP-10, IR-4, IR-6, IR-8, IR-9, MA-6, MP-2, MP-4, MP-5, PL-2, PM-8, PM-11, SA-15, SC-7, SC-23, SI-12
<li>j. Security Controls Enhancement(s): [j: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization defines contingency plans for categories of disruptions or failures. In the case of a contingency, the OT equipment executes preprogrammed functions, such as alerting the operator of the failure and then doing nothing, alerting the operator and then safely shutting down the industrial process, or alerting the operator and then maintaining the last operational setting prior to failure. Contingency plans for widespread disruption may involve specialized organizations (e.g., FEMA, emergency services, regulatory authorities). [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Contingency Plan</b></p>a. Develop a contingency plan for the system that:     1. Identifies essential mission and business functions and associated contingency requirements;     2. Provides recovery objectives, restoration priorities, and metrics;     3. Addresses contingency roles, responsibilities, assigned individuals with contact information;     4. Addresses maintaining essential mission and business functions despite a system disruption, compromise, or failure;     5. Addresses eventual, full system restoration without deterioration of the controls originally planned and implemented;     6. Addresses the sharing of contingency information; and     7. Is reviewed and approved by [Assignment: organization-defined personnel or roles];b. Distribute copies of the contingency plan to [Assignment: organization-defined key contingency personnel (identified by name and/or by role) and organizational elements];c. Coordinate contingency planning activities with incident handling activities;d. Review the contingency plan for the system [Assignment: organization-defined frequency];e. Update the contingency plan to address changes to the organization, system, or environment of operation and problems encountered during contingency plan implementation, execution, or testing;f. Communicate contingency plan changes to [Assignment: organization-defined key contingency personnel (identified by name and/or by role) and organizational elements];g. Incorporate lessons learned from contingency plan testing, training, or actual contingency activities into contingency testing and training; andh. Protect the contingency plan from unauthorized disclosure and modification.' WHERE [Requirement_Id] = 37665
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Coordinate ISCP development and testing with organizational elements responsible for related plans ensuring that other contingency, continuity, disaster recovery, crisis communication, incident response, and occupant emergency plans are aligned and coordinated with CPs. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Coordinate with Related Plans</b></p>Coordinate contingency plan development with organizational elements responsible for related plans.' WHERE [Requirement_Id] = 37666
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Conduct capacity planning so that necessary capacity for information processing, telecommunications, and environmental support exists during contingency operations. [WMATA System Implementation Statement]

Related Controls: PE-11, PE-12, PE-13, PE-14, PE-18, SC-5
', [Supplemental_Info]=N'<p><b> Capacity Planning</b></p>Conduct capacity planning so that necessary capacity for information processing, telecommunications, and environmental support exists during contingency operations.' WHERE [Requirement_Id] = 37667
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Plan for the resumption of all mission and business functions within the RTO and RPO as specified as part of the business continuity planning and documented in the system’s Business Impact Analysis (BIA). [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Resume Mission and Business Functions</b></p>Plan for the resumption of [Selection: all; essential] mission and business functions within [Assignment: organization-defined time period] of contingency plan activation.' WHERE [Requirement_Id] = 37668
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Plan for the continuance of all mission and business functions with minimal or no loss of operational continuity and sustain that continuity until full system restoration at primary processing and/or storage sites as part of business continuity planning as documented in the system BIA. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Continue Mission and Business Functions</b></p>Plan for the continuance of [Selection: all; essential] mission and business functions with minimal or no loss of operational continuity and sustains that continuity until full system restoration at primary processing and/or storage sites.' WHERE [Requirement_Id] = 37669
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Identify critical system assets supporting all mission and business functions as part of criticality analysis and/or business continuity planning as documented in the system BIA. [WMATA System Implementation Statement]

Related Controls: CM-8, RA-9
', [Supplemental_Info]=N'<p><b> Identify Critical Assets</b></p>Identify critical system assets supporting [Selection: all; essential] mission and business functions.' WHERE [Requirement_Id] = 37670
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Provide contingency training to system users consistent with assigned roles and responsibilities: [a: WMATA System Implementation Statement]</li>
<li>i) Within 30 days of assuming a contingency role or responsibility; [a.i: WMATA System Implementation Statement]</li>
<li>ii) When required by system changes; and [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Annually thereafter; and [a.iii: WMATA System Implementation Statement]</li>
<li>b. Review and update contingency training content annually and following events to include, but not limited to, ISCP testing or an actual contingency (lessons learned), assessment or audit findings, security or privacy incidents, or changes in laws, directives, regulations, policies, standards, and guidelines. [b: WMATA System Implementation Statement]</li>
Related Controls: AT-2, AT-3, AT-4, CP-2, CP-4, CP-8, IR-2, IR-4, IR-9
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Contingency Training</b></p>a. Provide contingency training to system users consistent with assigned roles and responsibilities:     1. Within [Assignment: organization-defined time period] of assuming a contingency role or responsibility;     2. When required by system changes; and     3. [Assignment: organization-defined frequency] thereafter; andb. Review and update contingency training content [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37671
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Incorporate simulated events into contingency training to facilitate effective response by personnel in crisis situations. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Simulated Events</b></p>Incorporate simulated events into contingency training to facilitate effective response by personnel in crisis situations.' WHERE [Requirement_Id] = 37672
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Test the ISCP for the system annually using the following tests to determine the effectiveness of the plan and the readiness to execute the plan: [a: WMATA System Implementation Statement]</li>
<li>i) Full exercise consisting of a test of all instructions within an ISCP every two years; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Tabletops can be conducted in lieu of the full exercise in the off years; [a.ii: WMATA System Implementation Statement]</li>
<li>b. Review the ISCP test results; and [b: WMATA System Implementation Statement]</li>
<li>c. Initiate corrective actions, if needed. [c: WMATA System Implementation Statement]</li>
Related Controls: AT-3, CP-2, CP-3, CP-8, CP-9, IR-3, IR-4, PL-2, PM-14, SR-2
<li>d. Security Controls Enhancement(s): [d: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Contingency Plan Testing</b></p>a. Test the contingency plan for the system [Assignment: organization-defined frequency] using the following tests to determine the effectiveness of the plan and the readiness to execute the plan: [Assignment: organization-defined tests].b. Review the contingency plan test results; andc. Initiate corrective actions, if needed.' WHERE [Requirement_Id] = 37673
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Coordinate ISCP testing with organizational elements responsible for related plans. [WMATA System Implementation Statement]

Related Controls: IR-8, PM-8
', [Supplemental_Info]=N'<p><b> Coordinate with Related Plans</b></p>Coordinate contingency plan testing with organizational elements responsible for related plans.' WHERE [Requirement_Id] = 37674
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Test the ISCP at the alternate processing site: [WMATA System Implementation Statement]

<li>(1) To familiarize contingency personnel with the facility and available resources; and [1: WMATA System Implementation Statement]</li>
<li>(2) To evaluate the capabilities of the alternate processing site to support contingency operations. [2: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Not all systems will have alternate processing sites as discussed in CP-7. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: CP-7

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Not all systems will have alternate processing sites, as discussed in CP-7. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Contingency Plan Testing | Alternate Processing Site</b></p>Test the contingency plan at the alternate processing site:(a) To familiarize contingency personnel with the facility and available resources; and(b) To evaluate the capabilities of the alternate processing site to support contingency operations.' WHERE [Requirement_Id] = 37675
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Establish an alternate storage site, maximizing geographical separation within the region, from the primary site. including necessary agreements to permit the storage and retrieval of system backup information; and [a: WMATA System Implementation Statement]</li>
<li>b. Ensure that the alternate storage site provides controls equivalent to that of the primary site. [b: WMATA System Implementation Statement]</li>
<li>c. Monthly, create (and transmit to the alternate storage site) full backups and maintain those backups for at least six months, and do not overwrite, purge, or delete the backups within the six-month period. The backups must be maintained and logically isolated from each other, from differential backups, and from primary and alternate data centers. [c: WMATA System Implementation Statement]</li>
<li>c.1). Daily, create (and transmit to the alternate storage site) a differential backup and maintain those backups for 30 days. [c.1: WMATA System Implementation Statement]</li>
<li>d. All backups shall be encrypted using cryptographic modules validated under the Cryptographic Modula Validation Program (CMVP), configured in "FIPS Mode," and using tion algorithms approved by the AO. [d: WMATA System Implementation Statement]</li>
Related Controls: CP-2, CP-7, CP-8, CP-9, CP-10, MP-4, MP-5, PE-3, SI-13
<li>e. Security Controls Enhancement(s): [e: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Alternate Storage Site</b></p>a. Establish an alternate storage site, including necessary agreements to permit the storage and retrieval of system backup information; andb. Ensure that the alternate storage site provides controls equivalent to that of the primary site.' WHERE [Requirement_Id] = 37676
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Identify an alternate storage site that is sufficiently separated from the primary storage site to reduce susceptibility to the same threats. [WMATA System Implementation Statement]

Related Controls: RA-3
', [Supplemental_Info]=N'<p><b> Separation from Primary Site</b></p>Identify an alternate storage site that is sufficiently separated from the primary storage site to reduce susceptibility to the same threats.' WHERE [Requirement_Id] = 37677
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Configure the alternate storage site to facilitate recovery operations in accordance with recovery time and recovery point objectives. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Recovery Time and Recovery Point Objectives</b></p>Configure the alternate storage site to facilitate recovery operations in accordance with recovery time and recovery point objectives.' WHERE [Requirement_Id] = 37678
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Identify potential accessibility problems to the alternate storage site in the event of an area-wide disruption or disaster and outline explicit mitigation actions. [WMATA System Implementation Statement]

Related Controls: RA-3
', [Supplemental_Info]=N'<p><b> Accessibility</b></p>Identify potential accessibility problems to the alternate storage site in the event of an area-wide disruption or disaster and outline explicit mitigation actions.' WHERE [Requirement_Id] = 37679
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Establish an alternate processing site, including necessary agreements to permit the transfer and resumption of system operations for essential mission and business functions within the time period specified in the CP consistent with recovery time and recovery point objectives specified in the BIA when the primary processing capabilities are unavailable. Minimally, recovery time shall meet the following standards; [a: WMATA System Implementation Statement]</li>
<li>i) High: Instantaneous to one minute; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Moderate: Not to exceed 24 hours; [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Low: Not to exceed two weeks (applications with no redundant capability at one of the primary data centers) [a.iii: WMATA System Implementation Statement]</li>
<li>b. Make available at the alternate processing site, the equipment, and supplies (including hardware) required to transfer and resume operations or put contracts in place to support delivery to the site within the organization-defined time period for transfer and resumption; and [b: WMATA System Implementation Statement]</li>
<li>c. Provide controls at the alternate processing site that are equivalent to those at the primary site.  [c: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Many site-wide supervisory or optimization servers (i.e., Level 3 and above of the Purdue model ) can be supported from an alternative processing site. It is likely not feasible for control systems or field devices, such as sensors or final elements (i.e., Level 1 and 0 of the Purdue model), to be made available from an alternative processing site. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: CP-2, CP-6, CP-8, CP-9, CP-10, MA-6, PE-3, PE-11, PE-12, PE-17, SI-13
<li>d. Security Controls Enhancement(s): [d: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Many site-wide supervisory or optimization servers (i.e., Level 3 and above of the Purdue model) can be supported from an alternate processing site. It is likely not feasible for control systems or field devices, such as sensors or final elements (i.e., Level 1 and 0 of the 
Purdue model), to be made available from an alternate processing site. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Alternate Processing Site</b></p>a. Establish an alternate processing site, including necessary agreements to permit the transfer and resumption of [Assignment: organization-defined system operations] for essential mission and business functions within [Assignment: organization-defined time period consistent with recovery time and recovery point objectives] when the primary processing capabilities are unavailable;b. Make available at the alternate processing site, the equipment and supplies required to transfer and resume operations or put contracts in place to support delivery to the site within the organization-defined time period for transfer and resumption; andc. Provide controls at the alternate processing site that are equivalent to those at the primary site.' WHERE [Requirement_Id] = 37680
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Identify an alternate processing site that is sufficiently separated from the primary processing site to reduce susceptibility to the same threats. [WMATA System Implementation Statement]

Related Controls: RA-3
', [Supplemental_Info]=N'<p><b> Separation from Primary Site</b></p>Identify an alternate processing site that is sufficiently separated from the primary processing site to reduce susceptibility to the same threats.' WHERE [Requirement_Id] = 37681
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Identify potential accessibility problems to alternate processing sites in the event of an area-wide disruption or disaster and outlines explicit mitigation actions. [WMATA System Implementation Statement]

Related Controls: RA-3
', [Supplemental_Info]=N'<p><b> Accessibility</b></p>Identify potential accessibility problems to alternate processing sites in the event of an area-wide disruption or disaster and outlines explicit mitigation actions.' WHERE [Requirement_Id] = 37682
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Develop alternate processing site agreements that contain priority-of-service provisions in accordance with availability requirements (including recovery time objectives). [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Priority of Service</b></p>Develop alternate processing site agreements that contain priority-of-service provisions in accordance with availability requirements (including recovery time objectives).' WHERE [Requirement_Id] = 37683
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Prepare the alternate processing site so that the site can serve as the operational site supporting essential mission and business functions. [WMATA System Implementation Statement]

Related Controls: CM-2, CM-6, CP-4
', [Supplemental_Info]=N'<p><b> Preparation for Use</b></p>Prepare the alternate processing site so that the site can serve as the operational site supporting essential mission and business functions.' WHERE [Requirement_Id] = 37684
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Establish alternate telecommunications services, including necessary agreements to permit the resumption of system operations for essential mission and business functions within the time period specified in the CP consistent with the BIA when the primary telecommunications capabilities are unavailable at either the primary or alternate processing or storage sites. [a: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Quality of service factors for OT include latency and throughput. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: CP-2, CP-6, CP-7, SC-7
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Quality of service factors for OT include latency and throughput. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Telecommunications Services</b></p>Establish alternate telecommunications services, including necessary agreements to permit the resumption of [Assignment: organization-defined system operations] for essential mission and business functions within [Assignment: organization-defined time period] when the primary telecommunications capabilities are unavailable at either the primary or alternate processing or storage sites.' WHERE [Requirement_Id] = 37685
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Develop primary and alternate telecommunications service agreements that contain priority-of-service provisions in accordance with availability requirements (including recovery time objectives); and [1: WMATA System Implementation Statement]</li>
<li>(2) Request Telecommunications Service Priority for all telecommunications services used for national security emergency preparedness if the primary and/or alternate telecommunications services are provided by a common carrier. [2: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Testing for reliability and integrity increases confidence that the system can be restored after an incident and minimizes the impact associated with downtime and outages. The ability to test backups is often dependent on the resources needed to appropriately represent the environment, such as the availability of spare devices and testing equipment. Testing backup and restoration on OT is often limited to systems with redundancy or spare equipment. In certain cases, sampling will be limited to those redundant systems. Compensating controls may include alternative methods for testing backups, such as hash or checksum validations. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Telecommunications Services | Priority of Service Provisions</b></p>(a) Develop primary and alternate telecommunications service agreements that contain priority-of-service provisions in accordance with availability requirements (including recovery time objectives); and(b) Request Telecommunications Service Priority for all telecommunications services used for national security emergency preparedness if the primary and/or alternate telecommunications services are provided by a common carrier.' WHERE [Requirement_Id] = 37686
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Obtain alternate telecommunications services to reduce the likelihood of sharing a single point of failure with primary telecommunications services. [WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Testing for reliability and integrity increases confidence that the system can be restored after an incident and minimizes the impact associated with downtime and outages. The ability to test backups is often dependent on the resources needed to appropriately represent the environment, such as the availability of spare devices and testing equipment. Testing backup and restoration on OT is often limited to systems with redundancy or spare equipment. In certain cases, sampling will be limited to those redundant systems. Compensating controls may include alternative methods for testing backups, such as hash or checksum validations. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Telecommunications Services | Single Points of Failure</b></p>Obtain alternate telecommunications services to reduce the likelihood of sharing a single point of failure with primary telecommunications services.' WHERE [Requirement_Id] = 37687
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Obtain alternate telecommunications services from providers that are separated from primary service providers to reduce susceptibility to the same threats. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Separation of Primary and Alternate Providers</b></p>Obtain alternate telecommunications services from providers that are separated from primary service providers to reduce susceptibility to the same threats.' WHERE [Requirement_Id] = 37688
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Require primary and alternate telecommunications service providers to have ISCPs; [1: WMATA System Implementation Statement]</li>
<li>(2) Review provider ISCPS to ensure that the plans meet organizational contingency requirements; and [2: WMATA System Implementation Statement]</li>
<li>(3) Obtain evidence of contingency testing and training by providers annually. [3: WMATA System Implementation Statement]</li>

Related Controls: CP-3, CP-4
', [Supplemental_Info]=N'<p><b> Provider Contingency Plan</b></p>(a) Require primary and alternate telecommunications service providers to have contingency plans;(b) Review provider contingency plans to ensure that the plans meet organizational contingency requirements; and(c) Obtain evidence of contingency testing and training by providers [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37689
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Conduct backups of user-level information contained in systems and system components based on the RPO, and leveraging a differential backup approach; [a: WMATA System Implementation Statement]</li>
<li>b. Conduct backups of system-level information contained in systems and system components based on the RPO, and leveraging a differential backup approach; [b: WMATA System Implementation Statement]</li>
<li>c. Conduct full backups of user-level information, system-level information, and system documentation, including security- and privacy-related documentation, at least weekly; and [c: WMATA System Implementation Statement]</li>
<li>d. Protect the confidentiality, integrity, and availability of backup information. [d: WMATA System Implementation Statement]</li>
Related Controls: CP-2, CP-6, CP-10, MP-4, MP-5, SC-8, SC-12, SC-13, SI-4, SI-13
<li>e. Security Controls Enhancement(s): [e: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>System Backup</b></p>a. Conduct backups of user-level information contained in [Assignment: organization-defined system components] [Assignment: organization-defined frequency consistent with recovery time and recovery point objectives];b. Conduct backups of system-level information contained in the system [Assignment: organization-defined frequency consistent with recovery time and recovery point objectives];c. Conduct backups of system documentation, including security- and privacy-related documentation [Assignment: organization-defined frequency consistent with recovery time and recovery point objectives]; andd. Protect the confidentiality, integrity, and availability of backup information.' WHERE [Requirement_Id] = 37690
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Test backup information at least monthly to verify media reliability and information integrity. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Testing for reliability and integrity increases confidence that the system can be restored after an incident, and minimizes the impact associated with downtime and outages. The ability to test backups is often dependent on resources, such as the availability of spare devices and testing equipment, needed to appropriately represent the environment. Testing backup and restoration on OT is often limited to systems with redundancy or spare equipment; in certain cases, sampling will be limited to those redundant systems. Compensating controls may include alternative methods for testing backups such as hash or checksum validations. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: CP-4
', [Supplemental_Info]=N'<p><b> Testing for Reliability and Integrity</b></p>Test backup information [Assignment: organization-defined frequency] to verify media reliability and information integrity.' WHERE [Requirement_Id] = 37691
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Use a sample of backup information in the restoration of selected system functions as part of ISCP testing, and at least monthly. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Testing for reliability and integrity increases confidence that the system can be restored after an incident, and minimizes the impact associated with downtime and outages. The ability to test backups is often dependent on resources, such as the availability of spare devices and testing equipment, needed to appropriately represent the environment. Testing backup and restoration on OT is often limited to systems with redundancy or spare equipment; in certain cases, sampling will be limited to those redundant systems. Compensating controls may include alternative methods for testing backups such as hash or checksum validations. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: CP-4
', [Supplemental_Info]=N'<p><b> Test Restoration Using Sampling</b></p>Use a sample of backup information in the restoration of selected system functions as part of contingency plan testing.' WHERE [Requirement_Id] = 37692
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Store backup copies of critical system software and other security-related information in a separate facility or in a fire rated container that is not collocated with the operational system. [WMATA System Implementation Statement]

Related Controls: CM-2, CM-6, CM-8
', [Supplemental_Info]=N'<p><b> Separate Storage for Critical Information</b></p>Store backup copies of [Assignment: organization-defined critical system software and other security-related information] in a separate facility or in a fire rated container that is not collocated with the operational system.' WHERE [Requirement_Id] = 37693
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Transfer system backup information to the alternate storage site based on standards established in CP-6, “Alternate Storage Site”. System backup information can be transferred to alternate storage sites either electronically or by the physical shipment of storage media. [WMATA System Implementation Statement]

Related Controls: CP-6, CP-7, MP-3, MP-4, MP-5
', [Supplemental_Info]=N'<p><b> Transfer to Alternate Storage Site</b></p>Transfer system backup information to the alternate storage site [Assignment: organization-defined time period and transfer rate consistent with the recovery time and recovery point objectives].' WHERE [Requirement_Id] = 37694
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement cryptographic mechanisms to prevent unauthorized disclosure and modification of system backup information in storage at both primary and alternate locations. [WMATA System Implementation Statement]

Related Controls: SC-12, SC-13, SC-28
', [Supplemental_Info]=N'<p><b> Cryptographic Protection</b></p>Implement cryptographic mechanisms to prevent unauthorized disclosure and modification of [Assignment: organization-defined backup information].' WHERE [Requirement_Id] = 37695
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement]

Related Controls: AC-1, PM-9, PS-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Identification and Authentication Policy and Procedures</b></p>a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:     1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] identification and authentication policy that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and          (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and     2. Procedures to facilitate the implementation of the identification and authentication policy and the associated identification and authentication      controls;b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the identification and authentication policy and procedures; andc. Review and update the current identification and authentication:     1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and     2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37696
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Require users to re-authenticate when roles, authenticators, or credentials change as a result of a security incident, when security categories of systems change, and after 15 minutes of a fixed time period (e.g., if a session has been idle). [WMATA System Implementation Statement]

Related Controls: AC-3, AC-11, IA-2, IA-3, IA-4, IA-8
', [Supplemental_Info]=N'<p><b>Re-authentication</b></p>Require users to re-authenticate when [Assignment: organization-defined circumstances or situations requiring re-authentication].' WHERE [Requirement_Id] = 37697
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Identity-proof users that require accounts for logical access to systems based on appropriate identity assurance level requirements as specified in applicable standards and guidelines; [a: WMATA System Implementation Statement]</li>
<li>b. Resolve user identities to a unique individual; and [b: WMATA System Implementation Statement]</li>
<li>c. Collect, validate, and verify identity evidence. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Identity proofing is likely performed by different departments within the organization. It is encouraged to leverage existing organization systems (i.e., HR or IT processes) to perform this control. Security Controls Enhancement(s): [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-5, IA-1, IA-2, IA-3, IA-4, IA-5, IA-6, IA-8
<li>d. Security Controls Enhancement(s): [d: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Identity proofing is likely performed by different departments within the organization. Existing organizational systems (e.g., HR or IT processes) should be leveraged to perform this control. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Identity Proofing</b></p>a. Identity proof users that require accounts for logical access to systems based on appropriate identity assurance level requirements as specified in applicable standards and guidelines;b. Resolve user identities to a unique individual; andc. Collect, validate, and verify identity evidence.' WHERE [Requirement_Id] = 37698
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Require that the registration process to receive an account for logical access includes supervisor or sponsor authorization. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Maintenance, Engineering, or third-party organizations may require OT access in order to support operations. The organization should determine the AO for proving identity prior to allowing access to the OT environment. Consider obtaining supervisor or sponsor authorization, where the sponsor may be someone within operations.  [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
Control Enhancement: (1) OT Discussion: Maintenance, engineering, or third-party organizations may require OT access in order to support operations. The organization should determine the AO for proving identity prior to allowing access to the OT environment. Consider obtaining supervisor or sponsor authorization, where the sponsor may be someone within operations. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Identity Proofing | Supervisor Authorization</b></p>Require that the registration process to receive an account for logical access includes supervisor or sponsor authorization.' WHERE [Requirement_Id] = 37699
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Require evidence of individual identification be presented to the RA. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> If the organization already performs these controls, it is recommended to leverage existing organizational processes. For example, Human Resources may provide a system for tracking identity evidence. OT does not need to develop an independent system for achieving this control. Rather, it is advised to leverage the existing processes developed by other departments within the organization. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: If the organization already performs these controls, existing organizational processes should be leveraged. For example, HR may provide a system for tracking identity evidence. OT does not need to develop an independent system for achieving this control. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Identity Proofing | Identity Evidence</b></p>Require evidence of individual identification be presented to the registration authority.' WHERE [Requirement_Id] = 37700
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Require that the presented identity evidence be validated and verified in accordance with acceptable identity source documents defined in Homeland Security Presidential Directive (HSPD) 12. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> If the organization already performs these controls, it is recommended to leverage existing organizational processes. For example, Human Resources may provide a system for tracking identity evidence. OT does not need to develop an independent system for achieving this control. Rather, it is advised to leverage the existing processes developed by other departments within the organization. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: If the organization already performs these controls, existing organizational processes should be leveraged. For example, HR may provide a system for tracking identity evidence. OT does not need to develop an independent system for achieving this control. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Identity Proofing | Identity Evidence Validation and Verification</b></p>Require that the presented identity evidence be validated and verified through [Assignment: organizational defined methods of validation and verification].' WHERE [Requirement_Id] = 37701
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Require that the validation and verification of identity evidence be conducted in person before a designated RA. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> If the organization already performs these controls, it is recommended to leverage existing organizational processes. For example, Human Resources may provide a system for tracking identity evidence. OT does not need to develop an independent system for achieving this control. Rather, it is advised to leverage the existing processes developed by other departments within the organization. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: If the organization already performs these controls, existing organizational processes should be leveraged. For example, HR may provide a system for tracking identity evidence. OT does not need to develop an independent system for achieving this control. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Identity Proofing | In-person Validation and Verification</b></p>Require that the validation and verification of identity evidence be conducted in person before a designated registration authority.' WHERE [Requirement_Id] = 37702
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Require that a [Selection: registration code; notice of proofing] be delivered through an out-of-band channel to verify the users address (physical or digital) of record. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> If the organization already performs these controls, it is recommended to leverage existing organizational processes. For example, Human Resources may provide a system for tracking identity evidence. OT does not need to develop an independent system for achieving this control. Rather, it is advised to leverage the existing processes developed by other departments within the organization. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: IA-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: If the organization already performs these controls, existing organizational processes should be leveraged. For example, HR may provide a system for tracking identity evidence. OT does not need to develop an independent system for achieving this control. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Identity Proofing | Address Confirmation</b></p>Require that a [Selection: registration code; notice of proofing] be delivered through an out-of-band channel to verify the users address (physical or digital) of record.' WHERE [Requirement_Id] = 37703
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Uniquely identify and authenticate users and associate that unique identification with processes acting on behalf of those users leveraging an authorized Identity and Access Management (IAM) solution. [a: WMATA System Implementation Statement]</li>
Related Controls: AC-2, AC-3, AC-4, AC-14, AC-17, AC-18, AU-1, AU-6, IA-4, IA-5, IA-8, MA-4, MA-5, PE-2, PL-4, SA-4, SA-8
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: When shared accounts are required, compensating controls include providing increased physical security, personnel security, and auditing measures. For certain OT, the capability for immediate operator interaction is critical. Local emergency actions for OT are not hampered by identification or authentication requirements. Access to these systems may be restricted by appropriate physical controls. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Identification and Authentication  (Organizational Users)</b></p>Uniquely identify and authenticate organizational users and associate that unique identification with processes acting on behalf of those users.' WHERE [Requirement_Id] = 37704
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement multi-factor authentication for access to privileged accounts. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> As a compensating control, physical access restrictions may sufficiently represent one authentication factor, provided the system is not remotely accessible. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-5, AC-6

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: As a compensating control, physical access restrictions may sufficiently represent one authentication factor, provided that the system is not remotely accessible. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Identification and Authentication (organizational Users) | Multi-factor Authentication to Privileged Accounts</b></p>Implement multi-factor authentication for access to privileged accounts.' WHERE [Requirement_Id] = 37705
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Accept and electronically verify Personal Identity Verification-compliant credentials. [WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The acceptance of PIV credentials is only required for federal organizations, as defined by OMB Memorandum M-19-17 [OMB-M1917]. Nonfederal organizations should refer to IA-2 (1) (2) for guidance on multi-factor authentication credentials. Furthermore, many OT systems do not have the ability to accept PIV credentials and will require compensating controls. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Identification and Authentication (organizational Users) | Acceptance of PIV Credentials</b></p>Accept and electronically verify Personal Identity Verification-compliant credentials.' WHERE [Requirement_Id] = 37706
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement multi-factor authentication for access to non-privileged accounts. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> As a compensating control, physical access restrictions may sufficiently represent one authentication factor, provided the system is not remotely accessible. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-5

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: As a compensating control, physical access restrictions may sufficiently represent one authentication factor, provided that the system is not remotely accessible. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Identification and Authentication (organizational Users) | Multi-factor Authentication to Non-privileged Accounts</b></p>Implement multi-factor authentication for access to non-privileged accounts.' WHERE [Requirement_Id] = 37707
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Identifiers and authenticators shall not be shared within the WMATA Enterprise unless authorized by the AO/AODR. When shared identifiers or authenticators are in use, users shall be individually authenticated before access is granted to a shared account or resource. [WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: For local access, physical access controls and logging may be used as an alternative to individual authentication on an OT system. For remote access, the remote access authentication mechanism will be used to identify, permit, and log individual access before permitting the use of shared accounts. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Identification and Authentication (organizational Users) | Individual Authentication with Group Authentication</b></p>When shared accounts or authenticators are employed, require users to be individually authenticated before granting access to the shared accounts or resources.' WHERE [Requirement_Id] = 37708
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement replay-resistant authentication mechanisms for access to privileged and non-privileged accounts. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Access to Accounts — Replay Resistant</b></p>Implement replay-resistant authentication mechanisms for access to [Selection (one or more): privileged accounts; non-privileged accounts].' WHERE [Requirement_Id] = 37709
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Uniquely identify and authenticate all devices and systems that connect to or access WMATA networks and/or systems before establishing a local, remote, or network connection. All certificates employed on WMATA systems and/or devices shall be from a trusted source identified by DMCS and authorized by the AO. [WMATA System Implementation Statement]

Related Controls: AC-17, AC-18, AC-19, AU-6, CA-3, CA-9, IA-4, IA-5, IA-11, IR-9, SI-4

<li>a. Security Controls Enhancement(s): [a: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: OT devices may not inherently support device authentication. If devices are local to one another, physical security measures that prevent unauthorized communication between devices can be used as compensating controls. For remote communication, additional hardware may be required to meet authentication requirements. [NIST 800-82 Rev 3_OT Discussion: WMATA System Implementation Statement]

Rationale for adding IA-3 to LOW baseline: Given the variety of OT devices and physical locations of OT devices, organizations may consider whether OT devices that may be vulnerable to tampering or spoofing require unique identification and authentication and for what types of 
connections.  [NIST 800-82 Rev 3_Rationale: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Device Identification and Authentication</b></p>Uniquely identify and authenticate [Assignment: organization-defined devices and/or types of devices] before establishing a [Selection (one or more): local; remote; network] connection.' WHERE [Requirement_Id] = 37710
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Authenticate [Assignment: organization-defined devices and/or types of devices] before establishing [Selection (one or more): local; remote; network] connection using bidirectional authentication that is cryptographically based. [WMATA System Implementation Statement]

Related Controls: SC-8, SC-12, SC-13

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: For OT systems that include IIoT devices, these enhancements may be needed to protect device-to-device communication. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Device Identification and Authentication | Cryptographic Bidirectional Authentication</b></p>Authenticate [Assignment: organization-defined devices and/or types of devices] before establishing [Selection (one or more): local; remote; network] connection using bidirectional authentication that is cryptographically based.' WHERE [Requirement_Id] = 37711
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Handle device identification and authentication based on attestation by [Assignment: organization-defined configuration management process]. [WMATA System Implementation Statement]

Related Controls: CM-2, CM-3, CM-6

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: For OT systems that include IIoT devices, these enhancements may be needed to protect device-to-device communication. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Device Identification and Authentication | Device Attestation</b></p>Handle device identification and authentication based on attestation by [Assignment: organization-defined configuration management process].' WHERE [Requirement_Id] = 37712
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Manage system identifiers by: [WMATA System Implementation Statement]

<li>a. Receiving authorization from System Owners to assign an individual, group, role, service, or device identifier; [a: WMATA System Implementation Statement]</li>
<li>b. Selecting an identifier that identifies an individual, group, role, service, or device; [b: WMATA System Implementation Statement]</li>
<li>c. Assigning the identifier to the intended individual, group, role, service, or device; [c: WMATA System Implementation Statement]</li>
<li>d. Not assigning the same identifier to a single individual for more than one role; [d: WMATA System Implementation Statement]</li>
<li>e. Only allowing the use of identifiers by a single individual; and [e: WMATA System Implementation Statement]</li>
<li>f. Preventing reuse of identifiers, except for users that are rehired. [f: WMATA System Implementation Statement]</li>
Related Controls: AC-5, IA-2, IA-3, IA-5, IA-8, IA-12, MA-4, PE-2, PE-3, PE-4, PL-4, PM-12, PS-3, PS-4, PS-5
<li>g. Security Controls Enhancement(s): [g: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Identifier Management</b></p>a. Receiving authorization from [Assignment: organization-defined personnel or roles] to assign an individual, group, role, service, or device identifier;b. Selecting an identifier that identifies an individual, group, role, service, or device;c. Assigning the identifier to the intended individual, group, role, service, or device; andd. Preventing reuse of identifiers for [Assignment: organization-defined time period].' WHERE [Requirement_Id] = 37713
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Manage individual identifiers by uniquely identifying each individual by their affiliation with WMATA, minimally differentiating between employees and non-employees (e.g., contractors, foreign nationals, non-organizational users, etc.). Ensure that badges have different visual markings to indicate the status of individuals. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Non-organizational, including foreign national, support for OT systems shall only be authorized by the CISO. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: This control enhancement is typically implemented by the organization rather than at the system level. However, to manage risk for certain OT environments, identifiers (e.g., badges) may have different markings to indicate the status of individuals, such as contractors, foreign nationals, and non-organizational users. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Identifier Management | Identify User Status</b></p>Manage individual identifiers by uniquely identifying each individual as [Assignment: organization-defined characteristic identifying individual status].' WHERE [Requirement_Id] = 37714
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Manage system authenticators by: [WMATA System Implementation Statement]

<li>a. Verifying, as part of the initial authenticator distribution, the identity of the individual, group, role, application, service, or device receiving the authenticator; [a: WMATA System Implementation Statement]</li>
<li>b. Establishing initial authenticator content for any authenticators issued by the organization; [b: WMATA System Implementation Statement]</li>
<li>c. Ensuring that authenticators have sufficient strength of mechanism for their intended use; [c: WMATA System Implementation Statement]</li>
<li>d. Establishing and implementing administrative procedures for initial authenticator distribution, for lost or compromised or damaged authenticators, and for revoking authenticators; [d: WMATA System Implementation Statement]</li>
<li>e. Changing default authenticators immediately upon first use; [e: WMATA System Implementation Statement]</li>
<li>f. No limits will be set on frequency of authenticator changing or refreshing of passwords; [f: WMATA System Implementation Statement]</li>
<li>g. Users shall be permitted to change passwords using self-service capabilities; [g: WMATA System Implementation Statement]</li>
<li>h. Changing or refreshing authenticators as follows: [h: WMATA System Implementation Statement]</li>
<li>i) User Authenticators: [h.i: WMATA System Implementation Statement]</li>
<li>(1) Passwords (includes service accounts): 90 days; [h.i.1: WMATA System Implementation Statement]</li>
<li>(2) Certificates: three years; and [h.i.2: WMATA System Implementation Statement]</li>
<li>(3) One-time password (OTP) devices: at least every 30 seconds. [h.i.3: WMATA System Implementation Statement]</li>
<li>ii) Device, Service and Application Authenticators: [h.ii: WMATA System Implementation Statement]</li>
<li>(1) Certificates: one year; and [h.ii.1: WMATA System Implementation Statement]</li>
<li>(2) Passwords: 90 days. [h.ii.2: WMATA System Implementation Statement]</li>
<li>i. Configuring to expire. Users and owners of group authenticators (e.g., service accounts) shall automatically receive notification 30 days prior to expiration; [i: WMATA System Implementation Statement]</li>
<li>j. Changing authenticators when there is a security incident or compromise of the authenticator, or at the direction of DMCS; [j: WMATA System Implementation Statement]</li>
<li>k. Protecting authenticator content from unauthorized disclosure and modification as defined in WMATA policy; [k: WMATA System Implementation Statement]</li>
<li>l. Requiring individuals to use, and having devices implement, specific controls to protect authenticators; and [l: WMATA System Implementation Statement]</li>
<li>m. Changing authenticators for group or role accounts when membership to those accounts changes. [m: WMATA System Implementation Statement]</li>
<li>n. Maintaining a repository of certificates, associated expiration dates, and system administrators; and [n: WMATA System Implementation Statement]</li>
<li>o. Notifying system administrators 30 days prior to expiration of certificates. [o: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Compensating controls for OT systems can include physical access controls and encapsulation of the OT to provide authentication external to the OT. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-3, AC-6, CM-6, IA-2, IA-4, IA-7, IA-8, MA-4, PE-2, PL-4, SC-12, SC-13
<li>p. Security Controls Enhancement(s): [p: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Example compensating controls include physical access control and encapsulating the OT to provide authentication external to the OT. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Authenticator Management</b></p>a. Verifying, as part of the initial authenticator distribution, the identity of the individual, group, role, service, or device receiving the authenticator;b. Establishing initial authenticator content for any authenticators issued by the organization;c. Ensuring that authenticators have sufficient strength of mechanism for their intended use;d. Establishing and implementing administrative procedures for initial authenticator distribution, for lost or compromised or damaged authenticators, and for revoking authenticators;e. Changing default authenticators prior to first use;f. Changing or refreshing authenticators [Assignment: organization-defined time period by authenticator type] or when [Assignment: organization-defined events] occur;g. Protecting authenticator content from unauthorized disclosure and modification;h. Requiring individuals to take, and having devices implement, specific controls to protect authenticators; andi. Changing authenticators for group or role accounts when membership to those accounts changes.' WHERE [Requirement_Id] = 37715
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'For password-based authentication: [WMATA System Implementation Statement]

<li>(1) Maintain a Prohibited Password List (PPL) based on commonly-used, expected, or compromised passwords and update the list monthly; [1: WMATA System Implementation Statement]</li>
<li>(2) When a password identified on the PPL is in use at WMATA or the password is identified as compromised, change immediately, but no later than: [2: WMATA System Implementation Statement]</li>
<li>(a) 30 minutes for High categorized systems, high-risk individuals and privileged accounts; [2.a: WMATA System Implementation Statement]</li>
<li>(b) 60 minutes for systems categorized as Moderate; and [2.b: WMATA System Implementation Statement]</li>
<li>(c) 24 hours for all other information systems and/or accounts. All passwords shall be changed immediately. [2.c: WMATA System Implementation Statement]</li>
<li>(3) Verify, when users create or update passwords, that the passwords are not found on the PPL; [3: WMATA System Implementation Statement]</li>
<li>(4) Transmit passwords only over cryptographically-protected channels; [4: WMATA System Implementation Statement]</li>
<li>(5) Store passwords using an DMCS-approved salted key derivation function, [5: WMATA System Implementation Statement] preferably using a keyed hash;</li>
<li>(6) Require immediate selection of a new password upon account recovery; [6: WMATA System Implementation Statement]</li>
<li>(7) If systems are enabled for use of passphrases they shall be allowed with the following requirements: [7: WMATA System Implementation Statement]</li>
<li>(a) Minimum password length is 16 characters; [7.a: WMATA System Implementation Statement]</li>
<li>(b) Maximum password age must be 90 days or less; [7.b: WMATA System Implementation Statement]</li>
<li>(c) Password history (reuse) must be configured for 24 passwords remembered; and [7.c: WMATA System Implementation Statement]</li>
<li>(d) Maximum number of three allowed unsuccessful logon attempts. [7.d: WMATA System Implementation Statement]</li>
<li>(8) Employ automated tools to assist the user in selecting strong password authenticators; and [8: WMATA System Implementation Statement]</li>
<li>(9) Enforce composition and complexity rules based on the following: [9: WMATA System Implementation Statement]</li>
<li>(a) Cannot contain significant portions of the user’s account name or full name; [9.a: WMATA System Implementation Statement]</li>
<li>(b) Minimum password length is 16 characters; [9.b: WMATA System Implementation Statement]</li>
<li>(c) Must contain characters from all of the following four categories: [9.c: WMATA System Implementation Statement]</li>
<li>(i) English uppercase character (A through Z); [9.c.i: WMATA System Implementation Statement]</li>
<li>(ii) English lowercase character (a through z); [9.c.ii: WMATA System Implementation Statement]</li>
<li>(iii) Base 10 digit (0 through 9); and [9.c.iii: WMATA System Implementation Statement]</li>
<li>(iv) Nonalphabetic character (for example, !, $, #, %). [9.c.iv: WMATA System Implementation Statement]</li>
<li>(d) Maximum number of repeating characters of the same character class is limited to four; [9.d: WMATA System Implementation Statement]</li>
<li>(e) Maximum password age must be 90 days or less; [9.e: WMATA System Implementation Statement]</li>
<li>(f) Password history (reuse) must be configured for 24 passwords remembered; and [9.f: WMATA System Implementation Statement]</li>
<li>(g) Maximum number of three allowed unsuccessful login attempts. [9.g: WMATA System Implementation Statement]</li>

Related Controls: IA-6
', [Supplemental_Info]=N'<p><b> Password-based Authentication</b></p>For password-based authentication:(a) Maintain a list of commonly-used, expected, or compromised passwords and update the list [Assignment: organization-defined frequency] and when organizational passwords are suspected to have been compromised directly or indirectly;(b) Verify, when users create or update passwords, that the passwords are not found on the list of commonly-used, expected, or compromised passwords in IA-5(1)(a);(c) Transmit passwords only over cryptographically-protected channels;(d) Store passwords using an approved salted key derivation function, preferably using a keyed hash;(e) Require immediate selection of a new password upon account recovery;(f) Allow user selection of long passwords and passphrases, including spaces and all printable characters;(g) Employ automated tools to assist the user in selecting strong password authenticators; and(h) Enforce the following composition and complexity rules: [Assignment: organization-defined composition and complexity rules].' WHERE [Requirement_Id] = 37716
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) For public key-based authentication: [1: WMATA System Implementation Statement]</li>
<li>(a) Enforce authorized access to the corresponding private key; and [1.a: WMATA System Implementation Statement]</li>
<li>(b) Map the authenticated identity to the account of the individual or group; and [1.b: WMATA System Implementation Statement]</li>
<li>(2) When a public key is used: [2: WMATA System Implementation Statement]</li>
<li>(a) Validate certificates by constructing and verifying a certification path to an accepted trust anchor, including checking certificate status information; and [2.a: WMATA System Implementation Statement]</li>
<li>(b) Implement a local cache of revocation data to support path discovery and validation. [2.b: WMATA System Implementation Statement]</li>

Related Controls: IA-3, SC-17
', [Supplemental_Info]=N'<p><b> Public Key-based Authentication</b></p>(a) For public key-based authentication:     (1) Enforce authorized access to the corresponding private key; and     (2) Map the authenticated identity to the account of the individual or group; and(b) When public key infrastructure (PKI) is used:     (1) Validate certificates by constructing and verifying a certification path to an accepted trust anchor, including checking certificate status      information; and     (2) Implement a local cache of revocation data to support path discovery and validation.' WHERE [Requirement_Id] = 37717
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Protect authenticators commensurate with the security category of the information to which use of the authenticator permits. [WMATA System Implementation Statement]

Related Controls: RA-2
', [Supplemental_Info]=N'<p><b> Protection of Authenticators</b></p>Protect authenticators commensurate with the security category of the information to which use of the authenticator permits access.' WHERE [Requirement_Id] = 37718
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Obscure feedback of authentication information during the authentication process to protect the information from possible exploitation and use by unauthorized individuals. [WMATA System Implementation Statement]

Related Controls: AC-3

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: This control assumes a visual interface that provides feedback about authentication information during the authentication process. When OT authentication uses an interface that does not support visual feedback (e.g., protocol-based authentication), this control may be tailored out. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Authentication Feedback</b></p>Obscure feedback of authentication information during the authentication process to protect the information from possible exploitation and use by unauthorized individuals.' WHERE [Requirement_Id] = 37719
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement mechanisms for authentication to a cryptographic module that meet the requirements of applicable laws, directives, policies, regulations, standards, and guidelines for such authentication. [WMATA System Implementation Statement]

Related Controls: AC-3, IA-5, SA-4, SC-12, SC-13
', [Supplemental_Info]=N'<p><b>Cryptographic Module Authentication</b></p>Implement mechanisms for authentication to a cryptographic module that meet the requirements of applicable laws, executive orders, directives, policies, regulations, standards, and guidelines for such authentication.' WHERE [Requirement_Id] = 37720
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Access to WMATA systems shall be limited to users with credentials issued by WMATA. [WMATA System Implementation Statement]

Related Controls: AC-2, AC-6, AC-14, AC-17, AC-18, AU-6, IA-2, IA-4, IA-5, IA-11, MA-4, RA-3, SA-4, SC-8

<li>a. Security Controls Enhancement(s): [a: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The OT Discussion for IA-2, Identification and Authentication (Organizational Users) is applicable for non-organizational users. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Identification and Authentication  (non-organizational Users)</b></p>Uniquely identify and authenticate non-organizational users or processes acting on behalf of non-organizational users.' WHERE [Requirement_Id] = 37721
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Accept and electronically verify Personal Identity Verification-compliant credentials from other federal agencies. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Acceptance of PIV credentials is only required for organizations that follow OMB Memorandum M-19-17 [OMB-M1917] (e.g., federal agencies and contractors). [OT Systems Only: WMATA System Implementation Statement]

Related Controls: PE-3

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Acceptance of PIV credentials is only required for organizations that follow OMB Memorandum M-19-17 [OMB-M1917] (e.g., federal agencies and contractors). [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Identification and Authentication (non-organizational Users) | Acceptance of PIV Credentials from Other Agencies</b></p>Accept and electronically verify Personal Identity Verification-compliant credentials from other federal agencies.' WHERE [Requirement_Id] = 37722
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Accept only external authenticators that are NIST-compliant; and [1: WMATA System Implementation Statement]</li>
<li>(2) Document and maintain a list of accepted external authenticators.  [2: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Example compensating controls include implementing support external to the OT and multi-factor authentication. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Example compensating controls include implementing support external to the OT and multi-factor authentication. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Identification and Authentication (non-organizational Users) | Acceptance of External Authenticators</b></p>(a) Accept only external authenticators that are NIST-compliant; and(b) Document and maintain a list of accepted external authenticators.' WHERE [Requirement_Id] = 37723
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Conform to the following profiles for identity management [Assignment: organization-defined identity management profiles]. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Example compensating controls include implementing support external to the OT and multi-factor authentication. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Example compensating controls include implementing support external to the OT and multi-factor authentication. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Identification and Authentication (non-organizational Users) | Use of Defined Profiles</b></p>Conform to the following profiles for identity management [Assignment: organization-defined identity management profiles].' WHERE [Requirement_Id] = 37724
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement]

Related Controls: PM-9, PS-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Cybersecurity Incident Response Policy and Procedures</b></p>a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:     1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] incident response policy that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and          (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and     2. Procedures to facilitate the implementation of the incident response policy and the associated incident response controls;b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the incident response policy and procedures; andc. Review and update the current incident response:     1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and     2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37725
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Incident response training shall be provided to designated system users consistent with their assigned roles and responsibilities: [a: WMATA System Implementation Statement]</li>
<li>i) Within 30 days of assuming an incident response role or responsibility or acquiring system access; [a.i: WMATA System Implementation Statement]</li>
<li>ii) When required by system changes; and [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Annually thereafter. [a.iii: WMATA System Implementation Statement]</li>
<li>b. Review and update incident response training content annually and following substantial changes in WMATA incident response controls or Standard Operating Procedures (SOPs). [b: WMATA System Implementation Statement]</li>
Related Controls: AT-2, AT-3, AT-4, CP-3, IR-3, IR-4, IR-8, IR-9
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Incident Response Training</b></p>a. Provide incident response training to system users consistent with assigned roles and responsibilities:     1. Within [Assignment: organization-defined time period] of assuming an incident response role or responsibility or acquiring system access;     2. When required by system changes; and     3. [Assignment: organization-defined frequency] thereafter; andb. Review and update incident response training content [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37726
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Incorporate simulated events into incident response training to facilitate the required response by personnel in crisis situations. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Simulated Events</b></p>Incorporate simulated events into incident response training to facilitate the required response by personnel in crisis situations.' WHERE [Requirement_Id] = 37727
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Provide an incident response training environment using automated mechanisms which facilitate more thorough and realistic incident response training, more coverage of incident response issues, more realistic training scenarios and environments, and which stress the response capability. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Automated Training Environments</b></p>Provide an incident response training environment using [Assignment: organization-defined automated mechanisms].' WHERE [Requirement_Id] = 37728
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Provide incident response training on how to identify and respond to a breach, including the organization’s process for reporting a breach. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Breach</b></p>Provide incident response training on how to identify and respond to a breach, including the organization’s process for reporting a breach.' WHERE [Requirement_Id] = 37729
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Test the effectiveness of the incident response capability on a monthly basis using standardization and evaluation quizzes and incident response drills, and on a quarterly basis using tabletop or full-scale exercises. [a: WMATA System Implementation Statement]</li>
Related Controls: CP-3, CP-4, IR-2, IR-4, IR-8, PM-14
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Incident Response Testing</b></p>Test the effectiveness of the incident response capability for the system [Assignment: organization-defined frequency] using the following tests: [Assignment: organization-defined tests].' WHERE [Requirement_Id] = 37730
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Coordinate incident response testing with organizational elements responsible for related plans. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Coordination with Related Plans</b></p>Coordinate incident response testing with organizational elements responsible for related plans.' WHERE [Requirement_Id] = 37731
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Implement an incident handling capability for incidents that is consistent with the incident response plan and includes preparation, detection and analysis, containment, eradication, and recovery; [a: WMATA System Implementation Statement]</li>
<li>b. Support incident response at the system level as dictated by the nature of the incident; [b: WMATA System Implementation Statement]</li>
<li>c. Coordinate incident handling activities with contingency planning activities; [c: WMATA System Implementation Statement]</li>
<li>d. Incorporate lessons learned from ongoing incident handling activities into incident response procedures, training, and testing, and implement the resulting changes accordingly; and [d: WMATA System Implementation Statement]</li>
<li>e. Ensure the rigor, intensity, scope, and results of incident handling activities are comparable and predictable across the organization. [e: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> As part of the incident handling capability, the organization coordinates with external vendors, integrators, or suppliers as necessary to ensure they have the capability to address events specific to embedded components and devices. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-19, AU-6, AU-7, CM-6, CP-2, CP-3, CP-4, IR-2, IR-3, IR-5, IR-6, IR-8, PE-6, PL-2, PM-12, SA-8, SC-5, SC-7, SI-3, SI-4, SI-7
<li>f. Security Controls Enhancement(s): [f: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: As part of the incident handling capability, the organization coordinates with external vendors, integrators, or suppliers as necessary to ensure that they have the capability to address events that are specific to embedded components and devices. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Incident Handling</b></p>a. Implement an incident handling capability for incidents that is consistent with the incident response plan and includes preparation, detection and analysis, containment, eradication, and recovery;b. Coordinate incident handling activities with contingency planning activities;c. Incorporate lessons learned from ongoing incident handling activities into incident response procedures, training, and testing, and implement the resulting changes accordingly; andd. Ensure the rigor, intensity, scope, and results of incident handling activities are comparable and predictable across the organization.' WHERE [Requirement_Id] = 37732
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Support the incident handling process using automated mechanisms that support incident handling processes, including online incident management systems and tools that support the collection of live response data, full network packet capture, and forensic analysis. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Automated Incident Handling Processes</b></p>Support the incident handling process using [Assignment: organization-defined automated mechanisms].' WHERE [Requirement_Id] = 37733
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Establish and maintain an integrated incident response team that can be activated by the organization within one hour. [WMATA System Implementation Statement]

Related Controls: AT-3
', [Supplemental_Info]=N'<p><b> Integrated Incident Response Team</b></p>Establish and maintain an integrated incident response team that can be deployed to any location identified by the organization in [Assignment: organization-defined time period].' WHERE [Requirement_Id] = 37734
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Correlate incident information and individual incident responses to achieve an organization-wide perspective on incident awareness and response. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Information Correlation</b></p>Correlate incident information and individual incident responses to achieve an organization-wide perspective on incident awareness and response.' WHERE [Requirement_Id] = 37735
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Track and document incidents. [a: WMATA System Implementation Statement]</li>
Related Controls: AU-6, AU-7, IR-4, IR-6, IR-8, PE-6, PM-5, SC-5, SC-7, SI-3, SI-4, SI-7
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Incident Monitoring</b></p>Track and document incidents.' WHERE [Requirement_Id] = 37736
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Track incidents and collect and analyze incident information. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Automated Tracking, Data Collection, and Analysis</b></p>Track incidents and collect and analyze incident information using [Assignment: organization-defined automated mechanisms].' WHERE [Requirement_Id] = 37737
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Require personnel to report suspected incidents to the organizational incident response capability immediately, but not to exceed 24 hours; and [a: WMATA System Implementation Statement]</li>
<li>b. Report incident information to the CISO via the Cyber Fusion Center’s (CFC) Security Operations Center (SOC). [b: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> The organization should report incidents on a timely basis. CISA collaborates with international and private sector Computer Emergency Response Teams (CERTs) to share control systems-related security incidents and mitigation measures. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: CM-6, CP-2, IR-4, IR-5, IR-8, IR-9
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization should report incidents on a timely basis. CISA collaborates with international and private-sector computer emergency response teams (CERTs) to share control systems-related security incidents and mitigation measures. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Incident Reporting</b></p>a. Require personnel to report suspected incidents to the organizational incident response capability within [Assignment: organization-defined time period]; andb. Report incident information to [Assignment: organization-defined authorities].' WHERE [Requirement_Id] = 37738
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Report incidents using the designated Security Orchestration, Automation and Response (SOAR). [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> The automated mechanisms used to support the incident reporting process are not necessarily part of, or connected to, the OT. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: IR-7

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The automated mechanisms used to support the incident reporting process are not necessarily part of or connected to the OT. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Incident Reporting | Automated Reporting</b></p>Report incidents using [Assignment: organization-defined automated mechanisms].' WHERE [Requirement_Id] = 37739
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Provide incident information to the provider of the product or service and other organizations involved in the supply chain or supply chain governance for systems or system components related to the incident. [WMATA System Implementation Statement]

Related Controls: SR-8

', [Supplemental_Info]=N'<p><b> Supply Chain Coordination</b></p>Provide incident information to the provider of the product or service and other organizations involved in the supply chain or supply chain governance for systems or system components related to the incident.' WHERE [Requirement_Id] = 37740
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Provide an incident response support resource, integral to the organizational incident response capability, that offers advice and assistance to users of the system for the handling and reporting of incidents. [a: WMATA System Implementation Statement]</li>
Related Controls: AT-2, AT-3, IR-4, IR-6, IR-8, PM-22, PM-26, SA-9, SI-18
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Incident Response Assistance</b></p>Provide an incident response support resource, integral to the organizational incident response capability, that offers advice and assistance to users of the system for the handling and reporting of incidents.' WHERE [Requirement_Id] = 37741
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Increase the availability of incident response information and support using automated mechanisms which provide a push or pull capability for users to obtain incident response assistance (e.g., access to a website to query the assistance capability, the assistance capability to proactively send incident response information to users as part of increasing understanding of current response capabilities and support, etc.). [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Automation Support for Availability of Information and Support</b></p>Increase the availability of incident response information and support using [Assignment: organization-defined automated mechanisms].' WHERE [Requirement_Id] = 37742
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Develop an incident response plan that: [a: WMATA System Implementation Statement]</li>
<li>i) Provides the organization with a roadmap for implementing its incident response capability; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Describes the structure and organization of the incident response capability; [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Provides a high-level approach for how the incident response capability fits into the overall organization; [a.iii: WMATA System Implementation Statement]</li>
<li>iv) Meets the unique requirements of the organization, which relate to mission, size, structure, and functions; [a.iv: WMATA System Implementation Statement]</li>
<li>v) Defines reportable incidents; [a.v: WMATA System Implementation Statement]</li>
<li>vi) Provides metrics for measuring the incident response capability within the organization; [a.vi: WMATA System Implementation Statement]</li>
<li>vii) Defines the resources and management support needed to effectively maintain and mature an incident response capability; [a.vii: WMATA System Implementation Statement]</li>
<li>viii) Addresses the sharing of incident information; [a.viii: WMATA System Implementation Statement]</li>
<li>ix) Is reviewed and approved by the CISO or CISO’s designated representative annually; and [a.ix: WMATA System Implementation Statement]</li>
<li>x) Explicitly designates responsibility for incident response to the Cyber Fusion Officer (CFO). [a.x: WMATA System Implementation Statement]</li>
<li>b. Create a Cybersecurity Incident Response Team (CIRT) charter which identifies the roles and responsibilities of members of the CIRT; [b: WMATA System Implementation Statement]</li>
<li>c. Distribute copies of the incident response plan to all members of the CFC and the CIRT; [c: WMATA System Implementation Statement]</li>
<li>d. Update the incident response plan to address system and organizational changes or problems encountered during plan implementation, execution, or testing; [d: WMATA System Implementation Statement]</li>
<li>e. Communicate incident response plan changes to all members of the CFC and the CIRT; [e: WMATA System Implementation Statement]</li>
<li>f. Protect the incident response plan from unauthorized disclosure and modification; [f: WMATA System Implementation Statement]</li>
<li>g. Identify personnel associated with incident response activities at the system level within the corresponding SSP addendum and at the CIRT (organizational) level within the CIRT charter addendum; [g: WMATA System Implementation Statement]</li>
<li>h. Notify DMCS within seven calendar days of the appointment of an individual to a qualifying incident response capacity; and [h: WMATA System Implementation Statement]</li>
<li>i. Certify personnel associated with incident response annually. [i: WMATA System Implementation Statement]</li>
Related Controls: AC-2, CP-2, CP-4, IR-4, IR-7, IR-9, PE-6, PL-2, SA-15, SI-12, SR-8
<li>j. Security Controls Enhancement(s): [j: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Incident Response Plan</b></p>a. Develop an incident response plan that:     1. Provides the organization with a roadmap for implementing its incident response capability;     2. Describes the structure and organization of the incident response capability;     3. Provides a high-level approach for how the incident response capability fits into the overall organization;     4. Meets the unique requirements of the organization, which relate to mission, size, structure, and functions;     5. Defines reportable incidents;     6. Provides metrics for measuring the incident response capability within the organization;     7. Defines the resources and management support needed to effectively maintain and mature an incident response capability;     8. Addresses the sharing of incident information;     9. Is reviewed and approved by [Assignment: organization-defined personnel or roles] [Assignment: organization-defined frequency]; and    10. Explicitly designates responsibility for incident response to [Assignment: organization-defined entities, personnel, or roles].b. Distribute copies of the incident response plan to [Assignment: organization-defined incident response personnel (identified by name and/or by role) and organizational elements];c. Update the incident response plan to address system and organizational changes or problems encountered during plan implementation, execution, or testing;d. Communicate incident response plan changes to [Assignment: organization-defined incident response personnel (identified by name and/or by role) and organizational elements]; ande. Protect the incident response plan from unauthorized disclosure and modification.' WHERE [Requirement_Id] = 37743
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Include the following in the Incident Response Plan for breaches involving sensitive information: [1: WMATA System Implementation Statement]</li>
<li>(a) A process to determine if notice to individuals or other organizations, including oversight organizations, is needed; [1.a: WMATA System Implementation Statement]</li>
<li>(b) An assessment process to determine the extent of the harm, embarrassment, inconvenience, or unfairness to affected individuals and any mechanisms to mitigate such harms; and [1.b: WMATA System Implementation Statement]</li>
<li>(c) Identification of applicable privacy requirements. [1.c: WMATA System Implementation Statement]</li>

Related Controls: PT-1, PT-2, PT-3, PT-4, PT-5, PT-7
', [Supplemental_Info]=N'<p><b> Breaches</b></p>Include the following in the Incident Response Plan for breaches involving personally identifiable information:(a) A process to determine if notice to individuals or other organizations, including oversight organizations, is needed;(b) An assessment process to determine the extent of the harm, embarrassment, inconvenience, or unfairness to affected individuals and any mechanisms to mitigate such harms; and(c) Identification of applicable privacy requirements.' WHERE [Requirement_Id] = 37744
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Assigning CFC with responsibility for responding to information spills; [a: WMATA System Implementation Statement]</li>
<li>b. Identifying the specific information involved in the system contamination; [b: WMATA System Implementation Statement]</li>
<li>c. Alerting CIRT of the information spill using a method of communication not associated with the spill; [c: WMATA System Implementation Statement]</li>
<li>d. Isolating the contaminated system or system component; [d: WMATA System Implementation Statement]</li>
<li>e. Eradicating the information from the contaminated system or component; [e: WMATA System Implementation Statement]</li>
<li>f. Identifying other systems or system components that may have been subsequently contaminated; and [f: WMATA System Implementation Statement]</li>
<li>g. Performing the following additional actions: [g: WMATA System Implementation Statement]</li>
<li>i. Notification to the Cyber Fusion Officer (CFO) to notify any third parties to include cyber insurers and federal, state, and local authorities to initiate recovery or remediation efforts. [g.i: WMATA System Implementation Statement] </li>
<li>ii. Review and update incident response plans and procedures, and relevant SOPs and work instructions. [g.ii: WMATA System Implementation Statement]</li>
<li>iii. Ensure that all users/handlers are in compliance with AT-2 and AT-3. [g.iii: WMATA System Implementation Statement]</li>
Related Controls: CP-2, IR-6, PM-26, PM-27, PT-2, PT-3, PT-7, RA-7
<li>h. Security Controls Enhancement(s): [h: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Information Spillage Response</b></p>Respond to information spills by:a. Assigning [Assignment: organization-defined personnel or roles] with responsibility for responding to information spills;b. Identifying the specific information involved in the system contamination;c. Alerting [Assignment: organization-defined personnel or roles] of the information spill using a method of communication not associated with the spill;d. Isolating the contaminated system or system component;e. Eradicating the information from the contaminated system or component;f. Identifying other systems or system components that may have been subsequently contaminated; andg. Performing the following additional actions: [Assignment: organization-defined actions].' WHERE [Requirement_Id] = 37745
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Provide information spillage response training annually. [WMATA System Implementation Statement]

Related Controls: AT-2, AT-3, CP-3, IR-2
', [Supplemental_Info]=N'<p><b>Training</b></p>Provide information spillage response training [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37746
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'The CFC shall develop procedures to ensure that organizational personnel impacted by information spills can continue to carry out assigned tasks while contaminated systems are undergoing corrective actions. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Post-Spill Operations</b></p>Implement the following procedures to ensure that organizational personnel impacted by information spills can continue to carry out assigned tasks while contaminated systems are undergoing corrective actions: [Assignment: organization-defined procedures].' WHERE [Requirement_Id] = 37747
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'The CFC will make persons exposed to information to which they have not been authorized aware of any restrictions imposed by applicable law, regulation or other requirement based on exposure to such information. In addition, the CFC shall facilitate the notification to organizations and entities whose information has been compromised in accordance with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Exposure to Unauthorized Personnel</b></p>Employ the following controls for personnel exposed to information not within assigned access authorizations: [Assignment: organization-defined controls].' WHERE [Requirement_Id] = 37748
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement]

Related Controls: PM-9, PS-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>Maintenance Policy and Procedures</b></p>Control:a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:     1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] maintenance policy that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and          (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and     2. Procedures to facilitate the implementation of the maintenance policy and the associated maintenance controls;b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the maintenance policy and procedures; andc. Review and update the current maintenance:     1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and     2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37749
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Schedule, document, and review records of maintenance, repair, and replacement of system components in accordance with manufacturer or vendor specifications and/or organizational requirements; [a: WMATA System Implementation Statement]</li>
<li>b. Approve and monitor all maintenance activities, whether performed on-site or remotely and whether the system or system components are serviced on site or removed to another location; [b: WMATA System Implementation Statement]</li>
<li>c. Require that System Owners or the CDO initiate the approval process for the removal of the system or system components from organizational facilities for off-site maintenance, repair, or replacement; [c: WMATA System Implementation Statement]</li>
<li>d. Require that the CDO explicitly approve the removal of the system or system components from organizational facilities for off-site maintenance, repair, or replacement; [d: WMATA System Implementation Statement]</li>
<li>e. Sanitize equipment in accordance with Control 3.12 Media Protection to remove information from associated media prior to removal from organizational facilities for off-site maintenance, repair, or replacement; [e: WMATA System Implementation Statement]</li>
<li>f. Check all potentially impacted controls to verify that the controls are still functioning properly following maintenance, repair, or replacement actions; and [f: WMATA System Implementation Statement]</li>
<li>g. Include the following information in organizational maintenance records: date and time of maintenance, a description of the maintenance performed, full names and organization of individuals or groups performing the maintenance, name of the authorized escort, and system components with associated barcode or other identifier or equipment that are removed or replaced. [g: WMATA System Implementation Statement]</li>
Related Controls: CM-2, CM-3, CM-4, CM-5, CM-8, MA-4, MP-6, PE-16, SI-2, SR-3, SR-4, SR-11
<li>h. Security Controls Enhancement(s): [h: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Controlled Maintenance</b></p>a. Schedule, document, and review records of maintenance, repair, and replacement on system components in accordance with manufacturer or vendor specifications and/or organizational requirements;b. Approve and monitor all maintenance activities, whether performed on site or remotely and whether the system or system components are serviced on site or removed to another location;c. Require that [Assignment: organization-defined personnel or roles] explicitly approve the removal of the system or system components from organizational facilities for off-site maintenance, repair, or replacement;d. Sanitize equipment to remove the following information from associated media prior to removal from organizational facilities for off-site maintenance, repair, or replacement: [Assignment: organization-defined information];e. Check all potentially impacted controls to verify that the controls are still functioning properly following maintenance, repair, or replacement actions; andf. Include the following information in organizational maintenance records: [Assignment: organization-defined information].' WHERE [Requirement_Id] = 37750
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Schedule and document maintenance, repair, and replacement actions for the system using an enterprise configuration management database (CMDB); [1: WMATA System Implementation Statement]</li>
<li>(2) Conduct maintenance, repair, and replacement actions for the system using automated mechanisms whenever possible; and [2: WMATA System Implementation Statement]</li>
<li>(3) Produce up-to date, accurate, and complete records of all maintenance, repair, and replacement actions requested, scheduled, in process, and completed. [3: WMATA System Implementation Statement]</li>

Related Controls: MA-3
', [Supplemental_Info]=N'<p><b> Automated Maintenance Activities</b></p>(a) Schedule, conduct, and document maintenance, repair, and replacement actions for the system using [Assignment: organization-defined automated mechanisms]; and(b) Produce up-to date, accurate, and complete records of all maintenance, repair, and replacement actions requested, scheduled, in process, and completed.' WHERE [Requirement_Id] = 37751
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Approve, control, and monitor the use of system maintenance tools; and [a: WMATA System Implementation Statement]</li>
<li>b. Review previously approved system maintenance tools on a continual basis. [b: WMATA System Implementation Statement]</li>
Related Controls: MA-2, PE-16
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Maintenance Tools</b></p>a. Approve, control, and monitor the use of system maintenance tools; andb. Review previously approved system maintenance tools [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37752
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Inspect the maintenance tools used by maintenance personnel for improper or unauthorized modifications. [WMATA System Implementation Statement]

Related Controls: SI-7
', [Supplemental_Info]=N'<p><b> Inspect Tools</b></p>Inspect the maintenance tools used by maintenance personnel for improper or unauthorized modifications.' WHERE [Requirement_Id] = 37753
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Check media containing diagnostic and test programs for malicious code before the media are used in the system. [WMATA System Implementation Statement]

Related Controls: SI-3
', [Supplemental_Info]=N'<p><b> Inspect Media</b></p>Check media containing diagnostic and test programs for malicious code before the media are used in the system.' WHERE [Requirement_Id] = 37754
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Prevent the removal of maintenance equipment containing organizational information by: [WMATA System Implementation Statement]

<li>(1) Verifying that there is no organizational information contained on the equipment; [1: WMATA System Implementation Statement]</li>
<li>(2) Sanitizing or destroying the equipment in accordance with Control 3.12 Media Protection; [2: WMATA System Implementation Statement]</li>
<li>(3) Retaining the equipment within the facility; or [3: WMATA System Implementation Statement]</li>
<li>(4) Obtaining an exemption from the CDO explicitly authorizing removal of the equipment from the facility. [4: WMATA System Implementation Statement]</li>

Related Controls: MP-6
', [Supplemental_Info]=N'<p><b> Prevent Unauthorized Removal</b></p>Prevent the removal of maintenance equipment containing organizational information by:(a) Verifying that there is no organizational information contained on the equipment;(b) Sanitizing or destroying the equipment;(c) Retaining the equipment within the facility; or(d) Obtaining an exemption from [Assignment: organization-defined personnel or roles] explicitly authorizing removal of the equipment from the facility.' WHERE [Requirement_Id] = 37755
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Inspect maintenance tools to ensure the latest software updates and patches are installed. [WMATA System Implementation Statement]

Related Controls: AC-3, AC-6
', [Supplemental_Info]=N'<p><b> Software Updates and Patches</b></p>Inspect maintenance tools to ensure the latest software updates and patches are installed.' WHERE [Requirement_Id] = 37756
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Approve and monitor nonlocal maintenance and diagnostic activities; [a: WMATA System Implementation Statement]</li>
<li>b. Allow the use of nonlocal maintenance and diagnostic tools only as consistent with organizational policy and documented in the security plan for the system; [b: WMATA System Implementation Statement]</li>
<li>c. Employ strong authentication in the establishment of nonlocal maintenance and diagnostic sessions; [c: WMATA System Implementation Statement]</li>
<li>d. Maintain records for nonlocal maintenance and diagnostic activities; and [d: WMATA System Implementation Statement]</li>
<li>e. Terminate session and network connections when nonlocal maintenance is completed. [e: WMATA System Implementation Statement]</li>
Related Controls: AC-2, AC-3, AC-6, AC-17, AU-2, AU-3, IA-2, IA-4, IA-5, IA-8, MA-2, MA-5, PL-2, SC-7, SC-10
<li>f. Security Controls Enhancement(s): [f: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Nonlocal Maintenance</b></p>a. Approve and monitor nonlocal maintenance and diagnostic activities;b. Allow the use of nonlocal maintenance and diagnostic tools only as consistent with organizational policy and documented in the security plan for the system;c. Employ strong authentication in the establishment of nonlocal maintenance and diagnostic sessions;d. Maintain records for nonlocal maintenance and diagnostic activities; ande. Terminate session and network connections when nonlocal maintenance is completed.' WHERE [Requirement_Id] = 37757
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Log [Assignment: organization-defined audit events] for nonlocal maintenance and diagnostic sessions; and [1: WMATA System Implementation Statement]</li>
<li>(2) Review the audit records of the maintenance and diagnostic sessions to detect anomalous behavior. [2: WMATA System Implementation Statement]</li>

Related Controls: AU-6, AU-12

<b><u>NIST 800-82 Rev 3:</u></b>
Rationale for adding MA-4 (1) to MOD and HIGH baselines: OT environments are often heavily dependent on nonlocal maintenance providers, so organizations should have the ability to review logs about relevant maintenance activities. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Nonlocal Maintenance | Logging and Review</b></p>(a) Log [Assignment: organization-defined audit events] for nonlocal maintenance and diagnostic sessions; and(b) Review the audit records of the maintenance and diagnostic sessions to detect anomalous behavior.' WHERE [Requirement_Id] = 37758
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Require that nonlocal maintenance and diagnostic services be performed from a system that implements a security capability comparable to the capability implemented on the system being serviced; or [1: WMATA System Implementation Statement]</li>
<li>(2) Remove the component to be serviced from the system prior to nonlocal maintenance or diagnostic services; sanitize the component (for organizational information); and after the service is performed, inspect, and sanitize the component (for potentially malicious software) before reconnecting the component to the system. [2: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> The organization may need access to nonlocal maintenance and diagnostic services in order to restore essential OT operations or services. Example compensating controls include limiting the extent of the maintenance and diagnostic services to the minimum essential activities, and carefully monitoring and auditing the non-local maintenance and diagnostic activities. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: MP-6, SI-3, SI-7

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization may need access to nonlocal maintenance and diagnostic services in order to restore essential OT operations or services. Example compensating controls include limiting the extent of the maintenance and diagnostic services to the minimum essential activities and carefully monitoring and auditing the nonlocal maintenance and diagnostic activities. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Nonlocal Maintenance | Comparable Security and Sanitization</b></p>(a) Require that nonlocal maintenance and diagnostic services be performed from a system that implements a security capability comparable to the capability implemented on the system being serviced; or(b) Remove the component to be serviced from the system prior to nonlocal maintenance or diagnostic services; sanitize the component (for organizational information); and after the service is performed, inspect and sanitize the component (for potentially malicious software) before reconnecting the component to the system.' WHERE [Requirement_Id] = 37759
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Establish a process for maintenance personnel authorization and maintain a list of authorized maintenance organizations or personnel; [a: WMATA System Implementation Statement]</li>
<li>b. Verify that non-escorted personnel performing maintenance on the system possess the required access authorizations; and [b: WMATA System Implementation Statement]</li>
<li>c. Designate organizational personnel with required access authorizations and technical competence to supervise the maintenance activities of personnel who do not possess the required access authorizations. [c: WMATA System Implementation Statement]</li>
Related Controls: AC-2, AC-3, AC-5, AC-6, IA-2, IA-8, MA-4, MP-2, PE-2, PE-3, PS-7, RA-3
<li>d. Security Controls Enhancement(s): [d: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Maintenance Personnel</b></p>a. Establish a process for maintenance personnel authorization and maintain a list of authorized maintenance organizations or personnel;b. Verify that non-escorted personnel performing maintenance on the system possess the required access authorizations; andc. Designate organizational personnel with required access authorizations and technical competence to supervise the maintenance activities of personnel who do not possess the required access authorizations.' WHERE [Requirement_Id] = 37760
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Implement procedures for the use of maintenance personnel that lack appropriate security clearances or are not U.S. citizens, that include the following requirements: [1: WMATA System Implementation Statement]</li>
<li>(a) Maintenance personnel who do not have needed access authorizations, clearances, or formal access approvals are escorted and supervised during the performance of maintenance and diagnostic activities on the system by approved organizational personnel who are fully cleared, have appropriate access authorizations, and are technically qualified; and [1.a: WMATA System Implementation Statement]</li>
<li>(b) Personnel who do not have needed access authorizations, clearances or formal access approvals shall not be permitted to initiate maintenance or diagnostic activities on the system. All exceptions shall be authorized by the Authorizing Official (AO); and [1.b: WMATA System Implementation Statement]</li>
<li>(2) Develop, document, and receive approval from the AO for any alternate controls to be implemented or used in the event a system component cannot be sanitized, removed, or disconnected from the system. [2: WMATA System Implementation Statement]</li>

Related Controls: MP-6, PL-2
', [Supplemental_Info]=N'<p><b> Individuals Without Appropriate Access</b></p>(a) Implement procedures for the use of maintenance personnel that lack appropriate security clearances or are not U.S. citizens, that include the following requirements:     (1) Maintenance personnel who do not have needed access authorizations, clearances, or formal access approvals are escorted and      supervised during the performance of maintenance and diagnostic activities on the system by approved organizational personnel who are fully      cleared, have appropriate access authorizations, and are technically qualified; and     (2) Prior to initiating maintenance or diagnostic activities by personnel who do not have needed access authorizations, clearances or formal      access approvals, all volatile information storage components within the system are sanitized and all nonvolatile storage media are removed or      physically disconnected from the system and secured; and(b) Develop and implement [Assignment: organization-defined alternate controls] in the event a system component cannot be sanitized, removed, or disconnected from the system.' WHERE [Requirement_Id] = 37761
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Obtain maintenance support and/or spare parts and perform or complete maintenance activities for critical system components within the maximum tolerable downtime (MTD) specified for a system. [WMATA System Implementation Statement]

Related Controls: CM-8, CP-2, CP-7, RA-7, SA-15, SI-13, SR-2, SR-3, SR-4
', [Supplemental_Info]=N'<p><b>Timely Maintenance</b></p>Obtain maintenance support and/or spare parts for [Assignment: organization-defined system components] within [Assignment: organization-defined time period] of failure.' WHERE [Requirement_Id] = 37762
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement]

Related Controls: PM-9, PS-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Media Protection Policy and Procedures</b></p>Control:a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:     1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] media protection policy that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and          (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and     2. Procedures to facilitate the implementation of the media protection policy and the associated media protection controls;b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the media protection policy and procedures; andc. Review and update the current media protection:     1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and     2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37763
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Restrict access to digital and non-digital media to authorized personnel with media protection responsibilities. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Media Access</b></p>Restrict access to [Assignment: organization-defined types of digital and/or non-digital media] to [Assignment: organization-defined personnel or roles].' WHERE [Requirement_Id] = 37764
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Mark system media indicating the distribution limitations, handling caveats, and applicable security markings (if any) of the information; [a: WMATA System Implementation Statement]</li>
<li>b. Media that stores information deemed to be in the public domain (or to be publicly releasable) shall be exempt from media marking requirements only if approved by the AO; and [b: WMATA System Implementation Statement]</li>
<li>c. All other digital and non-digital media shall be subject to media marking requirements. [c: WMATA System Implementation Statement]</li>

Related Controls: AC-19, AU-9, CP-2, CP-9, CP-10, MA-5, MP-4, MP-6, PE-2, PE-3, SC-12, SC-13, SI-12
', [Supplemental_Info]=N'<p><b>Media Marking</b></p>a. Mark system media indicating the distribution limitations, handling caveats, and applicable security markings (if any) of the information; andb. Exempt [Assignment: organization-defined types of system media] from marking if the media remain within [Assignment: organization-defined controlled areas].' WHERE [Requirement_Id] = 37765
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Digital and non-digital media shall be physically controlled and securely stored within authorized locked cabinets or safes in secure/controlled facilities; and [a: WMATA System Implementation Statement]</li>
<li>b. Protect system media types until the media are destroyed or sanitized using approved equipment, techniques, and procedures. [b: WMATA System Implementation Statement]</li>

Related Controls: AC-19, CP-2, CP-6, CP-9, CP-10, MP-2, MP-7, PE-3, PL-2, SC-12, SC-13, SC-28, SI-12
', [Supplemental_Info]=N'<p><b>Media Storage</b></p>a. Physically control and securely store [Assignment: organization-defined types of digital and/or non-digital media] within [Assignment: organization-defined controlled areas]; andb. Protect system media types defined in MP-4a until the media are destroyed or sanitized using approved equipment, techniques, and procedures.' WHERE [Requirement_Id] = 37766
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Protect and control sensitive digital media during transport outside of WMATA facilities using a FIPS 140-2 certified encryption module; [a: WMATA System Implementation Statement]</li>
<li>b. Maintain accountability for sensitive system media during transport outside of controlled areas; [b: WMATA System Implementation Statement]</li>
<li>c. Document activities in accordance with Control 3.8 Data Sensitivity associated with the transport of sensitive system media; and [c: WMATA System Implementation Statement]</li>
<li>d. Restrict the activities as referenced in the Data Centers associated with the transport of sensitive system media to authorized personnel. [d: WMATA System Implementation Statement]</li>

Related Controls: AC-7, AC-19, CP-2, CP-9, MP-3, MP-4, PE-16, PL-2, SC-12, SC-13, SC-28

In addition to the above NIST controls, the following cybersecurity requirements further define WMATA policy:

<li>1. Media Transport: Employ the following controls when using WMATA media at alternate work sites: [1: WMATA System Implementation Statement]</li>
<li>a. Controls in accordance with P/I 7.4.3 Telework Policy and associated appendices. [1.a: WMATA System Implementation Statement]</li>
<li>b. Any personnel working outside of the United States shall use virtual infrastructures to access WMATA systems and/or networks. [1.b: WMATA System Implementation Statement]</li>
<li>i) No WMATA information shall be transported or stored on physical or virtual systems or devices that are not owned and controlled by WMATA. [1.b.i: WMATA System Implementation Statement]</li>
<li>ii) Specific exemptions shall be documented for submittal and approved in advance by the AO. [1.b.ii: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Media Transport</b></p>a. Protect and control [Assignment: organization-defined types of system media] during transport outside of controlled areas using [Assignment: organization-defined controls];b. Maintain accountability for system media during transport outside of controlled areas;c. Document activities associated with the transport of system media; andd. Restrict the activities associated with the transport of system media to authorized personnel.' WHERE [Requirement_Id] = 37767
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Sanitize digital media including prior to disposal, release out of organizational control, or release for reuse in alignment with NIST requirements; and [a: WMATA System Implementation Statement]</li>
<li>b. Employ sanitization mechanisms with the strength and integrity commensurate with the sensitivity of the information. [b: WMATA System Implementation Statement]</li>
Related Controls: AC-3, AC-7, AU-11, MA-2, MA-3, MA-4, MA-5, PM-22, SI-12, SI-18, SI-19, SR-11
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>

In addition to the above NIST controls, the following cybersecurity requirements further define WMATA policy:

<li>1. Destructive Techniques: For assets that are not sanitized, destructive techniques may be used to protect WMATA information. [1: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Media Sanitization</b></p>a. Sanitize [Assignment: organization-defined system media] prior to disposal, release out of organizational control, or release for reuse using [Assignment: organization-defined sanitization techniques and procedures]; andb. Employ sanitization mechanisms with the strength and integrity commensurate with the security category or classification of the information.' WHERE [Requirement_Id] = 37768
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Review, approve, track, document, and verify media sanitization and disposal actions. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Review, Approve, Track, Document, and Verify</b></p>Review, approve, track, document, and verify media sanitization and disposal actions.' WHERE [Requirement_Id] = 37769
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Test sanitization equipment and procedures annually to ensure that the intended sanitization is being achieved. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Equipment Testing</b></p>Test sanitization equipment and procedures [Assignment: organization-defined frequency] to ensure that the intended sanitization is being achieved.' WHERE [Requirement_Id] = 37770
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Apply nondestructive sanitization techniques to portable storage devices including internal and external hard disk drives (e.g., solid state, magnetic), optical discs, magnetic or optical tapes, flash memory devices, flash memory cards, and other external or removable disks prior to connecting such devices to the system. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Nondestructive Techniques</b></p>Apply nondestructive sanitization techniques to portable storage devices prior to connecting such devices to the system under the following circumstances: [Assignment: organization-defined circumstances requiring sanitization of portable storage devices].' WHERE [Requirement_Id] = 37771
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<p><strong>WMATA Policy</strong></p><p>Restrict or prohibit field maintenance on [Assignment: organization-defined systems or system components] to [Assignment: organization-defined trusted maintenance facilities].</p><p><strong><u>OT Systems Only:</strong></u> Organizations identify OT system/systems components with specific calibration, maintenance, or other requirements and limit maintenance to specific facilities. Some examples may include safety critical systems or systems involved in custody transfer where accuracy tolerances are limited and additional quality control checks are required. <br>	<br>Related Controls: MA-2, MA-4, MA-5</p><p><strong><u>NIST 800-82 Rev 3:</strong></u><br>OT Discussion: Organizations identify OT systems and system components with specific calibration, maintenance, or other requirements and limit maintenance to specific facilities. Some examples may include safety-critical systems or systems involved in custody transfer where accuracy tolerances are limited and additional quality control checks are required.</p><p>Rationale for adding MA-7 to LOW, MOD, and HIGH baselines: Some OT equipment have specific requirements for calibration, maintenance, and modification to meet regulatory or safety standards. Different deployed locations may impact the quality and precision of field maintenance. </p><p><strong>NIST SP800-53 R5</strong></p><p>Field maintenance is the type of maintenance conducted on a system or system component after the system or component has been deployed to a specific site (i.e., operational environment). In certain instances, field maintenance (i.e., local maintenance at the site) may not be executed with the same degree of rigor or with the same quality control checks as depot maintenance. For critical systems designated as such by the organization, it may be necessary to restrict or prohibit field maintenance at the local site and require that such maintenance be conducted in trusted facilities with additional controls.</p>', [Supplemental_Info]=N'<p><b>Field Maintenance</b></p>Restrict or prohibit field maintenance on [Assignment: organization-defined systems or system components] to [Assignment: organization-defined trusted maintenance facilities].' WHERE [Requirement_Id] = 37772
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Restrict the use of disk drives, diskettes, internal and external hard drives, and portable devices, including backup media, removable media, and mobile devices on information systems or system components using security safeguards; and [a: WMATA System Implementation Statement]</li>
<li>b. Prohibit the use of non-WMATA-issued portable storage devices in organizational systems when such devices have no identifiable owner. [b: WMATA System Implementation Statement]</li>

Related Controls: AC-19, AC-20, PL-4, PM-12, SC-41

In addition to the above NIST controls, the following cybersecurity requirements further define WMATA policy:

<li>1. Destructive Techniques: For assets that are not sanitized, destructive techniques may be used to protect WMATA information. [1: WMATA System Implementation Statement]</li>


', [Supplemental_Info]=N'<p><b>Media Use</b></p>a. [Selection: Restrict; Prohibit] the use of [Assignment: organization-defined types of system media] on [Assignment: organization-defined systems or system components] using [Assignment: organization-defined controls]; andb. Prohibit the use of portable storage devices in organizational systems when such devices have no identifiable owner.' WHERE [Requirement_Id] = 37773
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. The OT components can be distributed over a large facility footprint or geographic area and can be any entry point into the entire organizational network OT. Regulatory controls may also apply. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AT-3, PM-9, PS-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. The OT components can be distributed over a large facility footprint or geographic area and can be an entry point into the entire organizational network OT. Regulatory controls may also apply. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Physical and Environmental Protection Policy and Procedures</b></p>a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:     1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] physical and environmental protection policy      that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and          (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and     2. Procedures to facilitate the implementation of the physical and environmental protection policy and the associated physical and      environmental protection controls;b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the physical and environmental protection policy and procedures; andc. Review and update the current physical and environmental protection:     1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and     2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37774
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Provide the capability of shutting off power to systems or individual system components in emergency situations for facilities with concentrations of system resources (e.g., data centers, mainframe computer rooms, server rooms, and areas with computer-controlled machinery); [a: WMATA System Implementation Statement]</li>
<li>b. Place emergency shutoff switches or devices in accessible locations to facilitate access for authorized personnel; [b: WMATA System Implementation Statement]</li>
<li>c. Protect emergency power shutoff capability from unauthorized activation; and [c: WMATA System Implementation Statement]</li>
<li>d. Appoint a WMATA employee or contractor to manage all emergency shutoff capabilities. [d: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> It may not be possible or advisable to shut off power to some OT. The [organization-defined parameters] for this control should be implemented in consultation with safety and operational personnel. Example compensating controls include failing to a known state and emergency procedures. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: PE-15

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: It may not be possible or advisable to shut off power to some OT. The organizational-defined parameters for this control should be implemented in consultation with safety and operational personnel. Example compensating controls include failing to a known state and emergency procedures. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Emergency Shutoff</b></p>a. Provide the capability of shutting off power to [Assignment: organization-defined system or individual system components] in emergency situations;b. Place emergency shutoff switches or devices in [Assignment: organization-defined location by system or system component] to facilitate access for authorized personnel; andc. Protect emergency power shutoff capability from unauthorized activation.' WHERE [Requirement_Id] = 37775
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Provide an uninterruptible power supply to facilitate an orderly shutdown of the system and transition of the system to long-term alternate power in the event of a primary power source loss; and [a: WMATA System Implementation Statement]</li>
<li>b. Appoint a WMATA employee or contractor to manage all emergency power capabilities. [b: WMATA System Implementation Statement]</li>
Related Controls: AT-3, CP-2, CP-7
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Emergency Power</b></p>Provide an uninterruptible power supply to facilitate [Selection (one or more): an orderly shutdown of the system; transition of the system to long-term alternate power] in the event of a primary power source loss.' WHERE [Requirement_Id] = 37776
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) WMATA shall provide an automatic alternate power supply for systems to ensure required operational capability in the event of an extended loss of the primary power source. [1: WMATA System Implementation Statement]</li>
<li>(2) In the event both the primary and alternate power supply, a graceful shutdown of the system shall occur in accordance with Control 3.19 System and Services Acquisition control. [2: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b> Alternate Power Supply — Minimal Operational Capability</b></p>Provide an alternate power supply for the system that is activated [Selection: manually; automatically] and that can maintain minimally required operational capability in the event of an extended loss of the primary power source.' WHERE [Requirement_Id] = 37777
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Provide an alternate power supply for the system that is activated [Selection: manually; automatically] and that is: [WMATA System Implementation Statement]

<li>(1) Self-contained; [1: WMATA System Implementation Statement]</li>
<li>(2) Not reliant on external power generation; and [2: WMATA System Implementation Statement]</li>
<li>(3) Capable of maintaining [Selection: minimally required operational capability; full operational capability] in the event of an extended loss of the primary power source. [3: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b> Alternate Power Supply – Self-Contained</b></p>Provide an alternate power supply for the system that is activated [Selection: manually; automatically] and that is:(a) Self-contained;(b) Not reliant on external power generation; and(c) Capable of maintaining [Selection: minimally required operational capability; full operational capability] in the event of an extended loss of the primary power source.' WHERE [Requirement_Id] = 37778
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Employ and maintain automatic emergency lighting for the system that activates in the event of a power outage or disruption and that covers emergency exits and evacuation routes within the facility. [WMATA System Implementation Statement]

Related Controls: CP-2, CP-7
', [Supplemental_Info]=N'<p><b>Emergency Lighting</b></p>Employ and maintain automatic emergency lighting for the system that activates in the event of a power outage or disruption and that covers emergency exits and evacuation routes within the facility.' WHERE [Requirement_Id] = 37779
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Employ and maintain fire detection and suppression systems that are supported by an independent energy source. [a: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Fire suppression mechanisms should take the OT environment into account (e.g., water sprinkler systems could be hazardous in specific environments). [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AT-3
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Fire suppression mechanisms should take the OT environment into account (e.g., water sprinkler systems could be hazardous in specific environments). [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Fire Protection</b></p>Employ and maintain fire detection and suppression systems that are supported by an independent energy source.' WHERE [Requirement_Id] = 37780
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Employ fire detection systems that activate automatically and notify MTPD, Office of Emergency Management, Facilities, MEMC, Cyber Fusion Center, and emergency responders in the event of a fire. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Detection Systems – Automatic Activation and Notification</b></p>Employ fire detection systems that activate automatically and notify [Assignment: organization-defined personnel or roles] and [Assignment: organization-defined emergency responders] in the event of a fire.' WHERE [Requirement_Id] = 37781
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Employ fire suppression systems that activate automatically and notify MTPD, Office of Emergency Management, Facilities, MEMC, Cyber Fusion Center, and emergency responders. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Suppression Systems – Automatic Activation and Notification</b></p>(a) Employ fire suppression systems that activate automatically and notify [Assignment: organization-defined personnel or roles] and [Assignment: organization-defined emergency responders]; and(b) Employ an automatic fire suppression capability when the facility is not staffed on a continuous basis.' WHERE [Requirement_Id] = 37782
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Maintain temperature, humidity, pressure, radiation, and other applicable environmental control levels within facilities that contain concentrations of system resources (e.g., data centers, mainframe computer rooms, and server rooms) where systems reside at [Assignment: organization-defined acceptable levels]; and [WMATA System Implementation Statement]

<li>b. Monitor environmental control levels at least twice daily. [b: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Temperature and humidity controls are typically components of other OT systems such as the HVAC, process, or lighting systems, or can be a standalone and unique OT system. OT can operate in extreme environments and both interior and exterior locations. For a specific OT, the temperature and humidity design and operational parameters dictate the performance specifications. As OT and IT become interconnected and the network provides connectivity across the hybrid domain, power circuits, distribution closets, routers, and switches that support fire protection and life safety systems must be maintained at the proper temperature and humidity. When environmental controls cannot be implemented, use hardware that is engineered to withstand the unique environmental hazards. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AT-3, CP-2

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Temperature and humidity controls are typically components of other OT systems (e.g., HVAC, process, or lighting systems) or can be a stand-alone and unique OT system. OT can operate in extreme environments and both interior and exterior locations. For a specific OT, the temperature and humidity design and operational parameters dictate the performance specifications. Power circuits, distribution closets, routers, and switches that support fire protection and life safety systems must be maintained at the proper temperature and humidity. When environmental controls cannot be implemented, use hardware that is engineered to withstand the OT’s unique environmental hazards. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Environmental Controls</b></p>a. Maintain [Selection (one or more): temperature; humidity; pressure; radiation; [Assignment: organization-defined environmental control]] levels within the facility where the system resides at [Assignment: organization-defined acceptable levels]; andb. Monitor environmental control levels [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37783
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Protect systems from damage resulting from water leakage by providing master shutoff or isolation valves that are accessible, working properly, and known to key personnel. [a: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Water damage protection and use of shutoff and isolation valves is both a procedural action and a specific type of OT. OT used in the manufacturing, hydropower, transportation/navigation, water, and wastewater industries rely on the movement of water and are specifically designed to manage the quantity/flow and pressure of water. As OT and IT become interconnected and the network provides connectivity across the hybrid domain, power circuits, distribution closets, routers and switches that support fire protection and life safety systems should ensure that water will not disable the system (e.g., a fire that activates the sprinkler system does not spray onto the fire control servers, router, switches and short out the alarms, egress systems, emergency lighting, and suppression systems). [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AT-3, PE-10
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Water damage protection and the use of shutoff and isolation valves are procedural actions and specific types of OT. OT used in the manufacturing, hydropower, transportation/navigation, water, and wastewater industries rely on the movement of water and are specifically designed to manage the quantity, flow, and pressure of water. Power circuits, distribution closets, routers, and switches that support fire protection and life safety systems should ensure that water will not disable the system (e.g., a fire that activates the sprinkler system does not spray onto the fire control servers, routers, or switches or short out the alarms, egress systems, emergency lighting, or suppression systems). [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Water Damage Protection</b></p>Protect the system from damage resulting from water leakage by providing master shutoff or isolation valves that are accessible, working properly, and known to key personnel.' WHERE [Requirement_Id] = 37784
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Detect the presence of water near the system and alert MTPD, Office of Emergency Management, Facilities, MEMC, and Cyber Fusion Center using automated mechanisms. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Automation Support</b></p>Detect the presence of water near the system and alert [Assignment: organization-defined personnel or roles] using [Assignment: organization-defined automated mechanisms].' WHERE [Requirement_Id] = 37785
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Authorize and control systems and system components that enter or exit facilities or secured areas to include areas designated for delivery, maintenance/service, or media libraries. [a: WMATA System Implementation Statement]</li>
<li>b. Maintain records of the system components in an organizational asset management system. [b: WMATA System Implementation Statement]</li>

Related Controls: CM-3, CM-8, MA-2, MA-3, MP-5, SR-2, SR-3, SR-4, SR-6
', [Supplemental_Info]=N'<p><b>Delivery and Removal</b></p>a. Authorize and control [Assignment: organization-defined types of system components] entering and exiting the facility; andb. Maintain records of the system components.' WHERE [Requirement_Id] = 37786
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Determine and document approved alternate work sites allowed for use by employees during contingency operations; [a: WMATA System Implementation Statement]</li>
<li>b. Employ the following controls at alternate work sites: [b: WMATA System Implementation Statement]</li>
<li>i) Use of facilities not owned or operated by WMATA and not covered in accordance with P/I 7.4 Telework Policy are subject to approval for operating or accessing systems by the AO; and [b.i: WMATA System Implementation Statement]</li>
<li>ii) For alternate work sites without access to MetroNet, personnel shall only connect to MetroNet using approved secure means (e.g., Virtual Private Network (VPN), Virtual Desktop Infrastructure (VDI), etc.). [b.ii: WMATA System Implementation Statement]</li>
<li>c. Assess the effectiveness of controls at alternate work sites; and [c: WMATA System Implementation Statement]</li>
<li>d. Provide a means for employees to communicate with information security and privacy personnel in case of incidents. [d: WMATA System Implementation Statement]</li>

Related Controls: AC-17, AC-18, CP-7
', [Supplemental_Info]=N'<p><b>Alternate Work Site</b></p>a. Determine and document the [Assignment: organization-defined alternate work sites] allowed for use by employees;b. Employ the following controls at alternate work sites: [Assignment: organization-defined controls];c. Assess the effectiveness of controls at alternate work sites; andd. Provide a means for employees to communicate with information security and privacy personnel in case of incidents.' WHERE [Requirement_Id] = 37787
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Position system components within the facility to minimize potential damage from physical and environmental hazards and to minimize the opportunity for unauthorized access. [WMATA System Implementation Statement]

Related Controls: CP-2, PE-5, RA-3
', [Supplemental_Info]=N'<p><b>Location of System Components</b></p>Position system components within the facility to minimize potential damage from [Assignment: organization-defined physical and environmental hazards] and to minimize the opportunity for unauthorized access.' WHERE [Requirement_Id] = 37788
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Develop, approve, and maintain a list of employees and contractors with authorized access to the facility and sensitive area where systems reside; [a: WMATA System Implementation Statement]</li>
<li>b. Issue authorization credentials for facility and sensitive area access; [b: WMATA System Implementation Statement]</li>
<li>c. Review the access list detailing authorized facility and sensitive area access by individuals quarterly; and [c: WMATA System Implementation Statement]</li>
<li>d. Remove individuals from facility and sensitive area access lists when access is no longer required. [d: WMATA System Implementation Statement]</li>

Related Controls: AT-3, AU-9, IA-4, MA-5, MP-2, PE-3, PE-4, PE-5, PE-8, PM-12, PS-3, PS-4, PS-5, PS-6
', [Supplemental_Info]=N'<p><b>Physical Access Authorizations</b></p>a. Develop, approve, and maintain a list of individuals with authorized access to the facility where the system resides;b. Issue authorization credentials for facility access;c. Review the access list detailing authorized facility access by individuals [Assignment: organization-defined frequency]; andd. Remove individuals from the facility access list when access is no longer required.' WHERE [Requirement_Id] = 37789
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Employ [Assignment: organization-defined protective measures] against electromagnetic pulse damage for [Assignment: organization-defined systems and system components]. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Organizations managing OT equipment may choose to utilize electromagnetic (EM) pulse protection to prevent adversarial or environmental EM threats. Organizations may select to follow National Coordinating Center for Communications (NCC) guidelines on EM pulse protection. [OT Systems Only: WMATA System Implementation Statement]
	
Related Controls: PE-18

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Organizations that manage OT equipment may choose to utilize EMP protection to prevent adversarial or environmental electromagnetic threats. Organizations may select to follow National Coordinating Center for Communications (NCC) guidelines on EM pulse protection. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Electromagnetic Pulse Protection</b></p>Employ [Assignment: organization-defined protective measures] against electromagnetic pulse damage for [Assignment: organization-defined systems and system components].' WHERE [Requirement_Id] = 37790
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Mark [Assignment: organization-defined system hardware components] indicating the impact level or classification level of the information permitted to be processed, stored, or transmitted by the hardware component. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Hardware components are marked or labeled to indicate which information is processed, stored, or transmitted. Component markings can be useful in differentiating between safety and control systems, OT and IT equipment, and internally and externally connected systems. Marking components reduces the probability of mismanaging the system or performing maintenance on an incorrect device. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-3, AC-4, MP-3

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Hardware components are marked or labeled to indicate information that is processed, stored, or transmitted. Component markings can be useful for differentiating between safety and control systems, OT and IT equipment, and internally and externally connected systems. Marking components reduces the probability of mismanaging the system or performing maintenance on an incorrect device. [NIST 800-82 Rev 3_OT Discussion: WMATA System Implementation Statement]

Rationale for adding PE-22 to MOD and HIGH baselines: OT is unique in that it may look like an IT component but perform a very different function. Visible differentiation between components that perform different functions can help reduce reliability incidents due to maintenance errors. [NIST 800-82 Rev 3_Rationale: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Component Marking</b></p>Mark [Assignment: organization-defined system hardware components] indicating the impact level or classification level of the information permitted to be processed, stored, or transmitted by the hardware component.' WHERE [Requirement_Id] = 37791
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Enforce physical access authorizations at entry and exit points to facilities and sensitive areas where systems reside by: [a: WMATA System Implementation Statement]</li>
<li>i) Verifying individual access authorizations before granting access to the facility and sensitive areas; and [a.i: WMATA System Implementation Statement]</li>
<li>ii) Controlling ingress and egress to the facility and sensitive areas using physical access control personnel (e.g., guards), or systems and devices. [a.ii: WMATA System Implementation Statement]</li>
<li>b. Maintain physical access audit logs for all controlled entry or exit points for all facilities, and secured areas within facilities to include those secured areas listed in accordance with Control 3.14 Physical and Environmental Protection, Section 4, “PE-4 Access Control for </li>
Transmission” and areas that store, process or transmit sensitive information in accordance with Control 3.8 Data Sensitivity; [b: WMATA System Implementation Statement]
<li>c. Control access to areas within the facility designated as publicly accessible by implementing the following controls: physical access control logs/records, guards, and physical access devices and barriers to prevent movement from publicly accessible areas to non-public areas; [c: WMATA System Implementation Statement]</li>
<li>d. WMATA employees shall escort visitors and control visitor activity at all times; [d: WMATA System Implementation Statement]</li>
<li>e. Secure keys, combinations, and other physical access devices; [e: WMATA System Implementation Statement]</li>
<li>f. Inventory and centrally manage physical access devices to include keys, locks, combinations, safes, biometric readers, and card readers and systems every year; and [f: WMATA System Implementation Statement]</li>
<li>g. Change combinations and keys annually and/or when keys are lost, combinations are compromised, or when individuals possessing the keys or combinations are transferred or terminated. [g: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> The organization considers OT safety and security interdependencies. The organization considers access requirements in emergency situations. During an emergency-related event, the organization may restrict access to OT facilities and assets to authorized individuals only. OT systems are often constructed of devices that either do not have or cannot use comprehensive access control capabilities due to time-restrictive safety constraints. Physical access controls and defense-in-depth measures are used by the organization when necessary and possible to supplement OT security when electronic mechanisms are unable to fulfill the security requirements of the organization’s security plan. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AT-3, AU-2, AU-6, AU-9, CP-10, IA-3, IA-8, MA-5, MP-2, MP-4, PE-2, PE-4, PE-5, PE-8, PS-2, PS-3, PS-6, PS-7, RA-3, SC-28, SI-4, SR-3
<li>h. Security Controls Enhancement(s): [h: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization considers OT safety and security interdependencies and access requirements in emergency situations. During an emergency, the organization may restrict access to OT facilities and assets to authorized individuals only. OT systems are often constructed of devices that do not have or cannot use comprehensive access control capabilities due to timerestrictive safety constraints. Physical access controls and defense-in-depth measures are used by the organization when necessary and possible to supplement OT security when electronic mechanisms are unable to fulfill the security requirements of the organization’s security plan. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Physical Access Control</b></p>a. Enforce physical access authorizations at [Assignment: organization-defined entry and exit points to the facility where the system resides] by:     1. Verifying individual access authorizations before granting access to the facility; and     2. Controlling ingress and egress to the facility using [Selection (one or more): [Assignment: organization-defined physical access control      systems or devices]; guards];b. Maintain physical access audit logs for [Assignment: organization-defined entry or exit points];c. Control access to areas within the facility designated as publicly accessible by implementing the following controls: [Assignment: organization-defined physical access controls];d. Escort visitors and control visitor activity [Assignment: organization-defined circumstances requiring visitor escorts and control of visitor activity];e. Secure keys, combinations, and other physical access devices;f. Inventory [Assignment: organization-defined physical access devices] every [Assignment: organization-defined frequency]; andg. Change combinations and keys [Assignment: organization-defined frequency] and/or when keys are lost, combinations are compromised, or when individuals possessing the keys or combinations are transferred or terminated.' WHERE [Requirement_Id] = 37792
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Enforce physical access authorizations to systems and applicable system components in addition to the physical access controls for the facility. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> System Access</b></p>Enforce physical access authorizations to the system in addition to the physical access controls for the facility at [Assignment: organization-defined physical spaces containing one or more components of the system].' WHERE [Requirement_Id] = 37793
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Control physical access to system distribution and transmission lines within organizational facilities using security controls to include disconnected or locked spare jacks, locked wiring closets, protection of cabling by conduit or cable trays, and wiretapping sensors. [WMATA System Implementation Statement]

Related Controls: AT-3, IA-4, MP-2, MP-4, PE-2, PE-3, PE-5, PE-9, SC-7, SC-8
', [Supplemental_Info]=N'<p><b>Access Control for Transmission</b></p>Control physical access to [Assignment: organization-defined system distribution and transmission lines] within organizational facilities using [Assignment: organization-defined security controls].' WHERE [Requirement_Id] = 37794
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Control physical access to output devices which display sensitive information (e.g., rail command and control, law enforcement sensitive, etc.) or display devices processing internal or sensitive information visible to the general public to prevent unauthorized individuals from obtaining output. Ensure that output devices are: [WMATA System Implementation Statement]

<li>a. Located in locked rooms or other secured areas that only allow access to authorized individuals; [a: WMATA System Implementation Statement]</li>
<li>b. Placed in locations that can be monitored by authorized personnel; and [b: WMATA System Implementation Statement]</li>
<li>c. Installed with monitor or screen filters (when applicable). [c: WMATA System Implementation Statement]</li>

Related Controls: PE-2, PE-3, PE-4, PE-18
', [Supplemental_Info]=N'<p><b>Access Control for Output Devices</b></p>Control physical access to output from [Assignment: organization-defined output devices] to prevent unauthorized individuals from obtaining the output.' WHERE [Requirement_Id] = 37795
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Implement layered physical security controls to provide authorized access to facilities and systems; [a: WMATA System Implementation Statement]</li>
<li>b. Monitor physical access to the facility where systems reside to detect and respond to physical security incidents; [b: WMATA System Implementation Statement]</li>
<li>c. Review physical access logs monthly and upon occurrence of indications of security violations, suspicious physical access activities, and when notified of suspicious logical access activities that can be correlated with physical access control events; and [c: WMATA System Implementation Statement]</li>
<li>d. Coordinate results of reviews and investigations with the organizational incident response capability. [d: WMATA System Implementation Statement]</li>
Related Controls: AU-2, AU-6, AU-9, AU-12, CA-7, CP-10, IR-4, IR-8
<li>e. Security Controls Enhancement(s): [e: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Monitoring Physical Access</b></p>a. Monitor physical access to the facility where the system resides to detect and respond to physical security incidents;b. Review physical access logs [Assignment: organization-defined frequency] and upon occurrence of [Assignment: organization-defined events or potential indications of events]; andc. Coordinate results of reviews and investigations with the organizational incident response capability.' WHERE [Requirement_Id] = 37796
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Monitor physical access to the facility where systems reside using physical intrusion alarms and surveillance equipment. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Intrusion Alarms and Surveillance Equipment</b></p>Monitor physical access to the facility where the system resides using physical intrusion alarms and surveillance equipment.' WHERE [Requirement_Id] = 37797
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Monitor physical access to systems in addition to the physical access monitoring of the facility at physical spaces containing one or more components of the system. [WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
Rationale for adding PE-6 (4) to MOD baseline: Many of the OT components are in remote geographical and dispersed locations. Other components may be in ceilings, floors, or distribution closets. Furthermore, physical access controls are frequently used as compensating controls when devices lack the ability to enforce logical access restrictions. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Monitoring Physical Access | Monitoring Physical Access to Systems</b></p>Monitor physical access to the system in addition to the physical access monitoring of the facility at [Assignment: organization-defined physical spaces containing one or more components of the system].' WHERE [Requirement_Id] = 37798
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Maintain visitor access records to the facility where the system resides for five years. Visitor access records include the names and organizations of individuals visiting, visitor signatures, forms of identification, dates of access, entry and departure times, purpose of visits, and the names and organizations of individuals visited. [a: WMATA System Implementation Statement]</li>
<li>b. Review visitor access records for sensitive areas within the facility where systems reside monthly. Access record reviews determine if access authorizations were and still are required to support organizational mission and business functions. [b: WMATA System Implementation Statement]</li>
<li>c. Report anomalies in visitor access records to MTPD. In addition, all anomalies for sensitive areas that house systems shall be reported to Metro Enterprise Monitoring Center (MEMC) and the Cyber Fusion Center. [c: WMATA System Implementation Statement]</li>
Related Controls: PE-2, PE-3, PE-6
<li>d. Security Controls Enhancement(s): [d: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Visitor Access Records</b></p>a. Maintain visitor access records to the facility where the system resides for [Assignment: organization-defined time period];b. Review visitor access records [Assignment: organization-defined frequency]; andc. Report anomalies in visitor access records to [Assignment: organization-defined personnel].' WHERE [Requirement_Id] = 37799
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Maintain and review visitor access records using automated mechanisms. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Automated Records Maintenance and Review</b></p>Maintain and review visitor access records using [Assignment: organization-defined automated mechanisms].' WHERE [Requirement_Id] = 37800
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Limit personally identifiable information contained in visitor access records to include the full name of the individual, Driver’s License Number (or other approved identifier if not available), and the escort name and badge number. [WMATA System Implementation Statement]

Related Controls: RA-3, SA-8
', [Supplemental_Info]=N'<p><b> Limit Personally Identifiable Information Elements</b></p>Limit personally identifiable information contained in visitor access records to the following elements identified in the privacy risk assessment: [Assignment: organization-defined elements].' WHERE [Requirement_Id] = 37801
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Protect power equipment and power cabling for the system from damage and destruction. [WMATA System Implementation Statement]

Related Controls: PE-4
', [Supplemental_Info]=N'<p><b>Power Equipment and Cabling</b></p>Protect power equipment and power cabling for the system from damage and destruction.' WHERE [Requirement_Id] = 37802
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement]

Related Controls: PM-9, PS-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Planning Policy and Procedures</b></p>a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:     1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] planning policy that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and          (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and     2. Procedures to facilitate the implementation of the planning policy and the associated planning controls;b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the planning policy and procedures; andc. Review and update the current planning:     1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and     2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37803
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Security control baselines shall be in place for all systems. Deviations to control baselines shall be approved by the AO. [WMATA System Implementation Statement]

Related Controls: PL-2, PL-11, RA-2, RA-3, SA-8
', [Supplemental_Info]=N'<p><b>Baseline Selection</b></p>Select a control baseline for the system.' WHERE [Requirement_Id] = 37804
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Tailoring of selected control baselines shall be performed in consultation with DMCS and approval by the AO. [WMATA System Implementation Statement]

Related Controls: PL-10, RA-2, RA-3, RA-9, SA-8
', [Supplemental_Info]=N'<p><b>Baseline Tailoring</b></p>Tailor the selected control baseline by applying specified tailoring actions.' WHERE [Requirement_Id] = 37805
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Develop system security plan for the system that: [a: WMATA System Implementation Statement]</li>
<li>i) Are consistent with the organization’s enterprise architecture; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Explicitly define the constituent system components; [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Describe the operational context of the system in terms of mission and business processes; [a.iii: WMATA System Implementation Statement]</li>
<li>iv) Identify the individuals that fulfill system roles and responsibilities; [a.iv: WMATA System Implementation Statement]</li>
<li>v) Identify the information types processed, stored, and transmitted by the system; [a.v: WMATA System Implementation Statement]</li>
<li>vi) Provide the security categorization of the system, including supporting rationale; [a.vi: WMATA System Implementation Statement]</li>
<li>vii) Describe any specific threats to the system that are of concern to the organization; [a.vii: WMATA System Implementation Statement]</li>
<li>viii) Describe the operational environment for the system and any dependencies on or connections to other systems or system components; [a.viii: WMATA System Implementation Statement]</li>
<li>ix) Provide an overview of the System Security Plan (SSP) requirements for the system; [a.ix: WMATA System Implementation Statement]</li>
<li>x) Identify any relevant control baselines or overlays, if applicable; [a.x: WMATA System Implementation Statement]</li>
<li>xi) Describe the controls in place or planned for meeting the security and privacy requirements, including a rationale for any tailoring decisions; [a.xi: WMATA System Implementation Statement]</li>
<li>xii) Include risk determinations for security and privacy architecture and design decisions; [a.xii: WMATA System Implementation Statement]</li>
<li>xiii) Document and map to applicable security controls or system documentation security- and privacy-related emergency and non-emergency activities that require planning and coordination with other organizational individuals, teams, or groups to include assessments, audits, inspections, hardware and software maintenance, acquisition and supply chain risk management, patch management, and ISCP testing; and [a.xiii: WMATA System Implementation Statement]</li>
<li>xiv) Are reviewed and approved by the authorizing official or designated representative prior to plan implementation. [a.xiv: WMATA System Implementation Statement]</li>
<li>b. Distribute copies of the SSP and communicate subsequent changes to the plans to required holders; [b: WMATA System Implementation Statement]</li>
<li>c. Review the SSP annually; [c: WMATA System Implementation Statement]</li>
<li>d. Update the SSP to address changes to the system and environment of operation or problems identified during plan implementation or control assessments; and [d: WMATA System Implementation Statement]</li>
<li>e. Protect the plans from unauthorized disclosure and modification. [e: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> When systems are highly interconnected, coordinated planning is essential. A low-impact system could adversely affect a higher-impact system. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-2, AC-6, AC-14, AC-17, AC-20, CA-2, CA-3, CA-7, CM-9, CP-2, CP-4, IR-4, IR-8, MA-4, MA-5, MP-4, MP-5, PL-7, PL-8, PL-10, PL-11, PM-1, PM-7, PM-8, PM-9, PM-10R, PM-11, RA-3, RA-8, RA-9, SA-5, SA-17, SA-22, SI-12, SR-2, SR-4

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: When systems are highly interconnected, coordinated planning is essential. A low-impact system could adversely affect a higher-impact system. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>System Security and Privacy Plans</b></p>a. Develop security and privacy plans for the system that:     1. Are consistent with the organization’s enterprise architecture;     2. Explicitly define the constituent system components;     3. Describe the operational context of the system in terms of mission and business processes;     4. Identify the individuals that fulfill system roles and responsibilities;     5. Identify the information types processed, stored, and transmitted by the system;     6. Provide the security categorization of the system, including supporting rationale;     7. Describe any specific threats to the system that are of concern to the organization;     8. Provide the results of a privacy risk assessment for systems processing personally identifiable information;     9. Describe the operational environment for the system and any dependencies on or connections to other systems or system components;   10. Provide an overview of the security and privacy requirements for the system;   11. Identify any relevant control baselines or overlays, if applicable;   12. Describe the controls in place or planned for meeting the security and privacy requirements, including a rationale for any tailoring decisions;   13. Include risk determinations for security and privacy architecture and design decisions;   14. Include security- and privacy-related activities affecting the system that require planning and coordination with [Assignment: organization-     defined individuals or groups]; and   15. Are reviewed and approved by the authorizing official or designated representative prior to plan implementation.b. Distribute copies of the plans and communicate subsequent changes to the plans to [Assignment: organization-defined personnel or roles];c. Review the plans [Assignment: organization-defined frequency];d. Update the plans to address changes to the system and environment of operation or problems identified during plan implementation or control    assessments; ande. Protect the plans from unauthorized disclosure and modification.' WHERE [Requirement_Id] = 37806
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Maintain general user rules of behavior agreement and privileged user rules of behavior agreement. [a: WMATA System Implementation Statement]</li>
<li>b. Establish and provide to individuals requiring access to the system the rules that describe their responsibilities and expected behavior for information and system usage and security; [b: WMATA System Implementation Statement]</li>
<li>c. Receive a documented acknowledgment from such individuals, indicating that they have read, understand, and agree to abide by the rules of behavior, before authorizing access to information and the system; [c: WMATA System Implementation Statement]</li>
<li>d. Review and update the rules of behavior annually; and [d: WMATA System Implementation Statement]</li>
<li>e. Require users who have acknowledged a previous version of the rules of behavior to read and re-acknowledge rules of behavior annually or when they are revised or updated. [e: WMATA System Implementation Statement]</li>
<li>f. Document in the privileged rules of behavior agreement that privileged users are authorized (and therefore, trusted) to perform security-relevant functions that ordinary users are not authorized to perform. [f: WMATA System Implementation Statement]</li>
Related Controls: AC-2, AC-6, AC-8, AC-17, AC-18, AC-19, AC-20, AT-2, AT-3, CM-11, IA-2, IA-4, IA-5, MP-7, PS-6, PS-8, SA-5, SI-12
<li>g. Security Controls Enhancement(s): [g: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Rules of Behavior</b></p>a. Establish and provide to individuals requiring access to the system, the rules that describe their responsibilities and expected behavior for information and system usage, security, and privacy;b. Receive a documented acknowledgment from such individuals, indicating that they have read, understand, and agree to abide by the rules of behavior, before authorizing access to information and the system;c. Review and update the rules of behavior [Assignment: organization-defined frequency]; andd. Require individuals who have acknowledged a previous version of the rules of behavior to read and re-acknowledge [Selection (one or more): [Assignment: organization-defined frequency]; when the rules are revised or updated].' WHERE [Requirement_Id] = 37807
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Include in the rules of behavior restrictions on: [WMATA System Implementation Statement]

<li>(1) Use of social media, social networking sites, and external sites/applications; [1: WMATA System Implementation Statement]</li>
<li>(2) Posting organizational information on public websites; and [2: WMATA System Implementation Statement]</li>
<li>(3) Use of organization-provided identifiers (e.g., email addresses) and authentication secrets (e.g., passwords) for creating accounts on external sites/applications. [3: WMATA System Implementation Statement]</li>
Related Controls: AC-22
<li>h. Define personally acceptable use of WMATA technology. [h: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b> Social Media and External Site/application Usage Restrictions</b></p>Include in the rules of behavior, restrictions on:(a) Use of social media, social networking sites, and external sites/applications;(b) Posting organizational information on public websites; and(c) Use of organization-provided identifiers (e.g., email addresses) and authentication secrets (e.g., passwords) for creating accounts on external sites/applications.' WHERE [Requirement_Id] = 37808
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Develop a Concept of Operations (CONOPS) for the system describing how the organization intends to operate the system from the perspective of information security; and [a: WMATA System Implementation Statement]</li>
<li>b. Review and update the CONOPS annually. This requirement is waived if the components of the CONOPS is fully documented within the organizational Governance, Risk, and Compliance tool. [b: WMATA System Implementation Statement]</li>
<li>c. Require an updated CONOPS, at the discretion of the AO, if there is a substantial change to the functionality of the system. [c: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Organizations need to consider documenting known operational procedures and exploring how they relate to the combination of IT and OT technologies within the environment. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: PL-2, SA-2, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Organizations need to consider documenting known operational procedures and exploring how they relate to the combination of IT and OT technologies within the environment. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Concept of Operations</b></p>a. Develop a Concept of Operations (CONOPS) for the system describing how the organization intends to operate the system from the perspective of information security and privacy; andb. Review and update the CONOPS [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37809
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Develop security and privacy architectures for the system that: [a: WMATA System Implementation Statement]</li>
<li>i) Describe the requirements and approach to be taken for protecting the confidentiality, integrity, and availability of organizational information; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Describe the requirements and approach to be taken for processing personally identifiable information to minimize privacy risk to individuals; [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Describe how the architectures are integrated into and support the enterprise architecture; and [a.iii: WMATA System Implementation Statement]</li>
<li>iv) Describe any assumptions about, and dependencies on, external systems and services; [a.iv: WMATA System Implementation Statement]</li>
<li>b. Review and update system architectures annually, and when there is a change to the system, enterprise architecture, or enterprise security architecture; and [b: WMATA System Implementation Statement]</li>
<li>c. Reflect planned architecture changes in security plans, Concept of Operations (CONOPS), criticality analysis, organizational procedures, and procurements and acquisitions. [c: WMATA System Implementation Statement]</li>
Related Controls: CM-2, CM-6, PL-2, PL-7, PL-9, PM-5, PM-7, RA-9, SA-3, SA-5, SA-8, SA-17, SC-7
<li>i. Security Controls Enhancement(s): [i: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Security and Privacy Architectures</b></p>a. Develop security and privacy architectures for the system that:     1. Describe the requirements and approach to be taken for protecting the confidentiality, integrity, and availability of organizational information;     2. Describe the requirements and approach to be taken for processing personally identifiable information to minimize privacy risk to individuals;     3. Describe how the architectures are integrated into and support the enterprise architecture; and     4. Describe any assumptions about, and dependencies on, external systems and services;b. Review and update the architectures [Assignment: organization-defined frequency] to reflect changes in the enterprise architecture; andc. Reflect planned architecture changes in security and privacy plans, Concept of Operations (CONOPS), criticality analysis, organizational procedures, and procurements and acquisitions.' WHERE [Requirement_Id] = 37810
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Allocates [Assignment: organization-defined controls] to [Assignment: organization-defined locations and architectural layers]; and [1: WMATA System Implementation Statement]</li>
<li>(2) Ensures that the allocated controls operate in a coordinated and mutually reinforcing manner. [2: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Defense in depth is considered a common practice for security architecture within OT environments. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: SC-2, SC-3

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Defense in depth is considered a common practice for security architecture within OT environments. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Security and Privacy Architectures | Defense in Depth</b></p>Design the security and privacy architectures for the system using a defense-in-depth approach that:(a) Allocates [Assignment: organization-defined controls] to [Assignment: organization-defined locations and architectural layers]; and(b) Ensures that the allocated controls operate in a coordinated and mutually reinforcing manner.' WHERE [Requirement_Id] = 37811
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Organizational common (inherited) controls and related processes shall be centrally managed. Systems shall employ to the maximum extent possible organizational common (inherited) controls and all deviations shall be approved by the AO. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> If the architecture allows, consider centrally managing flaw remediation, malicious code protection, logging, incident detection, etc. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: PL-8, PM-9

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: If the architecture allows for it, consider centrally managing flaw remediation, malicious code protection, logging, and incident detection. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Central Management</b></p>Centrally manage [Assignment: organization-defined controls and related processes].' WHERE [Requirement_Id] = 37812
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a) Develop and disseminate an organization-wide information security program plan that: [a: WMATA System Implementation Statement]</li>
<li>i) Provides an overview of the requirements for the security program and a description of the security program management controls and common controls in place or planned for meeting those requirements; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Includes the identification and assignment of roles, responsibilities, management commitment, coordination among organizational entities, and compliance; [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Reflects the coordination among organizational entities responsible for information security; and [a.iii: WMATA System Implementation Statement]  </li>
<li>iv) Is approved by a senior official with responsibility and accountability for the risk being incurred to organizational operations (including mission, functions, image, and reputation), organizational assets, individuals, other organizations, and the Nation; [a.iv: WMATA System Implementation Statement]</li>
<li>b) Review and update the organization-wide information security program plan [Assignment: organization-defined frequency] and following [b: Assignment: organization-defined events]; and [WMATA System Implementation Statement]</li>
<li>c) Protect the information security program plan from unauthorized disclosure and modification.  [c: WMATA System Implementation Statement]</li>

Related Controls: PL-2, PM-18, PM-30, RA-9, SI-12, SR-2 
', [Supplemental_Info]=N'<p><b>Information Security Program Plan</b></p>a. Develop and disseminate an organization-wide information security program plan that:     1. Provides an overview of the requirements for the security program and a description of the security program management controls and      common controls in place or planned for meeting those requirements;     2. Includes the identification and assignment of roles, responsibilities, management commitment, coordination among organizational entities,      and compliance;     3. Reflects the coordination among organizational entities responsible for information security; and     4. Is approved by a senior official with responsibility and accountability for the risk being incurred to organizational operations (including      mission, functions, image, and reputation), organizational assets, individuals, other organizations, and the Nation;b. Review and update the organization-wide information security program plan [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; andc. Protect the information security program plan from unauthorized disclosure and modification.' WHERE [Requirement_Id] = 37813
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(a) Manage the security and privacy state of organizational systems and the environments in which those systems operate through authorization processes; [a: WMATA System Implementation Statement]</li>
<li>(b) Designate individuals to fulfill specific roles and responsibilities within the organizational risk management process; and [b: WMATA System Implementation Statement]</li>
<li>(c) Integrate the authorization processes into an organization-wide risk management program. [c: WMATA System Implementation Statement]</li>

Related Controls: CA-6, CA-7, PL-2
', [Supplemental_Info]=N'<p><b>Authorization Process</b></p>a. Manage the security and privacy state of organizational systems and the environments in which those systems operate through authorization processes;b. Designate individuals to fulfill specific roles and responsibilities within the organizational risk management process; andc. Integrate the authorization processes into an organization-wide risk management program.' WHERE [Requirement_Id] = 37814
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(a) Define organizational mission and business processes with consideration for information security and privacy and the resulting risk to organizational operations, organizational assets, individuals, and other organizations; [a: WMATA System Implementation Statement]</li>
<li>(b) Determine information protection and sensitive information processing needs arising from the defined mission and business processes; and [b: WMATA System Implementation Statement]</li>
<li>(c) Review and revise the mission and business processes annually or as required. [c: WMATA System Implementation Statement]</li>

Related Controls: CP-2, PL-2, PM-7, PM-8, RA-2, RA-3, RA-9, SA-2
', [Supplemental_Info]=N'<p><b>Mission and Business Process Definition</b></p>a. Define organizational mission and business processes with consideration for information security and privacy and the resulting risk to organizational operations, organizational assets, individuals, other organizations, and the Nation; andb. Determine information protection and personally identifiable information processing needs arising from the defined mission and business processes; andc. Review and revise the mission and business processes [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37815
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement an insider threat program that includes a cross-discipline insider threat incident handling team. [WMATA System Implementation Statement]

Related Controls: AC-6, AT-2, AU-6, AU-7, AU-10, AU-12, CA-7, IA-4, IR-4, MP-7, PE-2, PM-14, PM-16, PS-3, PS-4, PS-5, PS-7, PS-8, SC-7, SI-4
', [Supplemental_Info]=N'<p><b>Insider Threat Program</b></p>Implement an insider threat program that includes a cross-discipline insider threat incident handling team.' WHERE [Requirement_Id] = 37816
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Establish a security and privacy workforce development and improvement program. [WMATA System Implementation Statement]

Related Controls: AT-2, AT-3
', [Supplemental_Info]=N'<p><b>Security and Privacy Workforce</b></p>Establish a security and privacy workforce development and improvement program.' WHERE [Requirement_Id] = 37817
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a) Implement a process for ensuring that organizational plans for conducting security and privacy testing, training, and monitoring activities associated with organizational systems: [a: WMATA System Implementation Statement]</li>
<li>i) Are developed and maintained; and [a.i: WMATA System Implementation Statement]</li>
<li>ii) Continue to be executed; and [a.ii: WMATA System Implementation Statement]</li>
<li>b) Review testing, training, and monitoring plans for consistency with the organizational risk management strategy and organization-wide priorities for risk response actions. [b: WMATA System Implementation Statement]</li>

Related Controls: AT-2, AT-3, CA-7, CP-4, IR-3, PM-12, SI-4
', [Supplemental_Info]=N'<p><b>Testing, Training, and Monitoring</b></p>a. Implement a process for ensuring that organizational plans for conducting security and privacy testing, training, and monitoring activities associated with organizational systems:     1. Are developed and maintained; and     2. Continue to be executed; andb. Review testing, training, and monitoring plans for consistency with the organizational risk management strategy and organization-wide priorities for risk response actions.' WHERE [Requirement_Id] = 37818
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Establish and institutionalize contact with selected groups and associations within the security and privacy communities: [WMATA System Implementation Statement]

<li>a) To facilitate ongoing security and privacy education and training for organizational personnel; [a: WMATA System Implementation Statement]</li>
<li>b) To maintain currency with recommended security and privacy practices, techniques, and technologies; and [b: WMATA System Implementation Statement]</li>
<li>c) To share current security and privacy information, including threats, vulnerabilities, and incidents. [c: WMATA System Implementation Statement] </li>

<b><u>OT Systems Only:</u></b> Organizations should be familiar with relevant security-focused and industry-specific groups or associations, including government sector specific agencies (SSAs), information sharing and analysis centers (ISAC), and industry trade organizations. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: SA-11, SI-5

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Organizations should be familiar with relevant security-focused and industryspecific groups or associations, including government sector-specific agencies (SSAs), Information Sharing and Analysis Centers (ISACs), and industry trade organizations. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Security and Privacy Groups and Associations</b></p>Establish and institutionalize contact with selected groups and associations within the security and privacy communities:a. To facilitate ongoing security and privacy education and training for organizational personnel;b. To maintain currency with recommended security and privacy practices, techniques, and technologies; andc. To share current security and privacy information, including threats, vulnerabilities, and incidents.' WHERE [Requirement_Id] = 37819
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement a threat awareness program that includes a cross-organization information-sharing capability for threat intelligence; suitable for addressing policy directives satisfying CISA data reporting standards. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> The organization should collaborate and share information about potential incidents on a timely basis. CISA serves as a centralized location where operational elements involved in cybersecurity and communications reliance are coordinated and integrated. Organizations should consider having both an unclassified and classified information sharing capability. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: IR-4, PM-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization should collaborate and share information about potential incidents on a timely basis. CISA serves as a centralized location where operational elements involved in cybersecurity and communications reliance are coordinated and integrated. Organizations should consider having both an unclassified and classified information sharing capability. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Threat Awareness Program</b></p>Implement a threat awareness program that includes a cross-organization information-sharing capability for threat intelligence.' WHERE [Requirement_Id] = 37820
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(i) Employ automated mechanisms to maximize the effectiveness of sharing threat intelligence information. [WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b> Automated Means for Sharing Threat Intelligence</b></p>Employ automated mechanisms to maximize the effectiveness of sharing threat intelligence information.' WHERE [Requirement_Id] = 37821
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a) Establish policy and procedures to ensure that requirements for the protection of controlled unclassified information that is processed, stored or transmitted on external systems, are implemented in accordance with applicable laws, executive orders, directives, policies, regulations, and standards; and [a: WMATA System Implementation Statement]</li>
<li>b) Review and update the policy and procedures [Assignment: organization-defined frequency]. [b: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> This control applies to federal organizations and other organizations supporting the government that process Controlled Unclassified Information (CUI). [OT Systems Only: WMATA System Implementation Statement]

Related Controls: CA-6, PM-10

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: This control applies to federal agencies and other organizations that support the Government and process controlled unclassified information (CUI). [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Protecting Controlled Unclassified Information on External Systems</b></p>a. Establish policy and procedures to ensure that requirements for the protection of controlled unclassified information that is processed, stored or transmitted on external systems, are implemented in accordance with applicable laws, executive orders, directives, policies, regulations, and standards; andb. Review and update the policy and procedures [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37822
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a) Develop and disseminate an organization-wide privacy program plan that provides an overview of the agency’s privacy program, and: [a: WMATA System Implementation Statement]</li>
<li>i) Includes a description of the structure of the privacy program and the resources dedicated to the privacy program; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Provides an overview of the requirements for the privacy program and a description of the privacy program management controls and common controls in place or planned for meeting those requirements; [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Includes the role of the senior agency official for privacy and the identification and assignment of roles of other privacy officials and staff and their responsibilities; [a.iii: WMATA System Implementation Statement]</li>
<li>iv) Describes management commitment, compliance, and the strategic goals and objectives of the privacy program; [a.iv: WMATA System Implementation Statement]</li>
<li>v) Reflects coordination among organizational entities responsible for the different aspects of privacy; and [a.v: WMATA System Implementation Statement]</li>
<li>vi) Is approved by a senior official with responsibility and accountability for the privacy risk being incurred to organizational operations (including mission, functions, image, and reputation), organizational assets, individuals, other organizations, and the Nation; and [a.vi: WMATA System Implementation Statement]</li>
<li>b) Update the plan [Assignment: organization-defined frequency] and to address changes in federal privacy laws and policy and organizational changes and problems identified during plan implementation or privacy control assessments. [b: WMATA System Implementation Statement]</li>

Related Controls: PM-8, PM-9, PM-19
', [Supplemental_Info]=N'<p><b>Privacy Program Plan</b></p>a. Develop and disseminate an organization-wide privacy program plan that provides an overview of the agency’s privacy program, and:     1. Includes a description of the structure of the privacy program and the resources dedicated to the privacy program;     2. Provides an overview of the requirements for the privacy program and a description of the privacy program management controls and      common controls in place or planned for meeting those requirements;     3. Includes the role of the senior agency official for privacy and the identification and assignment of roles of other privacy officials and staff and      their responsibilities;     4. Describes management commitment, compliance, and the strategic goals and objectives of the privacy program;     5. Reflects coordination among organizational entities responsible for the different aspects of privacy; and     6. Is approved by a senior official with responsibility and accountability for the privacy risk being incurred to organizational operations (including      mission, functions, image, and reputation), organizational assets, individuals, other organizations, and the Nation; andb. Update the plan [Assignment: organization-defined frequency] and to address changes in federal privacy laws and policy and organizational changes and problems identified during plan implementation or privacy control assessments.' WHERE [Requirement_Id] = 37823
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Appoint a senior agency official for privacy with the authority, mission, accountability, and resources to coordinate, develop, and implement, applicable privacy requirements and manage privacy risks through the organization-wide privacy program. [WMATA System Implementation Statement]

Related Controls: PM-18, PM-20, PM-23, PM-24, PM-27
', [Supplemental_Info]=N'<p><b>Privacy Program Leadership Role</b></p>Appoint a senior agency official for privacy with the authority, mission, accountability, and resources to coordinate, develop, and implement, applicable privacy requirements and manage privacy risks through the organization-wide privacy program.' WHERE [Requirement_Id] = 37824
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Appoint a senior agency information security officer with the mission and resources to coordinate, develop, implement, and maintain an organization-wide information security program. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Information Security Program Leadership Role</b></p>Appoint a senior agency information security officer with the mission and resources to coordinate, develop, implement, and maintain an organization-wide information security program.' WHERE [Requirement_Id] = 37825
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Maintain a central resource webpage on the organization’s principal public website that serves as a central source of information about the organization’s privacy program and that: [WMATA System Implementation Statement]

<li>a) Ensures that the public has access to information about organizational privacy activities and can communicate with its senior agency official for privacy; [a: WMATA System Implementation Statement]</li>
<li>b) Ensures that organizational privacy practices and reports are publicly available; and [b: WMATA System Implementation Statement]</li>
<li>c) Employs publicly facing email addresses and/or phone lines to enable the public to provide feedback and/or direct questions to privacy offices regarding privacy practices. [c: WMATA System Implementation Statement]</li>

Related Controls: AC-3, PM-19, PT-5, PT-6, PT-7, RA-8
', [Supplemental_Info]=N'<p><b>Dissemination of Privacy Program Information</b></p>Maintain a central resource webpage on the organization’s principal public website that serves as a central source of information about the organization’s privacy program and that:a. Ensures that the public has access to information about organizational privacy activities and can communicate with its senior agency official for privacy;b. Ensures that organizational privacy practices and reports are publicly available; andc. Employs publicly facing email addresses and/or phone lines to enable the public to provide feedback and/or direct questions to privacy offices regarding privacy practices.' WHERE [Requirement_Id] = 37826
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a) Develop and maintain an accurate accounting of disclosures of personally identifiable information, including: [a: WMATA System Implementation Statement]</li>
<li>i) Date, nature, and purpose of each disclosure; and [a.i: WMATA System Implementation Statement]</li>
<li>ii) Name and address, or other contact information of the individual or organization to which the disclosure was made; [a.ii: WMATA System Implementation Statement]</li>
<li>b) Retain the accounting of disclosures for the length of the time the personally identifiable information is maintained or five years after the disclosure is made, whichever is longer; and [b: WMATA System Implementation Statement]</li>
<li>c) Make the accounting of disclosures available to the individual to whom the personally identifiable information relates upon request. [c: WMATA System Implementation Statement]</li>

Related Controls: AC-3, AU-2, PT-2
', [Supplemental_Info]=N'<p><b>Accounting of Disclosures</b></p>a. Develop and maintain an accurate accounting of disclosures of personally identifiable information, including:     1. Date, nature, and purpose of each disclosure; and     2. Name and address, or other contact information of the individual or organization to which the disclosure was made;b. Retain the accounting of disclosures for the length of the time the personally identifiable information is maintained or five years after the disclosure is made, whichever is longer; andc. Make the accounting of disclosures available to the individual to whom the personally identifiable information relates upon request.' WHERE [Requirement_Id] = 37827
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a) Develop and document organization-wide policies and procedures for: [a: WMATA System Implementation Statement]</li>
<li>i) Reviewing for the accuracy, relevance, timeliness, and completeness of personally identifiable information across the information life cycle; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Correcting or deleting inaccurate or outdated personally identifiable information; [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Disseminating notice of corrected or deleted personally identifiable information to individuals or other appropriate entities; and [a.iii: WMATA System Implementation Statement]</li>
<li>iv) Appeals of adverse decisions on correction or deletion requests. [a.iv: WMATA System Implementation Statement]</li>

Related Controls: PM-23, SI-18
', [Supplemental_Info]=N'<p><b>Personally Identifiable Information Quality Management</b></p>Develop and document organization-wide policies and procedures for:a. Reviewing for the accuracy, relevance, timeliness, and completeness of personally identifiable information across the information life cycle;b. Correcting or deleting inaccurate or outdated personally identifiable information;c. Disseminating notice of corrected or deleted personally identifiable information to individuals or other appropriate entities; andd. Appeals of adverse decisions on correction or deletion requests.' WHERE [Requirement_Id] = 37828
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(a) Establish a Data Governance Body minimally consisting of Chief Digital Officer and Chief Information Security Officer with responsibility for: [a: WMATA System Implementation Statement]</li>
<li>(1) Establishing policies, procedures, and standards that facilitate data governance so that data, including PII, is effectively managed and maintained in accordance with applicable laws, executive orders, directives, regulations, policies, standards, and guidance; and [1: WMATA System Implementation Statement]</li>
<li>(2) Developing and implementing guidelines that support data modeling, quality, integrity, and the de-identification needs of PII across the information life cycle as well as reviewing and approving applications to release data outside of the organization, archiving the applications and the released data, and performing post-release monitoring to ensure that the assumptions made as part of the data release continue to be valid. [2: WMATA System Implementation Statement]</li>

Related Controls: AT-2, AT-3, PM-19, PM-22, PM-24, PT-7, SI-4, SI-19
', [Supplemental_Info]=N'<p><b>Data Governance Body</b></p>Establish a Data Governance Body consisting of [Assignment: organization-defined roles] with [Assignment: organization-defined responsibilities].' WHERE [Requirement_Id] = 37829
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Establish a Data Integrity Board to: [WMATA System Implementation Statement]

<li>a) Review proposals to conduct or participate in a matching program; and [a: WMATA System Implementation Statement]</li>
<li>b) Conduct an annual review of all matching programs in which the agency has participated. [b: WMATA System Implementation Statement]</li>

Related Controls: AC-4, PM-19, PM-23, PT-2, PT-8
', [Supplemental_Info]=N'<p><b>Data Integrity Board</b></p>Establish a Data Integrity Board to:a. Review proposals to conduct or participate in a matching program; andb. Conduct an annual review of all matching programs in which the agency has participated.' WHERE [Requirement_Id] = 37830
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement a process for receiving and responding to complaints, concerns, or questions from individuals about the organizational security and privacy practices that includes: [WMATA System Implementation Statement]

<li>a) Develop, document, and implement policies and procedures that address the use of personally identifiable information for internal testing, training, and research; [a: WMATA System Implementation Statement]</li>
<li>b) Limit or minimize the amount of personally identifiable information used for internal testing, training, and research purposes; [b: WMATA System Implementation Statement]</li>
<li>c) Authorize the use of personally identifiable information when such information is required for internal testing, training, and research; and [c: WMATA System Implementation Statement]</li>
<li>d) Review and update policies and procedures [d: Assignment: organization-defined frequency]. [WMATA System Implementation Statement]</li>

Related Controls: PM-23, PT-3, SA-3, SA-8, SI-12
', [Supplemental_Info]=N'<p><b>Minimization of Personally Identifiable Information Used in Testing, Training, and Research</b></p>a. Develop, document, and implement policies and procedures that address the use of personally identifiable information for internal testing, training, and research;b. Limit or minimize the amount of personally identifiable information used for internal testing, training, and research purposes;c. Authorize the use of personally identifiable information when such information is required for internal testing, training, and research; andd. Review and update policies and procedures [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37831
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement a process for receiving and responding to complaints, concerns, or questions from individuals about the organizational security and privacy practices that includes: [WMATA System Implementation Statement]

<li>a) Mechanisms that are easy to use and readily accessible by the public; [a: WMATA System Implementation Statement]</li>
<li>b) All information necessary for successfully filing complaints; [b: WMATA System Implementation Statement]</li>
<li>c) Tracking mechanisms to ensure all complaints received are reviewed and addressed within [Assignment: organization-defined time period]; [c: WMATA System Implementation Statement]</li>
<li>d) Acknowledgement of receipt of complaints, concerns, or questions from individuals within [Assignment: organization-defined time period]; and [d: WMATA System Implementation Statement]</li>
<li>e) Response to complaints, concerns, or questions from individuals within [Assignment: organization-defined time period]. [e: WMATA System Implementation Statement]</li>

Related Controls: IR-7, IR-9, PM-22, SI-18
', [Supplemental_Info]=N'<p><b>Complaint Management</b></p>Implement a process for receiving and responding to complaints, concerns, or questions from individuals about the organizational security and privacy practices that includes:a. Mechanisms that are easy to use and readily accessible by the public;b. All information necessary for successfully filing complaints;c. Tracking mechanisms to ensure all complaints received are reviewed and addressed within [Assignment: organization-defined time period];d. Acknowledgement of receipt of complaints, concerns, or questions from individuals within [Assignment: organization-defined time period]; ande. Response to complaints, concerns, or questions from individuals within [Assignment: organization-defined time period].' WHERE [Requirement_Id] = 37832
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Develop [Assignment: organization-defined privacy reports] and disseminate to: [WMATA System Implementation Statement]

<li>a) [Assignment: organization-defined oversight bodies] to demonstrate accountability with statutory, regulatory, and policy privacy mandates; and [a: WMATA System Implementation Statement]</li>
<li>b) [Assignment: organization-defined officials] and other personnel with responsibility for monitoring privacy program compliance; and [b: WMATA System Implementation Statement]</li>
<li>c) Review and update privacy reports [Assignment: organization-defined frequency]. [c: WMATA System Implementation Statement]</li>

Related Controls: IR-9, PM-19
', [Supplemental_Info]=N'<p><b>Privacy Reporting</b></p>a. Develop [Assignment: organization-defined privacy reports] and disseminate to:     1. [Assignment: organization-defined oversight bodies] to demonstrate accountability with statutory, regulatory, and policy privacy mandates;      and     2. [Assignment: organization-defined officials] and other personnel with responsibility for monitoring privacy program compliance; andb. Review and update privacy reports [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37833
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(a) Identify and document: [a: WMATA System Implementation Statement]</li>
<li>(1) Assumptions affecting risk assessments, risk responses, and risk monitoring; [a.1: WMATA System Implementation Statement]</li>
<li>(2) Constraints affecting risk assessments, risk responses, and risk monitoring; [a.2: WMATA System Implementation Statement]</li>
<li>(3) Priorities and trade-offs considered by the organization for managing risk; and [a.3: WMATA System Implementation Statement]</li>
<li>(4) Organizational risk tolerance; [a.4: WMATA System Implementation Statement]</li>
<li>(b) Distribute the results of risk framing activities to organizational personnel, including mission and business owners, information owners or stewards, system owners, the authorizing official, Chief Information Security Officer, and Chief Risk Officer; and [b: WMATA System Implementation Statement]</li>
<li>(c) Review and update risk framing considerations annually. [c: WMATA System Implementation Statement]</li>

Related Controls: CA-7, PM-9, RA-3, RA-7
', [Supplemental_Info]=N'<p><b>Risk Framing</b></p>a. Identify and document:     1. Assumptions affecting risk assessments, risk responses, and risk monitoring;     2. Constraints affecting risk assessments, risk responses, and risk monitoring;     3. Priorities and trade-offs considered by the organization for managing risk; and     4. Organizational risk tolerance;b. Distribute the results of risk framing activities to [Assignment: organization-defined personnel]; andc. Review and update risk framing considerations [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37834
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(a) Designate an Authorizing Official to align organizational information security and privacy management processes with strategic, operational, and budgetary planning processes; and [a: WMATA System Implementation Statement]</li>
<li>(i) Appoint a Senior Accountable Official for Risk Management to align organizational information security and privacy management processes with strategic, operational, and budgetary planning processes; and [a.i: WMATA System Implementation Statement]</li>
<li>(b) Designate a Chief Risk Officer to view and analyze risk from an organization-wide perspective and ensure management of risk is consistent across the organization. [b: WMATA System Implementation Statement]</li>
<li>(i) Establish a Risk Executive (function) to view and analyze risk from an organization-wide perspective and ensure management of risk is consistent across the organization. [b.i: WMATA System Implementation Statement]</li>
	
Related Controls: PM-2, PM-19
', [Supplemental_Info]=N'<p><b>Risk Management Program Leadership Roles</b></p>a. Appoint a Senior Accountable Official for Risk Management to align organizational information security and privacy management processes with strategic, operational, and budgetary planning processes; andb. Establish a Risk Executive (function) to view and analyze risk from an organization-wide perspective and ensure management of risk is consistent across the organization.' WHERE [Requirement_Id] = 37835
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a) Include the resources needed to implement the information security and privacy programs in capital planning and investment requests and document all exceptions to this requirement; [a: WMATA System Implementation Statement]</li>
<li>b) Prepare documentation required for addressing information security and privacy programs in capital planning and investment requests in accordance with applicable laws, executive orders, directives, policies, regulations, standards; and [b: WMATA System Implementation Statement]</li>
<li>c) Make available for expenditure, the planned information security and privacy resources.  [c: WMATA System Implementation Statement]</li>

Related Controls: PM-4, SA-2
', [Supplemental_Info]=N'<p><b>Information Security and Privacy Resources</b></p>a. Include the resources needed to implement the information security and privacy programs in capital planning and investment requests and document all exceptions to this requirement;b. Prepare documentation required for addressing information security and privacy programs in capital planning and investment requests in accordance with applicable laws, executive orders, directives, policies, regulations, standards; andc. Make available for expenditure, the planned information security and privacy resources.' WHERE [Requirement_Id] = 37836
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(a) Develop an organization-wide strategy for managing supply chain risks associated with the development, acquisition, maintenance, and disposal of systems, system components, and system services; [a: WMATA System Implementation Statement]</li>
<li>(b) Implement the supply chain risk management strategy consistently across the organization; [b: WMATA System Implementation Statement]</li>
<li>(c) Review and update the supply chain risk management strategy annually or as required, to address organizational changes; and [c: WMATA System Implementation Statement]</li>
<li>(d) Align all cybersecurity related supply chain risk management strategy to the Chief Information Security Officer and incorporate cybersecurity requirements into the enterprise supply chain risk management strategy as determined by the Chief Information Security Officer: [d: WMATA System Implementation Statement]</li>

Related Controls: CM-10, PM-9, SR-1, SR-2, SR-3, SR-4, SR-5, SR-6, SR-7, SR-8, SR-9, SR-11
', [Supplemental_Info]=N'<p><b>Supply Chain Risk Management Strategy</b></p>a. Develop an organization-wide strategy for managing supply chain risks associated with the development, acquisition, maintenance, and disposal of systems, system components, and system services;b. Implement the supply chain risk management strategy consistently across the organization; andc. Review and update the supply chain risk management strategy on [Assignment: organization-defined frequency] or as required, to address organizational changes.' WHERE [Requirement_Id] = 37837
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(i) Identify, prioritize, and assess suppliers of critical or mission-essential technologies, products, and services. [WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b> Suppliers of Critical or Mission-essential Items</b></p>Identify, prioritize, and assess suppliers of critical or mission-essential technologies, products, and services.' WHERE [Requirement_Id] = 37838
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Develop an organization-wide continuous monitoring strategy and implement continuous monitoring programs that include: [WMATA System Implementation Statement]

<li>(a) Establishing the following organization-wide metrics to be monitored: [a: WMATA System Implementation Statement]</li>
<li>(1) Scan coverage; [a.1: WMATA System Implementation Statement]</li>
<li>(2) Vulnerability management; [a.2: WMATA System Implementation Statement]</li>
<li>(3) Incident management; [a.3: WMATA System Implementation Statement]</li>
<li>(4) Patch management; [a.4: WMATA System Implementation Statement]</li>
<li>(5) Configuration management; [a.5: WMATA System Implementation Statement]</li>
<li>(6) Change management; [a.6: WMATA System Implementation Statement]</li>
<li>(7) Application security; [a.7: WMATA System Implementation Statement]</li>
<li>(8) Financial metrics; [a.8: WMATA System Implementation Statement]</li>
<li>(9) IT awareness and training; [a.9: WMATA System Implementation Statement]</li>
<li>(b) Establishing control review frequencies for monitoring and document such frequencies in policy and review continuous monitoring requirements annually for assessment of control effectiveness; [b: WMATA System Implementation Statement]</li>
<li>(c) Ongoing monitoring of organizationally defined metrics in accordance with the continuous monitoring strategy; [c: WMATA System Implementation Statement]</li>
<li>(d) Correlation and analysis of information generated by control assessments and monitoring; [d: WMATA System Implementation Statement]</li>
<li>(e) Response actions to address results of the analysis of control assessment and monitoring information; and [e: WMATA System Implementation Statement]</li>
<li>(f) Reporting the security and privacy status of organizational systems to executive management and the board of directors quarterly. [f: WMATA System Implementation Statement]</li>

Related Controls: AC-2, AC-6, AC-17, AT-4, AU-6, CA-2, CA-5, CA-6, CA-7, CM-3, CM-4, CM-6, CM-11, IA-5, IR-5, MA-2, MA-3, MA-4, PE-3, PE-6, PE-14, PE-16, PL-2, PM-4, PM-6, PM-9, PM-10, PM-12, PM-14, PM-23, PM-28, PS-7, PT-7, RA-3, RA-5, RA-7, SA-9, SA-11, SC-5, SC-7, SC-18, SI-3, SI-4, SI-12, SR-2, SR-4
', [Supplemental_Info]=N'<p><b>Continuous Monitoring Strategy</b></p>Develop an organization-wide continuous monitoring strategy and implement continuous monitoring programs that include:a. Establishing the following organization-wide metrics to be monitored: [Assignment: organization-defined metrics];b. Establishing [Assignment: organization-defined frequencies] for monitoring and [Assignment: organization-defined frequencies] for assessment of control effectiveness;c. Ongoing monitoring of organizationally-defined metrics in accordance with the continuous monitoring strategy;d. Correlation and analysis of information generated by control assessments and monitoring;e. Response actions to address results of the analysis of control assessment and monitoring information; andf. Reporting the security and privacy status of organizational systems to [Assignment: organization-defined personnel or roles] [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37839
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Analyze systems categorized by Digital Modernization Cyber Security as critical to supporting mission essential services or functions to ensure that the information resources are being used consistent with their intended purpose.  [WMATA System Implementation Statement]

Related Controls: CA-7, PL-2, RA-3, RA-9
', [Supplemental_Info]=N'<p><b>Purposing</b></p>Analyze [Assignment: organization-defined systems or systems components] supporting mission essential services or functions to ensure that the information resources are being used consistent with their intended purpose.' WHERE [Requirement_Id] = 37840
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a) Implement a process to ensure that plans of action and milestones for the information security, privacy, and supply chain risk management programs and associated organizational systems: [a: WMATA System Implementation Statement]</li>
<li>i) Are developed and maintained; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Document the remedial information security, privacy, and supply chain risk management actions to adequately respond to risk to organizational operations and assets, individuals, other organizations, and the Nation; and [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Are reported in accordance with established reporting requirements. [a.iii: WMATA System Implementation Statement]</li>
<li>b) Review plans of action and milestones for consistency with the organizational risk management strategy and organization-wide priorities for risk response actions. [b: WMATA System Implementation Statement]</li>

Related Controls: CA-5, CA-7, PM-3, RA-7, SI-12
', [Supplemental_Info]=N'<p><b>Plan of Action and Milestones Process</b></p>a. Implement a process to ensure that plans of action and milestones for the information security, privacy, and supply chain risk management programs and associated organizational systems:     1. Are developed and maintained;     2. Document the remedial information security, privacy, and supply chain risk management actions to adequately respond to risk to      organizational operations and assets, individuals, other organizations, and the Nation; and     3. Are reported in accordance with established reporting requirements.b. Review plans of action and milestones for consistency with the organizational risk management strategy and organization-wide priorities for risk response actions.' WHERE [Requirement_Id] = 37841
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(a) Develop and update quarterly an inventory of organizational systems. [WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>System Inventory</b></p>Develop and update [Assignment: organization-defined frequency] an inventory of organizational systems.' WHERE [Requirement_Id] = 37842
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(i) Establish, maintain, and update quarterly inventory of all systems, applications, and projects that process sensitive information. [WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b> Inventory of Personally Identifiable Information</b></p>Establish, maintain, and update [Assignment: organization-defined frequency] an inventory of all systems, applications, and projects that process personally identifiable information.' WHERE [Requirement_Id] = 37843
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Develop, monitor, and report on the results of information security and privacy measures of performance. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Measures of Performance</b></p>Develop, monitor, and report on the results of information security and privacy measures of performance.' WHERE [Requirement_Id] = 37844
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Develop and maintain an enterprise architecture with consideration for information security, privacy, and the resulting risk to organizational operations and assets, individuals, other organizations, and the Nation. [WMATA System Implementation Statement]

Related Controls: AU-6, PL-2, PL-8, PM-11, RA-2, SA-3, SA-8, SA-17
', [Supplemental_Info]=N'<p><b>Enterprise Architecture</b></p>Develop and maintain an enterprise architecture with consideration for information security, privacy, and the resulting risk to organizational operations and assets, individuals, other organizations, and the Nation.' WHERE [Requirement_Id] = 37845
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(i) Offload printing, copying, or any non-essential functions or services to other systems, system components, or an external provider. Non-essential functions or services are those which, whenever feasible, are not co-located with the functions or services that support essential mission or business functions. Maintaining such functions on the same system or system component increases the attack surface of the organization’s mission-essential functions or services. [WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b> Offloading</b></p>Offload [Assignment: organization-defined non-essential functions or services] to other systems, system components, or an external provider.' WHERE [Requirement_Id] = 37846
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Address information security and privacy issues in the development, documentation, and updating of a critical infrastructure and key resources protection plan. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Organizations should be familiar with protection requirements and guidance defined by executive orders, government sector specific agencies (SSAs), and industry trade organizations. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: CP-2, CP-4, PE-18, PL-2, PM-9, PM-11, PM-18, RA-3, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Organizations should be familiar with the protection requirements and guidance defined by Executive Orders, government sector-specific agencies (SSAs), and industry trade organizations. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Critical Infrastructure Plan</b></p>Address information security and privacy issues in the development, documentation, and updating of a critical infrastructure and key resources protection plan.' WHERE [Requirement_Id] = 37847
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a) Develops a comprehensive strategy to manage: [a: WMATA System Implementation Statement]</li>
<li>i) Security risk to organizational operations and assets, individuals, other organizations, and the Nation associated with the operation and use of organizational systems; and [a.i: WMATA System Implementation Statement]</li>
<li>ii) Privacy risk to individuals resulting from the authorized processing of personally identifiable information; [a.ii: WMATA System Implementation Statement]</li>
<li>b) Implement the risk management strategy consistently across the organization; and [b: WMATA System Implementation Statement]</li>
<li>c) Review and update the risk management strategy [Assignment: organization-defined frequency] or as required, to address organizational changes. [c: WMATA System Implementation Statement]</li>

Related Controls: AC-1, AT-1, AU-1, CA-1, CA-2, CA-5, CA-6, CA-7, CM-1, CP-1, IA-1, IR-1, MA-1, MP-1, PE-1, PL-1, PL-2, PM-2, PM-8, PM-18, PM-28, PM-30, PS-1, PT-1, PT-2, PT-3, RA-1, RA-3, RA-9, SA-1, SA-4, SC-1, SI-1, SI-12, SR-1, SR-2
', [Supplemental_Info]=N'<p><b>Risk Management Strategy</b></p>a. Develops a comprehensive strategy to manage:     1. Security risk to organizational operations and assets, individuals, other organizations, and the Nation associated with the operation and use      of organizational systems; and     2. Privacy risk to individuals resulting from the authorized processing of personally identifiable information;b. Implement the risk management strategy consistently across the organization; andc. Review and update the risk management strategy [Assignment: organization-defined frequency] or as required, to address organizational changes.' WHERE [Requirement_Id] = 37848
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement]

Related Controls: PM-9, PS-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Personnel Security Policy and Procedures</b></p>a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:     1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] personnel security policy that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and          (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and      2. Procedures to facilitate the implementation of the personnel security policy and the associated personnel security controls;b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the personnel security policy and procedures; andc. Review and update the current personnel security:     1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and     2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37849
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Assign a risk designation to all organizational positions; [a: WMATA System Implementation Statement]</li>
<li>b. Establish screening criteria for individuals filling those positions; and [b: WMATA System Implementation Statement]</li>
<li>c. Review and update position risk designations annually. [c: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Private organizations should utilize existing sector specific regulations, laws, policy, or guidance for determining appropriate risk designations for positions. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-5, AT-3, PE-2, PE-3, PL-2, PS-3, PS-6, SA-5, SA-21, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Private organizations should utilize existing sector-specific regulations, laws, policy, and guidance for determining appropriate risk designations for positions. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Position Risk Designation</b></p>a. Assign a risk designation to all organizational positions;b. Establish screening criteria for individuals filling those positions; andc. Review and update position risk designations [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37850
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Determine screening tiers and requirements based on the sensitivity of the position; [a: WMATA System Implementation Statement]</li>
<li>b. Screen individuals prior to authorizing access to the system; [b: WMATA System Implementation Statement]</li>
<li>c. Rescreen individuals every five years; [c: WMATA System Implementation Statement]</li>
<li>d. Conduct continuous screening for defined factors for sensitive positions; and [d: WMATA System Implementation Statement]</li>
<li>e. Notify employees of screening criteria, and when updates are made to the screening criteria, prior to screening. [e: WMATA System Implementation Statement]</li>

Related Controls: AC-2, IA-4, MA-5, PE-2, PM-12, PS-2, PS-6, PS-7, SA-21
', [Supplemental_Info]=N'<p><b>Personnel Screening</b></p>a. Screen individuals prior to authorizing access to the system; andb. Rescreen individuals in accordance with [Assignment: organization-defined conditions requiring rescreening and, where rescreening is so indicated, the frequency of rescreening].' WHERE [Requirement_Id] = 37851
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Upon termination of individual employment: [WMATA System Implementation Statement]

<li>a. Provide appropriate notification and disable physical and logical access to all systems in accordance with: [a: WMATA System Implementation Statement]</li>
<li>i) Control 3.1 Access Control, Section 2, “AC-2 Account Management"; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Control 3.1 Access Control, Section 2, (l), (iii), “AC-2 (3) Disable Accounts”; [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Control 3.1 Access Control, Section 2, (l), (viii), “AC-2 (13) Disable Accounts for High-Risk Individuals”; and [a.iii: WMATA System Implementation Statement]</li>
<li>iv) P/I 7.3.3 Separation from Employment Policy. [a.iv: WMATA System Implementation Statement]</li>
<li>b. Terminate or revoke any authenticators and credentials associated with the individual; [b: WMATA System Implementation Statement]</li>
<li>c. Conduct exit interviews that include a discussion of: [c: WMATA System Implementation Statement]</li>
<li>i) The security constraints imposed by being former employees; [c.i: WMATA System Implementation Statement]</li>
<li>ii) Receipt/retrieval and accountability of system-related property; [c.ii: WMATA System Implementation Statement]</li>
<li>iii) Reminders of NDAs and potential limitations on future employment; and [c.iii: WMATA System Implementation Statement]</li>
<li>iv) Sensitive personnel matters for involuntary separations in accordance with P/I 7.3.3 Separation from Employment Policy. [c.iv: WMATA System Implementation Statement]</li>
<li>d. Retrieve all security-related organizational system-related property. System property includes hardware authentication tokens, system administration technical manuals, keys, identification cards, and building passes; [d: WMATA System Implementation Statement]</li>
<li>e. Retrieve all organizational information and property in accordance with P/I 7.3.3 Separation from Employment Policy; and [e: WMATA System Implementation Statement]</li>
<li>f. Retain access to organizational information and systems formerly controlled by terminated individual. [f: WMATA System Implementation Statement]</li>
Related Controls: AC-2, IA-4, PE-2, PM-12, PS-6, PS-7
<li>g. Security Controls Enhancement(s): [g: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Personnel Termination</b></p>Upon termination of individual employment:a. Disable system access within [Assignment: organization-defined time period];b. Terminate or revoke any authenticators and credentials associated with the individual;c. Conduct exit interviews that include a discussion of [Assignment: organization-defined information security topics];d. Retrieve all security-related organizational system-related property; ande. Retain access to organizational information and systems formerly controlled by terminated individual.' WHERE [Requirement_Id] = 37852
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Use automated mechanisms to both notify personnel or roles of individual termination actions and to disable access to system resources. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Automated Actions</b></p>Use [Assignment: organization-defined automated mechanisms] to [Selection (one or more): notify [Assignment: organization-defined personnel or roles] of individual termination actions; disable access to system resources].' WHERE [Requirement_Id] = 37853
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Review and confirm ongoing operational need for current logical and physical access authorizations to systems and facilities when individuals are reassigned or transferred to other positions within the organization; [a: WMATA System Implementation Statement]</li>
<li>b. Initiate transfer or reassignment actions prior to the transfer date; [b: WMATA System Implementation Statement]</li>
<li>c. Modify access authorization as needed to correspond with any changes in operational need due to reassignment or transfer; and [c: WMATA System Implementation Statement]</li>
<li>d. Notify required stakeholders prior to the transfer date. [d: WMATA System Implementation Statement]</li>

Related Controls: AC-2, IA-4, PE-2, PM-12, PS-4, PS-7
', [Supplemental_Info]=N'<p><b>Personnel Transfer</b></p>a. Review and confirm ongoing operational need for current logical and physical access authorizations to systems and facilities when individuals are reassigned or transferred to other positions within the organization;b. Initiate [Assignment: organization-defined transfer or reassignment actions] within [Assignment: organization-defined time period following the formal transfer action];c. Modify access authorization as needed to correspond with any changes in operational need due to reassignment or transfer; andd. Notify [Assignment: organization-defined personnel or roles] within [Assignment: organization-defined time period].' WHERE [Requirement_Id] = 37854
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Develop and document access agreements for organizational systems; [a: WMATA System Implementation Statement]</li>
<li>b. Review and update the access agreements to include NDAs, acceptable use agreements, rules of behavior (RoB), and conflict-of-interest agreements annually, and in accordance with: [b: WMATA System Implementation Statement]</li>
<li>i) Control 3.15 Planning, Section 3, “PL-4 Rules of Behavior”; and [b.i: WMATA System Implementation Statement]</li>
<li>ii) Control 3.1 Access Control, Section 8, “AC-8 System Use Notification”. [b.ii: WMATA System Implementation Statement]</li>
<li>c. Verify that individuals requiring access to organizational information and systems: [c: WMATA System Implementation Statement]</li>
<li>i) Sign appropriate access agreements prior to being granted access; and [c.i: WMATA System Implementation Statement]</li>
<li>ii) Re-sign access agreements to maintain access to organizational systems annually and when access agreements have been updated. [c.ii: WMATA System Implementation Statement]</li>

Related Controls: AC-8, AC-17, PE-2, PL-4, PS-2, PS-3, PS-6, PS-7, PS-8, SA-21, SI-12
', [Supplemental_Info]=N'<p><b>Access Agreements</b></p>a. Develop and document access agreements for organizational systems;b. Review and update the access agreements [Assignment: organization-defined frequency]; andc. Verify that individuals requiring access to organizational information and systems:     1. Sign appropriate access agreements prior to being granted access; and     2. Re-sign access agreements to maintain access to organizational systems when access agreements have been updated or [Assignment:      organization-defined frequency].' WHERE [Requirement_Id] = 37855
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Establish personnel security requirements, including security roles and responsibilities for external providers; [a: WMATA System Implementation Statement]</li>
<li>b. Require external providers to comply with personnel security policies and procedures established by the organization; [b: WMATA System Implementation Statement]</li>
<li>c. Document personnel security requirements; [c: WMATA System Implementation Statement]</li>
<li>d. External providers shall notify Contract Administrator (CA)/Contracting Officer''s Technical Representative (COTRs) and required stakeholders of any personnel transfers or terminations of external personnel who possess organizational credentials and/or badges or who have system privileges immediately unless otherwise specified in: [d: WMATA System Implementation Statement]</li>
<li>i) Control 3.1 Access Control, Section 2, “AC-2 Account Management"; [d.i: WMATA System Implementation Statement]</li>
<li>ii) P/I 7.2.2 Recruitment and Hiring Policy; and [d.ii: WMATA System Implementation Statement]</li>
<li>iii) P/I 7.3.3 Separation from Employment Policy. [d.iii: WMATA System Implementation Statement]</li>
<li>e. Monitor provider compliance with personnel security requirements. [e: WMATA System Implementation Statement]</li>

Related Controls: AC-2, AT-2, AT-3, MA-5, PE-3, PS-2, PS-3, PS-4, PS-5, PS-6, SA-5, SA-9, SA-21
', [Supplemental_Info]=N'<p><b>External Personnel Security</b></p>a. Establish personnel security requirements, including security roles and responsibilities for external providers;b. Require external providers to comply with personnel security policies and procedures established by the organization;c. Document personnel security requirements;d. Require external providers to notify [Assignment: organization-defined personnel or roles] of any personnel transfers or terminations of external personnel who possess organizational credentials and/or badges, or who have system privileges within [Assignment: organization-defined time period]; ande. Monitor provider compliance with personnel security requirements.' WHERE [Requirement_Id] = 37856
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Employ a formal sanctions process for individuals failing to comply with established security and privacy policies and procedures; and [a: WMATA System Implementation Statement]</li>
<li>b. Notify the CA and COTR regarding external provider actions and notify appropriate stakeholders based on the nature of the infraction within 24 hours (or less if directed by other policy) when a formal employee sanctions process is initiated, identifying the individual sanctioned and the reason for the sanction. [b: WMATA System Implementation Statement]</li>

Related Controls: All XX-1 Controls, PL-4, PM-12, PS-6, PT-1
', [Supplemental_Info]=N'<p><b>Personnel Sanctions</b></p>a. Employ a formal sanctions process for individuals failing to comply with established information security and privacy policies and procedures; andb. Notify [Assignment: organization-defined personnel or roles] within [Assignment: organization-defined time period] when a formal employee sanctions process is initiated, identifying the individual sanctioned and the reason for the sanction.' WHERE [Requirement_Id] = 37857
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Incorporate security and privacy roles and responsibilities into organizational position descriptions, as applicable. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Position Descriptions</b></p>Incorporate security and privacy roles and responsibilities into organizational position descriptions.' WHERE [Requirement_Id] = 37858
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement] 

This control family does not apply to the activities of the Privacy Administrator described in P/I 9.2 Privacy Policy or the PARP Administrator described in P/I 9.3 Public Access to Records Policy. 
', [Supplemental_Info]=N'<p><b>Personally Identifiable Information Policy and Procedures</b></p>a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:      1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] personally identifiable information processing       and transparency policy that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and          (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and     2. Procedures to facilitate the implementation of the personally identifiable information processing and transparency policy and the associated      personally identifiable information processing and transparency controls;b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the personally identifiable information processing and transparency policy and procedures; andc. Review and update the current personally identifiable information processing and transparency:     1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and     2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37859
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Document all storage, processing, and transmission (includes, but is not limited to, the creation, collection, use, processing, storage, maintenance, dissemination, disclosure, disposal, logging, generation, transformation, analysis, replication, and data mining) of sensitive information in System Security Plan (SSP); [a: WMATA System Implementation Statement]</li>
<li>b. Obtain approval for the processing of sensitive information as documented in SSP in accordance with Control 3.15 Planning, Section 2, “PL-2 System Security Plans”; [b: WMATA System Implementation Statement]</li>
<li>c. Restrict the storage, processing, transmission, and replication of sensitive information to only what is authorized in the SSP; and [c: WMATA System Implementation Statement]</li>
<li>d. Ensure all sensitive information is encrypted in storage and in transit, in accordance with: [d: WMATA System Implementation Statement]</li>
<li>i) Control 3.17, System and Communications Protection, Section 7, (i), “SC-8 (1) Cryptographic Protection”; Section 10, “SC-13 Cryptographic Protection”; Section 19, (i), “SC-28 (1) Cryptographic Protection”; and [d.i: WMATA System Implementation Statement]</li>
<li>ii) Control 3.5 Contingency Planning, Section 8, “CP-9 System Backup” and (d), (v), “CP-9</li>
<li>(8) Cryptographic Protection”. [d.ii: WMATA System Implementation Statement]</li>

Related Controls: AC-2, AC-3, IR-9, PM-9, PM-24, PT-1, PT-3, PT-5, PT-6, RA-3, RA-8, SI-12, SI-18
', [Supplemental_Info]=N'<p><b>Authority to Process Personally Identifiable Information</b></p>a. Determine and document the [Assignment: organization-defined authority] that permits the [Assignment: organization-defined processing] of personally identifiable information; andb. Restrict the [Assignment: organization-defined processing] of personally identifiable information to only that which is authorized.' WHERE [Requirement_Id] = 37860
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Attach data tags containing [Assignment: organization-defined authorized processing] to [Assignment: organization-defined elements of personally identifiable information]. [WMATA System Implementation Statement]

Related Controls: AC-16, CA-6, CM-12, PM-5, PM-22, PT-4, SC-16, SC-43, SI-10, SI-15, SI-19
', [Supplemental_Info]=N'<p><b> Data Tagging</b></p>Attach data tags containing [Assignment: organization-defined authorized processing] to [Assignment: organization-defined elements of personally identifiable information].' WHERE [Requirement_Id] = 37861
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Manage enforcement of the authorized processing of personally identifiable information using [Assignment: organization-defined automated mechanisms]. [WMATA System Implementation Statement]

Related Controls: CA-6, CM-12, PM-5, PM-22, PT-4, SC-16, SC-43, SI-10, SI-15, SI-19
', [Supplemental_Info]=N'<p><b> Automation</b></p>Manage enforcement of the authorized processing of personally identifiable information using [Assignment: organization-defined automated mechanisms].' WHERE [Requirement_Id] = 37862
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Identify and document the approved reasons for processing sensitive information; [a: WMATA System Implementation Statement]</li>
<li>b. Restrict the storage, processing, and transmission of sensitive information to only that which is compatible with the identified purpose(s); [b: WMATA System Implementation Statement]</li>
<li>c. Monitor changes in processing sensitive information and implement mechanisms to ensure any changes are made in accordance with defined requirements to allow or restrict new processing, as appropriate. Mechanisms may include obtaining consent from individuals or other measures to manage privacy risks that arise from changes in sensitive information processing purposes; and [c: WMATA System Implementation Statement]</li>
<li>d. All existing uses of sensitive information are subject to review and reauthorization or restriction. [d: WMATA System Implementation Statement]</li>

Related Controls: AC-2, AC-3, AT-3, IR-9, PM-9, PM-25, PT-2, PT-5, PT-6, PT-7, RA-8, SI-12, SI-18
', [Supplemental_Info]=N'<p><b>Personally Identifiable Information Processing Purposes</b></p>a. Identify and document the [Assignment: organization-defined purpose(s)] for processing personally identifiable information;b. Describe the purpose(s) in the public privacy notices and policies of the organization;c. Restrict the [Assignment: organization-defined processing] of personally identifiable information to only that which is compatible with the identified purpose(s); andd. Monitor changes in processing personally identifiable information and implement [Assignment: organization-defined mechanisms] to ensure that any changes are made in accordance with [Assignment: organization-defined requirements].' WHERE [Requirement_Id] = 37863
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Attach data tags containing the following purposes to [Assignment: organization-defined elements of personally identifiable information]: [Assignment: organization-defined processing purposes]. [WMATA System Implementation Statement]

Related Controls: CA-6, CM-12, PM-5, PM-22, SC-16, SC-43, SI-10, SI-15, SI-19
', [Supplemental_Info]=N'<p><b> Data Tagging</b></p>Attach data tags containing the following purposes to [Assignment: organization-defined elements of personally identifiable information]: [Assignment: organization-defined processing purposes].' WHERE [Requirement_Id] = 37864
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Track processing purposes of personally identifiable information using [Assignment: organization-defined automated mechanisms]. [WMATA System Implementation Statement]

Related Controls: CA-6, CM-12, PM-5, PM-22, SC-16, SC-43, SI-10, SI-15, SI-19
', [Supplemental_Info]=N'<p><b> Automation</b></p>Track processing purposes of personally identifiable information using [Assignment: organization-defined automated mechanisms].' WHERE [Requirement_Id] = 37865
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement mechanisms for individuals to consent to the processing of their sensitive information prior to its collection that facilitate individuals’ informed decision-making. [WMATA System Implementation Statement]

Related Controls: PT-2, PT-5
', [Supplemental_Info]=N'<p><b>Consent</b></p>Implement [Assignment: organization-defined tools or mechanisms] for individuals to consent to the processing of their personally identifiable information prior to its collection that facilitate individuals’ informed decision-making.' WHERE [Requirement_Id] = 37866
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Provide [Assignment: organization-defined mechanisms] to allow individuals to tailor processing permissions to selected elements of personally identifiable information. [WMATA System Implementation Statement]

Related Controls: PT-2
', [Supplemental_Info]=N'<p><b> Tailored Consent</b></p>Provide [Assignment: organization-defined mechanisms] to allow individuals to tailor processing permissions to selected elements of personally identifiable information.' WHERE [Requirement_Id] = 37867
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Present [Assignment: organization-defined consent mechanisms] to individuals at [Assignment: organization-defined frequency] and in conjunction with [Assignment: organization-defined personally identifiable information processing]. [WMATA System Implementation Statement]

Related Controls: PT-2
', [Supplemental_Info]=N'<p><b> Just-in-time Consent</b></p>Present [Assignment: organization-defined consent mechanisms] to individuals at [Assignment: organization-defined frequency] and in conjunction with [Assignment: organization-defined personally identifiable information processing].' WHERE [Requirement_Id] = 37868
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement [Assignment: organization-defined tools or mechanisms] for individuals to revoke consent to the processing of their personally identifiable information.  [WMATA System Implementation Statement]

Related Controls: PT-2
', [Supplemental_Info]=N'<p><b> Revocation</b></p>Implement [Assignment: organization-defined tools or mechanisms] for individuals to revoke consent to the processing of their personally identifiable information.' WHERE [Requirement_Id] = 37869
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Provide notice to individuals about the processing of sensitive information that: [WMATA System Implementation Statement]

<li>a. Is available to individuals upon first interacting with an organization, and subsequently on an annual basis; [a: WMATA System Implementation Statement]</li>
<li>b. Is clear and easy-to-understand, expressing information about sensitive information processing in plain language; [b: WMATA System Implementation Statement]</li>
<li>c. Identifies the authority that authorizes the processing of sensitive information; [c: WMATA System Implementation Statement]</li>
<li>d. Identifies the purposes for which sensitive information is to be processed; and [d: WMATA System Implementation Statement]</li>
<li>e. Privacy Notices shall list all privacy-related information, to include: [e: WMATA System Implementation Statement]</li>
<li>i) Name, such as full name, maiden name, mother‘s maiden name, or alias; [e.i: WMATA System Implementation Statement]</li>
<li>ii) Personal identification number, such as social security number (SSN), passport number, driver‘s license number, taxpayer identification number, patient identification number, and financial account or credit card number; [e.ii: WMATA System Implementation Statement]</li>
<li>iii) Address information, such as street address or email address; [e.iii: WMATA System Implementation Statement]</li>
<li>iv) Asset information, such as Internet Protocol (IP) or Media Access Control (MAC) address or other host-specific persistent static identifier that consistently links to a particular person or small, well-defined group of people; [e.iv: WMATA System Implementation Statement]</li>
<li>v) Telephone numbers, including mobile, business, and personal numbers; [e.v: WMATA System Implementation Statement]</li>
<li>vi) Personal characteristics, including photographic image (especially of face or other distinguishing characteristic), x-rays, fingerprints, or other biometric image or template data (e.g., retina scan, voice signature, facial geometry); [e.vi: WMATA System Implementation Statement]</li>
<li>vii) Information identifying personally owned property, such as vehicle registration number or title number and related information; and [e.vii: WMATA System Implementation Statement]</li>
<li>viii) Information about an individual that is linked or linkable to one of the above (e.g., date of birth, place of birth, race, religion, weight, activities, geographical indicators, employment information, medical information, education information, financial information). [e.viii: WMATA System Implementation Statement]</li>
Related Controls: PT-2, PT-3, PT-4, PT-7, RA-3, SI-18
<li>f. Security Controls Enhancement(s): [f: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Privacy Notice</b></p>Provide notice to individuals about the processing of personally identifiable information that:a. Is available to individuals upon first interacting with an organization, and subsequently at [Assignment: organization-defined frequency];b. Is clear and easy-to-understand, expressing information about personally identifiable information processing in plain language;c. Identifies the authority that authorizes the processing of personally identifiable information;d. Identifies the purposes for which personally identifiable information is to be processed; ande. Includes [Assignment: organization-defined information].' WHERE [Requirement_Id] = 37870
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Present notice of personally identifiable information processing to individuals at a time and location where the individual provides personally identifiable information or in conjunction with a data action, or [Assignment: organization-defined frequency]. [WMATA System Implementation Statement]

Related Controls: PM-21
', [Supplemental_Info]=N'<p><b> Just-in-time Notice</b></p>Present notice of personally identifiable information processing to individuals at a time and location where the individual provides personally identifiable information or in conjunction with a data action, or [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37871
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Include privacy statements on forms that collect information that will be maintained in a privacy system of records, or provide privacy statements on separate forms that can be retained by individuals. [WMATA System Implementation Statement]</li>

Related Controls: PT-6
', [Supplemental_Info]=N'<p><b> Privacy Act Statements</b></p>Include Privacy Act statements on forms that collect information that will be maintained in a Privacy Act system of records, or provide Privacy Act statements on separate forms that can be retained by individuals.' WHERE [Requirement_Id] = 37872
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'For systems that process sensitive information that will be maintained in a system of records:  [WMATA System Implementation Statement]

<li>a. Establish system of records notices and submit new and modified system of records notices for review to the CPO and ITCS; and [a: WMATA System Implementation Statement]</li>
<li>b. Keep system of records notices accurate, up-to-date, and scoped in accordance with policy. [b: WMATA System Implementation Statement]</li>
Related Controls: AC-3, PM-20, PT-2, PT-3, PT-5
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>System of Records Notice</b></p>For systems that process information that will be maintained in a Privacy Act system of records:a. Draft system of records notices in accordance with OMB guidance and submit new and significantly modified system of records notices to the OMB and appropriate congressional committees for advance review;b. Publish system of records notices in the Federal Register; andc. Keep system of records notices accurate, up-to-date, and scoped in accordance with policy.' WHERE [Requirement_Id] = 37873
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Review all routine uses published in the system of records notice annually to ensure continued accuracy, and to ensure that routine uses continue to be compatible with the purpose for which the information was collected. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Routine Uses</b></p>Review all routine uses published in the system of records notice at [Assignment: organization-defined frequency] to ensure continued accuracy, and to ensure that routine uses continue to be compatible with the purpose for which the information was collected.' WHERE [Requirement_Id] = 37874
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Review all sensitive information exemptions claimed for the system of records annually to ensure they remain appropriate and necessary in accordance with law, that they have been promulgated as regulations, and that they are accurately described in the system of records notice. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Exemption Rules</b></p>Review all Privacy Act exemptions claimed for the system of records at [Assignment: organization-defined frequency] to ensure they remain appropriate and necessary in accordance with law, that they have been promulgated as regulations, and that they are accurately described in the system of records notice.' WHERE [Requirement_Id] = 37875
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Apply security controls for information systems in accordance with the security categorization in Control 3.16 Risk Assessment, Section 2, “RA-2 Security Categorization”: [a: WMATA System Implementation Statement]</li>
Related Controls: IR-9, PT-2, PT-3, RA-2, RA-3
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Specific Categories of Personally Identifiable Information</b></p>Apply [Assignment: organization-defined processing conditions] for specific categories of personally identifiable information.' WHERE [Requirement_Id] = 37876
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'When an information system processes Social Security numbers:

<li>(1) Eliminate unnecessary collection, maintenance, and use of Social Security Numbers (SSNs) and other sensitive information; [1: WMATA System Implementation Statement]</li>
<li>a) Use unique identifiers (e.g., Employee Identifier (EID) or Contractor Identifier (CID)) to differentiate between personnel; and [1.a: WMATA System Implementation Statement]</li>
<li>b) Only use the SSN where necessary for essential business functions (e.g., financial processing, payroll, benefits, etc.) or other uses consistent with state and federal law; [1.b: WMATA System Implementation Statement]</li>
<li>(2) Do not deny any individual any right, benefit, or privilege provided by law because of such individual’s refusal to disclose his or her SSN; and [2: WMATA System Implementation Statement]</li>
<li>(3) Inform any individual who is asked to disclose his or her Social Security number whether that disclosure is mandatory or voluntary, by what statutory or other authority such number is solicited, and what uses will be made of it. [3: WMATA System Implementation Statement]</li>

Related Controls: IA-4
', [Supplemental_Info]=N'<p><b> Social Security Numbers</b></p>When a system processes Social Security numbers:(a) Eliminate unnecessary collection, maintenance, and use of Social Security numbers, and explore alternatives to their use as a personal identifier;(b) Do not deny any individual any right, benefit, or privilege provided by law because of such individual’s refusal to disclose his or her Social Security number; and(c) Inform any individual who is asked to disclose his or her Social Security number whether that disclosure is mandatory or voluntary, by what statutory or other authority such number is solicited, and what uses will be made of it.' WHERE [Requirement_Id] = 37877
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Prohibit the processing of information describing how any individual exercises rights guaranteed by the First Amendment unless expressly authorized by statute or by the individual or unless pertinent to and within the scope of an authorized law enforcement activity. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> First Amendment Information</b></p>Prohibit the processing of information describing how any individual exercises rights guaranteed by the First Amendment unless expressly authorized by statute or by the individual or unless pertinent to and within the scope of an authorized law enforcement activity.' WHERE [Requirement_Id] = 37878
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'When an information system or organization processes information for the purpose of conducting a matching program: [WMATA System Implementation Statement]

<li>a. Obtain approval from the AO to conduct the matching program; [a: WMATA System Implementation Statement]</li>
<li>b. Develop and enter into a computer matching agreement; and [b: WMATA System Implementation Statement]</li>
<li>c. Sponsoring system owner shall submit to the AO all documentation pursuant to 5 U.S.C. 552a(o)(1), or in the case of a state agency, submit all documentation pursuant to similar or analogous state statutory authority. [c: WMATA System Implementation Statement]</li>

Related Controls: PM-24
', [Supplemental_Info]=N'<p><b>Computer Matching Requirements</b></p>When a system or organization processes information for the purpose of conducting a matching program:a. Obtain approval from the Data Integrity Board to conduct the matching program;b. Develop and enter into a computer matching agreement;c. Publish a matching notice in the Federal Register;d. Independently verify the information produced by the matching program before taking adverse action against an individual, if required; ande. Provide individuals with notice and an opportunity to contest the findings before taking adverse action against an individual.' WHERE [Requirement_Id] = 37879
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Reference P/I 15.28 Cybersecurity Policy for requirements: [WMATA System Implementation Statement]

Related Controls: PM-9, PS-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Risk Assessment Policy and Procedures</b></p>a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:     1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] risk assessment policy that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and          (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and     2. Procedures to facilitate the implementation of the risk assessment policy and the associated risk assessment controls;b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the risk assessment policy and procedures; andc. Review and update the current risk assessment:     1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and     2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37880
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Categorize the system and information it processes, stores, and transmits; [a: WMATA System Implementation Statement]</li>
<li>b. Document the security categorization results, including supporting rationale, in the SSP for the system; and [b: WMATA System Implementation Statement]</li>
<li>c. Verify that the AO or AODR reviews and approves the security categorization decision. [c: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Process hazard analysis (PHA), functional safety assessments, and other organization-established risk assessments can be referenced to identify the impact level of the OT systems. [OT Systems Only: WMATA System Implementation Statement]

Related Controls : CM-8, MP-4, PL-2, PL-10, PL-11, PM-7, RA-3, RA-5, RA-7, RA-8, SA-8, SC-7, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: PHA, functional safety assessments, and other organization-established risk assessments can be referenced to identify the impact level of the OT systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Security Categorization</b></p>a. Categorize the system and information it processes, stores, and transmits;b. Document the security categorization results, including supporting rationale, in the security plan for the system; andc. Verify that the authorizing official or authorizing official designated representative reviews and approves the security categorization decision.' WHERE [Requirement_Id] = 37881
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Conduct a risk assessment, including: [a: WMATA System Implementation Statement]</li>
<li>i) Identifying threats to and vulnerabilities in the system; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Determining the likelihood and magnitude of harm from unauthorized access, use, disclosure, disruption, modification, or destruction of the system, the information it processes, stores, or transmits, and any related information; and [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Determining the likelihood and impact of adverse effects on individuals arising from the processing of PII; [a.iii: WMATA System Implementation Statement]</li>
<li>b. Integrate risk assessment results and risk management decisions from the organization and mission or business process perspectives with system-level risk assessments; [b: WMATA System Implementation Statement]</li>
<li>c. Document risk assessment results in the Governance, Risk, and Compliance (GRC) tool; [c: WMATA System Implementation Statement]</li>
<li>d. Review risk assessment results annually; [d: WMATA System Implementation Statement]</li>
<li>e. Disseminate risk assessment results to the required stakeholders; and [e: WMATA System Implementation Statement]</li>
<li>f. Update the risk assessment annually or when there are significant changes to the system, its environment of operation, or other conditions that may impact the security or privacy state of the system. [f: WMATA System Implementation Statement]</li>

Related Controls: CA-3, CA-6, CM-4, CP-6, CP-7, IA-8, MA-5, PE-3, PE-8, PE-18, PL-2, PL-10, PL-11, PM-8, PM-9, PM-28, PT-2, PT-7, RA-2, RA-5, RA-7, SA-8, SA-9, SI-12
', [Supplemental_Info]=N'<p><b>Risk Assessment</b></p>a. Conduct a risk assessment, including:     1. Identifying threats to and vulnerabilities in the system;     2. Determining the likelihood and magnitude of harm from unauthorized access, use, disclosure, disruption, modification, or destruction of the      system, the information it processes, stores, or transmits, and any related information; and     3. Determining the likelihood and impact of adverse effects on individuals arising from the processing of personally identifiable information;b. Integrate risk assessment results and risk management decisions from the organization and mission or business process perspectives with system-level risk assessments;c. Document risk assessment results in [Selection: security and privacy plans; risk assessment report; [Assignment: organization-defined document]];d. Review risk assessment results [Assignment: organization-defined frequency];e. Disseminate risk assessment results to [Assignment: organization-defined personnel or roles]; andf. Update the risk assessment [Assignment: organization-defined frequency] or when there are significant changes to the system, its environment of operation, or other conditions that may impact the security or privacy state of the system.' WHERE [Requirement_Id] = 37882
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(a) Assess supply chain risks associated with [Assignment: organization-defined systems, system components, and system services]; and [a: WMATA System Implementation Statement]</li>
<li>(b) Update the supply chain risk assessment [Assignment: organization-defined frequency], when there are significant changes to the relevant supply chain, or when changes to the system, environments of operation, or other conditions may necessitate a change in the supply chain. [b: WMATA System Implementation Statement]</li>

Related Controls: RA-2, RA-9, PM-17, PM-30, SR-2
', [Supplemental_Info]=N'<p><b> Supply Chain Risk Assessment</b></p>(a) Assess supply chain risks associated with [Assignment: organization-defined systems, system components, and system services]; and(b) Update the supply chain risk assessment [Assignment: organization-defined frequency], when there are significant changes to the relevant supply chain, or when changes to the system, environments of operation, or other conditions may necessitate a change in the supply chain.' WHERE [Requirement_Id] = 37883
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Monitor and scan for vulnerabilities in the system and hosted applications monthly and when new vulnerabilities potentially affecting the system are identified and reported; [a: WMATA System Implementation Statement]</li>
<li>b. Employ vulnerability monitoring tools and techniques that facilitate interoperability among tools and automate parts of the vulnerability management process by using standards for: [b: WMATA System Implementation Statement]</li>
<li>i) Enumerating platforms, software flaws, and improper configurations; [b.i: WMATA System Implementation Statement]</li>
<li>ii) Formatting checklists and test procedures; and [b.ii: WMATA System Implementation Statement]</li>
<li>iii) Measuring vulnerability impact; [b.iii: WMATA System Implementation Statement]</li>
<li>c. Analyze vulnerability scan reports and results from vulnerability monitoring; [c: WMATA System Implementation Statement]</li>
<li>d. Remediate vulnerabilities within the following timelines: [d: WMATA System Implementation Statement]</li>
<li>i) Critical vulnerabilities: immediately but no more than 15 days after notification; [d.i: WMATA System Implementation Statement]</li>
<li>ii) High vulnerabilities: within 30 days of notification; [d.ii: WMATA System Implementation Statement]</li>
<li>iii) Medium vulnerabilities: within 60 days of notification; and [d.iii: WMATA System Implementation Statement]</li>
<li>iv) Low vulnerabilities: within 90 days of notification; [d.iv: WMATA System Implementation Statement]</li>
All system changes are subject to implementation in accordance with Control 3.4 Configuration Management.
<li>e. Share information obtained from the vulnerability monitoring process and control assessments with the required system owner(s) and with other stakeholders on a need-to-know basis, to help eliminate similar vulnerabilities in other systems; and [e: WMATA System Implementation Statement]</li>
<li>f. Employ vulnerability monitoring tools that include the capability to readily update the vulnerabilities to be scanned. [f: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> The organization makes a risk-based determination of how to monitor or scan for vulnerabilities on their system. This may include active scanning, passive monitoring, or compensating controls, depending on the system being scanned. For example, vulnerability examination may be performed using passive monitoring and manual visual inspection to maintain an up-to-date inventory of assets. That inventory can be cross-referenced against a list of known vulnerabilities (e.g., CISA advisories and NIST NVD). Production may need to be taken off-line before active scans can be conducted. Scans are scheduled to occur during planned OT outages whenever possible. If vulnerability scanning tools are used on adjacent non-OT networks, extra care is taken to ensure that they do not mistakenly scan the OT network. Automated network scanning is not applicable to non-routable communications such as serial networks. Compensating controls include providing a replicated or simulated system for conducting scans or host-based vulnerability applications. [OT Systems Only: WMATA System Implementation Statement]
Related Controls : CA-2, CA-7, CA-8, CM-2, CM-4, CM-6, CM-8, RA-2, RA-3, SA-11, SA-15, SI-2, SI-3, SI-4, SI-7, SR-11
<li>g. Security Controls Enhancement(s): [g: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization makes a risk-based determination of how to monitor or scan for vulnerabilities on their system. This may include active scanning, passive monitoring, or compensating controls, depending on the system being scanned. For example, vulnerability examination may be performed using passive monitoring and manual visual inspection to maintain an up-to-date inventory of assets. That inventory can be cross-referenced against a list of known vulnerabilities (e.g., CISA advisories, NIST NVD). Production may need to be taken offline before active scans can be conducted. Scans are scheduled to occur during planned OT outages whenever possible. If vulnerability scanning tools are used on adjacent non-OT networks, extra care is taken to ensure that they do not mistakenly scan the OT network. Automated network scanning is not applicable to non-routable communications, such as serial networks. Compensating controls include providing a replicated or simulated system for conducting scans or host-based vulnerability applications. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Vulnerability Monitoring and Scanning</b></p>a. Monitor and scan for vulnerabilities in the system and hosted applications [Assignment: organization-defined frequency and/or randomly in accordance with organization-defined process] and when new vulnerabilities potentially affecting the system are identified and reported;b. Employ vulnerability monitoring tools and techniques that facilitate interoperability among tools and automate parts of the vulnerability management process by using standards for:     1. Enumerating platforms, software flaws, and improper configurations;     2. Formatting checklists and test procedures; and     3. Measuring vulnerability impact;c. Analyze vulnerability scan reports and results from vulnerability monitoring;d. Remediate legitimate vulnerabilities [Assignment: organization-defined response times] in accordance with an organizational assessment of risk;e. Share information obtained from the vulnerability monitoring process and control assessments with [Assignment: organization-defined personnel or roles] to help eliminate similar vulnerabilities in other systems; andf. Employ vulnerability monitoring tools that include the capability to readily update the vulnerabilities to be scanned.' WHERE [Requirement_Id] = 37884
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Establish a public reporting channel for receiving reports of vulnerabilities in organizational systems and system components. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> For federal organizations, CISA Binding Operational Directive 20-01 requires individual federal civilian executive branch agencies to develop and publish a vulnerability disclosure policy (VDP) for their internet-accessible systems and services, and maintain processes to support their VDP. A VDP may be implemented at the organization level, rather than for each individual system. Non-federal as well as federal organizations could achieve this control by creating and monitoring an email address published on a public-facing website for contacting the organization regarding disclosures. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: For federal organizations, CISA Binding Operational Directive 20-01 requires individual federal civilian executive branch agencies to develop and publish a vulnerability disclosure policy (VDP) for their internet-accessible systems and services and maintain processes to support their VDP. A VDP may be implemented at the organization level rather than for each individual system. Federal and non-federal organizations could achieve this control by creating and monitoring an email address published on a public-facing website for contacting the organization regarding disclosures.  [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Vulnerability Monitoring and Scanning | Public Disclosure Program</b></p>Establish a public reporting channel for receiving reports of vulnerabilities in organizational systems and system components.' WHERE [Requirement_Id] = 37885
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Update the system vulnerabilities to be scanned daily and when new vulnerabilities are identified and reported. [WMATA System Implementation Statement]

Related Controls: SI-5
', [Supplemental_Info]=N'<p><b> Update Vulnerabilities to Be Scanned</b></p>Update the system vulnerabilities to be scanned [Selection (one or more): [Assignment: organization-defined frequency]; prior to a new scan; when new vulnerabilities are identified and reported].' WHERE [Requirement_Id] = 37886
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Determine information about the system that is discoverable and notify appropriate organizational personnel, remove designated information, and/or change the system to make the designated information less relevant or attractive to adversaries. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Examples of discoverable information in OT could include information about key personnel or technical information relating to systems and configurations. Locations that may need to be monitored or scanned include technical forums, blogs, or vendor/contractor websites. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Examples of discoverable information in OT could include information about key personnel or technical information related to systems and configurations. Locations that may need to be monitored or scanned include technical forums, blogs, and vendor or contractor websites.  [NIST 800-82 Rev 3: WMATA System Implementation Statement] 
', [Supplemental_Info]=N'<p><b>Vulnerability Monitoring and Scanning | Discoverable Information</b></p>Determine information about the system that is discoverable and take [Assignment: organization-defined corrective actions].' WHERE [Requirement_Id] = 37887
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement privileged access authorization to systems and system components for all vulnerability scanning activities. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Privileged Access</b></p>Implement privileged access authorization to [Assignment: organization-defined system components] for [Assignment: organization-defined vulnerability scanning activities].' WHERE [Requirement_Id] = 37888
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Respond to findings from security and privacy assessments, monitoring, and audits in accordance with organizational risk tolerance. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Risk Response</b></p>Respond to findings from security and privacy assessments, monitoring, and audits in accordance with organizational risk tolerance.' WHERE [Requirement_Id] = 37889
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Conduct sensitivity impact assessments for systems, programs, or other activities, and document results in the GRC tool before: [a: WMATA System Implementation Statement]</li>
<li>i) Developing or procuring information technology that processes sensitive information; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Initiating a new collection of sensitive information that will be processed using information technology; and [a.ii: WMATA System Implementation Statement]</li>
<li>iii) The results of the sensitivity impact assessment may require the completion of a privacy impact assessment or other documentation specific to the type of sensitive information processed. [a.iii: WMATA System Implementation Statement]</li>
<li>b. Conduct privacy impact assessments for systems, programs, or other activities, and document results in the GRC tool before: [b: WMATA System Implementation Statement]</li>
<li>i) Developing or procuring information technology that processes personally identifiable information; and [b.i: WMATA System Implementation Statement]</li>
<li>ii) Initiating a new collection of personally identifiable information that will be processed using information technology; [b.ii: WMATA System Implementation Statement]</li>

Related Controls : CM-4, CM-9, PT-2, PT-3, PT-5, RA-1, RA-2, RA-3, RA-7
', [Supplemental_Info]=N'<p><b>Privacy Impact Assessments</b></p>Conduct privacy impact assessments for systems, programs, or other activities before:a. Developing or procuring information technology that processes personally identifiable information; andb. Initiating a new collection of personally identifiable information that:1. Will be processed using information technology; and2. Includes personally identifiable information permitting the physical or virtual (online) contacting of a specific individual, if identical questions have been posed to, or identical reporting requirements imposed on, ten or more individuals, other than agencies, instrumentalities, or employees of the federal government.' WHERE [Requirement_Id] = 37890
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Identify critical system components and functions by performing a criticality analysis for systems, system components, and system services throughout the Project Lifecycle Management (PLM) process/System Development Life Cycle (SDLC). All new systems shall conduct a criticality analysis as a part of the project intake phase. [WMATA System Implementation Statement]

Related Controls: CP-2, PL-2, PL-8, PL-11, PM-1, PM-11, RA-2, SA-8, SA-15, SR-5
', [Supplemental_Info]=N'<p><b>Criticality Analysis</b></p>Identify critical system components and functions by performing a criticality analysis for [Assignment: organization-defined systems, system components, or system services] at [Assignment: organization-defined decision points in the system development life cycle].' WHERE [Requirement_Id] = 37891
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement]

Related Controls: PM-9, PS-8, SA-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]


', [Supplemental_Info]=N'<p><b>System and Services Acquisition Policy and Procedures</b></p>a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:     1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] system and services acquisition policy that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and         (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and     2. Procedures to facilitate the implementation of the system and services acquisition policy and the associated system and services acquisition      controls; b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the system and  services acquisition policy and procedures; and c. Review and update the current system and services acquisition:     1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and     2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37892
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Perform configuration management during system, component, or service design; development; implementation; operation; disposal, in accordance with the SDLC; [a: WMATA System Implementation Statement]</li>
<li>b. Document, manage, and control the integrity of changes to all system and system component configuration items under configuration management; [b: WMATA System Implementation Statement]</li>
<li>c. Implement only organization-approved changes to the system, component, or service; [c: WMATA System Implementation Statement]</li>
<li>d. Document approved changes to the system, component, or service and the potential security and privacy impacts of such changes; and [d: WMATA System Implementation Statement]</li>
<li>e. Track security flaws and flaw resolution within the system, component, or service and report findings to required stakeholders. [e: WMATA System Implementation Statement]</li>

Related Controls: CM-2, CM-3, CM-4, CM-7, CM-9, SA-4, SA-5, SA-8, SA-15, SI-2, SR-3, SR-4, SR-5, SR-6

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Personnel with knowledge about security and privacy requirements are included in the change management process for the developer.  [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Developer Configuration Management</b></p>Require the developer of the system, system component, or system service to:a. Perform configuration management during system, component, or service [Selection (one or more): design; development; implementation; operation; disposal];b. Document, manage, and control the integrity of changes to [Assignment: organization-defined configuration items under configuration management];c. Implement only organization-approved changes to the system, component, or service;d. Document approved changes to the system, component, or service and the potential security and privacy impacts of such changes; ande. Track security flaws and flaw resolution within the system, component, or service and report findings to [Assignment: organization-defined personnel].' WHERE [Requirement_Id] = 37893
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Require the developer of the system, system component, or system service, at all post-design stages of the SDLC, to: [WMATA System Implementation Statement]

<li>a. Develop and implement a plan for ongoing security and privacy control assessments; [a: WMATA System Implementation Statement]</li>
<li>b. Perform unit, integration, system, and regression testing/evaluation for releases and changes to the system or system components as specified in the SDLC at a depth and coverage that enable the DMCS-defined security and privacy objectives for the system to be implemented and approved by the AO; [b: WMATA System Implementation Statement]</li>
<li>c. All contracts shall specify acceptance criteria for security and privacy controls and plans commensurate with the security category or classification level of the system; [c: WMATA System Implementation Statement]</li>
<li>d. Produce evidence of the execution of the assessment plan and the results of the testing and evaluation; [d: WMATA System Implementation Statement]</li>
<li>e. Implement a verifiable flaw remediation process; and [e: WMATA System Implementation Statement]</li>
<li>f. Correct flaws identified during testing and evaluation. [f: WMATA System Implementation Statement]</li>

Related Controls: CA-2, CA-7, CM-4, SA-3, SA-4, SA-5, SA-8, SA-15, SA-17, SI-2, SR-5, SR-6, SR-7
', [Supplemental_Info]=N'<p><b>Developer Testing and Evaluation</b></p>Require the developer of the system, system component, or system service, at all post-design stages of the system development life cycle, to:a. Develop and implement a plan for ongoing security and privacy control assessments;b. Perform [Selection (one or more): unit; integration; system; regression] testing/evaluation [Assignment: organization-defined frequency] at [Assignment: organization-defined depth and coverage];c. Produce evidence of the execution of the assessment plan and the results of the testing and evaluation;d. Implement a verifiable flaw remediation process; ande. Correct flaws identified during testing and evaluation.' WHERE [Requirement_Id] = 37894
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Require the developer of the system, system component, or system service to follow a documented development process that: [a: WMATA System Implementation Statement]</li>
<li>i) Explicitly addresses security and privacy requirements; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Identifies the standards and tools used in the development process; [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Documents the specific tool options and tool configurations used in the development process; and [a.iii: WMATA System Implementation Statement]</li>
<li>iv) Documents, manages, and ensures the integrity of changes to the process and/or tools used in development; [a.iv: WMATA System Implementation Statement]</li>
<li>b. Review the development process, standards, tools, tool options, and tool configurations annually to determine if the process, standards, tools, tool options and tool configurations selected and employed can satisfy the security and privacy requirements throughout the SDLC. [b: WMATA System Implementation Statement]</li>
Related Controls: MA-6, SA-3, SA-4, SA-8, SA-10, SA-11, SR-3, SR-4, SR-5, SR-6, SR-9
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Development Process, Standards, and Tools</b></p>a. Require the developer of the system, system component, or system service to follow a documented development process that:     1. Explicitly addresses security and privacy requirements;     2. Identifies the standards and tools used in the development process;     3. Documents the specific tool options and tool configurations used in the development process; and     4. Documents, manages, and ensures the integrity of changes to the process and/or tools used in development; andb. Review the development process, standards, tools, tool options, and tool configurations [Assignment: organization-defined frequency] to determine if the process, standards, tools, tool options and tool configurations selected and employed can satisfy the following security and privacy requirements: [Assignment: organization-defined security and privacy requirements].' WHERE [Requirement_Id] = 37895
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Require the developer of the system, system component, or system service to perform a criticality analysis: [WMATA System Implementation Statement]

<li>(1) As a part of the SDLC Design Phase (also known as Initiation Phase of the SDLC as defined by NIST 800-64); [1: WMATA System Implementation Statement]</li>
<li>(2) As a part of the A&A Categorization Phase; and [2: WMATA System Implementation Statement]</li>
<li>(3) At the discretion of the AO based on major changes to the system. [3: WMATA System Implementation Statement]</li>

Related Controls: RA-9
', [Supplemental_Info]=N'<p><b> Criticality Analysis</b></p>Require the developer of the system, system component, or system service to perform a criticality analysis:(a) At the following decision points in the system development life cycle: [Assignment: organization-defined decision points in the system development life cycle]; and(b) At the following level of rigor: [Assignment: organization-defined breadth and depth of criticality analysis].' WHERE [Requirement_Id] = 37896
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Require the developer of the system, system component, or system service to provide training on the correct use and operation of the implemented security and privacy functions, controls, and/or mechanisms. [WMATA System Implementation Statement]

Related Controls: AT-2, AT-3, PE-3, SA-4, SA-5
', [Supplemental_Info]=N'<p><b>Developer-provided Training</b></p>Require the developer of the system, system component, or system service to provide the following training on the correct use and operation of the implemented security and privacy functions, controls, and/or mechanisms: [Assignment: organization-defined training].' WHERE [Requirement_Id] = 37897
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Require the developer of the system, system component, or system service to produce a design specification and security and privacy architecture that: [WMATA System Implementation Statement]

<li>a. Is consistent with the organization’s security and privacy architecture that is an integral part of the organization’s enterprise architecture; [a: WMATA System Implementation Statement]</li>
<li>b. Accurately and completely describes the required security and privacy functionality and the allocation of controls among physical and logical components; and [b: WMATA System Implementation Statement]</li>
<li>c. Expresses how individual security and privacy functions, mechanisms, and services work together to provide required security and privacy capabilities and a unified approach to protection. [c: WMATA System Implementation Statement]</li>

Related Controls: PL-2, PL-8, PM-7, SA-3, SA-4, SA-8, SC-7
', [Supplemental_Info]=N'<p><b>Developer Security and Privacy Architecture and Design</b></p>Require the developer of the system, system component, or system service to produce a design specification and security and privacy architecture that:a. Is consistent with the organization’s security and privacy architecture that is an integral part the organization’s enterprise architecture;b. Accurately and completely describes the required security and privacy functionality, and the allocation of controls among physical and logical components; andc. Expresses how individual security and privacy functions, mechanisms, and services work together to provide required security and privacy capabilities and a unified approach to protection.' WHERE [Requirement_Id] = 37898
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Determine the high-level information security and privacy requirements for the system or system service in mission and business process planning; [a: WMATA System Implementation Statement]</li>
<li>b. Determine, document, and allocate the resources required to protect the system or system service as part of the organizational capital planning and investment control process; and [b: WMATA System Implementation Statement]</li>
<li>c. Establish a discrete line item for information security and privacy in organizational programming and budgeting documentation. [c: WMATA System Implementation Statement]</li>

Related Controls: PL-7, PM-3, PM-11, SA-9, SR-3, SR-5
', [Supplemental_Info]=N'<p><b>Allocation of Resources</b></p>a. Determine the high-level information security and privacy requirements for the system or system service in mission and business process planning;b. Determine, document, and allocate the resources required to protect the system or system service as part of the organizational capital planning and investment control process; andc. Establish a discrete line item for information security and privacy in organizational programming and budgeting documentation.' WHERE [Requirement_Id] = 37899
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Require that the developer of a system, system component, or system service: [WMATA System Implementation Statement]

<li>a. Have appropriate access authorizations as determined by assigned official duties or as specified in an associated contract; and [a: WMATA System Implementation Statement]</li>
<li>b. Satisfy the following personnel screening criteria: [b: WMATA System Implementation Statement]</li>
<li>i) Successful completion and adjudication of all required WMATA background checks. All contractors shall provide WMATA with contractually obligated background information; and [b.i: WMATA System Implementation Statement]</li>
<li>ii) Review and analysis of company ownership and relationships that the company has with entities that may potentially affect the quality and reliability of the systems, components, or services being developed. [b.ii: WMATA System Implementation Statement]</li>

Related Controls: PS-2, PS-3, PS-6, PS-7, SA-4, SR-6
', [Supplemental_Info]=N'<p><b>Developer Screening</b></p>Require that the developer of [Assignment: organization-defined system, system component, or system service]:a. Has appropriate access authorizations as determined by assigned [Assignment: organization-defined official government duties]; andb. Satisfies the following additional personnel screening criteria: [Assignment: organization-defined additional personnel screening criteria].' WHERE [Requirement_Id] = 37900
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Replace system components when support for the components is no longer available from the developer, vendor, or manufacturer. All systems shall employ vendor-supported products that are not end-of-life (EOL) and that are regularly maintained in accordance with Control 3.11 Maintenance. [a: WMATA System Implementation Statement]</li>
<li>b. Vulnerabilities identified on unsupported devices must be addressed using mitigating security controls as defined by DMCS. [b: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> OT systems may contain system components that are no longer supported by the developer, vendor, or manufacturer and have not been replaced due to various operational, safety, availability, or lifetime constraints. Organizations identify alternative methods to continue supported operation of such system components and consider additional compensating controls to mitigate against known threats and vulnerabilities to unsupported system components. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: PL-2, SA-3 

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: OT systems may contain system components that are no longer supported by the developer, vendor, or manufacturer and have not been replaced due to various operational, safety, availability, or lifetime constraints. Organizations identify alternative methods to continue supported operation of such system components and consider additional compensating controls to mitigate against known threats and vulnerabilities to unsupported system components. [NIST 800-82 Rev 3_Rationale: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Unsupported System Components</b></p>a. Replace system components when support for the components is no longer available from the developer, vendor, or manufacturer; orb. Provide the following options for alternative sources for continued support for unsupported components [Selection (one or more): in-house support; [Assignment: organization-defined support from external providers]].' WHERE [Requirement_Id] = 37901
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Acquire, develop, and manage the system using the SDLC that incorporates information security and privacy considerations; [a: WMATA System Implementation Statement]</li>
<li>b. Define and document information security and privacy roles and responsibilities throughout the SDLC; [b: WMATA System Implementation Statement]</li>
<li>c. Identify individuals having information security and privacy roles and responsibilities; and [c: WMATA System Implementation Statement]</li>
<li>d. Integrate the organizational information security and privacy risk management process into SDLC activities. [d: WMATA System Implementation Statement]</li>
<li>e. Publishing code to a public code repository requires the express written authorization of the AO. [e: WMATA System Implementation Statement]</li>
Related Controls: AT-3, PL-8, PM-7, SA-4, SA-5, SA-8, SA-11, SA-15, SA-17, SA-22, SR-3, SR-4, SR-5, SR-9
<li>f. Security Controls Enhancement(s): [f: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>System Development Life Cycle</b></p>a. Acquire, develop, and manage the system using [Assignment: organization-defined system development life cycle] that incorporates information security and privacy considerations;b. Define and document information security and privacy roles and responsibilities throughout the system development life cycle;c. Identify individuals having information security and privacy roles and responsibilities; andd. Integrate the organizational information security and privacy risk management process into system development life cycle activities.' WHERE [Requirement_Id] = 37902
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Protect system preproduction environments commensurate with risk throughout the system development life cycle of the system, system component, or system service. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Organizations that do not maintain local preproduction environments and utilize a third-party integrator should ensure contracts are developed to limit the security and privacy risks. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: CM-2, CM-4, RA-3, RA-9, SA-4

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Organizations that do not maintain local pre-production environments and utilize a third-party integrator should ensure that contracts are developed to limit security and privacy risks. [NIST 800-82 Rev 3: WMATA System Implementation Statement] 
', [Supplemental_Info]=N'<p><b>System Development Life Cycle | Manage Preproduction Environment</b></p>Protect system preproduction environments commensurate with risk throughout the system development life cycle for the system, system component, or system service.' WHERE [Requirement_Id] = 37903
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Plan for and implement a technology refresh schedule for the system throughout the system development life cycle. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Many OT systems have an expected life cycle that is longer than most IT components. Technology refresh is addressed in budget planning to limit the use of obsolete systems that present security or reliability risks. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: MA-6

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Many OT systems have an expected life cycle that is longer than most IT components. Technology refresh is addressed in budget planning to limit the use of obsolete systems that present security or reliability risks. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>System Development Life Cycle | Technology Refresh</b></p>Plan for and implement a technology refresh schedule for the system throughout the system development life cycle.' WHERE [Requirement_Id] = 37904
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Include the following requirements, descriptions, and criteria, explicitly or by reference, using standardized contract language in the acquisition contract for the system, system component, or system service: [WMATA System Implementation Statement]

<li>a. Security and privacy functional requirements for all stages of the SDLC as required in Control 3.19 System and Services Acquisition, Section 3, “SA-3 System Development Life Cycle” to include user and administrator guidance for the implementation and operation of controls; [a: WMATA System Implementation Statement]</li>
<li>b. Strength of mechanism requirements associated with capabilities, functions, and mechanisms to include a degree of correctness, completeness, resistance to tampering or bypass, and resistance to direct attack; [b: WMATA System Implementation Statement]</li>
<li>c. Security and privacy assurance requirements to include development processes, procedures, and methodologies as well as the evidence from development and assessment activities that provide grounds for confidence that the required functionality is implemented and possesses the required strength of mechanism; [c: WMATA System Implementation Statement]</li>
<li>d. Controls needed to satisfy the security and privacy requirements; [d: WMATA System Implementation Statement]</li>
<li>e. Security and privacy documentation requirements; [e: WMATA System Implementation Statement]</li>
<li>f. Requirements for protecting security and privacy documentation; [f: WMATA System Implementation Statement]</li>
<li>g. Description of the system development environment and environment in which the system is intended to operate; [g: WMATA System Implementation Statement]</li>
<li>h. Allocation of responsibility or identification of parties responsible for information security, privacy, and supply chain risk management; and [h: WMATA System Implementation Statement]</li>
<li>i. Acceptance criteria. [i: WMATA System Implementation Statement]</li>
<li>j. Providers of defined external information systems are required to identify the location of information systems that receive, process, store, or transmit WMATA data, with special emphasis on sensitive information to include, but is not limited to, Personally Identifiable Information (PII), Federal Tax Information (FTI), etc. [j: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Organizations engage with OT suppliers to raise awareness of cybersecurity needs. The SCADA/Control Systems Procurement Project provides example cybersecurity procurement language for OT. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: CM-6, CM-8, PS-7, SA-3, SA-5, SA-8, SA-11, SA-15, SA-16, SA-17, SA-21, SR-3, SR-5
<li>k. Security Controls Enhancement(s): [k: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Organizations engage with OT suppliers to raise awareness of cybersecurity needs. The SCADA/Control Systems Procurement Project provides example cybersecurity procurement language for OT. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Acquisition Process</b></p>Include the following requirements, descriptions, and criteria, explicitly or by reference, using [Selection (one or more): standardized contract language; [Assignment: organization-defined contract language]] in the acquisition contract for the system, system component, or system service:a. Security and privacy functional requirements;b. Strength of mechanism requirements;c. Security and privacy assurance requirements;d. Controls needed to satisfy the security and privacy requirements.e. Security and privacy documentation requirements;f. Requirements for protecting security and privacy documentation;g. Description of the system development environment and environment in which the system is intended to operate;h. Allocation of responsibility or identification of parties responsible for information security, privacy, and supply chain risk management; andi. Acceptance criteria.' WHERE [Requirement_Id] = 37905
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Require the developer of the system, system component, or system service to provide a description of the functional properties of the controls to be implemented. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> When acquiring OT products, consideration for security requirements may not have been incorporated into the design. Procurement may need to consider alternative products or complementary hardware, or plan for compensating controls. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: When acquiring OT products, consideration for security requirements may not have been incorporated into the design. Procurement may need to consider alternative products or complementary hardware or plan for compensating controls. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Acquisition Process | Functional Properties of Controls</b></p>Require the developer of the system, system component, or system service to provide a description of the functional properties of the controls to be implemented.' WHERE [Requirement_Id] = 37906
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Employ only information technology products on the FIPS 201-approved products list for PIV capability implemented within organizational systems. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> The use of approved PIV products is only required for organizations that follow OMB Memorandum M-19-17, e.g., federal agencies and contractors. Example compensating controls include employing external products on the FIPS 201-approved products list for PIV capability in conjunction with OT products.  [OT Systems Only: WMATA System Implementation Statement]

Related Controls: IA-2, IA-8, PM-9

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The use of approved PIV products is only required for organizations that follow OMB Memorandum M-19-17 (e.g., federal agencies and contractors). Example compensating controls include employing external products on the FIPS 201-approved products list for PIV capabilities in conjunction with OT products. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Acquisition Process | Use of Approved PIV Products</b></p>Employ only information technology products on the FIPS 201-approved products list for Personal Identity Verification (PIV) capability implemented within organizational systems.' WHERE [Requirement_Id] = 37907
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Include organization data ownership requirements in the acquisition contract; and [1: WMATA System Implementation Statement]</li>
<li>(2) Require all data to be removed from the contractor’s system and returned to the organization within [2: Assignment: organization-defined time frame]. [WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
Rationale for adding SA-4 (12) to LOW, MOD, and HIGH baselines: Organizationally sensitive or proprietary OT data is often provided to contractors for project development or support, so data ownership should be defined prior to exchanging data with a vendor or integrator. The potential sharing of data with other parties and the potential deletion of the data after project completion should be determined. OT systems that are operated by contractors on behalf of the organization may be subject to the same requirements (e.g., legal, regulatory, etc.) for data ownership and retention. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Acquisition Process | Data Ownership</b></p>(a) Include organizational data ownership requirements in the acquisition contract; and(b) Require all data to be removed from the contractor’s system and returned to the organization within [Assignment: organization-defined time frame].' WHERE [Requirement_Id] = 37908
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Require the developer of the system, system component, or system service to provide design and implementation information for controls that includes: [WMATA System Implementation Statement]

<li>(1) Security-relevant system interfaces with external systems; [1: WMATA System Implementation Statement]</li>
<li>(2) Security-relevant system interfaces with internal systems; [2: WMATA System Implementation Statement]</li>
<li>(3) High-level design for the system expressed in terms of subsystems and the interfaces between subsystems with security-relevant functionality/information; [3: WMATA System Implementation Statement]</li>
<li>(4) Low-level design for the system expressed in terms of modules and the interfaces between modules with security-relevant functionality/information; [4: WMATA System Implementation Statement]</li>
<li>(5) Design and implementation documentation to include manufacturer, version, serial number, verification hash signature, software libraries used, date of purchase or download, and the vendor or download source; [5: WMATA System Implementation Statement]</li>
<li>(6) Source code or hardware schematics and any other implementation information at a level of detail necessary for successful review and implementation of the system; [6: WMATA System Implementation Statement]</li>
<li>(7) List of all Ports, Protocols and Services required for the functionality of the system; [7: WMATA System Implementation Statement]</li>
<li>(8) Data Flow Diagram (DFD) that represents a flow of a data in the system (if applicable); [8: WMATA System Implementation Statement]</li>
<li>(9) Data Classification Matrix including data definition, access restrictions and minimum controls specific for your service; and [9: WMATA System Implementation Statement]</li>
<li>(10) Application Boundary Diagram that illustrates the relationships between the application components and hosted environments (if applicable). [10: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> When acquiring OT products, consideration for security requirements may not have been incorporated into the design. Procurement may need to consider alternative products or complementary hardware, or plan for compensating controls.  [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: When acquiring OT products, consideration for security requirements may not have been incorporated into the design. Procurement may need to consider alternative products or complementary hardware or plan for compensating controls. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Acquisition Process | Design and Implementation Information for Controls</b></p>Require the developer of the system, system component, or system service to provide design and implementation information for the controls that includes: [Selection (one or more): security-relevant external system interfaces; high-level design; low-level design; source code or hardware schematics; [Assignment: organization-defined design and implementation information]] at [Assignment: organization-defined level of detail].' WHERE [Requirement_Id] = 37909
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Require the developer of the system, system component, or system service to: [WMATA System Implementation Statement]

<li>(1) Deliver the system, component, or service with the following implemented: [1: WMATA System Implementation Statement]</li>
<li>(a) Secure baselines based on all relevant/applicable STIGs in accordance with Control 3.4 Configuration Management, Section 6, “CM-6 Configuration Settings”; [1.a: WMATA System Implementation Statement]</li>
<li>(b) Cybersecurity requirements including limitations on deprecated or disallowed functions, ports, protocols, and services; and [1.b: WMATA System Implementation Statement]</li>
<li>(c) Default passwords changed in accordance with Control 3.9 Identification and Authentication; and [1.c: WMATA System Implementation Statement]</li>
<li>(2) Use the configurations as the default for any subsequent system, component, or service reinstallation or upgrade. [2: WMATA System Implementation Statement]</li>

Related Controls: CM-6
', [Supplemental_Info]=N'<p><b> System, Component, and Service Configurations</b></p>Require the developer of the system, system component, or system service to:(a) Deliver the system, component, or service with [Assignment: organization-defined security configurations] implemented; and(b) Use the configurations as the default for any subsequent system, component, or service reinstallation or upgrade.' WHERE [Requirement_Id] = 37910
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Require the developer of the system, system component, or system service to identify the functions, ports, protocols, and services intended for organizational use. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> When acquiring OT products, consideration for security requirements may not have been incorporated into the design. Procurement may need to consider alternative products or complementary hardware, or plan for compensating controls. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: CM-7, SA-9

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: When acquiring OT products, consideration for security requirements may not have been incorporated into the design. Procurement may need to consider alternative products or complementary hardware or plan for compensating controls. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Acquisition Process | Functions, Ports, Protocols, and Services in Use</b></p>Require the developer of the system, system component, or system service to identify the functions, ports, protocols, and services intended for organizational use.' WHERE [Requirement_Id] = 37911
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Obtain or develop (externally or internally) administrator documentation for the system, system component, or system service that describes: [a: WMATA System Implementation Statement]</li>
<li>i) Secure configuration, installation, and operation of the system, component, or service; [a.i: WMATA System Implementation Statement]</li>
<li>ii) Effective use and maintenance of security and privacy functions and mechanisms; and [a.ii: WMATA System Implementation Statement]</li>
<li>iii) Known vulnerabilities regarding configuration and use of administrative or privileged tions; [a.iii: WMATA System Implementation Statement]</li>
<li>b. Obtain or develop (externally or internally) user documentation for the system, system component, or system service that describes: [b: WMATA System Implementation Statement]</li>
<li>i) User-accessible security and privacy functions and mechanisms and how to effectively use those functions and mechanisms; [b.i: WMATA System Implementation Statement]</li>
<li>ii) Methods for user interaction, which enables individuals to use the system, component, or service in a more secure manner and protect individual privacy; and [b.ii: WMATA System Implementation Statement]</li>
<li>iii) User responsibilities in maintaining the security of the system, component, or service and privacy of individuals; [b.iii: WMATA System Implementation Statement]</li>
<li>c. Document attempts to obtain system, system component, or system service documentation when such documentation is either unavailable or nonexistent; and take actions to recreate the documentation if it is essential to the implementation or operation of the controls in response; and [c: WMATA System Implementation Statement]</li>
<li>d. Distribute documentation to required stakeholders. [d: WMATA System Implementation Statement]</li>

Related Controls: CM-4, CM-6, CM-7, CM-8, PL-2, PL-4, PL-8, PS-2, SA-3, SA-4, SA-8, SA-9, SA-10, SA-11, SA-15, SA-16, SA-17, SI-12, SR-3
', [Supplemental_Info]=N'<p><b>System Documentation</b></p>a. Obtain or develop administrator documentation for the system, system component, or system service that describes:     1. Secure configuration, installation, and operation of the system, component, or service;     2. Effective use and maintenance of security and privacy functions and mechanisms; and     3. Known vulnerabilities regarding configuration and use of administrative or privileged functions;b. Obtain or develop user documentation for the system, system component, or system service that describes:     1. User-accessible security and privacy functions and mechanisms and how to effectively use those functions and mechanisms;     2. Methods for user interaction, which enables individuals to use the system, component, or service in a more secure manner and protect      individual privacy; and     3. User responsibilities in maintaining the security of the system, component, or service and privacy of individuals;c. Document attempts to obtain system, system component, or system service documentation when such documentation is either unavailable or nonexistent and take [Assignment: organization-defined actions] in response; andd. Distribute documentation to [Assignment: organization-defined personnel or roles].' WHERE [Requirement_Id] = 37912
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>1. The application of security engineering principles must be integrated into the SDLC. Security engineering principles are primarily targeted at information systems under new development and information systems undergoing major upgrades. For legacy information systems, security engineering principles must be applied to system upgrades and modifications, to the extent feasible, given the current state of the hardware, software, and firmware components within the system. [1: WMATA System Implementation Statement]</li>
<li>2. Apply the following systems security and privacy engineering principles in the specification, design, development, implementation, and modification of the system and system components: [2: WMATA System Implementation Statement]</li>
<li>a. Developing layered protections; [a: WMATA System Implementation Statement]</li>
<li>b. Establishing sound security policy, architecture, and controls as the foundation for design; [b: WMATA System Implementation Statement]</li>
<li>c. Incorporating security into the SDLC; [c: WMATA System Implementation Statement]</li>
<li>d. Delineating physical and logical security boundaries; [d: WMATA System Implementation Statement]</li>
<li>e. Ensuring system developers and integrators are trained on how to develop secure software; [e: WMATA System Implementation Statement]</li>
<li>f. Tailoring security controls to meet organizational and operational needs; [f: WMATA System Implementation Statement]</li>
<li>g. Reducing risk to acceptable levels, thus enabling informed risk management decisions; [g: WMATA System Implementation Statement]</li>
<li>h. Establishing network segmentation; and [h: WMATA System Implementation Statement]</li>
<li>i. Performing threat modeling to identify use cases, threat agents, attack vectors and patterns, design patterns, and compensating controls needed to mitigate risk. [i: WMATA System Implementation Statement]</li>
Related Controls: PL-8, PM-7, RA-2, RA-3, RA-9, SA-3, SA-4, SA-15, SA-17, SC-2, SC-3, SC-32, SC-39, SR-2, SR-3, SR-4, SR-5
<li>j. Security Controls Enhancement(s): [j: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Security and Privacy Engineering Principles</b></p>Apply the following systems security and privacy engineering principles in the specification, design, development, implementation, and modification of the system and system components: [Assignment: organization-defined systems security and privacy engineering principles].' WHERE [Requirement_Id] = 37913
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement the privacy principle of minimization through discrete processes, which detail how systems only process PII or other sensitive information in accordance with Control 3.8 Data Sensitivity that is directly relevant and necessary to accomplish an authorized purpose and should only maintain PII for as long as is necessary to accomplish the purpose. All uses of PII shall be approved by the AO in consultation with the Privacy Administrator in accordance with P/I 9.2 Privacy Policy. [WMATA System Implementation Statement]

Related Controls: PE-8, PM-25, SI-12
', [Supplemental_Info]=N'<p><b> Minimization</b></p>Implement the privacy principle of minimization using [Assignment: organization-defined processes].' WHERE [Requirement_Id] = 37914
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Providers of external system services (including any third-party vendors) shall comply with organizational security and privacy requirements and employ applicable security controls per policy; [a: WMATA System Implementation Statement]</li>
<li>b. Define and document organizational oversight and user roles and responsibilities regarding external system services; and [b: WMATA System Implementation Statement]</li>
<li>c. Employ the following processes, methods, and techniques to monitor control compliance by external service providers on an ongoing basis: [c: WMATA System Implementation Statement]</li>
<li>i) Leverage organizationally controlled monitoring of external system services; and/or [c.i: WMATA System Implementation Statement]</li>
<li>ii) Require annual attestation from external system service providers regarding compliance with applicable security controls. [c.ii: WMATA System Implementation Statement]</li>
Related Controls: AC-20, CA-3, CP-2, IR-4, IR-7, PL-10, PL-11, PS-7, SA-2, SA-4, SR-3, SR-5
<li>d. Security Controls Enhancement(s): [d: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>External System Services</b></p>a. Require that providers of external system services comply with organizational security and privacy requirements and employ the following controls: [Assignment: organization-defined controls];b. Define and document organizational oversight and user roles and responsibilities with regard to external system services; andc. Employ the following processes, methods, and techniques to monitor control compliance by external service providers on an ongoing basis: [Assignment: organization-defined processes, methods, and techniques].' WHERE [Requirement_Id] = 37915
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Require providers of external system services to identify the functions, ports, protocols, and other services required for the use of such services. [WMATA System Implementation Statement]

Related Controls: CM-6, CM-7
', [Supplemental_Info]=N'<p><b> Identification of Functions, Ports, Protocols, and Services</b></p>Require providers of the following external system services to identify the functions, ports, protocols, and other services required for the use of such services: [Assignment: organization-defined external system services].' WHERE [Requirement_Id] = 37916
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement]

Related Controls: PM-9, PS-8, SA-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. [NIST 800-82 Rev 3_Rationale: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>System and Communication Protection Policy and Procedures</b></p>a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:     1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] system and communications protection policy      that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and          (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and     2. Procedures to facilitate the implementation of the system and communications protection policy and the associated system and      communications protection controls;b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the system and communications protection policy and procedures; andc. Review and update the current system and communications protection:     1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and     2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37917
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Terminate the network connection associated with a communications session at the end of the session or after 15 minutes of inactivity. [WMATA System Implementation Statement]

Related Controls: AC-17, SC-23

<b><u>NIST 800-82 Rev 3:</u></b>
Rationale for removing SC-10 from MOD and HIGH baselines: The intent of this control is effectively covered by AC-17 (9) for OT systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Network Disconnect</b></p>Terminate the network connection associated with a communications session at the end of the session or after [Assignment: organization-defined time period] of inactivity.' WHERE [Requirement_Id] = 37918
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Establish and manage cryptographic keys when cryptography is employed within the system in accordance with the following key management requirements: [WMATA System Implementation Statement]

<li>a. Use FIPS 140-2 compliant encryption mechanisms when protecting WMATA Restricted – Medium Sensitivity or WMATA Restricted – High Sensitivity data. Products and modules that have been validated by the AO as FIPS 140-2 compliant will be listed in the Approved Product List (APL). [a: WMATA System Implementation Statement]</li>
<li>b. All key-based data encryption systems must implement a key escrow system to guarantee access to encrypted data when needed. Key escrow data shall be routinely backed up. Recovery procedures must be tested at least annually to ensure access and availability to encrypted data. [b: WMATA System Implementation Statement]</li>
<li>c. Ensure that only authorized personnel have access to keys used to access WMATA Restricted – Medium Sensitivity or WMATA Restricted – High Sensitivity data and must ensure encryption keys are properly stored (separate from data) and available, if needed, for later decryption. Users will ensure the following: [c: WMATA System Implementation Statement]</li>
<li>i) Separation of duties or dual control procedures are enforced. [c.i: WMATA System Implementation Statement]</li>
<li>ii) Any theft or loss of electronic keys results in the notification of management. [c.ii: WMATA System Implementation Statement]</li>
<li>iii) All keys are protected against modification, substitution, and destruction, and secret/private keys are protected against unauthorized disclosure. [c.iii: WMATA System Implementation Statement]</li>
<li>iv) Cryptographic keys are replaced or retired when keys have reached the end of their life or the integrity of the key has been weakened or compromised. [c.iv: WMATA System Implementation Statement]</li>
<li>v) Physical protection is employed to protect equipment used to synchronize, store, and archive keys. [c.v: WMATA System Implementation Statement]</li>
<li>vi) An electronic key management and recovery system, including all relevant key escrow procedures, is documented and in place. This shall be handled through key escrow procedures. [c.vi: WMATA System Implementation Statement]</li>
<li>vii) Custodians of cryptographic keys formally acknowledge they understand and accept their key custodian responsibilities. [c.vii: WMATA System Implementation Statement]</li>
<li>d. Encrypted data are recoverable at any point in time, even when the person(s) who encrypted the data is no longer available. [d: WMATA System Implementation Statement]</li>
<li>e. Only digital certificates either issued by and/or approved by DMCS can be used to access the WMATA network, applications, and/or systems. [e: WMATA System Implementation Statement]</li>
Related Controls : AC-17, AU-9, AU-10, CM-3, IA-3, IA-7, SA-4, SA-8, SA-9, SC-8, SC-12, SC-13, SC-17, SC-20, SI-3, SI-7
<li>f. Security Controls Enhancement(s): [f: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Cryptographic Key Establishment and Management</b></p>Establish and manage cryptographic keys when cryptography is employed within the system in accordance with the following key management requirements: [Assignment: organization-defined requirements for key generation, distribution, storage, access, and destruction].' WHERE [Requirement_Id] = 37919
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Maintain the availability of information using key escrow systems, techniques, and procedures in the event of the loss of cryptographic keys by users. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Availability</b></p>Maintain availability of information in the event of the loss of cryptographic keys by users.' WHERE [Requirement_Id] = 37920
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Determine and document the system’s use of cryptography to include cryptographic algorithms, key sizes, solutions, and solution components; and [a: WMATA System Implementation Statement]</li>
<li>b. Implement cryptography leveraging the latest versions of FIPS 140-2, NIST SP800-131A, or NSA CNSA Suite encryption at the direction of the AO. [b: WMATA System Implementation Statement]</li>

Related Controls: AC-2, AC-3, AC-7, AC-17, AC-18, AC-19, AU-9, AU-10, CM-11, CP-9, IA-3, IA-5, IA-7, MA-4, MP-2, MP-4, MP-5, SA-4, SA-8, SA-9, SC-8, SC-12, SC-20, SC-23, SC-28, SI-3, SI-7
', [Supplemental_Info]=N'<p><b>Cryptographic Protection</b></p>a. Determine the [Assignment: organization-defined cryptographic uses]; andb. Implement the following types of cryptography required for each specified cryptographic use: [Assignment: organization-defined types of cryptography for each specified cryptographic use].' WHERE [Requirement_Id] = 37921
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Prohibit remote activation of collaborative computing devices and applications including remote meeting devices and applications, networked whiteboards, cameras, and microphones unless authorized by the AO. Only devices and applications listed on the organizational APL may be used. [a: WMATA System Implementation Statement]</li>
<li>b. Provide an explicit indication of use to users physically present at the devices. [b: WMATA System Implementation Statement]</li>

Related Controls: AC-21
', [Supplemental_Info]=N'<p><b>Collaborative Computing Devices and Applications</b></p>a. Prohibit remote activation of collaborative computing devices and applications with the following exceptions: [Assignment: organization-defined exceptions where remote activation is to be allowed]; andb. Provide an explicit indication of use to users physically present at the devices.' WHERE [Requirement_Id] = 37922
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Obtain public key certificates from DMCS-approved service provider(s); and [a: WMATA System Implementation Statement]</li>
<li>b. Include only approved trust anchors in trust stores or certificate stores managed by the organization. [b: WMATA System Implementation Statement]</li>

Related Controls: AU-10, IA-5, SC-12
', [Supplemental_Info]=N'<p><b>Public Key Infrastructure Certificates</b></p>a. Issue public key certificates under an [Assignment: organization-defined certificate policy] or obtain public key certificates from an approved service provider; andb. Include only approved trust anchors in trust stores or certificate stores managed by the organization.' WHERE [Requirement_Id] = 37923
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Define acceptable and unacceptable mobile code and mobile code technologies. Only AO- approved technologies are allowed and shall be developed in accordance with Control 3.4, Configuration Management, Section 6, “CM-6 Configuration Settings”. [a: WMATA System Implementation Statement]</li>
<li>b. Authorize, monitor, and control the use of mobile code within the system. [b: WMATA System Implementation Statement]</li>
Related Controls: AU-2, AU-12, CM-2, CM-6, SI-3
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Mobile Code</b></p>a. Define acceptable and unacceptable mobile code and mobile code technologies; andb. Authorize, monitor, and control the use of mobile code within the system.' WHERE [Requirement_Id] = 37924
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Unapproved mobile code and mobile code technologies shall be removed from the WMATA environment. The System Owner shall document a POA&M identifying corrective actions and associated timeline subject to the approval of the AO. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Identify Unacceptable Code and Take Corrective Actions</b></p>Identify [Assignment: organization-defined unacceptable mobile code] and take [Assignment: organization-defined corrective actions].' WHERE [Requirement_Id] = 37925
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Verify that the acquisition, development, and use of mobile code to be deployed in the system meets DM-defined mobile code requirements in accordance with Control 3.17, Section 13, “SC-18 Mobile Code”, a. [WMATA System Implementation Statement]

Related Controls: SC-18
' WHERE [Requirement_Id] = 37926
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Prevent the download and execution of unapproved mobile code and mobile code technologies. [WMATA System Implementation Statement]
' WHERE [Requirement_Id] = 37927
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Prevent the automatic execution of mobile code in software applications and enforce the following actions prior to executing the code: [WMATA System Implementation Statement]

<li>(1) Email - prompt users prior to opening attachments or clicking on web links; [1: WMATA System Implementation Statement]</li>
<li>(2) Software - prevent the automatic execution of mobile code by disabling auto-execute features on system components that employ portable storage devices, such as compact discs, digital versatile discs, and universal serial bus devices. [2: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Prevent Automatic Execution</b></p>Prevent the automatic execution of mobile code in [Assignment: organization-defined software applications] and enforce [Assignment: organization-defined actions] prior to executing the code.' WHERE [Requirement_Id] = 37928
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Allow execution of permitted mobile code only in confined virtual machine environments. [WMATA System Implementation Statement]

Related Controls: SI-7
', [Supplemental_Info]=N'<p><b>Allow Execution Only in Confined Environments</b></p>Allow execution of permitted mobile code only in confined virtual machine environments.' WHERE [Requirement_Id] = 37929
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Separate user functionality, including user interface services, from system management functionality. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Physical separation includes using separate systems for managing the OT than for operating OT components. Logical separation includes the use of different user accounts for administrative and operator privileges. Example compensating controls including providing increased auditing measures. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-6, SA-4, SA-8, SC-3, SC-7, SC-22, SC-32, SC-39

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Physical separation includes using separate systems for managing the OT and for operating OT components. Logical separation includes the use of different user accounts for administrative and operator privileges. Example compensating controls include providing increased auditing measures. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Separation of System and User Functionality</b></p>Separate user functionality, including user interface services, from system management functionality.' WHERE [Requirement_Id] = 37930
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Provide additional data origin authentication and integrity verification artifacts along with the authoritative name resolution data the system returns in response to external name/address resolution queries; and [a: WMATA System Implementation Statement]</li>
<li>b. Provide the means to indicate the security status of child zones and (if the child supports secure resolution services) to enable verification of a chain of trust among parent and child domains when operating as part of a distributed, hierarchical namespace. [b: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> The use of secure name/address resolution services should be determined only after careful consideration and after verification that it does not adversely impact the operational performance of the OT.  [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AU-10, SC-8, SC-12, SC-13, SC-21, SC-22

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Secure name/address resolution services should only be used after careful consideration and verification that they do not adversely impact the operational performance of the OT. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Secure Name/address Resolution Service  (authoritative Source)</b></p>a. Provide additional data origin authentication and integrity verification artifacts along with the authoritative name resolution data the system returns in response to external name/address resolution queries; andb. Provide the means to indicate the security status of child zones and (if the child supports secure resolution services) to enable verification of a chain of trust among parent and child domains, when operating as part of a distributed, hierarchical namespace.' WHERE [Requirement_Id] = 37931
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Request and perform data origin authentication and data integrity verification on the name/address resolution responses the system receives from authoritative sources. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> The use of secure name/address resolution services should be determined only after careful consideration and after verification that it does not adversely impact the operational performance of the OT. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: SC-20, SC-22

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Secure name/address resolution services should only be used after careful consideration and verification that they do not adversely impact the operational performance of the OT. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Secure Name/address Resolution Service  (recursive or Caching Resolver)</b></p>Request and perform data origin authentication and data integrity verification on the name/address resolution responses the system receives from authoritative sources.' WHERE [Requirement_Id] = 37932
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Ensure the systems that collectively provide name/address resolution service for an organization are fault-tolerant and implement internal and external role separation. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> The use of secure name/address resolution services should be determined only after careful consideration and after verification that it does not adversely impact the operational performance of the OT.  [OT Systems Only: WMATA System Implementation Statement]

Related Controls: SC-2, SC-20, SC-21, SC-24

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Secure name/address resolution services should only be used after careful consideration and verification that they do not adversely impact the operational performance of the OT. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Architecture and Provisioning for Name/address Resolution Service</b></p>Ensure the systems that collectively provide name/address resolution service for an organization are fault-tolerant and implement internal and external role separation.' WHERE [Requirement_Id] = 37933
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Protect the authenticity of communications sessions.  [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Example compensating controls include auditing measures.  [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AU-10, SC-8, SC-10

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Example compensating controls include auditing measures.  [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Session Authenticity</b></p>Protect the authenticity of communications sessions.' WHERE [Requirement_Id] = 37934
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Systems shall fail to a known, secure system state following failures on system components while preserving system state information. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> The organization selects an appropriate failure state. Preserving OT state information includes consistency among OT state variables and the physical state which the OT represents (e.g., whether valves are open or closed, communication permitted or blocked, continue operations).  [OT Systems Only: WMATA System Implementation Statement]

Related Controls: CP-2, CP-4, CP-10, CP-12, SA-8, SC-7, SC-22, SI-13

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization selects an appropriate failure state. Preserving OT state information includes consistency among OT state variables and the physical state that the OT represents (e.g., whether valves are open or closed, communication permitted or blocked, continue operations).  [NIST 800-82 Rev 3_OT Discussion: WMATA System Implementation Statement]

Rationale for adding SC-24 to MOD baseline: As part of the architecture and design of the OT, the organization selects an appropriate failure state in accordance with the function performed by the OT and the operational environment. The ability to choose the failure mode for the physical part of OT differentiates OT systems from other IT systems. This choice may be a significant influence in mitigating the impact of a failure since it may be disruptive to ongoing physical processes (e.g., valves failing in closed position may adversely affect system cooling). [NIST 800-82 Rev 3_Rationale: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Fail in Known State</b></p>Fail to a [Assignment: organization-defined known system state] for the following failures on the indicated components while preserving [Assignment: organization-defined system state information] in failure: [Assignment: list of organization-defined types of system failures on organization-defined system components].' WHERE [Requirement_Id] = 37935
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Protect the confidentiality and integrity of information at rest. [a: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> The use of cryptographic mechanisms is implemented only after careful consideration and after verification that it does not adversely impact the operational performance of the OT. Cryptographic mechanisms may not be feasible on certain OT devices. In these cases, compensating controls may be relocating the data to a location that does not support cryptographic mechanisms.  [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-3, AC-4, AC-6, AC-19, CA-7, CM-3, CM-5, CM-6, CP-9, MP-4, MP-5, PE-3, SC-8, SC-12, SC-13, SI-3, SI-7, SI-16
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Cryptographic mechanisms are implemented only after careful consideration and verification that they do not adversely impact the operational performance of the OT. When cryptographic mechanisms are not feasible on certain OT devices, compensating controls may include relocating the data to a location that does support cryptographic mechanisms.  [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Protection of Information at Rest</b></p>Protect the [Selection (one or more): confidentiality; integrity] of the following information at rest: [Assignment: organization-defined information at rest].' WHERE [Requirement_Id] = 37936
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement cryptographic mechanisms to prevent unauthorized disclosure and modification of sensitive information on system components or media commensurate with the security category or classification of the information in accordance with Control 3.8 Data Sensitivity. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Cryptographic Protection</b></p>Implement cryptographic mechanisms to prevent unauthorized disclosure and modification of the following information at rest on [Assignment: organization-defined system components or media]: [Assignment: organization-defined information].' WHERE [Requirement_Id] = 37937
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Isolate security functions from non-security functions. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Organizations consider implementing this control when designing new architectures or updating existing components. An example compensating control includes access controls. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-3, AC-6, AC-25, CM-2, CM-4, SA-4, SA-5, SA-8, SA-15, SA-17, SC-2, SC-7, SC-32, SC-39, SI-16

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Organizations consider implementing this control when designing new architectures or updating existing components. An example compensating control includes access controls. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Security Function Isolation</b></p>Isolate security functions from nonsecurity functions.' WHERE [Requirement_Id] = 37938
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Partition the system into [Assignment: organization-defined system components] residing in separate [Selection: physical; logical] domains or environments based on [Assignment: organization-defined circumstances for physical or logical separation of components]. [WMATA System Implementation Statement]

<li>a. Security Controls Enhancement(s): [a: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>System Partitioning</b></p>Partition the system into [Assignment: organization-defined system components] residing in separate [Selection: physical; logical] domains or environments based on [Assignment: organization-defined circumstances for physical or logical separation of components].' WHERE [Requirement_Id] = 37939
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Partition privileged functions into separate physical domains. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Organizations consider separate physical domains for privileged functions such as those affecting security and safety. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-19, SC-12, SC-13

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Organizations consider separate physical domains for privileged functions, such as those that affect security and safety.  [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>System Partitioning | Separate Physical Domains for Privileged Functions</b></p>Partition privileged functions into separate physical domains.' WHERE [Requirement_Id] = 37940
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Maintain a separate execution domain for each executing system process. [WMATA System Implementation Statement]

<b><u>OT System Only:</u></b> Example compensating controls include partition processes to separate platforms. [OT Systems Only: WMATA System Implementation Statement] 

Related Controls: AC-3, AC-4, AC-6, AC-25, SA-8, SC-2, SC-3, SI-16

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Example compensating controls include partition processes to separate platforms. 
', [Supplemental_Info]=N'<p><b>Process Isolation</b></p>Maintain a separate execution domain for each executing system process.' WHERE [Requirement_Id] = 37941
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Prevent unauthorized and unintended information transfer via shared system resources. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> This control is especially relevant for OT systems that process confidential data. Example compensating controls include architecting the use of the OT to prevent sharing system resources. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-3, AC-4, SA-8

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: This control is especially relevant for OT systems that process confidential data. Example compensating controls include engineering the use of the OT to prevent sharing system resources. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Information in Shared System Resources</b></p>Prevent unauthorized and unintended information transfer via shared system resources.' WHERE [Requirement_Id] = 37942
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'[Selection: Physically; Logically] disable or remove [Assignment: organization-defined connection ports or input/output devices] on the following systems or system components: [Assignment: organization-defined systems or system components]. [WMATA System Implementation Statement]
	
Related Controls: AC-20, MP-7

<b><u>NIST 800-82 Rev 3:</u></b>
Rationale for adding SC-41 to LOW, MOD, and HIGH baselines: OT functionality is generally defined in advance and does not change often.  [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Port and I/O Device Access</b></p>[Selection: Physically; Logically] disable or remove [Assignment: organization-defined connection ports or input/output devices] on the following systems or system components: [Assignment: organization-defined systems or system components].' WHERE [Requirement_Id] = 37943
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a) Synchronize system clocks within and between systems and system components. [a: WMATA System Implementation Statement]</li>
<b><u>OT System Only:</u></b> Organizations coordinate time synchronization on OT to allow for accurate troubleshooting and forensics. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-3, AU-8, IA-2, IA-8
<li>b) Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Organizations coordinate time synchronization on OT to allow for accurate troubleshooting and forensics. [NIST 800-82 Rev 3_OT Discussion: WMATA System Implementation Statement]

Rationale for adding SC-45 to LOW, MOD, and HIGH baselines: Organizations may find relative system time beneficial for many OT systems to ensure the safe and reliable delivery of essential functions. Time synchronization can also make root cause analysis more efficient by ensuring that audit logs from different systems are aligned so that organizations have an accurate view of events across multiple systems when the logs are aggregated.  [NIST 800-82 Rev 3_Rationale: WMATA System Implementation Statement]

', [Supplemental_Info]=N'<p><b>System Time Synchronization</b></p>Synchronize system clocks within and between systems and system components.' WHERE [Requirement_Id] = 37944
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Compare the internal system clocks [Assignment: organization-defined frequency] with [Assignment: organization-defined authoritative time source]; and [1: WMATA System Implementation Statement]</li>
<li>(2) Synchronize the internal system clocks to the authoritative time source when the time difference is greater than [Assignment: organization-defined time period]. [2: WMATA System Implementation Statement]</li>
	
<b><u>OT Systems Only:</u></b> Syncing with an authoritative time source may be selected as a control when data is being correlated across organizational boundaries. OT employ suitable mechanisms (e.g., GPS, IEEE 1588) for time stamps.  [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Syncing with an authoritative time source may be selected as a control when data is being correlated across organizational boundaries. OT employ suitable mechanisms (e.g., GPS, IEEE 1588) for timestamps.  [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>System Time Synchronization | Synchronization with Authoritative Time Source</b></p>(a) Compare the internal system clocks [Assignment: organization-defined frequency] with [Assignment: organization-defined authoritative time source]; and(b) Synchronize the internal system clocks to the authoritative time source when the time difference is greater than [Assignment: organization-defined time period].' WHERE [Requirement_Id] = 37945
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Establish [Assignment: organization-defined alternate communications paths] for system operations organizational command and control. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Organization considers which systems require alternate communications paths to ensure a loss of communication does not lead to an unacceptable loss of view, control or safety event. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: CP-2, CP-8

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Organizations consider which systems require alternate communication paths to ensure that a loss of communication does not lead to an unacceptable loss of view or control or to a safety event. [NIST 800-82 Rev 3_OT Discussion: WMATA System Implementation Statement]

Rationale for adding SC-47 to HIGH baseline: For continuity of operations during an incident, organizations should consider establishing alternate communications paths for command-and-control purposes to continue to operate and take appropriate actions for high-impact systems when the loss of availability or integrity may result in severe or catastrophic adverse impacts, including impacts to safety and critical service delivery. [NIST 800-82 Rev 3_Rationale: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Alternate Communication Paths</b></p>Establish [Assignment: organization-defined alternate communications paths] for system operations organizational command and control.' WHERE [Requirement_Id] = 37946
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Protect against and limit the effects of denial-of-service events; and [a: WMATA System Implementation Statement]</li>
<li>b. Employ the controls to achieve the denial-of-service objective to include, but not limited to: [b: WMATA System Implementation Statement]</li>
<li>i) Requiring implementation of enterprise boundary protection devices (e.g., firewall, web application firewall, etc.) at all network access points; [b.i: WMATA System Implementation Statement]</li>
<li>ii) Requiring system integration with enterprise boundary protection devices; [b.ii: WMATA System Implementation Statement]</li>
<li>iii) Periodically scanning network and devices for malware; [b.iii: WMATA System Implementation Statement]</li>
<li>iv) Providing detection and monitoring capabilities to detect indicators of attack against WMATA; [b.iv: WMATA System Implementation Statement]</li>
<li>v) Monitoring system resource utilization to ensure sufficient capacity; [b.v: WMATA System Implementation Statement]</li>
<li>vi) Managing excess capacity, bandwidth, or other redundancy; [b.vi: WMATA System Implementation Statement]</li>
<li>vii) Deploying authentication mechanisms wherever technically configurable; [b.vii: WMATA System Implementation Statement]</li>
<li>viii) Designing and implementing networks for maximum resiliency that incorporate high availability (e.g., load balancing, redundant systems, etc.) and automated disaster recovery (e.g., automated failover and isolated restoration capabilities); [b.viii: WMATA System Implementation Statement]</li>
<li>ix) Developing specific plans for responding to DoS and DDoS attacks in the WMATA incident response plan, a system’s disaster recovery and continuity of operations plan, and the enterprise business continuity plan; [b.ix: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Some OT equipment may be more susceptible to DoS attacks due to the time criticality of some OT applications. Risk-based analysis informs prioritization of DoS protection and establishment of policy and procedure. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: CP-2, IR-4, SC-7

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Some OT equipment may be more susceptible to DoS attacks due to the time criticality of some OT applications. Risk-based analysis informs the prioritization of DoS protection and the establishment of policy and procedure. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Denial-of-service Protection</b></p>a. [Selection: Protect against; Limit] the effects of the following types of denial-of-service events: [Assignment: organization-defined types of denial-of-service events]; andb. Employ the following controls to achieve the denial-of-service objective: [Assignment: organization-defined controls by type of denial-of-service event].' WHERE [Requirement_Id] = 37947
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a) Employ hardware-based, write-protect for [Assignment: organization-defined system firmware components]; and [a: WMATA System Implementation Statement]</li>
<li>b) Implement specific procedures for [Assignment: organization-defined authorized individuals] to manually disable hardware write-protect for firmware modifications and re-enable the write-protect prior to returning to operational mode. [b: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Some OT systems support write-protection by implementing physical key switches or write-protect switches. Organizations define the systems for which write-protection will be enables and develop a process for how to take the system out of write-protect mode. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Some OT systems support write-protection by implementing physical key switches or write-protect switches. Organizations define the systems for which write-protection will be enabled and develop a process for how to take the system out of write-protect mode. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
' WHERE [Requirement_Id] = 37948
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Monitor and control communications at the external managed interfaces to the system and at key internal managed interfaces (e.g., gateways, routers, firewalls, guards, network-based malicious code analysis, virtualization systems, or encrypted tunnels) within the system; [a: WMATA System Implementation Statement]</li>
<li>b. Implement subnetworks for publicly accessible system components that are physically and logically separated from internal organizational networks; and [b: WMATA System Implementation Statement]</li>
<li>c. Connect to external networks or systems only through managed interfaces consisting of boundary protection devices arranged in accordance with an organizational security and privacy architecture. [c: WMATA System Implementation Statement]</li>
Related Controls: AC-4, AC-17, AC-18, AC-19, AC-20, CA-3, CM-2, CM-4, CM-7, CM-10, CP-8, CP-10, IR-4, MA-4, PE-3, PL-8, PM-12, SA-8, SA-17, SC-5, SC-32
<li>d. Security Controls Enhancement(s): [d: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Boundary Protection</b></p>a. Monitor and control communications at the external managed interfaces to the system and at key internal managed interfaces within the system;b. Implement subnetworks for publicly accessible system components that are [Selection: physically; logically] separated from internal organizational networks; andc. Connect to external networks or systems only through managed interfaces consisting of boundary protection devices arranged in accordance with an organizational security and privacy architecture.' WHERE [Requirement_Id] = 37949
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Only allow incoming communications from [Assignment: organization-defined authorized sources] to be routed to [Assignment: organization-defined authorized destinations]. [WMATA System Implementation Statement]

Related Controls: AC-3
', [Supplemental_Info]=N'<p><b> Restrict Incoming Communications Traffic</b></p>Only allow incoming communications from [Assignment: organization-defined authorized sources] to be routed to [Assignment: organization-defined authorized destinations].' WHERE [Requirement_Id] = 37950
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Prevent systems from entering unsecure states in the event of an operational failure of a boundary protection device. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> The organization selects an appropriate failure mode (e.g., permit or block all communications). [OT Systems Only: WMATA System Implementation Statement]

Related Controls: CP-2, CP-12, SC-24

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization selects an appropriate failure mode (e.g., permit or block all communications).  [NIST 800-82 Rev 3_OT Discussion: WMATA System Implementation Statement]

Rationale for adding SC-7 (18) to MOD baseline: The ability to choose the failure mode for the physical part of the OT differentiates the OT from other IT systems. This choice may be a significant influence in mitigating the impact of a failure.  [NIST 800-82 Rev 3_Rationale: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Boundary Protection | Fail Secure</b></p>Prevent systems from entering unsecure states in the event of an operational failure of a boundary protection device.' WHERE [Requirement_Id] = 37951
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Provide the capability to dynamically isolate [Assignment: organization-defined system components] from other system components. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Dynamic Isolation and Segregation</b></p>Provide the capability to dynamically isolate [Assignment: organization-defined system components] from other system components.' WHERE [Requirement_Id] = 37952
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Employ additional boundary protection mechanisms to isolate system components supporting critical or essential missions and/or business functions (e.g., financial systems, health systems, payment card systems, industrial control systems, etc.). [WMATA System Implementation Statement]

Related Controls: CA-9
', [Supplemental_Info]=N'<p><b> Isolation of System Components</b></p>Employ boundary protection mechanisms to isolate [Assignment: organization-defined system components] supporting [Assignment: organization-defined missions and/or business functions].' WHERE [Requirement_Id] = 37953
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'For systems that process PII: [WMATA System Implementation Statement]

<li>(1) Apply the following processing rules to data elements of personally identifiable information: [1: WMATA System Implementation Statement]</li>
<li>(a) Implement Data Loss Prevention technologies and processes designed to enforce the proper handling of PII, as defined in P/I 9.3 Public Access to Records Policy and Control 3.8 Data Sensitivity. [1.a: WMATA System Implementation Statement]</li>
<li>(2) Monitor for permitted processing at the external interfaces to the system and at key internal boundaries within the system; [2: WMATA System Implementation Statement]</li>
<li>(3) Document each processing exception and require AO approval; and [3: WMATA System Implementation Statement]</li>
<li>(4) Review and remove exceptions that are no longer supported. [4: WMATA System Implementation Statement]</li>

Related Controls: PT-2
', [Supplemental_Info]=N'<p><b> Personally Identifiable Information</b></p>For systems that process personally identifiable information:(a) Apply the following processing rules to data elements of personally identifiable information: [Assignment: organization-defined processing rules];(b) Monitor for permitted processing at the external interfaces to the system and at key internal boundaries within the system;(c) Document each processing exception; and(d) Review and remove exceptions that are no longer supported.' WHERE [Requirement_Id] = 37954
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Prohibit the direct connection of [Assignment: organization-defined system] to a public network. [WMATA System Implementation Statement]
	
<b><u>OT Systems Only:</u></b> Organizations consider the need for a direct connection to a public network for each OT system, including potential benefits, additional threat vectors, and potential adverse impact specifically relevant to what type of public access that connection introduces. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Organizations consider the need for a direct connection to a public network for each OT system, including potential benefits, additional threat vectors, and potential adverse impacts that are specifically relevant to the type of public access that connection introduces.  [NIST 800-82 Rev 3_OT Discussion: WMATA System Implementation Statement]

Rationale for adding SC-7 (28) to LOW, MOD, and HIGH baselines: Access to OT should be restricted to the individuals required for operation. A connection made from the OT directly to a public network has limited applicability in OT environments but significant potential risk.  [NIST 800-82 Rev 3_Rationale: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Boundary Protection | Connections to Public Networks </b></p>Prohibit the direct connection of [Assignment: organization-defined system] to a public network.' WHERE [Requirement_Id] = 37955
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement [Selection: physically; logically] separate subnetworks to isolate the following critical system components and functions: [Assignment: organization-defined critical system components and functions]. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Subnets can be used to isolate low-risk functions from higher-risk ones, and control from safety. Subnets should be considered along with other boundary protection technologies. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Subnets can be used to isolate low-risk functions from higher-risk ones and control from safety. Subnets should be considered along with other boundary protection technologies. [NIST 800-82 Rev 3_OT Discussion: WMATA System Implementation Statement]

Rationale for adding SC-7 (29) to LOW, MOD, and HIGH baselines: In OT environments, subnets and zoning are common practices for isolating functions. [NIST 800-82 Rev 3_Rationale: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Boundary Protection | Separate Subnets to Isolate Functions </b></p>Implement [Selection: physically; logically] separate subnetworks to isolate the following critical system components and functions: [Assignment: organization-defined critical system components and functions].' WHERE [Requirement_Id] = 37956
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Limit the number of external network connections to the system. External network connections must be documented via a System Architecture/Topology/Data Flow and PPS/M. An ISA may be required at the discretion of the AO. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Access Points</b></p>Limit the number of external network connections to the system.' WHERE [Requirement_Id] = 37957
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Implement a managed interface for each external telecommunication service; [1: WMATA System Implementation Statement]</li>
<li>(2) Establish a traffic flow policy for each managed interface; [2: WMATA System Implementation Statement]</li>
<li>(3) Protect the confidentiality and integrity of the information being transmitted across each interface; [3: WMATA System Implementation Statement]</li>
<li>(4) Document each exception to the traffic flow policy with a supporting mission or business need and the duration of that need; [4: WMATA System Implementation Statement]</li>
<li>(5) Review exceptions to the traffic flow policy at least semi-annually and remove exceptions that are no longer supported by an explicit mission or business need; [5: WMATA System Implementation Statement]</li>
<li>(6) Prevent unauthorized exchange of control plane traffic (e.g., Border Gateway Protocol (BGP) routing, Domain Name System (DNS), and management protocols) with external networks; [6: WMATA System Implementation Statement]</li>
<li>(7) Publish information to enable remote networks to detect unauthorized control plane traffic from internal networks; and (8) Filter unauthorized control plane traffic from external networks. [7: WMATA System Implementation Statement]</li>
<li>(8) Filter unauthorized control plane traffic from external networks. [8: WMATA System Implementation Statement]</li>

Related Controls: AC-3, SC-8, SC-20, SC-21, SC-22
', [Supplemental_Info]=N'<p><b> External Telecommunications Services</b></p>(a) Implement a managed interface for each external telecommunication service;(b) Establish a traffic flow policy for each managed interface;(c) Protect the confidentiality and integrity of the information being transmitted across each interface;(d) Document each exception to the traffic flow policy with a supporting mission or business need and duration of that need;(e) Review exceptions to the traffic flow policy [Assignment: organization-defined frequency] and remove exceptions that are no longer supported by an explicit mission or business need;(f) Prevent unauthorized exchange of control plane traffic with external networks;(g) Publish information to enable remote networks to detect unauthorized control plane traffic from internal networks; and(h) Filter unauthorized control plane traffic from external networks.' WHERE [Requirement_Id] = 37958
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Deny network communications traffic by default. Any explicit rules to allow network communications traffic by default or exception shall be authorized by the AO. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Deny by Default — Allow by Exception</b></p>Deny network communications traffic by default and allow network communications traffic by exception [Selection (one or more): at managed interfaces; for [Assignment: organization-defined systems]].' WHERE [Requirement_Id] = 37959
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Prevent split tunneling for remote devices connecting to organizational systems unless the split tunnel is authorized by the AO. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Split Tunneling for Remote Devices</b></p>Prevent split tunneling for remote devices connecting to organizational systems unless the split tunnel is securely provisioned using [Assignment: organization-defined safeguards].' WHERE [Requirement_Id] = 37960
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Route internal communications traffic to external networks through authenticated proxy servers at managed interfaces. [WMATA System Implementation Statement]

<li>(1) Inappropriate Web Content and Filtering [1: WMATA System Implementation Statement]</li>
<li>(a) The use of Metro information technology systems to access inappropriate web content is strictly prohibited and will be blocked. Any user attempting to access such content will be subject to disciplinary action, up to and including termination of employment. [1.a: WMATA System Implementation Statement]</li>
<li>(b) Web content filtering shall be employed to prevent access to internet sites and web pages that are non-business related. Filtering shall disallow, segregate, or reject certain internet listings. [b: WMATA System Implementation Statement]</li>

The following web content categories will be blocked:
<li>(i) Sexually explicit and obscene material (including any and all forms of pornography, adult humor, profanity, dating services/personals); [b.i: WMATA System Implementation Statement]</li>
<li>(ii) Websites selling drugs, firearms, and other weapons; [b.ii: WMATA System Implementation Statement]</li>
<li>(iii) Websites advocating or involving terrorism, hacking, gambling, fraud or any other criminal conduct or enterprises; [b.iii: WMATA System Implementation Statement]</li>
<li>(iv) Harassing material, including racial, religious, national origin, sexual or sexual orientation harassment; and/or [b.iv: WMATA System Implementation Statement]</li>
<li>(v) Information that violates federal laws on discrimination. [b.v: WMATA System Implementation Statement]</li>
<li>(c) Miscategorized websites and requests appropriate and necessary business access to restricted websites shall be referred to the DM Helpdesk. [c: WMATA System Implementation Statement]</li>
<li>(d) Website categorization decisions and exceptions to access restricted websites shall be managed by DMCS. [d: WMATA System Implementation Statement]</li>

Related Controls: AC-3
', [Supplemental_Info]=N'<p><b> Route Traffic to Authenticated Proxy Servers</b></p>Route [Assignment: organization-defined internal communications traffic] to [Assignment: organization-defined external networks] through authenticated proxy servers at managed interfaces.' WHERE [Requirement_Id] = 37961
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Protect the confidentiality and integrity of transmitted information. [a: WMATA System Implementation Statement]</li>
Related Controls: AC-17, AC-18, AU-10, IA-3, IA-8, MA-4, PE-4, SA-4, SA-8, SC-7, SC-20, SC-23, SC-28
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Transmission Confidentiality and Integrity</b></p>Protect the [Selection (one or more): confidentiality; integrity] of transmitted information.' WHERE [Requirement_Id] = 37962
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement cryptographic mechanisms to prevent unauthorized disclosure of information and detect changes to information during transmission. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> When transmitting across untrusted network segments, the organization explores all possible cryptographic integrity mechanisms (e.g., digital signature, hash function) to protect confidentiality and integrity of the information. Example compensating controls include physical protections, such as a secure conduit (e.g., point-to-point link) between two system components. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: SC-12, SC-13

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: When transmitting across untrusted network segments, the organization explores all possible cryptographic integrity mechanisms (e.g., digital signature, hash function) to protect the confidentiality and integrity of the information. Example compensating controls include physical protections, such as a secure conduit (e.g., point-to-point link) between two system components.  [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Transmission Confidentiality and Integrity | Cryptographic Protection</b></p>Implement cryptographic mechanisms to [Selection (one or more): prevent unauthorized disclosure of information; detect changes to information] during transmission.' WHERE [Requirement_Id] = 37963
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement]

Related Controls: PM-9, PS-8, SA-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The policy specifically addresses the unique properties and requirements of OT and the relationship to non-OT systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>System and Information Integrity Policy and Procedures</b></p>a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:     1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] system and information integrity policy that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and          (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and     2. Procedures to facilitate the implementation of the system and information integrity policy and the associated system and information integrity      controls;b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the system and information integrity policy and procedures; andc. Review and update the current system and information integrity:     1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and     2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 37964
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Character set, length, numerical range, and acceptable values; [a: WMATA System Implementation Statement]</li>
<li>b. Username and password combinations; [b: WMATA System Implementation Statement]</li>
<li>c. Attributes used to validate a password reset request (e.g., security questions); [c: WMATA System Implementation Statement]</li>
<li>d. PII (excluding unique username identifiers provided as a normal part of a transactional record) or other Sensitive Information in accordance with Control 3.8 Data Sensitivity; [d: WMATA System Implementation Statement]</li>
<li>e. Content related to internal security functions: private encryption keys, whitelist or blacklist rules, object permission attributes and settings; [e: WMATA System Implementation Statement]</li>
<li>f. Content received from system interfaces that is passed to interpreters that can unintentionally be interpreted as commands and to prevent cross-site scripting and injection attacks; [f: WMATA System Implementation Statement]</li>
<li>g. User-supplied data is validated, filtered, and sanitized; [g: WMATA System Implementation Statement]</li>
<li>h. Context-aware escaping is used for dynamic queries and non-parameterized calls when used directly in the interpreter; [h: WMATA System Implementation Statement]</li>
<li>i. Hostile data is not used within object-relational mapping search parameters to extract additional, sensitive records; and [i: WMATA System Implementation Statement]</li>
<li>j. Hostile data is not directly used or concatenated, such that the SQL or command contains both structure and hostile data in dynamic queries, commands, or stored procedures. [j: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Information Input Validation</b></p>Check the validity of the following information inputs: [Assignment: organization-defined information inputs to the system].' WHERE [Requirement_Id] = 37965
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Generate error messages that provide information necessary for corrective actions without revealing information that could be exploited; and [a: WMATA System Implementation Statement]</li>
<li>b. Reveal error messages only to users and administrators in accordance with assigned roles and responsibilities. [b: WMATA System Implementation Statement]</li>

Related Controls: AU-2, AU-3, SI-2
', [Supplemental_Info]=N'<p><b>Error Handling</b></p>a. Generate error messages that provide information necessary for corrective actions without revealing information that could be exploited; andb. Reveal error messages only to [Assignment: organization-defined personnel or roles].' WHERE [Requirement_Id] = 37966
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Manage and retain information within the system and information output from the system in accordance with applicable laws, directives, regulations, policies, standards, guidelines and operational requirements. [a: WMATA System Implementation Statement]</li>
Related Controls: All XX-1 Controls, AU-5, AU-11, CA-2, CA-3, CA-5, CA-6, CA-7, CA-9, CM-5, CM-9, CP-2, IR-8, MP-2, MP-3, MP-4, MP-6, PL-2, PL-4, PM-4, PM-8, PM-9, PS-2, PS-6, PT-2, PT-3, RA-2, RA-3, SA-5, SA-8, SR-2
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Information Management and Retention</b></p>Manage and retain information within the system and information output from the system in accordance with applicable laws, executive orders, directives, regulations, policies, standards, guidelines and operational requirements.' WHERE [Requirement_Id] = 37967
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Limit Personally Identifiable Information (PII) being processed in the information life cycle (i.e. information creation, collection, use, processing, storage, maintenance, dissemination, disclosure, and disposition) to the minimum necessary to enable the purpose of the system. [WMATA System Implementation Statement]

Related Controls: PM-25
', [Supplemental_Info]=N'<p><b> Limit Personally Identifiable Information Elements</b></p>Limit personally identifiable information being processed in the information life cycle to the following elements of personally identifiable information: [Assignment: organization-defined elements of personally identifiable information].' WHERE [Requirement_Id] = 37968
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Use the following techniques to minimize the use of Sensitive Information for research, testing, or training: [WMATA System Implementation Statement]

<li>(1) De-identification or subsetting of live production data (“live data”); or [1: WMATA System Implementation Statement]</li>
<li>(2) Use of synthetic data. [2: WMATA System Implementation Statement]</li>

Related Controls: PM-22, PM-25, SI-19
', [Supplemental_Info]=N'<p><b> Minimize Personally Identifiable Information in Testing, Training, and Research</b></p>Use the following techniques to minimize the use of personally identifiable information for research, testing, or training: [Assignment: organization-defined techniques].' WHERE [Requirement_Id] = 37969
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Use techniques to dispose of, destroy, or erase information following the retention period applicable to each type of data. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Information Disposal</b></p>Use the following techniques to dispose of, destroy, or erase information following the retention period: [Assignment: organization-defined techniques].' WHERE [Requirement_Id] = 37970
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Determine mean time to failure (MTTF) for the following system components in specific environments of operation: [Assignment: organization-defined system components]; and [a: WMATA System Implementation Statement]</li>
<li>b. Provide substitute system components and a means to exchange active and standby components in accordance with the following criteria: [Assignment: organization-defined MTTF substitution criteria]. [b: WMATA System Implementation Statement]</li>
	
Related Controls: CP-2, CP-10, MA-2, MA-6, SA-8

<b><u>NIST 800-82 Rev 3:</u></b>
Rationale for adding SI-13 control to HIGH baseline: OT are designed and built with certain boundary conditions, design parameters, and assumptions about their environment and mode of operation. OT may run much longer than conventional systems, allowing latent flaws that are not manifest in other environments to become effective. For example, integer overflow might never occur in systems that are re-initialized more frequently than the occurrence of the overflow. Experience and forensic studies of anomalies and incidents in OT can lead to the identification of emergent properties that were previously unknown, unexpected, or unanticipated. Preventative and restorative actions (e.g., restarting the system or application) are prudent but may not be acceptable in OT for operational reasons. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Predictable Failure Protection</b></p>a. Determine mean time to failure (MTTF) for the following system components in specific environments of operation: [Assignment: organization-defined system components]; andb. Provide substitute system components and a means to exchange active and standby components in accordance with the following criteria: [Assignment: organization-defined MTTF substitution criteria].' WHERE [Requirement_Id] = 37971
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement controls to protect the system memory from unauthorized code execution through data execution prevention controls that are either hardware-enforced or software-enforced such as data execution prevention, address space layout randomization, and implementation of secure configuration settings. [WMATA System Implementation Statement]

Related Controls: AC-25, SC-3, SI-7
', [Supplemental_Info]=N'<p><b>Memory Protection</b></p>Implement the following controls to protect the system memory from unauthorized code execution: [Assignment: organization-defined controls].' WHERE [Requirement_Id] = 37972
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement the indicated fail-safe procedures when the indicated failures occur: [Assignment: organization-defined list of failure conditions and associated fail-safe procedures]. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> The selected failure conditions and corresponding procedures may vary among baselines. The same failure event may trigger different responses, depending on the impact level mechanical and analog systems can be sued to provide mechanisms to ensure fail-safe procedures. Fail-safe states should incorporate potential impacts to human safety, physical systems, and the environment. Related controls: CP-6. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: CP-6, CP-12, SC-24, SI-13

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The selected failure conditions and corresponding procedures may vary among baselines. The same failure event may trigger different responses, depending on the impact level. Mechanical and analog systems can be used to provide mechanisms to ensure fail-safe procedures. Fail-safe states should incorporate potential impacts to human safety, physical systems, and the environment. A related controls is CP-6. [NIST 800-82 Rev 3_OT Discussion: WMATA System Implementation Statement] 

Rationale for adding SI-17 to LOW, MOD, and HIGH baselines: This control provides a structure for the organization to identify its policy and procedures for dealing with failures and other incidents. Creating a written record of the decision process for selecting incidents and appropriate responses in light of a changing environment of operations is part of risk management.  [NIST 800-82 Rev 3_Rationale: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Fail-Safe Procedures</b></p>Implement the indicated fail-safe procedures when the indicated failures occur: [Assignment: organization-defined list of failure conditions and associated fail-safe procedures].' WHERE [Requirement_Id] = 37973
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Check the accuracy, relevance, timeliness, and completeness of PII across the information life cycle annually; and [a: WMATA System Implementation Statement]</li>
<li>b. Correct or delete inaccurate or outdated personally identifiable information. [b: WMATA System Implementation Statement]</li>
<li>c. Individual requests for access or amendment to PII will be processed according to the procedures set forth in P/I 9.2 Privacy Policy sections 7.2-7.5. [c: WMATA System Implementation Statement]</li>
Related Controls: PM-22, PM-24, PT-2, SI-4
<li>d. Security Controls Enhancement(s): [d: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Personally Identifiable Information Quality Operations</b></p>a. Check the accuracy, relevance, timeliness, and completeness of personally identifiable information across the information life cycle [Assignment: organization-defined frequency]; andb. Correct or delete inaccurate or outdated personally identifiable information.' WHERE [Requirement_Id] = 37974
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>1) Correct or delete PII upon request by individuals or their designated representatives. Discretion shall be used when determining if PII is to be corrected or deleted based on the scope of request, the change(s) sought, the impact of the change(s), and applicable law, regulation, and policy. [1: WMATA System Implementation Statement]</li>
<li>2) Consult with the Privacy Officer and Legal Counsel regarding appropriate measures to be taken for requests to correct or delete PII based on balancing the rights of the individual with the needs of the organization. [2: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b> Individual Requests</b></p>Correct or delete personally identifiable information upon request by individuals or their designated representatives.' WHERE [Requirement_Id] = 37975
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Remove sensitive information about individuals that can be used to distinguish or trace an individual’s identity (e.g., name, social security number, date and place of birth, mother’s maiden name, or biometric records, financial records, educational records, etc.) from datasets unless otherwise authorized by the Privacy Administrator under P/I 9.2 Privacy Policy and AO. See also Control 3.18 System and Information Integrity, Section 11, (a), (ii), “S1-12 (2) Minimize Sensitive Information in Testing, Training, and Research”; [a: WMATA System Implementation Statement]</li>
<li>b. Personally identifiable information is removed from datasets by trained individuals when such information is not (or no longer) necessary to satisfy the requirements envisioned for the data (e.g., if the dataset is only used to produce aggregate statistics, the identifiers that are not needed for producing those statistics are removed); and [b: WMATA System Implementation Statement]</li>
<li>c. Evaluate annually for the effectiveness of de-identification. [c: WMATA System Implementation Statement]</li>

Related Controls: MP-6, PM-22, PM-23, PM-24, RA-2, SI-12
', [Supplemental_Info]=N'<p><b>De-Identification</b></p>a. Remove the following elements of personally identifiable information from datasets: [Assignment: organization-defined elements of personally identifiable information]; andb. Evaluate [Assignment: organization-defined frequency] for effectiveness of de-identification.' WHERE [Requirement_Id] = 37976
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Identify, report, and correct system flaws; [a: WMATA System Implementation Statement]</li>
<li>b. Test software and firmware updates related to flaw remediation for effectiveness and potential side effects before installation; [b: WMATA System Implementation Statement]</li>
<li>c. Install security-relevant software and firmware updates within a timeframe set per Control 3.16 Risk Assessment of the release of the updates; and [c: WMATA System Implementation Statement]</li>
<li>d. Incorporate flaw remediation into the organizational configuration management process. [d: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> Flaw remediation, or patching, is complicated since many OT employ OSs and other software no longer maintained by the vendors. OT operators may also not have the resources or capability to test patches and are dependent on vendors to validate the operability of a patch. Sometimes the organization has no choice but to accept the additional risk if no vendor patch is available, patching requires additional time to complete validation/testing, or deployment requires an unacceptable operations shutdown. In these situations, compensating controls should be implemented (e.g., limiting the exposure of these vulnerable system, restricting vulnerable services, implementing virtual patching). Other compensating controls that do not decrease the residual risk but increase the ability to respond may be desirable (e.g., provide a timely response in case of an incident; devise a plan to ensure the OT can identify the exploitation of the flaw). Testing flaw remediation in an OT may exceed the organization’s available resources. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: CA-5, CM-3, CM-4, CM-5, CM-6, CM-8, MA-2, RA-5, SA-8, SA-10, SA-11, SI-3, SI-5, SI-7, SI-11
<li>e. Security Controls Enhancement(s): [e: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Flaw remediation, or patching, is complicated since many OT employ OSs and other software that are no longer maintained by the vendors. OT operators may also not have the resources or capability to test patches and are dependent on vendors to validate the operability of a patch. Sometimes, the organization has no choice but to accept additional risk if no vendor patch is available, if patching requires additional time to complete validation or testing, or if deployment requires an unacceptable operations shutdown. In these situations, compensating controls should be implemented (e.g., limiting the exposure of the vulnerable system, restricting vulnerable services, implementing virtual patching). Other compensating controls that do not decrease the residual risk but increase the ability to respond may be desirable (e.g., provide a timely response in case of an incident, devise a plan to ensure that the OT can identify exploitation of the flaw). Testing flaw remediation in an OT may exceed the organization’s available resources. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Flaw Remediation</b></p>a. Identify, report, and correct system flaws;b. Test software and firmware updates related to flaw remediation for effectiveness and potential side effects before installation;c. Install security-relevant software and firmware updates within [Assignment: organization-defined time period] of the release of the updates; andd. Incorporate flaw remediation into the organizational configuration management process.' WHERE [Requirement_Id] = 37977
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Determine if system components have applicable security-relevant software and firmware updates installed using automated mechanisms in accordance with Control 3.16 Risk Assessment, Section 4, “RA-5 Vulnerability Monitoring and Scanning“. [WMATA System Implementation Statement]

Related Controls: CA-7, RA-5, SI-4
', [Supplemental_Info]=N'<p><b> Automated Flaw Remediation Status</b></p>Determine if system components have applicable security-relevant software and firmware updates installed using [Assignment: organization-defined automated mechanisms] [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 37978
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Identify the following alternative sources of information for [Assignment: organization-defined essential functions and services]: [Assignment: organization-defined alternative information sources]; [a: WMATA System Implementation Statement]</li>
<li>b. Use an alternative information source for the execution of essential functions or services on [Assignment: organization-defined systems or system components] when the primary source of information is corrupted or unavailable.  [b: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Many OT systems use information diversity in their design in order to achieve reliability requirements. Some examples of information diversity for an OT system include sensor voting and state estimation. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Many OT systems use information diversity in their design to achieve reliability requirements. Some examples of information diversity for an OT system include sensor voting and state estimation. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Information Diversity</b></p>a. Identify the following alternative sources of information for [Assignment: organization-defined essential functions and services]: [Assignment: organization-defined alternative information sources]; andb. Use an alternative information source for the execution of essential functions or services on [Assignment: organization-defined systems or system components] when the primary source of information is corrupted or unavailable.' WHERE [Requirement_Id] = 37979
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Implement non-signature based malicious code protection mechanisms at system entry and exit points to detect and eradicate malicious code; [a: WMATA System Implementation Statement]</li>
<li>b. Automatically update malicious code protection mechanisms as new releases are available in accordance with organizational configuration management control family and procedures; [b: WMATA System Implementation Statement]</li>
<li>c. Configure malicious code protection mechanisms to: [c: WMATA System Implementation Statement]</li>
<li>i) Perform real-time monitoring to detect attempts of malicious code execution at endpoints, servers, between security zones, and at network entry and exit points; [c.i: WMATA System Implementation Statement]</li>
<li>ii) Conduct scans of files and embedded code which are attached to, or included in email communication; and [c.ii: WMATA System Implementation Statement]</li>
<li>iii) Block or quarantine malicious code and send alert to required stakeholders in response to malicious code detection. [c.iii: WMATA System Implementation Statement]</li>
<li>d. Address the receipt of false positives during malicious code detection and eradication and the resulting potential impact on the availability of the system. [d: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> The use and deployment of malicious code protection is determined after careful consideration and after verification that it does not adversely impact the operation of the OT. Malicious code protection tools should be configured to minimize their potential impact on the OT (e.g., employ notification rather than quarantine). Example compensating controls include increase traffic monitoring and auditing. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-4, AC-19, CM-3, CM-8, IR-4, MA-3, MA-4, PL-9, RA-5, SC-7, SC-23, SC-28, SI-2, SI-4, SI-7, SI-8

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Malicious code protection should only be deployed after careful consideration and verification that it does not adversely impact the operation of the OT. Malicious code protection tools should be configured to minimize their potential impact on the OT (e.g., employ notification rather than quarantine). Example compensating controls include increased traffic monitoring and auditing. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Malicious Code Protection</b></p>a. Implement [Selection (one or more): signature based; non-signature based] malicious code protection mechanisms at system entry and exit points to detect and eradicate malicious code;b. Automatically update malicious code protection mechanisms as new releases are available in accordance with organizational configuration management policy and procedures;c. Configure malicious code protection mechanisms to:     1. Perform periodic scans of the system [Assignment: organization-defined frequency] and real-time scans of files from external sources at      [Selection (one or more): endpoint; network entry and exit points] as the files are downloaded, opened, or executed in accordance with      organizational policy; and     2. [Selection (one or more): block malicious code; quarantine malicious code; take [Assignment: organization-defined action]]; and send alert      to [Assignment: organization-defined personnel or roles] in response to malicious code detection; andd. Address the receipt of false positives during malicious code detection and eradication and the resulting potential impact on the availability of the system.' WHERE [Requirement_Id] = 37980
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Monitor the system to detect: [a: WMATA System Implementation Statement]</li>
<li>i) Attacks and indicators of potential attacks in accordance with the following monitoring objectives: [a.i: WMATA System Implementation Statement]</li>
<li>(1) Systems shall be monitored in real-time to assure the proper functioning of system processes and controls at external interfaces to the system and within the system; and [a.i.1: WMATA System Implementation Statement]</li>
<li>(2) For assurance that the system is functioning in an optimal, resilient, and secure state and that any irregularities or anomalies that are indicators of a system malfunction or compromise are detected; [a.i.2: WMATA System Implementation Statement]</li>
<li>ii) Unauthorized local, network, and remote connections; [a.ii: WMATA System Implementation Statement]</li>
<li>b. Identify unauthorized use of the system via the following tools, techniques and methods: intrusion detection and prevention systems, malicious code protection software, scanning tools, audit record monitoring software, and network monitoring software; [b: WMATA System Implementation Statement]</li>
<li>c. Invoke internal monitoring capabilities or deploy monitoring devices: [c: WMATA System Implementation Statement]</li>
<li>i) Strategically within the system to collect organization-determined essential information; and [c.i: WMATA System Implementation Statement]</li>
<li>ii) At ad hoc locations within the system to track specific types of transactions of interest to the organization; [c.ii: WMATA System Implementation Statement]</li>
<li>d. Analyze detected events and anomalies; [d: WMATA System Implementation Statement]</li>
<li>e. Adjust the level of system monitoring activity when there is a change in risk to organizational operations and assets, individuals, other organizations, or the Nation; [e: WMATA System Implementation Statement]</li>
<li>f. Obtain legal advice regarding system monitoring activities; and [f: WMATA System Implementation Statement]</li>
<li>g. Provide information system monitoring information to personnel with administration, monitoring, and/or security responsibilities; continuously. [g: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> The organization ensures that use of monitoring tools and techniques does not adversely impact the operational performance of the OT. Example compensating controls include deploying sufficient network process, and physical monitoring. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: AC-2, AC-3, AC-4, AC-8, AC-17, AU-2, AU-6, AU-7, AU-9, AU-12, CA-7, CM-3, CM-6, CM-8, CM-11, IR-4, MA-3, MA-4, PL-9, PM-12, RA-5, SC-5, SC-7, SC-18, SI-3, SI-6, SI-7, SR-9, SR-10
<li>h. Security Controls Enhancement(s): [h: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization ensures that the use of monitoring tools and techniques does not adversely impact the operational performance of the OT. Example compensating controls include deploying sufficient network, process, and physical monitoring. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>System Monitoring</b></p>a. Monitor the system to detect:     1. Attacks and indicators of potential attacks in accordance with the following monitoring objectives: [Assignment: organization-defined      monitoring objectives]; and     2. Unauthorized local, network, and remote connections;b. Identify unauthorized use of the system through the following techniques and methods: [Assignment: organization-defined techniques and methods];c. Invoke internal monitoring capabilities or deploy monitoring devices:     1. Strategically within the system to collect organization-determined essential information; and     2. At ad hoc locations within the system to track specific types of transactions of interest to the organization;d. Analyze detected events and anomalies;e. Adjust the level of system monitoring activity when there is a change in risk to organizational operations and assets, individuals, other organizations, or the Nation;f. Obtain legal opinion regarding system monitoring activities; andg. Provide [Assignment: organization-defined system monitoring information] to [Assignment: organization-defined personnel or roles] [Selection (one or more): as needed; [Assignment: organization-defined frequency]].' WHERE [Requirement_Id] = 37981
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Make provisions so that encrypted communications traffic is visible to organizational monitoring tools and mechanisms. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Visibility of Encrypted Communications</b></p>Make provisions so that [Assignment: organization-defined encrypted communications traffic] is visible to [Assignment: organization-defined system monitoring tools and mechanisms].' WHERE [Requirement_Id] = 37982
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Alert required stakeholders using automated mechanisms when there are indications of inappropriate or unusual activities with security or privacy implications. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Automated Organization-generated Alerts</b></p>Alert [Assignment: organization-defined personnel or roles] using [Assignment: organization-defined automated mechanisms] when the following indications of inappropriate or unusual activities with security or privacy implications occur: [Assignment: organization-defined activities that trigger alerts].' WHERE [Requirement_Id] = 37983
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Employ a wireless intrusion detection system to identify rogue wireless devices and to detect attack attempts and potential compromises or breaches to the system. [WMATA System Implementation Statement]

Related Controls: AC-18, IA-3
', [Supplemental_Info]=N'<p><b> Wireless Intrusion Detection</b></p>Employ a wireless intrusion detection system to identify rogue wireless devices and to detect attack attempts and potential compromises or breaches to the system.' WHERE [Requirement_Id] = 37984
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Employ automated tools and mechanisms to support near real-time analysis of events. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> In situations where the OT cannot support the use of automated tools to support near-real-time analysis of events, the organization employs compensating controls (e.g., providing an auditing capability on a separate system, nonautomated mechanisms or procedures) in accordance with the general tailoring guidance. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: PM-23, PM-25

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: When the OT cannot support the use of automated tools for near-real-time analysis of events, the organization employs compensating controls (e.g., providing an auditing capability on a separate system, nonautomated mechanisms or procedures) in accordance with the general tailoring guidance. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>System Monitoring | Automated Tools and Mechanisms for Real-time Analysis</b></p>Employ automated tools and mechanisms to support near real-time analysis of events.' WHERE [Requirement_Id] = 37985
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement the following additional monitoring of privileged users: [WMATA System Implementation Statement]

<li>(1) Monitoring of all privileged actions taken or attempted; and [1: WMATA System Implementation Statement]</li>
<li>(2) Actions that violate normal or expected behaviors. [2: WMATA System Implementation Statement]</li>

Related Controls: AC-18
', [Supplemental_Info]=N'<p><b> Privileged Users</b></p>Implement the following additional monitoring of privileged users: [Assignment: organization-defined additional monitoring].' WHERE [Requirement_Id] = 37986
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Detect network services that have not been authorized or approved by the DM Change Control Board and audit and alert when detected. [WMATA System Implementation Statement]

Related Controls: CM-7
', [Supplemental_Info]=N'<p><b> Unauthorized Network Services</b></p>(a) Detect network services that have not been authorized or approved by [Assignment: organization-defined authorization or approval processes]; and(b) [Selection (one or more): Audit; Alert [Assignment: organization-defined personnel or roles]] when detected.' WHERE [Requirement_Id] = 37987
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>(1) Determine criteria for unusual or unauthorized activities or conditions for inbound and outbound communications traffic; [1: WMATA System Implementation Statement]</li>
<li>(2) Monitor inbound and outbound communications traffic continuously for unusual or unauthorized activities or conditions. [2: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b> Inbound and Outbound Communications Traffic</b></p>(a) Determine criteria for unusual or unauthorized activities or conditions for inbound and outbound communications traffic;(b) Monitor inbound and outbound communications traffic [Assignment: organization-defined frequency] for [Assignment: organization-defined unusual or unauthorized activities or conditions].' WHERE [Requirement_Id] = 37988
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Alert required stakeholders when the following system-generated indications of compromise or potential compromise occur. At a minimum, compromise indicators may include but shall not be limited to the following: [WMATA System Implementation Statement]

<li>(1) Protected system files or directories have been modified without notification from the appropriate change/configuration management channels; [1: WMATA System Implementation Statement]</li>
<li>(2) System performance indicates resource consumption that is inconsistent with expected operating conditions; [2: WMATA System Implementation Statement]</li>
<li>(3) Auditing functionality has been disabled or modified to reduce audit visibility; [3: WMATA System Implementation Statement]</li>
<li>(4) Audit or log records have been deleted or modified without explanation; [4: WMATA System Implementation Statement]</li>
<li>(5) The system is raising alerts or faults in a manner that indicates the presence of an abnormal condition; [5: WMATA System Implementation Statement]</li>
<li>(6) Resource or service requests are initiated from clients that are outside of the expected client membership set; [6: WMATA System Implementation Statement]</li>
<li>(7) The system reports failed logins or password changes for administrative or key service accounts; [7: WMATA System Implementation Statement]</li>
<li>(8) Processes and services are running that are outside of the baseline system profile; and [8: WMATA System Implementation Statement]</li>
<li>(9) Utilities, tools, or scripts have been saved or installed on production systems without a clear indication of their use or purpose. [9: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Example compensating controls include manual methods of generating alerts. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AU-4, AU-5, PE-6

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Example compensating controls include manually generating alerts. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>System Monitoring | System-generated Alerts</b></p>Alert [Assignment: organization-defined personnel or roles] when the following system-generated indications of compromise or potential compromise occur: [Assignment: organization-defined compromise indicators].' WHERE [Requirement_Id] = 37989
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Receive system security alerts, advisories, and directives from supply chain partners, external mission or business partners, external service providers, other peer or supporting organizations, Cybersecurity and Infrastructure Agency, Information Sharing and Analysis Centers, and other resources as determined by DMCS on an ongoing basis; [a: WMATA System Implementation Statement]</li>
<li>b. Generate internal security alerts, advisories, and directives as deemed necessary; [b: WMATA System Implementation Statement]</li>
<li>c. Disseminate security alerts, advisories, and directives to all staff with system administration, monitoring, and/or security responsibilities; and other required stakeholders; and [c: WMATA System Implementation Statement]</li>
<li>d. Implement security directives in accordance with established time frames or notify the issuing organization of the degree of noncompliance. [d: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> CISA generates security alerts and advisories relative to OT at https://www.cisa.gove/uscert/ics. Industry-specific ISACs often provide tailored advisories and alerts, which can be found at https://www.nationalisacs.org/. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: PM-15, RA-5, SI-2
<li>e. Security Controls Enhancement(s): [e: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: CISA generates security alerts and advisories relative to OT at https://www.cisa.gov/uscert/ics. Industry-specific ISACs often provide tailored advisories and alerts, which can be found at https://www.nationalisacs.org/. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Security Alerts, Advisories, and Directives</b></p>a. Receive system security alerts, advisories, and directives from [Assignment: organization-defined external organizations] on an ongoing basis;b. Generate internal security alerts, advisories, and directives as deemed necessary;c. Disseminate security alerts, advisories, and directives to: [Selection (one or more): [Assignment: organization-defined personnel or roles]; [Assignment: organization-defined elements within the organization]; [Assignment: organization-defined external organizations]]; andd. Implement security directives in accordance with established time frames, or notify the issuing organization of the degree of noncompliance.' WHERE [Requirement_Id] = 37990
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Broadcast security alerts and advisory information throughout the organization using automated mechanisms. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b> Automated Alerts and Advisories</b></p>Broadcast security alert and advisory information throughout the organization using [Assignment: organization-defined automated mechanisms].' WHERE [Requirement_Id] = 37991
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Verify the correct operation of system security and privacy functions; [a: WMATA System Implementation Statement]</li>
<li>b. Perform the verification of the system security and privacy functions during system startup, restart, shutdown, and abort and upon command by the user with appropriate privilege annually or as a part of information system continuous monitoring; [b: WMATA System Implementation Statement]</li>
<li>c. Alert required stakeholders to fail security and privacy verification tests; and [c: WMATA System Implementation Statement]</li>
<li>d. Audits shall be captured in accordance with Control 3.3 Audit and Accountability to reflect sufficient details as to the anomaly that occurred, appropriate action taken (e.g., shutdown of the system) as specified in the System Security Plan (SSP), and/or Control 3.5 Contingency Planning, Section 2, “CP-2 Information System Contingency Plan”, and personnel identified in Section 4, (g), (iii), “SI-4, (5) System-Generated Alerts” and Section 4, (g), (v), “SI-4 (12) Automated Organization-Generated Alerts”, and alerted when anomalies are discovered. [d: WMATA System Implementation Statement]</li>
<li>e. If the system is shut down due to a privacy-related anomaly, the relevant Control 3.3 Audit and Accountability and Control 3.5 Contingency Planning controls shall be updated in the SSP and the Information System Contingency Plan (ISCP)/Disaster Recovery Plan (DRP) to reflect how operations shall be maintained in the event of a system or system component outage. [e: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Shutting down and restarting the OT may not always be feasible upon the identification of an anomaly; these actions should be scheduled according to OT operational requirements. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: CA-7, CM-4, CM-6, CP-2, SI-4, SI-7

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Shutting down and restarting the OT may not always be feasible upon the identification of an anomaly. These actions should be scheduled according to OT operational requirements. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Security and Privacy Function Verification</b></p>a. Verify the correct operation of [Assignment: organization-defined security and privacy functions];b. Perform the verification of the functions specified in SI-6a [Selection (one or more): [Assignment: organization-defined system transitional states]; upon command by user with appropriate privilege; [Assignment: organization-defined frequency]];c. Alert [Assignment: organization-defined personnel or roles] to failed security and privacy verification tests; andd. [Selection (one or more): Shut the system down; Restart the system; [Assignment: organization-defined alternative action(s)]] when anomalies are discovered.' WHERE [Requirement_Id] = 37992
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Employ integrity verification tools to detect unauthorized changes to system software, firmware, information, and data; and [a: WMATA System Implementation Statement]</li>
<li>b. Take the following actions when unauthorized changes to the software, firmware, and information are detected: [b: WMATA System Implementation Statement]</li>
<li>i) Audit the changes made in accordance with Control 3.3 Audit and Accountability; [b.i: WMATA System Implementation Statement]</li>
<li>ii) Notify/alert required stakeholders; and [b.ii: WMATA System Implementation Statement]</li>
<li>iii) Take the appropriate action (e.g., shutdown or halting the system, reversing the changes, or triggering audit alerts) as specified in the SSP and/or Control 3.5 Contingency Planning, Section 2, “CP-2 Information System Contingency Plan”. If the system is shut down due to unauthorized changes, the relevant Control 3.3 Audit and Accountability and Control 3.5 Contingency Planning controls shall be updated in the SSP and the CP/DRP to reflect how operations shall be maintained in the event of a system or system component outage. [b.iii: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> The organization determines whether the use of integrity verification applications would adversely impact operation of the ICS and employs compensating controls (e.g., manual integrity verifications that do not affect performance). [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AC-4, CM-3, CM-7, CM-8, CP-2, MA-3, MA-4, RA-5, SA-8, SA-9, SA-10, SC-8, SC-12, SC-13, SC-28, SI-3, SR-3, SR-4, SR-5, SR-6, SR-9, SR-10, SR-11

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization determines whether the use of integrity verification applications would adversely impact operation of the ICS and employs compensating controls (e.g., manual integrity verifications that do not affect performance).  [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Software, Firmware, and Information Integrity</b></p>a. Employ integrity verification tools to detect unauthorized changes to the following software, firmware, and information: [Assignment: organization-defined software, firmware, and information]; andb. Take the following actions when unauthorized changes to the software, firmware, and information are detected: [Assignment: organization-defined actions].' WHERE [Requirement_Id] = 37993
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Perform an integrity check of software, firmware, and information at least monthly and at system startup, restart, shutdown, abort, and during configuration changes or security-relevant events. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> The organization ensures that the use of integrity verification applications does not adversely impact the operational performance of the OT. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: The organization ensures that the use of integrity verification applications does not adversely impact the operational performance of the OT. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Software, Firmware, and Information Integrity | Integrity Checks</b></p>Perform an integrity check of [Assignment: organization-defined software, firmware, and information] [Selection (one or more): at startup; at [Assignment: organization-defined transitional states or security-relevant events]; [Assignment: organization-defined frequency]].' WHERE [Requirement_Id] = 37994
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Implement cryptographic mechanisms that authenticate software and firmware components and provide digitally signed certificates from trusted authorities approved by DMCS prior to installation. [WMATA System Implementation Statement] 

<b><u>OT Systems Only:</u></b> Code authentication provides assurance to the organization that the software and firmware have not been tampered with. If automated mechanisms are not available, organizations could verify code authentication by manually using a combination of techniques including verifying hashes, downloading from reputable sources, verifying version numbers with the vendor, or testing software/firmware in offline/test environment. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: CM-5, SC-12, SC-13

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Code authentication provides assurance that the software and firmware have not been tampered with. If automated mechanisms are not available, organizations could manually verify code authentication by using a combination of techniques, including verifying hashes, downloading from reputable sources, verifying version numbers with the vendor, or testing software and firmware in offline or test environments. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Software, Firmware, and Information Integrity | Code Authentication</b></p>Implement cryptographic mechanisms to authenticate the following software or firmware components prior to installation: [Assignment: organization-defined software or firmware components].' WHERE [Requirement_Id] = 37995
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Employ automated tools that provide notification to required stakeholders upon discovering discrepancies during integrity verification. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> In situations where the organization cannot employ automated tools that provide notification of integrity discrepancies, the organization employs nonautomated mechanisms or procedures. Example compensating controls include performing scheduled manual inspections for integrity violations. [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: When the organization cannot employ automated tools that provide notifications about integrity discrepancies, the organization employs nonautomated mechanisms or procedures. Example compensating controls include performing scheduled manual inspections for integrity violations. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Software, Firmware, and Information Integrity | Automated Notifications of Integrity Violations</b></p>Employ automated tools that provide notification to [Assignment: organization-defined personnel or roles] upon discovering discrepancies during integrity verification.' WHERE [Requirement_Id] = 37996
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Automatically act and implement controls (e.g., shutdown or halting the system, reversing the changes, or triggering audit alerts) when integrity violations are discovered. If the system is shut down due to unauthorized changes, the relevant security controls shall be updated in the SSP and the CP/DRP to reflect how operations shall be maintained in the event of a system or system component outage. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Shutting down and restarting the ICS may not always be feasible upon identification of an anomaly; these actions should be scheduled according to ICS operational requirements.  [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Shutting down and restarting the ICS may not always be feasible upon identification of an anomaly. These actions should be scheduled according to ICS operational requirements. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Software, Firmware, and Information Integrity | Automated Response to Integrity Violations</b></p>Automatically [Selection (one or more): shut the system down; restart the system; implement [Assignment: organization-defined controls]] when integrity violations are discovered.' WHERE [Requirement_Id] = 37997
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Incorporate the detection of unauthorized system changes to include unauthorized changes to established configuration settings or baselines or unauthorized elevation of system privileges into the organizational incident response capability. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> In situations where the ICS cannot detect unauthorized security-relevant changes, the organization employs compensating controls (e.g., manual procedures) in accordance with the general tailoring guidance. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: AU-2, AU-6, IR-4, IR-5, SI-4

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: When the ICS cannot detect unauthorized securityrelevant changes, the organization employs compensating controls (e.g., manual procedures) in accordance with the general tailoring guidance.  [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Software, Firmware, and Information Integrity | Integration of Detection and Response</b></p>Incorporate the detection of the following unauthorized changes into the organizational incident response capability: [Assignment: organization-defined security-relevant changes to the system].' WHERE [Requirement_Id] = 37998
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Employ spam protection mechanisms at system entry and exit points to detect and act on unsolicited messages; and [a: WMATA System Implementation Statement]</li>
<li>b. Update spam protection mechanisms when new releases are available in accordance with organizational configuration management control family and procedures. [b: WMATA System Implementation Statement]</li>
<b><u>OT Systems Only:</u></b> OT organizations implement spam protection by removing spam transport mechanisms, functions, and services (e.g., electronic mail, web browsing) from the OT. [OT Systems Only: WMATA System Implementation Statement]
Related Controls: PL-9, SC-5, SC-7, SI-3, SI-4
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: OT organizations implement spam protection by removing spam transport mechanisms, functions, and services (e.g., electronic mail, web browsing) from the OT.  [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Spam Protection</b></p>a. Employ spam protection mechanisms at system entry and exit points to detect and act on unsolicited messages; andb. Update spam protection mechanisms when new releases are available in accordance with organizational configuration management policy and procedures.' WHERE [Requirement_Id] = 37999
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Automatically and continuously update spam protection mechanisms to ensure that updates occur on a regular basis and provide the latest content and protection capabilities. [WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
Rationale for removing SI-8 (2) from MOD and HIGH baselines: Spam transport mechanisms are disabled or removed from the OT, so automatic updates are not necessary. [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Spam Protection | Automatic Updates</b></p>Automatically update spam protection mechanisms [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 38000
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Reference P/I 15.28 Cybersecurity Policy for requirements. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Supply chain and procedures for OT should consider components received as well as components produced. Many OT systems use legacy components that cannot meet modern supply chain expectations. Appropriate compensating controls should be developed to achieve organization supply chain expectations for legacy systems. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: PM-9, PM-30, PS-8, SI-12

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Supply chain policies and procedures for OT should consider both components received and components produced. Many OT systems use legacy components that cannot meet modern supply chain expectations. Appropriate compensating controls should be developed to achieve organizational supply chain expectations for legacy systems. [NIST 800-82 Rev 3: WMATA System Implementation Statement] 
', [Supplemental_Info]=N'<p><b>Cybersecurity Supply Chain Risk Management Policy and Procedures</b></p>a. Develop, document, and disseminate to [Assignment: organization-defined personnel or roles]:     1. [Selection (one or more): Organization-level; Mission/business process-level; System-level] supply chain risk management policy that:          (a) Addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and           compliance; and          (b) Is consistent with applicable laws, executive orders, directives, regulations, policies, standards, and guidelines; and     2. Procedures to facilitate the implementation of the supply chain risk management policy and the associated supply chain risk management      controls;b. Designate an [Assignment: organization-defined official] to manage the development, documentation, and dissemination of the supply chain risk management policy and procedures; andc. Review and update the current supply chain risk management:     1. Policy [Assignment: organization-defined frequency] and following [Assignment: organization-defined events]; and     2. Procedures [Assignment: organization-defined frequency] and following [Assignment: organization-defined events].' WHERE [Requirement_Id] = 38001
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Inspect systems or system components for physical and logical tampering: [WMATA System Implementation Statement]

<li>a. Immediately upon delivery of a new system or system component and when there is a significant change to a hardware, software, or firmware component; [a: WMATA System Implementation Statement]</li>
<li>b. Immediately when a system or system component is removed and returned from travel to high-risk locations or travel outside organizationally-controlled areas or facilities (other than when personnel are in telework status in the contiguous US); [b: WMATA System Implementation Statement]</li>
<li>c. Randomly when there are indications of a need for inspection to include changes in packaging, specifications, factory location, entities, or locations in which the part is purchased; and [c: WMATA System Implementation Statement]</li>
<li>d. At the discretion of DMCS. [d: WMATA System Implementation Statement]</li>

Related Controls: AT-3, PM-30, SI-4, SI-7, SR-3, SR-4, SR-5, SR-9, SR-11
', [Supplemental_Info]=N'<p><b>Inspection of Systems or Components</b></p>Inspect the following systems or system components [Selection (one or more): at random; at [Assignment: organization-defined frequency], upon [Assignment: organization-defined indications of need for inspection]] to detect tampering: [Assignment: organization-defined systems or system components].' WHERE [Requirement_Id] = 38002
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Develop and implement anti-counterfeit procedures that include the validation of authenticity of any system with the authorized vendor. [a: WMATA System Implementation Statement]</li>
<li>b. Report counterfeit system components to DMCS. [b: WMATA System Implementation Statement]</li>
Related Controls: PE-3, SA-4, SI-7, SR-9, SR-10
<li>c. Security Controls Enhancement(s): [c: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Component Authenticity</b></p>a. Develop and implement anti-counterfeit policy and procedures that include the means to detect and prevent counterfeit components from entering the system; andb. Report counterfeit system components to [Selection (one or more): source of counterfeit component; [Assignment: organization-defined external reporting organizations]; [Assignment: organization-defined personnel or roles]].' WHERE [Requirement_Id] = 38003
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Train System Owners to detect counterfeit system components (including hardware, software, and firmware). [WMATA System Implementation Statement]

Related Controls: AT-3
' WHERE [Requirement_Id] = 38004
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Validate authenticity of any system being returned to service or coming back from repair with the authorized vendor. [WMATA System Implementation Statement]

Related Controls: CM-3, MA-2, MA-4, SA-10
' WHERE [Requirement_Id] = 38005
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Dispose of data, documentation, tools, or system components only after media sanitization techniques and methods in accordance with Control 3.12 Media Protection, Section 6, “MP-6 Media Sanitization”. [WMATA System Implementation Statement]

Related Controls: MP-6 
', [Supplemental_Info]=N'<p><b>Component Disposal</b></p>Dispose of [Assignment: organization-defined data, documentation, tools, or system components] using the following techniques and methods: [Assignment: organization-defined techniques and methods].' WHERE [Requirement_Id] = 38006
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Develop a plan for managing supply chain risks associated with the research and development, design, manufacturing, acquisition, delivery, integration, operations and maintenance, and disposal of information and operational technology (IT/OT) systems, system components, or system services; [a: WMATA System Implementation Statement]</li>
<li>b. Review and update the supply chain risk management plan annually or as required, to address threat, organizational or environmental changes; and [b: WMATA System Implementation Statement]</li>
<li>c. Protect the supply chain risk management plan from unauthorized disclosure and modification. [c: WMATA System Implementation Statement]</li>
Related Controls: CA-2, CP-4, IR-4, MA-2, MA-6, PE-16, PL-2, PM-9, PM-30, RA-3, RA-7, SA-8, SI-4
<li>d. Security Controls Enhancement(s): [d: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Supply Chain Risk Management Plan</b></p>a. Develop a plan for managing supply chain risks associated with the research and development, design, manufacturing, acquisition, delivery, integration, operations and maintenance, and disposal of the following systems, system components or system services: [Assignment: organization-defined systems, system components, or system services];b. Review and update the supply chain risk management plan [Assignment: organization-defined frequency] or as required, to address threat, organizational or environmental changes; andc. Protect the supply chain risk management plan from unauthorized disclosure and modification.' WHERE [Requirement_Id] = 38007
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Establish a supply chain risk management team consisting of Procurement, the Legal Department, CORs/COTRs, CISO, AO, BISO, Cybersecurity SCRM Team, and other personnel/roles as deemed necessary to lead and support the following SCRM activities: [WMATA System Implementation Statement]

<li>(1) Leading and supporting SCRM activities on projects and programs with a nexus to technology; [1: WMATA System Implementation Statement]</li>
<li>(2) Identification, assessment, and analysis of supply chain risks and the supply chain risk management program; [2: WMATA System Implementation Statement]</li>
<li>(3) Management and mitigation of supply chain risks; and [3: WMATA System Implementation Statement]</li>
<li>(4) Communication with internal and external partners or stakeholders (including third-party vendors (TPV)). [4: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b> Establish SCRM Team</b></p>Establish a supply chain risk management team consisting of [Assignment: organization-defined personnel, roles, and responsibilities] to lead and support the following SCRM activities: [Assignment: organization-defined supply chain risk management activities].' WHERE [Requirement_Id] = 38008
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Establish a process or processes to identify and address weaknesses or deficiencies in the supply chain elements and processes of systems in coordination with the SCRM Team; [a: WMATA System Implementation Statement]</li>
<li>b. Employ security controls in compliance with WMATA policy and instructions to protect against cybersecurity supply chain risks to the system, system component, or system service and to limit the harm or consequences from supply chain-related events; and [b: WMATA System Implementation Statement]</li>
<li>c. As a part of the acquisition process for any new technology, document the selected and implemented cybersecurity supply chain processes and controls in the Cybersecurity Supply Chain Risk Management Plan (CSCRMP). [c: WMATA System Implementation Statement]</li>
<li>i) All WMATA IT/OT systems, upon completion of the acquisition process but prior to operational use, are subject to the Assessment & Authorization (A&A) process and shall document or reference selected and implemented cybersecurity supply chain controls and processes annotated in the CSCRMP in System Security Plans (SSPs) affiliated with the A&A process. [c.i: WMATA System Implementation Statement]</li>
Related Controls: CA-2, MA-2, MA-6, PE-3, PE-16, PL-8, PM-30, SA-2, SA-3, SA-4, SA-5, SA-8, SA-9, SA-10, SA-15, SC-7, SI-7, SR-6, SR-9, SR-11
<li>d. Security Controls Enhancement(s): [d: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Supply Chain Controls and Processes</b></p>a. Establish a process or processes to identify and address weaknesses or deficiencies in the supply chain elements and processes of [Assignment: organization-defined system or system component] in coordination with [Assignment: organization-defined supply chain personnel];b. Employ the following controls to protect against supply chain risks to the system, system component, or system service and to limit the harm or consequences from supply chain-related events: [Assignment: organization-defined supply chain controls]; andc. Document the selected and implemented supply chain processes and controls in [Selection: security and privacy plans; supply chain risk management plan; [Assignment: organization-defined document]].' WHERE [Requirement_Id] = 38009
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Employ a diverse set of sources for all system components and services. [WMATA System Implementation Statement]

<b><u>OT Systems Only:</u></b> Using a diverse set of suppliers in the OT environment can improve reliability by reducing common cause failures. This is not always possible since some technologies have limited supply options that meet the operational requirements.  [OT Systems Only: WMATA System Implementation Statement]

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Using a diverse set of suppliers in the OT environment can improve reliability by reducing common cause failures. This is not always possible since some technologies have limited supply options that meet the operational requirements.  [NIST 800-82 Rev 3: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Supply Chain Controls and Processes | Diverse Supply Base</b></p>Employ a diverse set of sources for the following system components and services: [Assignment: organization-defined system components and services].' WHERE [Requirement_Id] = 38010
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'In order to limit harm from potential adversaries identifying and targeting the organizational supply chain, evaluate vendors prior to contract award and throughout the lifecycle of the contract for controls designed to reduce the probability of adversaries successfully identifying and targeting the supply chain, including: [WMATA System Implementation Statement]

<li>(1) Avoiding the purchase of custom or non-standardized configurations; [1: WMATA System Implementation Statement]</li>
<li>(2) Employing approved vendor lists with standing reputations in the industry; [2: WMATA System Implementation Statement]</li>
<li>(3) Following pre-agreed maintenance schedules and update and patch delivery mechanisms; [3: WMATA System Implementation Statement]</li>
<li>(4) Maintaining a contingency plan in case of a supply chain event; [4: WMATA System Implementation Statement]</li>
<li>(5) Using procurement carve-outs that provide exclusions to commitments or obligations; and [5: WMATA System Implementation Statement]</li>
<li>(6) Minimizing the time between purchase decisions and delivery. [6: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b> Limitation of Harm</b></p>Employ the following controls to limit harm from potential adversaries identifying and targeting the organizational supply chain: [Assignment: organization-defined controls].' WHERE [Requirement_Id] = 38011
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Ensure that the controls included in the contracts of prime contractors are also included in the contracts of subcontractors. [WMATA System Implementation Statement]

Related Controls: SR-5, SR-8
', [Supplemental_Info]=N'<p><b> Sub-Tier Flow Down</b></p>Ensure that the controls included in the contracts of prime contractors are also included in the contracts of subcontractors.' WHERE [Requirement_Id] = 38012
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Monitoring and documenting the chronology of the origin, development, ownership, location, and changes to a system or system component and the associated data, including personnel and processes used to interact with or make modifications to the system, component, or associated data. Document, monitor, and maintain valid provenance for systems, system components, and associated data, including procedures for allocating responsibilities for the creation, maintenance, and monitoring of provenance for systems and system components; transferring provenance documentation and responsibility between organizations; and preventing and monitoring for unauthorized changes to the provenance records. [a: WMATA System Implementation Statement]</li>
Related Controls: CM-8, MA-2, MA-6, RA-9, SA-3, SA-8, SI-4
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Provenance</b></p>Document, monitor, and maintain valid provenance of the following systems, system components, and associated data: [Assignment: organization-defined systems, system components, and associated data].' WHERE [Requirement_Id] = 38013
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Establish and maintain unique identification (methods sufficient to support an investigation in case of a supply chain change (e.g., if a supply company is purchased), compromise, or event) of cybersecurity supply chain elements, processes, and personnel associated with the identified system and critical system components, including: [WMATA System Implementation Statement]

<li>(1) Cybersecurity supply chain elements to include organizations, entities, or tools used for the research and development, design, manufacturing, acquisition, delivery, integration, operations, maintenance, and disposal of systems and system components. [1: WMATA System Implementation Statement]</li>
<li>(2) Cybersecurity supply chain processes to include development processes for hardware, software, and firmware; shipping and handling procedures; configuration management tools, techniques, and measures to maintain provenance; personnel and physical security programs; or other programs, processes, or procedures associated with the production and distribution of supply chain elements. [2: WMATA System Implementation Statement]</li>
<li>(3) Cybersecurity supply chain personnel to include individuals with specific roles and responsibilities related to the secure research and development, design, manufacturing, acquisition, delivery, integration, operations and maintenance, and disposal of a system or system component. [3: WMATA System Implementation Statement]</li>

Related Controls: IA-2, IA-8, PE-16
', [Supplemental_Info]=N'<p><b> Identity</b></p>Establish and maintain unique identification of the following supply chain elements, processes, and personnel associated with the identified system and critical system components: [Assignment: organization-defined supply chain elements, processes, and personnel associated with organization-defined systems and critical system components].' WHERE [Requirement_Id] = 38014
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Establish and maintain unique identification (e.g., system components may be labeled using serial numbers or tagged using radio-frequency identification tags) of systems and critical system components for tracking through the supply chain. [WMATA System Implementation Statement]

Related Controls: IA-2, IA-8, PE-16
', [Supplemental_Info]=N'<p><b> Track and Trace</b></p>Establish and maintain unique identification of the following systems and critical system components for tracking through the supply chain: [Assignment: organization-defined systems and critical system components].' WHERE [Requirement_Id] = 38015
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Employ controls (e.g., optical and nanotechnology tagging, physically unclonable functions, side-channel analysis, cryptographic hash verifications or digital signatures, and visible anti-tamper labels or stickers) to validate that the system or system component received is genuine and has not been altered, including: [WMATA System Implementation Statement]

<li>(1) Monitoring for out of specification performance, which can be an indicator of tampering or counterfeits. [1: WMATA System Implementation Statement]</li>
<li>(2) Leveraging supplier and contractor processes for validating that a system or component is genuine and has not been altered and for replacing a suspect system or component. [2: WMATA System Implementation Statement]</li>
<li>(3) Monitoring for tampering that may be visible and addressable before accepting delivery, such as inconsistent packaging, broken seals, and incorrect labels. [3: WMATA System Implementation Statement]</li>

Related Controls: AT-3, SR-9, SR-10, SR-11
', [Supplemental_Info]=N'<p><b> Validate as Genuine and Not Altered</b></p>Employ the following controls to validate that the system or system component received is genuine and has not been altered: [Assignment: organization-defined controls].' WHERE [Requirement_Id] = 38016
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>1) Conduct assessments to ensure the integrity of the system and system components by validating the internal composition and provenance of critical or mission-essential technologies, products, and services. For microelectronics, this includes material composition of components. For software, this includes the composition of open-source and proprietary code, including the version of the component at a given point in time. [1: WMATA System Implementation Statement]</li>
<li>2) The validation of the internal composition and provenance shall be achieved by requiring various evidentiary artifacts or records from manufacturers and suppliers which are produced during the research and development, design, manufacturing, acquisition, delivery, integration, operations and maintenance, and disposal of technology, products, and services. Evidentiary artifacts include, but are not limited to, software identification (SWID) tags, software component inventory, the manufacturers’ declarations of platform attributes (e.g., serial numbers, hardware component inventory), and measurements (e.g., firmware hashes) that are tightly bound to the hardware itself. [2: WMATA System Implementation Statement]</li>

Related Controls: RA-3
', [Supplemental_Info]=N'<p><b> Supply Chain Integrity – Pedigree</b></p>Employ [Assignment: organization-defined controls] and conduct [Assignment: organization-defined analysis] to ensure the integrity of the system and system components by validating the internal composition and provenance of critical or mission-essential technologies, products, and services.' WHERE [Requirement_Id] = 38017
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>1) Employ the following acquisition strategies, contract tools, and procurement methods to protect against, identify, and mitigate supply chain risks: [1: WMATA System Implementation Statement]</li>
<li>2) All solicitations shall be reviewed by DMCS and shall include cybersecurity specifications and the cybersecurity questionnaire as applicability is determined by DMCS. Where cybersecurity requirements have been applied to a solicitation, cybersecurity shall be included as an element of the selection criteria. [2: WMATA System Implementation Statement]</li>
<li>3) Acquisition strategies to include: [3: WMATA System Implementation Statement]</li>
<li>a. Requiring tamper-evident packaging or using trusted or controlled distribution; [3.a: WMATA System Implementation Statement]</li>
<li>b. Training, education, and awareness programs for personnel regarding supply chain risk, available mitigation strategies, and when the programs should be employed; and [3.b: WMATA System Implementation Statement]</li>
<li>c. Methods for reviewing and protecting development plans, documentation, and evidence commensurate with the security and privacy requirements of the organization. [3.c: WMATA System Implementation Statement]</li>
Related Controls: AT-3, SA-2, SA-3, SA-4, SA-5, SA-8, SA-9, SA-10, SA-15, SR-6, SR-9, SR-10, SR-11
<li>d. Security Controls Enhancement(s): [d: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Acquisition Strategies, Tools, and Methods</b></p>Employ the following acquisition strategies, contract tools, and procurement methods to protect against, identify, and mitigate supply chain risks: [Assignment: organization-defined acquisition strategies, contract tools, and procurement methods].' WHERE [Requirement_Id] = 38018
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Ensure an adequate supply of critical system components through the following cybersecurity controls pertaining to HVA, as determined by DMCS: [WMATA System Implementation Statement]

<li>(1) Track systems and component mean time to failure to mitigate the loss of temporary or permanent system function; [1: WMATA System Implementation Statement]</li>
<li>(2) The use of multiple suppliers throughout the supply chain for the identified critical components; [2: WMATA System Implementation Statement]</li>
<li>(3) Stockpiling spare components to ensure operation during mission-critical times; and [3: WMATA System Implementation Statement]</li>
<li>(4) The identification of functionally identical or similar components that may be used, if necessary. [4: WMATA System Implementation Statement]</li>

<b><u>OT Systems Only:</u></b> Vendor relationships and spare parts strategies are developed to ensure an adequate supply of critical components is available to meet operational needs. [OT Systems Only: WMATA System Implementation Statement]

Related Controls: RA-9

<b><u>NIST 800-82 Rev 3:</u></b>
OT Discussion: Vendor relationships and spare parts strategies are developed to ensure that an adequate supply of critical components is available to meet operational needs. [NIST 800-82 Rev 3_OT Discussion: WMATA System Implementation Statement]

Rationale for adding SR-5 (1) to MOD and HIGH baselines: OT systems and system components are often built for purpose and have a limited number of vendors or suppliers for a specific component. Organizations identify critical OT system components and controls to ensure an adequate supply in the event of supply chain disruptions. [NIST 800-82 Rev 3_Rationale: WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Acquisition Strategies, Tools, and Methods |Adequate Supply</b></p>Employ the following controls to ensure an adequate supply of [Assignment: organization-defined critical system components]: [Assignment: organization-defined controls].' WHERE [Requirement_Id] = 38019
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Assess the system, system component, or system service prior to selection, acceptance, modification, or update. [WMATA System Implementation Statement]

Related Controls: CA-8, RA-5, SA-11, SI-7
', [Supplemental_Info]=N'<p><b>Assessments Prior to Selection, Acceptance, Modification, or Update</b></p>Assess the system, system component, or system service prior to selection, acceptance, modification, or update.' WHERE [Requirement_Id] = 38020
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Assess and review the supply chain-related risks associated with suppliers or contractors and the system, system component, or system service they provide at the discretion of DMCS. [a: WMATA System Implementation Statement]</li>
Related Controls: SR-3, SR-5
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Supplier Assessments and Reviews</b></p>Assess and review the supply chain-related risks associated with suppliers or contractors and the system, system component, or system service they provide [Assignment: organization-defined frequency].' WHERE [Requirement_Id] = 38021
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Employ organizational analysis; independent third-party analysis; organizational testing; independent third-party testing of systems, system components, or system services, which includes: [WMATA System Implementation Statement]

<li>(1) Supply chain elements including organizations, entities, or tools that are used for the research and development, design, manufacturing, acquisition, delivery, integration, operations, maintenance, and disposal of systems, system components, or system services. [1: WMATA System Implementation Statement]</li>
<li>(2) Supply chain processes including supply chain risk management programs; SCRM strategies and implementation plans; personnel and physical security programs; hardware, software, and firmware development processes; configuration management tools, techniques, and measures to maintain provenance; shipping and handling procedures; and programs, processes, or procedures associated with the production and distribution of supply chain elements. [2: WMATA System Implementation Statement]</li>
<li>(3) Supply chain actors including individuals with specific roles and responsibilities in the supply chain. [3: WMATA System Implementation Statement]</li>

Related Controls: CA-8, SI-4
', [Supplemental_Info]=N'<p><b> Testing and Analysis</b></p>Employ [Selection (one or more): organizational analysis; independent third-party analysis; organizational testing; independent third-party testing] of the following supply chain elements, processes, and actors associated with the system, system component, or system service: [Assignment: organization-defined supply chain elements, processes, and actors].' WHERE [Requirement_Id] = 38022
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Employ the following Operations Security (OPSEC) controls to protect supply chain-related information for the system, system component, or system service, including identifying critical information, analyzing friendly actions related to operations, and other activities to identify actions that can be observed by potential adversaries, determining indicators that potential adversaries might obtain that could be interpreted or pieced together to derive information in sufficient time to cause harm to WMATA, implementing safeguards or countermeasures to eliminate or reduce exploitable vulnerabilities and risk to an acceptable level, and considering how aggregated information may expose users or specific uses of the supply chain. Supply chain information includes user identities; uses for systems, system components, and system services; supplier identities; security and privacy requirements; system and component configurations; supplier processes; design specifications; and testing and evaluation results. [WMATA System Implementation Statement]
', [Supplemental_Info]=N'<p><b>Supply Chain Operations Security</b></p>Employ the following Operations Security (OPSEC) controls to protect supply chain-related information for the system, system component, or system service: [Assignment: organization-defined Operations Security (OPSEC) controls].' WHERE [Requirement_Id] = 38023
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Establish agreements and procedures with entities involved in the supply chain for the system, system component, or system service for the notification of supply chain compromises; and the sharing of results from assessments, audits or other sources that can assist the mitigation and resolution of supply chain risks or improve its processes. [WMATA System Implementation Statement]

Related Controls: IR-4, IR-6, IR-8
', [Supplemental_Info]=N'<p><b>Notification Agreements</b></p>Establish agreements and procedures with entities involved in the supply chain for the system, system component, or system service for the [Selection (one or more): notification of supply chain compromises; results of assessments or audits; [Assignment: organization-defined information]].' WHERE [Requirement_Id] = 38024
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'<li>a. Implement a tamper protection program for the system, system component, or system service. [a: WMATA System Implementation Statement]</li>
Related Controls: PE-3, PM-30, SA-15, SI-4, SI-7, SR-3, SR-4, SR-5, SR-10, SR-11
<li>b. Security Controls Enhancement(s): [b: WMATA System Implementation Statement]</li>
', [Supplemental_Info]=N'<p><b>Tamper Resistance and Detection</b></p>Implement a tamper protection program for the system, system component, or system service.' WHERE [Requirement_Id] = 38025
UPDATE [dbo].[NEW_REQUIREMENT] SET [Requirement_Text]=N'Employ anti-tamper technologies, tools, and techniques throughout the system development life cycle. [WMATA System Implementation Statement]

Related Controls: SA-3
', [Supplemental_Info]=N'<p><b> Multiple Stages of System Development Life Cycle</b></p>Employ anti-tamper technologies, tools, and techniques throughout the system development life cycle.' WHERE [Requirement_Id] = 38026
PRINT(N'Operation applied to 646 rows out of 646')

PRINT(N'Update row in [dbo].[GEN_FILE]')
UPDATE [dbo].[GEN_FILE] SET [File_Name]=N'OT Monitoring Tools_The Ultimate Guide for Conducting Multi-Vendor Proof of Concepts_v1.1.pdf', [Short_Name]=N'OT Monitoring Tools', [Publish_Date]='2023-05-10 00:00:00.000', [Summary]=N'The purpose of this guide is to help organizations understand the current market offerings in OT monitoring as well as to provide a structured approach for conducting proof of  concepts.', [Is_Uploaded]=0 WHERE [Gen_File_Id] = 6116

PRINT(N'Update rows in [dbo].[GALLERY_ITEM]')
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nerc-cip.png', [Icon_File_Name_Large]=N'nerc-cip.png' WHERE [Gallery_Item_Guid] = '7481093d-eefa-423c-8479-025bb74d0d63'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'sp800-82.jpeg', [Icon_File_Name_Large]=N'sp800-82.jpeg' WHERE [Gallery_Item_Guid] = '1d673e6f-ad89-41b3-a264-02b463139030'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'critical-infrastructure.png', [Icon_File_Name_Large]=N'critical-infrastructure.png' WHERE [Gallery_Item_Guid] = 'a8c5b590-dee3-4851-8ec0-09f8898954ab'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'cis-v8.png', [Icon_File_Name_Large]=N'cis-v8.png' WHERE [Gallery_Item_Guid] = '22ae54d0-94a7-4c49-a2e4-0c9a3df0d312'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'default.jpeg', [Icon_File_Name_Large]=N'default.jpeg' WHERE [Gallery_Item_Guid] = 'faab0432-6285-49f2-a837-0fe66fef4ffa'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'tsa-pipeline.png', [Icon_File_Name_Large]=N'tsa-pipeline.png' WHERE [Gallery_Item_Guid] = '1092c438-b928-4dda-a104-13506dd360c4'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'wind-cert.png', [Icon_File_Name_Large]=N'wind-cert.png' WHERE [Gallery_Item_Guid] = '8b81d3b0-41a6-497e-aafa-144d4a722008'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-53.png', [Icon_File_Name_Large]=N'nist-sp-800-53.png' WHERE [Gallery_Item_Guid] = 'e4d8c03b-3a33-4f2d-bd72-160040aed1ba'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'tsa-pipeline.png', [Icon_File_Name_Large]=N'tsa-pipeline.png' WHERE [Gallery_Item_Guid] = '12d8b693-7ee3-4ada-b4fa-1af7f554f130'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'tsa-pipeline.png', [Icon_File_Name_Large]=N'tsa-pipeline.png' WHERE [Gallery_Item_Guid] = '7cf3a4a1-56b6-40ad-ac66-1b1ac936a356'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'acet.png', [Icon_File_Name_Large]=N'acet.png' WHERE [Gallery_Item_Guid] = 'f8fa1cdc-63ac-4076-b00d-1f5dcb34e3a9'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'health-insurance.png', [Icon_File_Name_Large]=N'health-insurance.png' WHERE [Gallery_Item_Guid] = '3218f866-7f61-4851-97c5-21e213a26b97'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'operational_technology.jpeg', [Icon_File_Name_Large]=N'operational_technology.jpeg' WHERE [Gallery_Item_Guid] = 'edf05bdf-ed10-42c5-a147-2260a4ae5c16'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'dod.jpeg', [Icon_File_Name_Large]=N'dod.jpeg' WHERE [Gallery_Item_Guid] = '4fb4efe3-b792-4dfc-b20f-2406b06717f2'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'key.jpeg', [Icon_File_Name_Large]=N'key.jpeg' WHERE [Gallery_Item_Guid] = 'e7b895a9-a268-4baa-aa46-273319f2a730'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'pci.png', [Icon_File_Name_Large]=N'pci.png' WHERE [Gallery_Item_Guid] = 'f4509fb7-1729-437b-a486-27d7df8c85a8'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nistir.png', [Icon_File_Name_Large]=N'nistir.png' WHERE [Gallery_Item_Guid] = '4ae6aedf-d3bc-4238-b0ee-285f00d55e02'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nerc-cip.png', [Icon_File_Name_Large]=N'nerc-cip.png' WHERE [Gallery_Item_Guid] = '251080d8-9858-40fc-80e7-2e32c64c70a1'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'rail-transit.png', [Icon_File_Name_Large]=N'rail-transit.png' WHERE [Gallery_Item_Guid] = '3edb25dd-a1ff-4a0a-9762-33e4a0887ef5'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-53.png', [Icon_File_Name_Large]=N'nist-sp-800-53.png' WHERE [Gallery_Item_Guid] = 'dcfcd4a1-5515-48fd-9789-36fb36d46806'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-csf.png', [Icon_File_Name_Large]=N'nist-csf.png' WHERE [Gallery_Item_Guid] = '4737748d-c762-4459-bc76-393e816c6a2d'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'wmata.jpeg', [Icon_File_Name_Large]=N'wmata.jpeg' WHERE [Gallery_Item_Guid] = '855f847b-f845-4c88-9dce-39b4686feafc'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'cis-v8.png', [Icon_File_Name_Large]=N'cis-v8.png' WHERE [Gallery_Item_Guid] = 'ca12d2be-11bb-40d6-bd4f-3def3db34f11'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'cag.jpeg', [Icon_File_Name_Large]=N'cag.jpeg' WHERE [Gallery_Item_Guid] = 'c67b4152-4083-48e7-9f8c-3f4baeb8e503'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'cis-v8.png', [Icon_File_Name_Large]=N'cis-v8.png' WHERE [Gallery_Item_Guid] = '99935f8f-8216-43ae-8a14-40f7e2420ca5'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-53.png', [Icon_File_Name_Large]=N'nist-sp-800-53.png' WHERE [Gallery_Item_Guid] = '4c6c47f4-c649-4e84-b7d4-42dc77b17630'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'cmmc.jpeg', [Icon_File_Name_Large]=N'cmmc.jpeg' WHERE [Gallery_Item_Guid] = '588b16e5-ae9a-435e-a6e3-441a7578d64a'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'wind-cert.png', [Icon_File_Name_Large]=N'wind-cert.png' WHERE [Gallery_Item_Guid] = 'a3b6d634-b149-41cf-a16f-4bb19db5e6c0'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'industrial-automation.png', [Icon_File_Name_Large]=N'industrial-automation.png' WHERE [Gallery_Item_Guid] = '3cc7b809-207c-423b-b1b3-4f04cd586999'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'cis-v8.png', [Icon_File_Name_Large]=N'cis-v8.png' WHERE [Gallery_Item_Guid] = '7ba9f3e0-825f-481a-af3b-50b12638eec5'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'faa-maintenance.png', [Icon_File_Name_Large]=N'faa-maintenance.png', [Is_Visible]=1 WHERE [Gallery_Item_Guid] = '4ee4c330-5a4c-42f0-8584-5188edda4e95'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'ise.jpeg', [Icon_File_Name_Large]=N'ise.jpeg' WHERE [Gallery_Item_Guid] = '2f25c878-09ce-4c2b-b186-54d5ff2385c1'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'control-systems.png', [Icon_File_Name_Large]=N'control-systems.png' WHERE [Gallery_Item_Guid] = '53699862-9ce4-415f-95d8-56246f69d4d1'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'code.jpeg', [Icon_File_Name_Large]=N'code.jpeg' WHERE [Gallery_Item_Guid] = 'e528befe-348e-4b83-83e9-61d6d723214d'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-53.png', [Icon_File_Name_Large]=N'nist-sp-800-53.png' WHERE [Gallery_Item_Guid] = '317a8213-7656-4d51-9031-6dd3b6d08135'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-53.png', [Icon_File_Name_Large]=N'nist-sp-800-53.png' WHERE [Gallery_Item_Guid] = 'ab9f36f9-b3c2-4c6c-ba60-6e82501d0b3c'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'default.jpeg', [Icon_File_Name_Large]=N'default.jpeg' WHERE [Gallery_Item_Guid] = '2ebb851a-9a93-455e-9c12-6f0ee6ea6673'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-53.png', [Icon_File_Name_Large]=N'nist-sp-800-53.png' WHERE [Gallery_Item_Guid] = '50351c1b-8ffe-4148-b0b8-73271112de8f'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-53.png', [Icon_File_Name_Large]=N'nist-sp-800-53.png' WHERE [Gallery_Item_Guid] = '3141e08b-2feb-4c12-a3e8-7fc388d76d42'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'isa.jpeg', [Icon_File_Name_Large]=N'isa.jpeg' WHERE [Gallery_Item_Guid] = 'b9dca07b-887d-4aaa-aba6-806172581636'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-161.png', [Icon_File_Name_Large]=N'nist-sp-800-161.png' WHERE [Gallery_Item_Guid] = '3fe5f3fb-8a6b-48fd-9bcf-815eccae94cd'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'csf.png', [Icon_File_Name_Large]=N'csf.png' WHERE [Gallery_Item_Guid] = '6ef7d8e3-cf6e-4a25-9f16-83b3ac569a53'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'code.jpeg', [Icon_File_Name_Large]=N'code.jpeg' WHERE [Gallery_Item_Guid] = 'f2407ff1-9f0f-420b-8f86-8528b60fcbc1'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nerc-cip.png', [Icon_File_Name_Large]=N'nerc-cip.png' WHERE [Gallery_Item_Guid] = 'b1e9b990-7388-4d07-8113-8707a9ec729b'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-53.png', [Icon_File_Name_Large]=N'nist-sp-800-53.png' WHERE [Gallery_Item_Guid] = '996aec03-0706-4087-bc80-873f2d6cbb11'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-53.png', [Icon_File_Name_Large]=N'nist-sp-800-53.png' WHERE [Gallery_Item_Guid] = 'b1abc503-08db-4110-b45b-8874ea090527'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-53.png', [Icon_File_Name_Large]=N'nist-sp-800-53.png' WHERE [Gallery_Item_Guid] = '16a06476-1c35-42be-acbf-898e8e7e94ed'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nerc-cip.png', [Icon_File_Name_Large]=N'nerc-cip.png' WHERE [Gallery_Item_Guid] = '61821e5b-9bf8-4034-890d-8b0b058413fd'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-53.png', [Icon_File_Name_Large]=N'nist-sp-800-53.png' WHERE [Gallery_Item_Guid] = '57c4dcf9-6ac6-4640-b3ca-8c55af97001c'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nerc-cip.png', [Icon_File_Name_Large]=N'nerc-cip.png' WHERE [Gallery_Item_Guid] = '1991731e-26fc-4b99-a793-8d3dfe875383'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'hydro.jpeg', [Icon_File_Name_Large]=N'hydro.jpeg' WHERE [Gallery_Item_Guid] = '79bb6d0b-b8bf-4610-9a76-8f1930d3881a'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'rail-transit.png', [Icon_File_Name_Large]=N'rail-transit.png' WHERE [Gallery_Item_Guid] = '8046f780-a288-45dd-9c77-92c20e3ae324'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-53.png', [Icon_File_Name_Large]=N'nist-sp-800-53.png' WHERE [Gallery_Item_Guid] = '17ddca62-8e52-4f5c-8071-939349cea116'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'scert.png', [Icon_File_Name_Large]=N'scert.png' WHERE [Gallery_Item_Guid] = 'a013ce92-ffeb-4526-b5bc-93c6d74d9ce4'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'scert.png', [Icon_File_Name_Large]=N'scert.png' WHERE [Gallery_Item_Guid] = '73092076-db92-44f1-9967-93f602e94425'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'sp800-82.jpeg', [Icon_File_Name_Large]=N'sp800-82.jpeg' WHERE [Gallery_Item_Guid] = '7a58c1cf-31ca-4682-849c-960010824830'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'network-diagram.png', [Icon_File_Name_Large]=N'network-diagram.png' WHERE [Gallery_Item_Guid] = '19913f37-44e2-4388-9754-9bc2eaa74d1b'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'cmmc.jpeg', [Icon_File_Name_Large]=N'cmmc.jpeg' WHERE [Gallery_Item_Guid] = '6a463c71-fe29-4189-bd7d-a0b1712b582c'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-53.png', [Icon_File_Name_Large]=N'nist-sp-800-53.png' WHERE [Gallery_Item_Guid] = 'e4ae8b43-37ad-47c9-8f65-a7abc3eb774e'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nistir.png', [Icon_File_Name_Large]=N'nistir.png' WHERE [Gallery_Item_Guid] = 'b03d1aee-9247-4160-8bd7-aa27682d1366'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nrc.png', [Icon_File_Name_Large]=N'nrc.png' WHERE [Gallery_Item_Guid] = '125811a5-004c-4020-925a-adf95351d3f7'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'universal.jpeg', [Icon_File_Name_Large]=N'universal.jpeg' WHERE [Gallery_Item_Guid] = 'b81f1451-4138-4af4-b624-b130c2c9cea3'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'cnssi.jpeg', [Icon_File_Name_Large]=N'cnssi.jpeg' WHERE [Gallery_Item_Guid] = '2d38023d-c610-48ca-85c6-b21bbf53fd25'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'c2m2.png', [Icon_File_Name_Large]=N'c2m2.png' WHERE [Gallery_Item_Guid] = 'fc53c0d6-881d-41b8-a49e-b375b36709ff'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-82.png', [Icon_File_Name_Large]=N'nist-sp-800-82.png' WHERE [Gallery_Item_Guid] = '2b54aa8a-9cbf-4c79-a9cc-b7cf574a406a'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'cjis.png', [Icon_File_Name_Large]=N'cjis.png' WHERE [Gallery_Item_Guid] = '98d5ecc2-01ba-4bba-a72b-be4b9f1c0dad'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'imr.png', [Icon_File_Name_Large]=N'imr.png' WHERE [Gallery_Item_Guid] = 'a802be1c-7f3d-42f1-8e15-c739695b5532'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'cag.jpeg', [Icon_File_Name_Large]=N'cag.jpeg' WHERE [Gallery_Item_Guid] = '5bd71393-883f-4546-8caa-c7535de9b167'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'csf.png', [Icon_File_Name_Large]=N'csf.png' WHERE [Gallery_Item_Guid] = 'd0c19648-00f5-4215-af2d-c7ebd75fc578'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'hydro-electric.jpeg', [Icon_File_Name_Large]=N'hydro-electric.jpeg' WHERE [Gallery_Item_Guid] = '31664fcc-60a4-4fa6-aadc-c81110740c12'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'cnssi.jpeg', [Icon_File_Name_Large]=N'cnssi.jpeg' WHERE [Gallery_Item_Guid] = '3b9f2073-7209-48d5-920b-c85c4b5fd0b5'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'csf.png', [Icon_File_Name_Large]=N'csf.png' WHERE [Gallery_Item_Guid] = '9219f73d-a9ec-4e13-b884-ca1677bac576'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-82.png', [Icon_File_Name_Large]=N'nist-sp-800-82.png' WHERE [Gallery_Item_Guid] = 'd002d9c0-949d-4446-a8e4-cb8fc1679944'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'mvra.png', [Icon_File_Name_Large]=N'mvra.png' WHERE [Gallery_Item_Guid] = 'fda63fec-80b9-4c97-8e07-ccd2f1dc58a6'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'faa-maintenance.png', [Icon_File_Name_Large]=N'faa-maintenance.png', [Is_Visible]=1 WHERE [Gallery_Item_Guid] = '4929452f-a737-4afc-9778-ce8d550df305'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'cor-7.jpeg', [Icon_File_Name_Large]=N'cor-7.jpeg' WHERE [Gallery_Item_Guid] = '6d705a92-5d8e-4865-aaea-d090570485c1'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-53.png', [Icon_File_Name_Large]=N'nist-sp-800-53.png' WHERE [Gallery_Item_Guid] = '37e3c5ae-ff95-4dd7-a1da-d25c814abd74'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'tsa-pipeline-april-2011.png', [Icon_File_Name_Large]=N'tsa-pipeline-april-2011.png' WHERE [Gallery_Item_Guid] = '7e650e05-b3c2-4b55-8830-d335ca41eeef'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'cnssi.jpeg', [Icon_File_Name_Large]=N'cnssi.jpeg' WHERE [Gallery_Item_Guid] = '1766a7c4-0e16-491b-8580-d3f0641aa33c'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-53.png', [Icon_File_Name_Large]=N'nist-sp-800-53.png' WHERE [Gallery_Item_Guid] = 'd7314c82-83b4-443c-a275-d5215a73220e'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-161.png', [Icon_File_Name_Large]=N'nist-sp-800-161.png' WHERE [Gallery_Item_Guid] = '446b8d52-16ba-4d18-afd4-d7431d501617'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'tsa-pipeline.png', [Icon_File_Name_Large]=N'tsa-pipeline.png' WHERE [Gallery_Item_Guid] = '8f3f4431-3482-44c0-92c2-dccbb14dd8aa'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'operational_technology.jpeg', [Icon_File_Name_Large]=N'operational_technology.jpeg' WHERE [Gallery_Item_Guid] = 'c4dcba19-9465-4a8e-b8c8-decd64092372'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nei-08-09.png', [Icon_File_Name_Large]=N'nei-08-09.png' WHERE [Gallery_Item_Guid] = '62ecb9d1-d825-4b0e-85a9-e53823b468c2'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-171.png', [Icon_File_Name_Large]=N'nist-sp-800-171.png' WHERE [Gallery_Item_Guid] = '5e48de28-156e-47df-9380-e72b482509e2'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'operational_technology.jpeg', [Icon_File_Name_Large]=N'operational_technology.jpeg' WHERE [Gallery_Item_Guid] = 'd752a1b1-9afe-44cb-b114-e7517339d776'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'don.jpeg', [Icon_File_Name_Large]=N'don.jpeg' WHERE [Gallery_Item_Guid] = '3238a34e-e53d-4bf5-bcdd-ea17f0043e1f'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-53.png', [Icon_File_Name_Large]=N'nist-sp-800-53.png' WHERE [Gallery_Item_Guid] = 'f7cf9b71-d8ef-4fd5-934f-ec94a0666b3c'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'cnssi.jpeg', [Icon_File_Name_Large]=N'cnssi.jpeg' WHERE [Gallery_Item_Guid] = '74fba5a4-1b38-48fd-b750-ee00abf9c8d9'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'nist-sp-800-82.png', [Icon_File_Name_Large]=N'nist-sp-800-82.png' WHERE [Gallery_Item_Guid] = '2f798ad3-24ef-4329-9032-ef65faf0579a'
UPDATE [dbo].[GALLERY_ITEM] SET [Icon_File_Name_Small]=N'healthcare-405.png', [Icon_File_Name_Large]=N'healthcare-405.png' WHERE [Gallery_Item_Guid] = '9596a8ec-1ea5-4d7c-b303-f0fe419cc533'
PRINT(N'Operation applied to 91 rows out of 91')

PRINT(N'Update row in [dbo].[DIAGRAM_TEMPLATES]')
UPDATE [dbo].[DIAGRAM_TEMPLATES] SET [Diagram_Markup]=N'
<?xml version="1.0"?>
<mxGraphModel>
  <root>
    <mxCell id="0"/>
    <mxCell id="1" value="Main Layer" parent="0"/>
    <object Criticality="Low" zone="1" ZoneType="Other" SAL="High" label="Zone Core DMZ-High" internalLabel="Zone Core DMZ" id="UxTfs5nLP9km1SiU_4_t-107">
      <mxCell style="swimlane;zone=1;startSize=30;fillColor=#ece4d7;swimlaneFillColor=#f6f3ed;" parent="1" vertex="1" connectable="0">
        <mxGeometry x="870" y="123" width="359" height="440" as="geometry"/>
      </mxCell>
    </object>
    <object label="MPLS" internalLabel="MPLS" id="106">
      <mxCell style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=#9673a6;strokeWidth=3;endArrow=none;labelBackgroundColor=#ffffff;fillColor=#e1d5e7;" parent="UxTfs5nLP9km1SiU_4_t-107" source="21" target="35" edge="1">
        <mxGeometry relative="1" as="geometry">
          <mxPoint x="141.5" y="117" as="sourcePoint"/>
        </mxGeometry>
      </mxCell>
    </object>
    <mxCell id="cjdxwiZFUEl386gS18Un-139" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=#d6b656;strokeWidth=7;endArrow=none;labelBackgroundColor=none;edgeStyle=isometricEdgeStyle;elbow=vertical;exitX=0;exitY=0.25;exitDx=0;exitDy=0;fillColor=#fff2cc;fontSize=11;" parent="UxTfs5nLP9km1SiU_4_t-107" source="cjdxwiZFUEl386gS18Un-142" target="35" edge="1">
      <mxGeometry relative="1" as="geometry">
        <mxPoint x="141.5" y="327" as="sourcePoint"/>
        <mxPoint x="59.53233354778013" y="201.21360000000004" as="targetPoint"/>
      </mxGeometry>
    </mxCell>
    <object label="&amp;nbsp;" ComponentGuid="672a85a2-e7cd-4fbe-aab6-a166acf9e94e" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="3" internalLabel="CON-27" id="21">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/connector.svg;labelBackgroundColor=#ffffff;" parent="UxTfs5nLP9km1SiU_4_t-107" vertex="1">
        <mxGeometry x="132.45249999999987" y="89.95079999999996" width="20" height="20" as="geometry"/>
      </mxCell>
    </object>
    <object label="&amp;nbsp;" ComponentGuid="aee2e5d1-bf36-4630-87c9-7b55ced31283" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="3" internalLabel="CON-28" id="cjdxwiZFUEl386gS18Un-142">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/connector.svg;labelBackgroundColor=#ffffff;" parent="UxTfs5nLP9km1SiU_4_t-107" vertex="1">
        <mxGeometry x="132.45249999999987" y="335.95079999999996" width="20" height="20" as="geometry"/>
      </mxCell>
    </object>
    <object label="Zone Core Pair" ComponentGuid="8e38f60e-bb96-444d-b5f8-c5c6400754e3" HasUniqueQuestions="" IPAddress="" Description="" Criticality="High" HostName="" parent="3" id="cjdxwiZFUEl386gS18Un-147">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/router.svg;labelBackgroundColor=none;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;imageBackground=#6666FF;strokeWidth=4;imageBorder=#0000CC;" parent="UxTfs5nLP9km1SiU_4_t-107" vertex="1">
        <mxGeometry x="199.65589999999997" y="87.21360000000004" width="60" height="25" as="geometry"/>
      </mxCell>
    </object>
    <object label="Zone Core Pair" ComponentGuid="7108598b-52a8-4942-8091-a7c46602d01c" HasUniqueQuestions="" IPAddress="" Description="" Criticality="High" HostName="" parent="3" id="cjdxwiZFUEl386gS18Un-153">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/router.svg;labelBackgroundColor=none;labelPosition=center;verticalLabelPosition=bottom;align=center;verticalAlign=top;imageBackground=#6666FF;strokeWidth=4;imageBorder=#0000CC;" parent="UxTfs5nLP9km1SiU_4_t-107" vertex="1">
        <mxGeometry x="199.65589999999997" y="333.71360000000004" width="60" height="25" as="geometry"/>
      </mxCell>
    </object>
    <object ComponentGuid="051ef56a-0113-457d-b33b-87e29a78626d" Criticality="High" label="Zone Firewall Pair" internalLabel="FW-9" id="cjdxwiZFUEl386gS18Un-156">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/firewall.svg;fontSize=11;labelPosition=center;verticalLabelPosition=top;verticalAlign=bottom;labelBackgroundColor=none;whiteSpace=wrap;" parent="UxTfs5nLP9km1SiU_4_t-107" vertex="1">
        <mxGeometry x="290.5" y="74" width="60" height="51" as="geometry"/>
      </mxCell>
    </object>
    <object ComponentGuid="71f10319-928c-49bd-ba84-cbc18b8d90c7" Criticality="High" label="Zone Firewall Pair" internalLabel="Zone Firewall Pair" id="cjdxwiZFUEl386gS18Un-158">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/firewall.svg;fontSize=11;labelBackgroundColor=none;whiteSpace=wrap;" parent="UxTfs5nLP9km1SiU_4_t-107" vertex="1">
        <mxGeometry x="290.5" y="321" width="60" height="51" as="geometry"/>
      </mxCell>
    </object>
    <object label="Mediation LAN" internalLabel="Mediation LAN" Security="Trusted" id="cjdxwiZFUEl386gS18Un-146">
      <mxCell style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#6c8ebf;labelBackgroundColor=none;fillColor=#dae8fc;strokeWidth=8;labelPosition=right;verticalLabelPosition=middle;align=left;verticalAlign=middle;" parent="UxTfs5nLP9km1SiU_4_t-107" source="cjdxwiZFUEl386gS18Un-142" target="21" edge="1">
        <mxGeometry relative="1" as="geometry">
          <mxPoint x="142.45249999999987" y="235.95080000000007" as="sourcePoint"/>
          <mxPoint x="142.45249999999987" y="155.95080000000007" as="targetPoint"/>
        </mxGeometry>
      </mxCell>
    </object>
    <mxCell id="cjdxwiZFUEl386gS18Un-152" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;labelBackgroundColor=none;endArrow=none;strokeColor=#808080;strokeWidth=1;fontSize=11;" parent="UxTfs5nLP9km1SiU_4_t-107" source="21" target="cjdxwiZFUEl386gS18Un-147" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <mxCell id="cjdxwiZFUEl386gS18Un-155" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;labelBackgroundColor=none;endArrow=none;strokeColor=#808080;strokeWidth=1;fontSize=11;" parent="UxTfs5nLP9km1SiU_4_t-107" source="cjdxwiZFUEl386gS18Un-142" target="cjdxwiZFUEl386gS18Un-153" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <object label="" internalLabel="" id="6nKIGXFCzWmfwkv6MnNh-109">
      <mxCell style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#6c8ebf;labelBackgroundColor=none;fillColor=#dae8fc;strokeWidth=8;labelPosition=right;verticalLabelPosition=middle;align=left;verticalAlign=middle;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="UxTfs5nLP9km1SiU_4_t-107" source="cjdxwiZFUEl386gS18Un-153" target="cjdxwiZFUEl386gS18Un-147" edge="1">
        <mxGeometry relative="1" as="geometry">
          <mxPoint x="238.5" y="287" as="sourcePoint"/>
          <mxPoint x="248.5" y="141.5" as="targetPoint"/>
        </mxGeometry>
      </mxCell>
    </object>
    <mxCell id="cjdxwiZFUEl386gS18Un-157" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;labelBackgroundColor=none;endArrow=none;strokeColor=#6C8EBF;strokeWidth=8;fontSize=11;" parent="UxTfs5nLP9km1SiU_4_t-107" source="cjdxwiZFUEl386gS18Un-147" target="cjdxwiZFUEl386gS18Un-156" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <mxCell id="cjdxwiZFUEl386gS18Un-159" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;labelBackgroundColor=none;endArrow=none;strokeColor=#6C8EBF;strokeWidth=8;fontSize=11;" parent="UxTfs5nLP9km1SiU_4_t-107" source="cjdxwiZFUEl386gS18Un-153" target="cjdxwiZFUEl386gS18Un-158" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <object label="" internalLabel="" id="cjdxwiZFUEl386gS18Un-160">
      <mxCell style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#6c8ebf;labelBackgroundColor=none;fillColor=#dae8fc;strokeWidth=8;labelPosition=right;verticalLabelPosition=middle;align=left;verticalAlign=middle;" parent="UxTfs5nLP9km1SiU_4_t-107" source="cjdxwiZFUEl386gS18Un-158" target="cjdxwiZFUEl386gS18Un-156" edge="1">
        <mxGeometry relative="1" as="geometry">
          <mxPoint x="320.5" y="307" as="sourcePoint"/>
          <mxPoint x="341.5" y="147" as="targetPoint"/>
        </mxGeometry>
      </mxCell>
    </object>
    <object label="Console Site Router" ComponentGuid="1bf065a7-cfb5-45cd-8458-500f8e01b9a3" HasUniqueQuestions="" IPAddress="" Description="" Criticality="High" HostName="" parent="3" id="35">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/router.svg;labelBackgroundColor=none;imageBackground=#6666FF;strokeWidth=4;imageBorder=#0000CC;" parent="UxTfs5nLP9km1SiU_4_t-107" vertex="1">
        <mxGeometry x="11.655899999999974" y="190.21360000000004" width="60" height="25" as="geometry"/>
      </mxCell>
    </object>
    <mxCell id="XH7oSB1Q3w3cp9QVCW1a-107" value="&lt;div style=&quot;text-align: left&quot;&gt;&lt;span&gt;Control Room Site - Customer Enterprise Network (CEN)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;Control Room CENs usually host Nice Recording, DSS Recording, Elite API and/or CADI Services.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;Control Room CENs are typically &quot;stubs&quot; (CEN LAN), meaning that they are single, dedicated subnets that are created to only host specific service.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;The Control Room Firewall is a firewall that is installed at a console site to allow communications with outside networks. The firewall will be configured for &lt;/span&gt;&lt;span style=&quot;font-size: 12px ; font-weight: 400&quot;&gt;network&lt;/span&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;&amp;nbsp;address translation (NAT) mapping. The firewall will also be configured to only pass dispatch console related traffic to and from the customer network.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;Console Site LAN devices send all traffic to the Console Site Router. Traffic that is destined for the &lt;/span&gt;&lt;span style=&quot;font-size: 12px ; font-weight: 400&quot;&gt;Enterprise&lt;/span&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;&amp;nbsp;CEN is sent to the firewall from the Console Site Router via a static route. All CEN hosts using these services need to be able to route to the dispatch site.&lt;/span&gt;&lt;/div&gt;" style="shape=rectangle;whiteSpace=wrap;html=1;strokeWidth=1;labelPosition=center;verticalLabelPosition=middle;align=center;verticalAlign=middle;fontStyle=1" parent="1" vertex="1">
      <mxGeometry x="150" y="-141" width="950" height="170" as="geometry"/>
    </mxCell>
    <object Criticality="Low" zone="1" ZoneType="Other" SAL="Very High" label="System LAN-Very High" internalLabel="System LAN" id="m1hxJIzNgrUlvDxOGyZo-107">
      <mxCell style="swimlane;zone=1;strokeColor=#B20000;fontColor=#000000;fillColor=#ece4d7;swimlaneFillColor=#f6f3ed;" parent="1" vertex="1" connectable="0">
        <mxGeometry x="1240.5" y="391.5" width="368" height="247" as="geometry"/>
      </mxCell>
    </object>
    <object ComponentGuid="9b69355c-4957-4cb4-b955-80056ac4edf3" Criticality="High" label="Firewall Mgt Server" internalLabel="AD-24" id="m1hxJIzNgrUlvDxOGyZo-109">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/active_directory.svg;labelBackgroundColor=none;imageBackground=#FF6666;imageBorder=#FF0000;strokeWidth=4;" parent="m1hxJIzNgrUlvDxOGyZo-107" vertex="1">
        <mxGeometry x="119" y="48" width="44" height="60" as="geometry"/>
      </mxCell>
    </object>
    <object ComponentGuid="86f12799-f93a-4e71-8d84-01308f21254a" Criticality="High" label="CSMS" internalLabel="DB-25" id="m1hxJIzNgrUlvDxOGyZo-110">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/database_server.svg;labelBackgroundColor=none;imageBackground=#FF6666;imageBorder=#FF0000;strokeWidth=4;" parent="m1hxJIzNgrUlvDxOGyZo-107" vertex="1">
        <mxGeometry x="244" y="147" width="43" height="60" as="geometry"/>
      </mxCell>
    </object>
    <object label="&amp;nbsp;" ComponentGuid="984e1378-9a75-439b-96b1-eaec190b3c3e" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="3" internalLabel="&amp;nbsp;" id="XNDtLr3cqQsbXonp8KkM-128">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/connector.svg;labelBackgroundColor=#ffffff;" parent="m1hxJIzNgrUlvDxOGyZo-107" vertex="1">
        <mxGeometry x="38" y="67" width="20" height="20" as="geometry"/>
      </mxCell>
    </object>
    <object label="&amp;nbsp;" ComponentGuid="82282b19-f58e-4b1e-a4aa-b051aa86fe0a" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="3" internalLabel="&amp;nbsp;" id="XNDtLr3cqQsbXonp8KkM-131">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/connector.svg;labelBackgroundColor=#ffffff;" parent="m1hxJIzNgrUlvDxOGyZo-107" vertex="1">
        <mxGeometry x="38" y="167" width="20" height="20" as="geometry"/>
      </mxCell>
    </object>
    <mxCell id="XNDtLr3cqQsbXonp8KkM-130" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="m1hxJIzNgrUlvDxOGyZo-107" source="XNDtLr3cqQsbXonp8KkM-128" target="m1hxJIzNgrUlvDxOGyZo-109" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <mxCell id="XNDtLr3cqQsbXonp8KkM-132" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="m1hxJIzNgrUlvDxOGyZo-107" source="XNDtLr3cqQsbXonp8KkM-128" target="XNDtLr3cqQsbXonp8KkM-131" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <mxCell id="XNDtLr3cqQsbXonp8KkM-134" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="m1hxJIzNgrUlvDxOGyZo-107" source="XNDtLr3cqQsbXonp8KkM-131" target="m1hxJIzNgrUlvDxOGyZo-110" edge="1">
      <mxGeometry relative="1" as="geometry">
        <mxPoint x="243" y="177" as="targetPoint"/>
      </mxGeometry>
    </mxCell>
    <object Criticality="Low" zone="1" ZoneType="Other" SAL="High" label="Zone Core LAN-High" internalLabel="Zone Core LAN" id="cjdxwiZFUEl386gS18Un-183">
      <mxCell style="swimlane;zone=1;labelBackgroundColor=none;fontSize=11;strokeColor=#82b366;whiteSpace=wrap;fillColor=#ece4d7;swimlaneFillColor=#f6f3ed;" parent="1" vertex="1" connectable="0">
        <mxGeometry x="1240.5" y="-207.5" width="371" height="566" as="geometry"/>
      </mxCell>
    </object>
    <object ComponentGuid="c44bbe77-90c8-44d2-9248-b67f9cd27a78" Criticality="High" label="Zone Database Server" internalLabel="Zone Database Server" id="cjdxwiZFUEl386gS18Un-184">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/database_server.svg;labelBackgroundColor=none;fontSize=11;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;imageBackground=#B5FA8F;imageBorder=#66CC00;strokeWidth=4;" parent="cjdxwiZFUEl386gS18Un-183" vertex="1">
        <mxGeometry x="118" y="225" width="43" height="60" as="geometry"/>
      </mxCell>
    </object>
    <object ComponentGuid="96763130-f6b8-4cf0-9cc0-e0d4484dd79a" Criticality="High" label="Zone Backup Server" internalLabel="SVR-15" id="cjdxwiZFUEl386gS18Un-185">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/server.svg;labelBackgroundColor=none;fontSize=11;imageBackground=#B5FA8F;imageBorder=#66CC00;strokeWidth=4;" parent="cjdxwiZFUEl386gS18Un-183" vertex="1">
        <mxGeometry x="258" y="473" width="23" height="60" as="geometry"/>
      </mxCell>
    </object>
    <object ComponentGuid="775f68d7-29b7-4fca-904d-7288ed3f6ee5" Criticality="High" label="Zone UEM Server" internalLabel="SVR-16" id="cjdxwiZFUEl386gS18Un-186">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/server.svg;labelBackgroundColor=none;fontSize=11;imageBackground=#B5FA8F;imageBorder=#66CC00;strokeWidth=4;" parent="cjdxwiZFUEl386gS18Un-183" vertex="1">
        <mxGeometry x="128" y="398.5" width="23" height="60" as="geometry"/>
      </mxCell>
    </object>
    <object ComponentGuid="6622a6ba-9868-475e-bac1-8e33ec5948d9" Criticality="High" label="Zone Statistics Server" internalLabel="AS-17" id="cjdxwiZFUEl386gS18Un-187">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/application_server.svg;labelBackgroundColor=none;fontSize=11;imageBackground=#B5FA8F;imageBorder=#66CC00;strokeWidth=4;" parent="cjdxwiZFUEl386gS18Un-183" vertex="1">
        <mxGeometry x="244" y="325.5" width="44" height="60" as="geometry"/>
      </mxCell>
    </object>
    <mxCell id="2g9_9qOLPwzJJ6DQc6ya-110" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;endArrow=none;strokeColor=#808080;labelBackgroundColor=none;labelPosition=right;verticalLabelPosition=bottom;align=left;verticalAlign=top;" parent="cjdxwiZFUEl386gS18Un-183" source="cjdxwiZFUEl386gS18Un-184" target="cjdxwiZFUEl386gS18Un-184" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <object ComponentGuid="bc088ff5-a041-4c5c-a02f-2fff627935be" Criticality="High" label="Zone Controller 01" internalLabel="EW-1" id="m-PKMXxfoYSgVNY3it_B-107">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/ews.svg;labelBackgroundColor=none;imageBackground=#B5FA8F;imageBorder=#66CC00;strokeWidth=4;" parent="cjdxwiZFUEl386gS18Un-183" vertex="1">
        <mxGeometry x="100" y="55" width="63" height="55" as="geometry"/>
      </mxCell>
    </object>
    <object ComponentGuid="e299a91e-f696-4b7f-b0aa-0dc9f1d6de17" Criticality="High" label="Zone Controller 02" internalLabel="EW-1" id="m-PKMXxfoYSgVNY3it_B-108">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/ews.svg;labelBackgroundColor=none;imageBackground=#B5FA8F;imageBorder=#66CC00;strokeWidth=4;" parent="cjdxwiZFUEl386gS18Un-183" vertex="1">
        <mxGeometry x="226.5" y="142.5" width="63" height="55" as="geometry"/>
      </mxCell>
    </object>
    <object SAL="Moderate" label="CEN-Moderate" internalLabel="CEN" ZoneType="Corporate" zone="1" Criticality="Low" id="2">
      <mxCell style="swimlane;zone=1;labelBackgroundColor=none;labelPosition=center;verticalLabelPosition=middle;align=center;verticalAlign=middle;strokeColor=#000000;fillColor=#fdf9d9;swimlaneFillColor=#fffef4;" parent="1" vertex="1" connectable="0">
        <mxGeometry x="11" y="71" width="305" height="538" as="geometry"/>
      </mxCell>
    </object>
    <object label="Audio Recording Server" ComponentGuid="e7fdf040-49a3-402a-ac95-257ade9f041c" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="2" id="13">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/remote_access_server.svg;labelBackgroundColor=none;" parent="2" vertex="1">
        <mxGeometry x="94" y="421" width="34" height="60" as="geometry"/>
      </mxCell>
    </object>
    <object label="&lt;span&gt;Agency Software Ops&lt;/span&gt;" ComponentGuid="fb69097e-468e-4622-99cb-8deda74c35fe" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="2" id="wJGx4hFZ0Sm7uMFEhMk5-141">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/connector.svg;labelBackgroundColor=#ffffff;labelPosition=right;verticalLabelPosition=middle;align=left;verticalAlign=middle;" parent="2" vertex="1">
        <mxGeometry x="202" y="90.5" width="20" height="20" as="geometry"/>
      </mxCell>
    </object>
    <object label="&lt;span&gt;Agency CADICAD&lt;/span&gt;" ComponentGuid="23249778-d240-4527-9517-223c32eefa33" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="2" id="4i8PqE1TzuKkrrOvAeYK-143">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/connector.svg;labelBackgroundColor=#ffffff;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;" parent="2" vertex="1">
        <mxGeometry x="162.5" y="170" width="20" height="20" as="geometry"/>
      </mxCell>
    </object>
    <object ComponentGuid="2a8cc1fe-15d9-4d41-85dd-7401edbb9a49" Criticality="Low" label="Remote LMR Console" internalLabel="PC-1" id="wJGx4hFZ0Sm7uMFEhMk5-140">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/pc.svg;labelPosition=center;verticalLabelPosition=top;verticalAlign=bottom;whiteSpace=wrap;labelBackgroundColor=none;" parent="2" vertex="1">
        <mxGeometry x="79" y="74" width="60" height="51" as="geometry"/>
      </mxCell>
    </object>
    <mxCell id="wJGx4hFZ0Sm7uMFEhMk5-143" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="2" source="wJGx4hFZ0Sm7uMFEhMk5-141" target="wJGx4hFZ0Sm7uMFEhMk5-140" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <object ComponentGuid="fd0531c4-ee86-4d54-8777-74325e7c9b27" Criticality="Low" label="CAD System" internalLabel="EW-2" id="4i8PqE1TzuKkrrOvAeYK-147">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/ews.svg;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;labelBackgroundColor=none;" parent="2" vertex="1">
        <mxGeometry x="79" y="153" width="60" height="52" as="geometry"/>
      </mxCell>
    </object>
    <mxCell id="4i8PqE1TzuKkrrOvAeYK-148" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="2" source="4i8PqE1TzuKkrrOvAeYK-143" target="4i8PqE1TzuKkrrOvAeYK-147" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <object label="CEN Network IP/Mask" ComponentGuid="0d18b12b-055c-46d7-9ae4-ee98179c4afe" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="2" internalLabel="CON-3" id="xszBj1p53JAKddVs91M7-148">
      <mxCell style="html=1;image;image=img/cset/connector.svg;labelBackgroundColor=#ffffff;labelPosition=left;verticalLabelPosition=middle;align=right;verticalAlign=middle;" parent="2" vertex="1">
        <mxGeometry x="202" y="242.5" width="20" height="20" as="geometry"/>
      </mxCell>
    </object>
    <object ComponentGuid="00572486-4939-45a5-b4fd-4d6fcf80716c" Criticality="Low" label="Audio Recorder Client" internalLabel="PC-4" id="74er5_TXb4ZCgvV5zPsg-144">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/pc.svg;whiteSpace=wrap;labelBackgroundColor=none;" parent="2" vertex="1">
        <mxGeometry x="79" y="300" width="60" height="51" as="geometry"/>
      </mxCell>
    </object>
    <mxCell id="74er5_TXb4ZCgvV5zPsg-145" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="2" source="74er5_TXb4ZCgvV5zPsg-139" target="74er5_TXb4ZCgvV5zPsg-144" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <object label="Agency Recording" ComponentGuid="98a200b6-71ad-4163-85ab-696f712d8352" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="2" internalLabel="CON-3" id="74er5_TXb4ZCgvV5zPsg-139">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/connector.svg;labelBackgroundColor=#ffffff;labelPosition=right;verticalLabelPosition=middle;align=left;verticalAlign=middle;" parent="2" vertex="1">
        <mxGeometry x="202" y="378.5" width="20" height="20" as="geometry"/>
      </mxCell>
    </object>
    <object ComponentGuid="16cd40b1-38c0-4a16-87c7-4e7b8dae23b0" Criticality="Low" label="Agency Firewall" internalLabel="FW-12" id="cjdxwiZFUEl386gS18Un-180">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/firewall.svg;labelBackgroundColor=none;fontSize=11;whiteSpace=wrap;" parent="2" vertex="1">
        <mxGeometry x="231" y="228" width="60" height="51" as="geometry"/>
      </mxCell>
    </object>
    <mxCell id="cjdxwiZFUEl386gS18Un-182" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;labelBackgroundColor=none;endArrow=none;strokeColor=#808080;strokeWidth=1;fontSize=11;" parent="2" source="xszBj1p53JAKddVs91M7-148" target="cjdxwiZFUEl386gS18Un-180" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <mxCell id="4i8PqE1TzuKkrrOvAeYK-144" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="2" source="wJGx4hFZ0Sm7uMFEhMk5-141" target="xszBj1p53JAKddVs91M7-148" edge="1">
      <mxGeometry relative="1" as="geometry">
        <mxPoint x="225" y="158" as="targetPoint"/>
      </mxGeometry>
    </mxCell>
    <mxCell id="74er5_TXb4ZCgvV5zPsg-140" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="2" source="xszBj1p53JAKddVs91M7-148" target="74er5_TXb4ZCgvV5zPsg-139" edge="1">
      <mxGeometry relative="1" as="geometry">
        <mxPoint x="215" y="267" as="sourcePoint"/>
      </mxGeometry>
    </mxCell>
    <mxCell id="4i8PqE1TzuKkrrOvAeYK-150" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="2" source="4i8PqE1TzuKkrrOvAeYK-143" target="xszBj1p53JAKddVs91M7-148" edge="1">
      <mxGeometry relative="1" as="geometry">
        <mxPoint x="205" y="248" as="targetPoint"/>
      </mxGeometry>
    </mxCell>
    <mxCell id="74er5_TXb4ZCgvV5zPsg-143" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="2" source="74er5_TXb4ZCgvV5zPsg-139" target="13" edge="1">
      <mxGeometry relative="1" as="geometry">
        <mxPoint x="195" y="388" as="sourcePoint"/>
      </mxGeometry>
    </mxCell>
    <object SAL="High" label="Control Room-High" internalLabel="Control Room" ZoneType="Control System" zone="1" Criticality="Low" id="3">
      <mxCell style="swimlane;zone=1;labelBackgroundColor=none;fillColor=#d3eef2;swimlaneFillColor=#f2f8f9;" parent="1" vertex="1" connectable="0">
        <mxGeometry x="390" y="69" width="466" height="540" as="geometry"/>
      </mxCell>
    </object>
    <mxCell id="74er5_TXb4ZCgvV5zPsg-168" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="3" source="18" target="74er5_TXb4ZCgvV5zPsg-164" edge="1">
      <mxGeometry relative="1" as="geometry">
        <mxPoint x="226" y="410" as="targetPoint"/>
      </mxGeometry>
    </mxCell>
    <mxCell id="74er5_TXb4ZCgvV5zPsg-169" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="3" source="74er5_TXb4ZCgvV5zPsg-157" target="18" edge="1">
      <mxGeometry relative="1" as="geometry">
        <mxPoint x="146" y="338" as="sourcePoint"/>
        <mxPoint x="207.5" y="271.89944134078223" as="targetPoint"/>
      </mxGeometry>
    </mxCell>
    <mxCell id="74er5_TXb4ZCgvV5zPsg-159" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="3" source="18" target="74er5_TXb4ZCgvV5zPsg-158" edge="1">
      <mxGeometry relative="1" as="geometry">
        <mxPoint x="313.31414490287716" y="271.9508000000001" as="sourcePoint"/>
      </mxGeometry>
    </mxCell>
    <mxCell id="74er5_TXb4ZCgvV5zPsg-152" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="3" source="18" target="74er5_TXb4ZCgvV5zPsg-151" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <object label="Control Room Firewall" ComponentGuid="d2016409-df25-4c4f-87a0-e6b99e256d60" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="3" internalLabel="Control Room Firewall" id="14">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/firewall.svg;labelBackgroundColor=none;" parent="3" vertex="1">
        <mxGeometry x="17.2034" y="229.9508" width="60" height="51" as="geometry"/>
      </mxCell>
    </object>
    <object ComponentGuid="260aa052-2428-45ad-8141-410d1d600b93" Criticality="Low" label="Dispatch Console 01" internalLabel="DC-5" id="74er5_TXb4ZCgvV5zPsg-151">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/dispatch_console.svg;whiteSpace=wrap;labelPosition=center;verticalLabelPosition=top;verticalAlign=bottom;imageBackground=#6666FF;strokeWidth=4;imageBorder=#0000CC;labelBackgroundColor=none;" parent="3" vertex="1">
        <mxGeometry x="114" y="111" width="46" height="60" as="geometry"/>
      </mxCell>
    </object>
    <object ComponentGuid="d7ff4e13-cc1f-4dab-8192-3b858068cd6b" Criticality="Low" label="Dispatch Console 02" internalLabel="DC-5" id="74er5_TXb4ZCgvV5zPsg-157">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/dispatch_console.svg;whiteSpace=wrap;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;labelBackgroundColor=none;imageBackground=#6666FF;strokeWidth=4;imageBorder=#0000CC;" parent="3" vertex="1">
        <mxGeometry x="116" y="339" width="46" height="60" as="geometry"/>
      </mxCell>
    </object>
    <object ComponentGuid="254b52f1-89c4-4e5c-a774-a680ee1d48ef" Criticality="Low" label="Dispatch Console 03" internalLabel="DC-5" id="74er5_TXb4ZCgvV5zPsg-158">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/dispatch_console.svg;whiteSpace=wrap;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;labelBackgroundColor=none;imageBackground=#6666FF;strokeWidth=4;imageBorder=#0000CC;" parent="3" vertex="1">
        <mxGeometry x="286.5" y="340" width="46" height="60" as="geometry"/>
      </mxCell>
    </object>
    <object label="Console Site Firewall" ComponentGuid="c23f1123-15aa-496a-8910-2ace96d1c82c" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="3" internalLabel="Control Room Firewall" id="74er5_TXb4ZCgvV5zPsg-162">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/firewall.svg;labelBackgroundColor=none;" parent="3" vertex="1">
        <mxGeometry x="386.7034" y="230.4508" width="60" height="51" as="geometry"/>
      </mxCell>
    </object>
    <mxCell id="82" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=#808080;strokeWidth=1;endArrow=none;labelBackgroundColor=#ffffff;" parent="3" edge="1">
      <mxGeometry relative="1" as="geometry">
        <mxPoint x="303.1931999999997" y="255.95080000000007" as="sourcePoint"/>
        <mxPoint x="305.47450000000026" y="255.95080000000007" as="targetPoint"/>
      </mxGeometry>
    </mxCell>
    <object label="Aux I/O" ComponentGuid="8f952cf1-ca6e-46a4-959e-2dc6319e11e1" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="3" id="74er5_TXb4ZCgvV5zPsg-164">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/database_server.svg;labelBackgroundColor=none;imageBackground=#6666FF;strokeWidth=4;imageBorder=#0000CC;" parent="3" vertex="1">
        <mxGeometry x="197.5" y="418" width="43" height="60" as="geometry"/>
      </mxCell>
    </object>
    <object label="Control Site LAN" ComponentGuid="37b736a8-a5b0-4adf-b7b1-b3fbefe6aa7a" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="3" id="18">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/connector.svg;labelBackgroundColor=none;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;" parent="3" vertex="1">
        <mxGeometry x="207.9424" y="245.9508" width="20" height="20" as="geometry"/>
      </mxCell>
    </object>
    <mxCell id="73" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=#808080;strokeWidth=1;endArrow=none;labelBackgroundColor=#ffffff;" parent="3" source="14" target="18" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <mxCell id="107" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeColor=#808080;strokeWidth=1;endArrow=none;labelBackgroundColor=#ffffff;" parent="3" source="18" target="74er5_TXb4ZCgvV5zPsg-162" edge="1">
      <mxGeometry relative="1" as="geometry">
        <mxPoint x="303.1931999999997" y="255.95080000000007" as="targetPoint"/>
      </mxGeometry>
    </mxCell>
    <object ComponentGuid="3cca3871-7b9c-4240-adad-a0a35a7e70b0" Criticality="High" label="Dispatch IP Logger" internalLabel="DB-6" id="74er5_TXb4ZCgvV5zPsg-153">
      <mxCell style="aspect=fixed;html=1;align=center;shadow=0;dashed=0;spacingTop=3;image;image=img/cset/database_server.svg;labelPosition=center;verticalLabelPosition=top;verticalAlign=bottom;whiteSpace=wrap;labelBackgroundColor=none;imageBackground=#6666FF;imageBorder=#0000CC;strokeWidth=4;" parent="3" vertex="1">
        <mxGeometry x="286" y="109" width="43" height="60" as="geometry"/>
      </mxCell>
    </object>
    <mxCell id="74er5_TXb4ZCgvV5zPsg-170" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="3" source="18" target="74er5_TXb4ZCgvV5zPsg-153" edge="1">
      <mxGeometry relative="1" as="geometry">
        <mxPoint x="223" y="246" as="sourcePoint"/>
        <mxPoint x="291" y="334.7627032983421" as="targetPoint"/>
      </mxGeometry>
    </mxCell>
    <object label="NAT Network Address Translation&amp;nbsp;" ComponentGuid="a93040be-8a83-4d06-bd6b-045a29c4b524" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="3" id="74er5_TXb4ZCgvV5zPsg-146">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/connector.svg;labelBackgroundColor=#ffffff;" parent="1" vertex="1">
        <mxGeometry x="346" y="314" width="20" height="20" as="geometry"/>
      </mxCell>
    </object>
    <mxCell id="74er5_TXb4ZCgvV5zPsg-148" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="1" source="74er5_TXb4ZCgvV5zPsg-146" target="14" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <mxCell id="cjdxwiZFUEl386gS18Un-181" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;labelBackgroundColor=none;endArrow=none;strokeColor=#808080;strokeWidth=1;fontSize=11;" parent="1" source="74er5_TXb4ZCgvV5zPsg-146" target="cjdxwiZFUEl386gS18Un-180" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <object label="&amp;nbsp;" ComponentGuid="41409b6b-b639-46cf-8e81-cb488a93599e" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="3" internalLabel="CON-27" id="b0xLSYqVklmmNSaO8BDo-107">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/connector.svg;labelBackgroundColor=#ffffff;" parent="1" vertex="1">
        <mxGeometry x="1286.5" y="210.5" width="20" height="20" as="geometry"/>
      </mxCell>
    </object>
    <object label="&amp;nbsp;" ComponentGuid="5591b625-8c0c-4d20-9c78-294cda1bf230" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="3" internalLabel="CON-27" id="XNDtLr3cqQsbXonp8KkM-112">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/connector.svg;labelBackgroundColor=#ffffff;" parent="1" vertex="1">
        <mxGeometry x="1286.5" y="137.5" width="20" height="20" as="geometry"/>
      </mxCell>
    </object>
    <object label="&amp;nbsp;" ComponentGuid="21cde674-dc41-4bf0-a2c9-e2e9ca1f47b3" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="3" internalLabel="CON-27" id="XNDtLr3cqQsbXonp8KkM-114">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/connector.svg;labelBackgroundColor=#ffffff;" parent="1" vertex="1">
        <mxGeometry x="1286.5" y="37.5" width="20" height="20" as="geometry"/>
      </mxCell>
    </object>
    <object label="&amp;nbsp;" ComponentGuid="7c3c217f-c781-4ff3-b580-894111596000" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="3" internalLabel="CON-27" id="XNDtLr3cqQsbXonp8KkM-116">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/connector.svg;labelBackgroundColor=#ffffff;" parent="1" vertex="1">
        <mxGeometry x="1286.5" y="-47.5" width="20" height="20" as="geometry"/>
      </mxCell>
    </object>
    <object label="&amp;nbsp;" ComponentGuid="389b1445-d01a-472a-9a51-ca96fc904c9d" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="3" internalLabel="CON-27" id="XNDtLr3cqQsbXonp8KkM-118">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/connector.svg;labelBackgroundColor=#ffffff;" parent="1" vertex="1">
        <mxGeometry x="1286.5" y="-133.5" width="20" height="20" as="geometry"/>
      </mxCell>
    </object>
    <object label="&amp;nbsp;" ComponentGuid="783265e3-a041-41cc-bf83-d744ed2ab8a5" HasUniqueQuestions="" IPAddress="" Description="" Criticality="" HostName="" parent="3" internalLabel="CON-27" id="XNDtLr3cqQsbXonp8KkM-108">
      <mxCell style="whiteSpace=wrap;html=1;image;image=img/cset/connector.svg;labelBackgroundColor=#ffffff;" parent="1" vertex="1">
        <mxGeometry x="1286.5" y="286.5" width="20" height="20" as="geometry"/>
      </mxCell>
    </object>
    <mxCell id="XNDtLr3cqQsbXonp8KkM-107" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="1" source="b0xLSYqVklmmNSaO8BDo-107" target="cjdxwiZFUEl386gS18Un-186" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <mxCell id="XNDtLr3cqQsbXonp8KkM-109" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="1" source="b0xLSYqVklmmNSaO8BDo-107" target="XNDtLr3cqQsbXonp8KkM-108" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <mxCell id="XNDtLr3cqQsbXonp8KkM-111" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="1" source="XNDtLr3cqQsbXonp8KkM-108" target="cjdxwiZFUEl386gS18Un-185" edge="1">
      <mxGeometry relative="1" as="geometry">
        <mxPoint x="1386.5" y="324.5" as="targetPoint"/>
      </mxGeometry>
    </mxCell>
    <mxCell id="XNDtLr3cqQsbXonp8KkM-113" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="1" source="b0xLSYqVklmmNSaO8BDo-107" target="XNDtLr3cqQsbXonp8KkM-112" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <mxCell id="XNDtLr3cqQsbXonp8KkM-115" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="1" source="XNDtLr3cqQsbXonp8KkM-112" target="XNDtLr3cqQsbXonp8KkM-114" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <mxCell id="XNDtLr3cqQsbXonp8KkM-117" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="1" source="XNDtLr3cqQsbXonp8KkM-114" target="XNDtLr3cqQsbXonp8KkM-116" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <mxCell id="XNDtLr3cqQsbXonp8KkM-119" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="1" source="XNDtLr3cqQsbXonp8KkM-116" target="XNDtLr3cqQsbXonp8KkM-118" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <mxCell id="XNDtLr3cqQsbXonp8KkM-125" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="1" source="XNDtLr3cqQsbXonp8KkM-114" target="cjdxwiZFUEl386gS18Un-184" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <mxCell id="XNDtLr3cqQsbXonp8KkM-127" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="1" source="XNDtLr3cqQsbXonp8KkM-112" target="cjdxwiZFUEl386gS18Un-187" edge="1">
      <mxGeometry relative="1" as="geometry">
        <mxPoint x="1458.5" y="149.5" as="targetPoint"/>
      </mxGeometry>
    </mxCell>
    <mxCell id="XNDtLr3cqQsbXonp8KkM-120" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="1" source="XNDtLr3cqQsbXonp8KkM-118" target="m-PKMXxfoYSgVNY3it_B-107" edge="1">
      <mxGeometry relative="1" as="geometry">
        <mxPoint x="1343.5" y="-123.80519480519479" as="targetPoint"/>
      </mxGeometry>
    </mxCell>
    <mxCell id="XNDtLr3cqQsbXonp8KkM-124" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="1" source="XNDtLr3cqQsbXonp8KkM-116" target="m-PKMXxfoYSgVNY3it_B-108" edge="1">
      <mxGeometry relative="1" as="geometry">
        <mxPoint x="1468.5" y="-37.92574257425747" as="targetPoint"/>
      </mxGeometry>
    </mxCell>
    <mxCell id="b0xLSYqVklmmNSaO8BDo-108" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;fontColor=#000000;" parent="1" source="cjdxwiZFUEl386gS18Un-156" target="b0xLSYqVklmmNSaO8BDo-107" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <mxCell id="XNDtLr3cqQsbXonp8KkM-129" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;" parent="1" source="XNDtLr3cqQsbXonp8KkM-128" target="cjdxwiZFUEl386gS18Un-158" edge="1">
      <mxGeometry relative="1" as="geometry"/>
    </mxCell>
    <mxCell id="74er5_TXb4ZCgvV5zPsg-172" value="" style="edgeStyle=none;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=none;strokeColor=#808080;exitX=0;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="35" target="74er5_TXb4ZCgvV5zPsg-162" edge="1">
      <mxGeometry relative="1" as="geometry">
        <mxPoint x="880.1558999999997" y="332.29340945677586" as="sourcePoint"/>
      </mxGeometry>
    </mxCell>
  </root>
</mxGraphModel>
' WHERE [Id] = 18

PRINT(N'Add row to [dbo].[GALLERY_ITEM]')
INSERT INTO [dbo].[GALLERY_ITEM] ([Gallery_Item_Guid], [Icon_File_Name_Small], [Icon_File_Name_Large], [Configuration_Setup], [Description], [Configuration_Setup_Client], [Title], [Is_Visible], [CreationDate]) VALUES ('ff43e99b-d6dd-409f-a07f-22f7aa55b9f3', N'CyberFlorida.png', N'CyberFlorida.png', N'{"Sets":["Florida_NCSF_V2"], "QuestionMode":"Questions", "Model":{"ModelName":"CPG"}, "Origin":"CF"}', N'This module was developed on behalf of The Florida Center for Cybersecurity (Cyber Florida). Cyber Florida was created by the State in 2014 to help Florida become a national leader in cybersecurity education, academic and practical research, and community outreach and engagement. The module includes the Ransomware Readiness Assessment and NIST’s Cybersecurity Framework requirements.', NULL, N'Cyber Florida Mid-Level Assessment', 1, '2024-08-28 12:34:46.050')

PRINT(N'Add row to [dbo].[MATURITY_MODELS]')
SET IDENTITY_INSERT [dbo].[MATURITY_MODELS] ON
INSERT INTO [dbo].[MATURITY_MODELS] ([Maturity_Model_Id], [Model_Name], [Answer_Options], [Questions_Alias], [Analytics_Rollup_Level], [Model_Title], [Maturity_Level_Usage_Type]) VALUES (19, N'CMMC2F', NULL, NULL, 1, N'CMMC 2.0 Final', NULL)
SET IDENTITY_INSERT [dbo].[MATURITY_MODELS] OFF

PRINT(N'Add rows to [dbo].[NCSF_CONVERSION_MAPPINGS]')
SET IDENTITY_INSERT [dbo].[NCSF_CONVERSION_MAPPINGS] ON
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (1, N'GV.OC-02', N'1.B,1.C,1.D', N'GV.OC-02,GV.RR,GV.RR-02', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (2, N'GV.RM-05', N'1.G,1.H,1.I', N'GV.RM-05,GV.SC-01,GV.SC-06,GV.SC-09,GV.SC-10', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (3, N'GV.SC-05', N'1.G,1.H,1.I', N'GV.SC-06', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (4, N'ID.RA-01', N'1.E,1.F', N'ID.RA-02', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (5, N'PR.DS-01', N'2.K,2.L,2.M', N'PR.DS-01', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (6, N'', N'2.F,3.A', N'DE.CM-01', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (7, N'', N'1.B,1.C', N'GV.PO,GV.PO-01,GV.PO-02', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (8, N'', N'1.A', N'ID.AM-01', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (9, N'', N'2.S,5.A', N'ID.IM-02,ID.IM-04', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (10, N'', N'1.E', N'ID.RA-01,PR.PS-02,ID.RA-06,ID.RA-08', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (11, N'', N'1.F,3.A', N'ID.RA-03', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (12, N'', N'2.N,2.Q', N'ID.RA-07,PR.PS-01', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (13, N'', N'4.B,4.C', N'ID.RA-08', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (14, N'', N'2.A,2.B,2.C,2.D', N'PR.AA-01,PR.AA-05', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (15, N'', N'2.G,2.H', N'PR.AA-03', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (16, N'', N'2.E', N'PR.AA-05', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (17, N'', N'2.I', N'PR.AT-01', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (18, N'', N'2.J', N'PR.AT-01,PR.AT-02', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (19, N'', N'2.L,2.M', N'PR.DS-02,PR.DS-10', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (20, N'', N'2.V', N'PR.DS-01,PR.PS-01', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (21, N'', N'2.K', N'PR.DS-02', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (22, N'', N'2.R', N'PR.DS-11', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (23, N'', N'2.F', N'PR.IR-01', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (24, N'', N'2.N,2.O,2.P', N'PR.PS-01', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (25, N'', N'2.T,2.U', N'PR.PS-04', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (26, N'', N'5.A', N'RC.RP-01,RC.RP-02', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (27, N'', N'4.A', N'RS.CO-02,RS.CO-04,RS.MA-01,RS.MA-04', 11, N'NCSF_V2')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS] ([Conversion_Id], [Entry_Level_Titles], [Mid_Level_Titles], [Full_Level_Titles], [Maturity_Model_Id], [Set_Name]) VALUES (28, N'', N'2.F,2.W,2.X', N'PR.AA-06,PR.IR-01', 11, N'NCSF_V2')
SET IDENTITY_INSERT [dbo].[NCSF_CONVERSION_MAPPINGS] OFF
PRINT(N'Operation applied to 28 rows out of 28')

PRINT(N'Add rows to [dbo].[NCSF_CONVERSION_MAPPINGS_ENTRY]')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_ENTRY] ([Entry_Level_Titles], [Requirement_Id]) VALUES (N'GV.OC-02', 36479)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_ENTRY] ([Entry_Level_Titles], [Requirement_Id]) VALUES (N'GV.RM-05', 36487)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_ENTRY] ([Entry_Level_Titles], [Requirement_Id]) VALUES (N'GV.SC-05', 36494)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_ENTRY] ([Entry_Level_Titles], [Requirement_Id]) VALUES (N'ID.RA-01', 36409)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_ENTRY] ([Entry_Level_Titles], [Requirement_Id]) VALUES (N'PR.DS-01', 36417)
PRINT(N'Operation applied to 5 rows out of 5')

PRINT(N'Add rows to [dbo].[NCSF_CONVERSION_MAPPINGS_FULL]')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'DE.CM-01', 36424)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'GV.OC-02', 36479)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'GV.PO-01', 36504)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'GV.PO-02', 36505)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'GV.RM-05', 36487)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'GV.RR-02', 36501)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'GV.SC-01', 36490)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'GV.SC-06', 36495)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'GV.SC-09', 36498)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'GV.SC-10', 36499)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'ID.AM-01', 36403)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'ID.IM-02', 36444)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'ID.IM-04', 36446)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'ID.RA-01', 36409)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'ID.RA-02', 36410)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'ID.RA-03', 36411)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'ID.RA-06', 36414)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'ID.RA-07', 36440)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'ID.RA-08', 36441)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'PR.AA-01', 36447)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'PR.AA-03', 36449)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'PR.AA-05', 36451)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'PR.AA-06', 36452)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'PR.AT-01', 36415)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'PR.AT-02', 36416)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'PR.DS-01', 36417)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'PR.DS-02', 36418)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'PR.DS-10', 36453)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'PR.DS-11', 36454)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'PR.IR-01', 36461)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'PR.PS-01', 36455)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'PR.PS-02', 36456)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'PR.PS-04', 36458)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'RC.RP-01', 36433)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'RC.RP-02', 36434)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'RS.CO-02', 36428)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'RS.MA-01', 36468)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_FULL] ([Full_Level_Titles], [Requirement_Id]) VALUES (N'RS.MA-04', 36471)
PRINT(N'Operation applied to 38 rows out of 38')

PRINT(N'Add rows to [dbo].[NCSF_CONVERSION_MAPPINGS_MID]')
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'1.A', 9889)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'1.B', 9896)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'1.C', 9897)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'1.D', 9900)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'1.E', 9901)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'1.F', 9906)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'1.G', 9908)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'1.H', 9909)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'1.I', 9907)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.A', 9898)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.B', 9899)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.C', 9894)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.D', 9895)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.E', 9916)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.F', 9881)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.G', 9883)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.H', 9885)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.I', 9886)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.J', 9884)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.K', 9914)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.L', 9880)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.M', 9882)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.N', 9888)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.O', 9891)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.P', 9913)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.Q', 9887)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.R', 9912)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.S', 9911)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.T', 9892)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.U', 9893)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.V', 9890)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.W', 9904)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'2.X', 9905)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'3.A', 9915)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'4.A', 9902)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'4.B', 9903)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'4.C', 9910)
INSERT INTO [dbo].[NCSF_CONVERSION_MAPPINGS_MID] ([Mid_Level_Titles], [Mat_Question_Id]) VALUES (N'5.A', 9917)
PRINT(N'Operation applied to 38 rows out of 38')

PRINT(N'Add rows to [dbo].[NEW_QUESTION_SETS]')
SET IDENTITY_INSERT [dbo].[NEW_QUESTION_SETS] ON
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60707, N'WMATA', 1)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60708, N'WMATA YR2', 1)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60709, N'WMATA', 5)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60710, N'WMATA YR1', 5)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60711, N'WMATA', 8)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60712, N'WMATA YR2', 8)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60713, N'WMATA', 9)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60714, N'WMATA YR2', 9)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60715, N'WMATA', 12)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60716, N'WMATA', 20)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60717, N'WMATA YR2', 20)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60718, N'WMATA', 23)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60719, N'WMATA YR2', 23)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60720, N'WMATA', 24)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60721, N'WMATA', 26)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60722, N'WMATA', 27)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60723, N'WMATA', 28)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60724, N'WMATA', 29)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60725, N'WMATA', 30)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60726, N'WMATA', 32)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60727, N'WMATA', 33)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60728, N'WMATA', 34)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60729, N'WMATA', 35)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60730, N'WMATA', 36)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60731, N'WMATA', 37)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60732, N'WMATA', 38)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60733, N'WMATA', 39)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60734, N'WMATA', 41)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60735, N'WMATA', 43)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60736, N'WMATA', 44)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60737, N'WMATA', 45)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60738, N'WMATA', 48)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60739, N'WMATA', 49)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60740, N'WMATA', 50)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60741, N'WMATA', 51)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60742, N'WMATA', 52)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60743, N'WMATA', 54)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60744, N'WMATA', 56)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60745, N'WMATA', 57)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60746, N'WMATA', 58)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60747, N'WMATA', 59)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60748, N'WMATA', 60)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60749, N'WMATA', 61)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60750, N'WMATA', 62)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60751, N'WMATA', 63)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60752, N'WMATA', 65)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60753, N'WMATA', 66)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60754, N'WMATA', 68)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60755, N'WMATA YR1', 68)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60756, N'WMATA', 69)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60757, N'WMATA YR3', 69)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60758, N'WMATA', 71)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60759, N'WMATA', 74)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60760, N'WMATA', 75)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60761, N'WMATA YR2', 75)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60762, N'WMATA', 76)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60763, N'WMATA YR2', 76)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60764, N'WMATA', 77)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60765, N'WMATA YR2', 77)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60766, N'WMATA', 78)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60767, N'WMATA YR2', 78)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60768, N'WMATA', 79)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60769, N'WMATA YR2', 79)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60770, N'WMATA', 80)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60771, N'WMATA YR2', 80)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60772, N'WMATA', 81)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60773, N'WMATA YR2', 81)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60774, N'WMATA', 82)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60775, N'WMATA YR2', 82)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60776, N'WMATA', 84)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60777, N'WMATA YR2', 84)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60778, N'WMATA', 85)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60779, N'WMATA YR3', 85)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60780, N'WMATA', 87)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60781, N'WMATA YR3', 87)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60782, N'WMATA', 88)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60783, N'WMATA YR3', 88)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60784, N'WMATA', 89)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60785, N'WMATA YR2', 89)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60786, N'WMATA', 90)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60787, N'WMATA YR3', 90)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60788, N'WMATA', 91)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60789, N'WMATA YR2', 91)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60790, N'WMATA', 92)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60791, N'WMATA YR2', 92)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60792, N'WMATA', 93)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60793, N'WMATA YR2', 93)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60794, N'WMATA', 94)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60795, N'WMATA YR2', 94)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60796, N'WMATA', 95)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60797, N'WMATA YR3', 95)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60798, N'WMATA', 96)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60799, N'WMATA YR3', 96)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60800, N'WMATA', 98)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60801, N'WMATA YR2', 98)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60802, N'WMATA', 99)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60803, N'WMATA YR3', 99)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60804, N'WMATA', 100)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60805, N'WMATA YR3', 100)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60806, N'WMATA', 101)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60807, N'WMATA YR3', 101)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60808, N'WMATA', 102)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60809, N'WMATA YR3', 102)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60810, N'WMATA', 105)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60811, N'WMATA YR2', 105)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60812, N'WMATA', 106)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60813, N'WMATA YR3', 106)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60814, N'WMATA', 107)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60815, N'WMATA YR2', 107)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60816, N'WMATA', 108)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60817, N'WMATA YR2', 108)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60818, N'WMATA', 109)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60819, N'WMATA', 115)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60820, N'WMATA YR3', 115)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60821, N'WMATA', 123)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60822, N'WMATA YR2', 123)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60823, N'WMATA', 124)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60824, N'WMATA YR2', 124)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60825, N'WMATA', 126)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60826, N'WMATA YR3', 126)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60827, N'WMATA', 127)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60828, N'WMATA YR2', 127)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60829, N'WMATA', 130)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60830, N'WMATA YR3', 130)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60831, N'WMATA', 131)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60832, N'WMATA YR2', 131)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60833, N'WMATA', 132)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60834, N'WMATA YR2', 132)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60835, N'WMATA', 133)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60836, N'WMATA YR2', 133)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60837, N'WMATA', 134)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60838, N'WMATA YR2', 134)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60839, N'WMATA', 135)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60840, N'WMATA', 136)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60841, N'WMATA', 137)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60842, N'WMATA', 141)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60843, N'WMATA', 142)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60844, N'WMATA', 143)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60845, N'WMATA YR2', 143)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60846, N'WMATA', 145)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60847, N'WMATA YR2', 145)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60848, N'WMATA', 148)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60849, N'WMATA YR2', 148)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60850, N'WMATA', 152)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60851, N'WMATA YR2', 152)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60852, N'WMATA', 153)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60853, N'WMATA YR2', 153)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60854, N'WMATA', 163)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60855, N'WMATA', 164)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60856, N'WMATA', 165)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60857, N'WMATA', 166)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60858, N'WMATA', 170)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60859, N'WMATA', 171)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60860, N'WMATA', 172)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60861, N'WMATA', 173)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60862, N'WMATA', 174)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60863, N'WMATA YR2', 174)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60864, N'WMATA', 175)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60865, N'WMATA YR2', 175)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60866, N'WMATA', 176)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60867, N'WMATA YR2', 176)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60868, N'WMATA', 178)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60869, N'WMATA', 179)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60870, N'WMATA YR2', 179)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60871, N'WMATA', 180)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60872, N'WMATA', 181)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60873, N'WMATA', 182)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60874, N'WMATA', 184)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60875, N'WMATA', 187)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60876, N'WMATA YR2', 187)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60877, N'WMATA', 192)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60878, N'WMATA YR3', 192)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60879, N'WMATA', 193)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60880, N'WMATA YR3', 193)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60881, N'WMATA', 196)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60882, N'WMATA YR2', 196)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60883, N'WMATA', 197)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60884, N'WMATA YR3', 197)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60885, N'WMATA', 198)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60886, N'WMATA YR3', 198)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60887, N'WMATA', 202)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60888, N'WMATA YR1', 202)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60889, N'WMATA', 205)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60890, N'WMATA YR1', 205)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60891, N'WMATA', 206)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60892, N'WMATA YR1', 206)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60893, N'WMATA', 208)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60894, N'WMATA YR1', 208)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60895, N'WMATA', 209)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60896, N'WMATA YR2', 209)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60897, N'WMATA', 211)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60898, N'WMATA YR1', 211)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60899, N'WMATA', 214)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60900, N'WMATA YR2', 214)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60901, N'WMATA', 215)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60902, N'WMATA YR2', 215)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60903, N'WMATA', 216)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60904, N'WMATA YR2', 216)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60905, N'WMATA', 217)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60906, N'WMATA YR2', 217)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60907, N'WMATA', 219)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60908, N'WMATA YR1', 219)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60909, N'WMATA', 220)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60910, N'WMATA YR1', 220)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60911, N'WMATA', 221)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60912, N'WMATA YR1', 221)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60913, N'WMATA', 222)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60914, N'WMATA YR1', 222)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60915, N'WMATA', 223)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60916, N'WMATA YR1', 223)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60917, N'WMATA', 224)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60918, N'WMATA YR1', 224)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60919, N'WMATA', 225)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60920, N'WMATA YR1', 225)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60921, N'WMATA', 226)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60922, N'WMATA YR1', 226)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60923, N'WMATA', 227)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60924, N'WMATA YR3', 227)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60925, N'WMATA', 231)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60926, N'WMATA YR1', 231)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60927, N'WMATA', 232)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60928, N'WMATA YR1', 232)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60929, N'WMATA', 233)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60930, N'WMATA YR1', 233)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60931, N'WMATA', 234)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60932, N'WMATA YR2', 234)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60933, N'WMATA', 235)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60934, N'WMATA YR1', 235)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60935, N'WMATA', 236)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60936, N'WMATA YR2', 236)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60937, N'WMATA', 237)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60938, N'WMATA YR3', 237)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60939, N'WMATA', 238)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60940, N'WMATA YR3', 238)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60941, N'WMATA', 241)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60942, N'WMATA YR3', 241)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60943, N'WMATA', 243)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60944, N'WMATA YR2', 243)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60945, N'WMATA', 244)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60946, N'WMATA YR3', 244)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60947, N'WMATA', 245)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60948, N'WMATA', 248)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60949, N'WMATA YR1', 248)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60950, N'WMATA', 252)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60951, N'WMATA YR1', 252)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60952, N'WMATA', 254)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60953, N'WMATA YR1', 254)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60954, N'WMATA', 258)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60955, N'WMATA YR1', 258)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60956, N'WMATA', 259)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60957, N'WMATA', 260)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60958, N'WMATA', 261)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60959, N'WMATA YR1', 261)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60960, N'WMATA', 262)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60961, N'WMATA YR2', 262)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60962, N'WMATA', 268)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60963, N'WMATA YR1', 268)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60964, N'WMATA', 269)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60965, N'WMATA YR1', 269)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60966, N'WMATA', 270)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60967, N'WMATA YR1', 270)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60968, N'WMATA', 276)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60969, N'WMATA YR1', 276)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60970, N'WMATA', 277)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60971, N'WMATA YR1', 277)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60972, N'WMATA', 282)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60973, N'WMATA', 290)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60974, N'WMATA YR2', 290)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60975, N'WMATA', 304)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60976, N'WMATA YR3', 304)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60977, N'WMATA', 310)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60978, N'WMATA YR1', 310)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60979, N'WMATA', 311)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60980, N'WMATA YR1', 311)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60981, N'WMATA', 312)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60982, N'WMATA YR1', 312)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60983, N'WMATA', 325)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60984, N'WMATA', 336)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60985, N'WMATA YR1', 336)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60986, N'WMATA', 338)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60987, N'WMATA', 340)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60988, N'WMATA', 344)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60989, N'WMATA', 345)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60990, N'WMATA', 347)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60991, N'WMATA', 352)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60992, N'WMATA YR1', 352)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60993, N'WMATA', 353)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60994, N'WMATA', 360)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60995, N'WMATA YR1', 360)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60996, N'WMATA', 361)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60997, N'WMATA YR1', 361)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60998, N'WMATA', 362)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (60999, N'WMATA YR2', 362)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61000, N'WMATA', 364)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61001, N'WMATA', 385)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61002, N'WMATA', 387)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61003, N'WMATA YR1', 387)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61004, N'WMATA', 388)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61005, N'WMATA YR1', 388)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61006, N'WMATA', 389)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61007, N'WMATA YR1', 389)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61008, N'WMATA', 393)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61009, N'WMATA YR1', 393)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61010, N'WMATA', 395)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61011, N'WMATA YR2', 395)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61012, N'WMATA', 396)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61013, N'WMATA YR2', 396)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61014, N'WMATA', 397)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61015, N'WMATA YR1', 397)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61016, N'WMATA', 403)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61017, N'WMATA YR2', 403)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61018, N'WMATA', 404)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61019, N'WMATA', 406)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61020, N'WMATA', 414)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61021, N'WMATA', 416)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61022, N'WMATA', 418)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61023, N'WMATA', 420)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61024, N'WMATA YR2', 420)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61025, N'WMATA', 424)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61026, N'WMATA YR1', 424)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61027, N'WMATA', 428)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61028, N'WMATA YR2', 428)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61029, N'WMATA', 437)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61030, N'WMATA', 440)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61031, N'WMATA YR1', 440)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61032, N'WMATA', 441)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61033, N'WMATA YR1', 441)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61034, N'WMATA', 442)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61035, N'WMATA YR1', 442)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61036, N'WMATA', 443)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61037, N'WMATA YR1', 443)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61038, N'WMATA', 444)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61039, N'WMATA', 446)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61040, N'WMATA', 450)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61041, N'WMATA YR1', 450)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61042, N'WMATA', 451)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61043, N'WMATA YR1', 451)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61044, N'WMATA', 452)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61045, N'WMATA YR1', 452)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61046, N'WMATA', 453)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61047, N'WMATA YR1', 453)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61048, N'WMATA', 454)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61049, N'WMATA', 455)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61050, N'WMATA', 456)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61051, N'WMATA', 459)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61052, N'WMATA YR1', 459)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61053, N'WMATA', 460)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61054, N'WMATA YR1', 460)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61055, N'WMATA', 464)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61056, N'WMATA', 465)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61057, N'WMATA', 466)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61058, N'WMATA', 467)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61059, N'WMATA', 469)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61060, N'WMATA', 470)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61061, N'WMATA YR2', 470)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61062, N'WMATA', 471)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61063, N'WMATA YR2', 471)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61064, N'WMATA', 474)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61065, N'WMATA YR1', 474)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61066, N'WMATA', 475)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61067, N'WMATA YR1', 475)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61068, N'WMATA', 476)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61069, N'WMATA YR1', 476)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61070, N'WMATA', 477)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61071, N'WMATA YR1', 477)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61072, N'WMATA', 478)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61073, N'WMATA YR1', 478)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61074, N'WMATA', 479)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61075, N'WMATA YR1', 479)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61076, N'WMATA', 480)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61077, N'WMATA YR1', 480)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61078, N'WMATA', 482)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61079, N'WMATA YR2', 482)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61080, N'WMATA', 483)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61081, N'WMATA YR3', 483)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61082, N'WMATA', 487)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61083, N'WMATA YR2', 487)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61084, N'WMATA', 488)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61085, N'WMATA YR2', 488)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61086, N'WMATA', 489)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61087, N'WMATA YR2', 489)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61088, N'WMATA', 490)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61089, N'WMATA YR3', 490)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61090, N'WMATA', 511)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61091, N'WMATA YR2', 511)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61092, N'WMATA', 512)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61093, N'WMATA YR2', 512)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61094, N'WMATA', 513)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61095, N'WMATA YR2', 513)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61096, N'WMATA', 514)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61097, N'WMATA YR3', 514)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61098, N'WMATA', 515)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61099, N'WMATA', 516)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61100, N'WMATA YR2', 516)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61101, N'WMATA', 518)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61102, N'WMATA YR2', 518)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61103, N'WMATA', 519)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61104, N'WMATA YR2', 519)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61105, N'WMATA', 520)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61106, N'WMATA YR2', 520)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61107, N'WMATA', 521)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61108, N'WMATA YR2', 521)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61109, N'WMATA', 522)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61110, N'WMATA YR2', 522)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61111, N'WMATA', 523)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61112, N'WMATA YR3', 523)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61113, N'WMATA', 524)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61114, N'WMATA YR3', 524)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61115, N'WMATA', 525)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61116, N'WMATA YR3', 525)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61117, N'WMATA', 527)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61118, N'WMATA YR3', 527)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61119, N'WMATA', 529)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61120, N'WMATA', 531)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61121, N'WMATA YR1', 531)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61122, N'WMATA', 532)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61123, N'WMATA YR1', 532)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61124, N'WMATA', 533)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61125, N'WMATA YR3', 533)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61126, N'WMATA', 535)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61127, N'WMATA YR3', 535)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61128, N'WMATA', 536)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61129, N'WMATA YR1', 536)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61130, N'WMATA', 537)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61131, N'WMATA YR1', 537)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61132, N'WMATA', 538)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61133, N'WMATA YR1', 538)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61134, N'WMATA', 539)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61135, N'WMATA YR2', 539)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61136, N'WMATA', 540)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61137, N'WMATA YR1', 540)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61138, N'WMATA', 542)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61139, N'WMATA YR3', 542)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61140, N'WMATA', 544)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61141, N'WMATA YR3', 544)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61142, N'WMATA', 547)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61143, N'WMATA YR1', 547)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61144, N'WMATA', 548)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61145, N'WMATA YR1', 548)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61146, N'WMATA', 551)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61147, N'WMATA YR1', 551)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61148, N'WMATA', 552)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61149, N'WMATA YR1', 552)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61150, N'WMATA', 553)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61151, N'WMATA YR2', 553)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61152, N'WMATA', 554)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61153, N'WMATA YR3', 554)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61154, N'WMATA', 557)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61155, N'WMATA YR1', 557)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61156, N'WMATA', 558)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61157, N'WMATA YR1', 558)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61158, N'WMATA', 559)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61159, N'WMATA YR1', 559)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61160, N'WMATA', 560)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61161, N'WMATA YR1', 560)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61162, N'WMATA', 561)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61163, N'WMATA YR2', 561)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61164, N'WMATA', 562)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61165, N'WMATA YR2', 562)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61166, N'WMATA', 565)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61167, N'WMATA YR3', 565)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61168, N'WMATA', 576)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61169, N'WMATA YR1', 576)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61170, N'WMATA', 577)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61171, N'WMATA YR1', 577)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61172, N'WMATA', 578)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61173, N'WMATA YR1', 578)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61174, N'WMATA', 579)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61175, N'WMATA YR1', 579)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61176, N'WMATA', 580)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61177, N'WMATA YR1', 580)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61178, N'WMATA', 581)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61179, N'WMATA YR2', 581)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61180, N'WMATA', 583)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61181, N'WMATA YR3', 583)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61182, N'WMATA', 587)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61183, N'WMATA YR1', 587)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61184, N'WMATA', 588)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61185, N'WMATA YR1', 588)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61186, N'WMATA', 591)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61187, N'WMATA YR1', 591)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61188, N'WMATA', 592)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61189, N'WMATA YR1', 592)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61190, N'WMATA', 593)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61191, N'WMATA YR1', 593)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61192, N'WMATA', 595)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61193, N'WMATA YR1', 595)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61194, N'WMATA', 601)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61195, N'WMATA YR1', 601)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61196, N'WMATA', 603)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61197, N'WMATA YR1', 603)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61198, N'WMATA', 605)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61199, N'WMATA YR1', 605)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61200, N'WMATA', 606)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61201, N'WMATA YR1', 606)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61202, N'WMATA', 607)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61203, N'WMATA YR1', 607)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61204, N'WMATA', 608)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61205, N'WMATA YR1', 608)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61206, N'WMATA', 609)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61207, N'WMATA YR1', 609)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61208, N'WMATA', 610)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61209, N'WMATA YR1', 610)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61210, N'WMATA', 612)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61211, N'WMATA', 614)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61212, N'WMATA', 615)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61213, N'WMATA', 616)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61214, N'WMATA YR1', 616)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61215, N'WMATA', 620)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61216, N'WMATA', 622)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61217, N'WMATA YR1', 622)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61218, N'WMATA', 623)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61219, N'WMATA YR1', 623)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61220, N'WMATA', 630)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61221, N'WMATA YR1', 630)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61222, N'WMATA', 631)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61223, N'WMATA YR1', 631)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61224, N'WMATA', 632)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61225, N'WMATA YR1', 632)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61226, N'WMATA', 634)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61227, N'WMATA', 636)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61228, N'WMATA', 638)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61229, N'WMATA', 640)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61230, N'WMATA YR3', 640)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61231, N'WMATA', 641)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61232, N'WMATA', 643)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61233, N'WMATA YR2', 643)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61234, N'WMATA', 644)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61235, N'WMATA YR3', 644)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61236, N'WMATA', 645)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61237, N'WMATA YR3', 645)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61238, N'WMATA', 646)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61239, N'WMATA YR3', 646)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61240, N'WMATA', 648)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61241, N'WMATA YR3', 648)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61242, N'WMATA', 649)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61243, N'WMATA YR3', 649)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61244, N'WMATA', 650)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61245, N'WMATA YR3', 650)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61246, N'WMATA', 651)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61247, N'WMATA YR3', 651)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61248, N'WMATA', 652)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61249, N'WMATA YR3', 652)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61250, N'WMATA', 654)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61251, N'WMATA YR3', 654)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61252, N'WMATA', 655)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61253, N'WMATA YR3', 655)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61254, N'WMATA', 656)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61255, N'WMATA YR3', 656)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61256, N'WMATA', 657)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61257, N'WMATA YR2', 657)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61258, N'WMATA', 658)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61259, N'WMATA YR2', 658)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61260, N'WMATA', 659)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61261, N'WMATA YR2', 659)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61262, N'WMATA', 660)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61263, N'WMATA YR2', 660)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61264, N'WMATA', 661)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61265, N'WMATA YR2', 661)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61266, N'WMATA', 662)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61267, N'WMATA YR2', 662)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61268, N'WMATA', 663)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61269, N'WMATA YR2', 663)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61270, N'WMATA', 664)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61271, N'WMATA YR2', 664)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61272, N'WMATA', 665)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61273, N'WMATA YR2', 665)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61274, N'WMATA', 666)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61275, N'WMATA YR2', 666)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61276, N'WMATA', 669)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61277, N'WMATA YR2', 669)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61278, N'WMATA', 675)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61279, N'WMATA YR2', 675)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61280, N'WMATA', 677)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61281, N'WMATA YR2', 677)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61282, N'WMATA', 678)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61283, N'WMATA YR2', 678)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61284, N'WMATA', 679)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61285, N'WMATA YR2', 679)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61286, N'WMATA', 680)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61287, N'WMATA YR2', 680)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61288, N'WMATA', 682)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61289, N'WMATA YR2', 682)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61290, N'WMATA', 683)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61291, N'WMATA YR2', 683)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61292, N'WMATA', 684)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61293, N'WMATA YR3', 684)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61294, N'WMATA', 691)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61295, N'WMATA YR3', 691)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61296, N'WMATA', 693)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61297, N'WMATA YR3', 693)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61298, N'WMATA', 694)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61299, N'WMATA YR3', 694)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61300, N'WMATA', 703)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61301, N'WMATA YR1', 703)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61302, N'WMATA', 704)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61303, N'WMATA YR1', 704)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61304, N'WMATA', 705)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61305, N'WMATA YR1', 705)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61306, N'WMATA', 707)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61307, N'WMATA YR2', 707)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61308, N'WMATA', 708)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61309, N'WMATA YR2', 708)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61310, N'WMATA', 709)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61311, N'WMATA YR2', 709)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61312, N'WMATA', 710)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61313, N'WMATA YR3', 710)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61314, N'WMATA', 711)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61315, N'WMATA YR2', 711)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61316, N'WMATA', 712)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61317, N'WMATA YR2', 712)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61318, N'WMATA', 713)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61319, N'WMATA', 716)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61320, N'WMATA', 719)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61321, N'WMATA', 720)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61322, N'WMATA YR2', 720)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61323, N'WMATA', 721)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61324, N'WMATA YR2', 721)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61325, N'WMATA', 722)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61326, N'WMATA YR2', 722)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61327, N'WMATA', 723)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61328, N'WMATA', 724)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61329, N'WMATA', 725)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61330, N'WMATA', 728)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61331, N'WMATA YR2', 728)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61332, N'WMATA', 729)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61333, N'WMATA YR2', 729)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61334, N'WMATA', 730)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61335, N'WMATA YR2', 730)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61336, N'WMATA', 742)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61337, N'WMATA YR3', 742)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61338, N'WMATA', 746)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61339, N'WMATA YR2', 746)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61340, N'WMATA', 747)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61341, N'WMATA YR2', 747)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61342, N'WMATA', 748)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61343, N'WMATA YR2', 748)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61344, N'WMATA', 749)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61345, N'WMATA YR2', 749)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61346, N'WMATA', 750)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61347, N'WMATA YR3', 750)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61348, N'WMATA', 751)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61349, N'WMATA YR3', 751)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61350, N'WMATA', 752)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61351, N'WMATA YR1', 752)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61352, N'WMATA', 753)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61353, N'WMATA YR2', 753)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61354, N'WMATA', 754)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61355, N'WMATA YR2', 754)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61356, N'WMATA', 755)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61357, N'WMATA YR2', 755)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61358, N'WMATA', 758)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61359, N'WMATA YR2', 758)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61360, N'WMATA', 759)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61361, N'WMATA YR1', 759)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61362, N'WMATA', 760)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61363, N'WMATA YR1', 760)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61364, N'WMATA', 761)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61365, N'WMATA YR1', 761)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61366, N'WMATA', 762)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61367, N'WMATA YR1', 762)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61368, N'WMATA', 763)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61369, N'WMATA YR1', 763)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61370, N'WMATA', 764)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61371, N'WMATA', 766)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61372, N'WMATA YR2', 766)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61373, N'WMATA', 772)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61374, N'WMATA YR3', 772)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61375, N'WMATA', 773)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61376, N'WMATA YR1', 773)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61377, N'WMATA', 774)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61378, N'WMATA YR1', 774)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61379, N'WMATA', 775)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61380, N'WMATA YR1', 775)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61381, N'WMATA', 779)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61382, N'WMATA YR1', 779)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61383, N'WMATA', 780)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61384, N'WMATA YR1', 780)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61385, N'WMATA', 782)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61386, N'WMATA YR1', 782)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61387, N'WMATA', 783)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61388, N'WMATA YR1', 783)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61389, N'WMATA', 784)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61390, N'WMATA YR1', 784)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61391, N'WMATA', 785)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61392, N'WMATA YR2', 785)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61393, N'WMATA', 786)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61394, N'WMATA YR2', 786)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61395, N'WMATA', 788)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61396, N'WMATA YR1', 788)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61397, N'WMATA', 790)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61398, N'WMATA YR2', 790)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61399, N'WMATA', 794)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61400, N'WMATA YR1', 794)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61401, N'WMATA', 797)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61402, N'WMATA YR1', 797)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61403, N'WMATA', 799)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61404, N'WMATA YR2', 799)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61405, N'WMATA', 800)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61406, N'WMATA YR3', 800)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61407, N'WMATA', 801)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61408, N'WMATA YR1', 801)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61409, N'WMATA', 812)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61410, N'WMATA YR1', 812)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61411, N'WMATA', 814)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61412, N'WMATA YR1', 814)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61413, N'WMATA', 815)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61414, N'WMATA YR1', 815)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61415, N'WMATA', 816)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61416, N'WMATA YR2', 816)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61417, N'WMATA', 818)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61418, N'WMATA YR1', 818)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61419, N'WMATA', 895)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61420, N'WMATA YR1', 895)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61421, N'WMATA', 991)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61422, N'WMATA YR3', 991)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61423, N'WMATA', 1217)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61424, N'WMATA', 1244)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61425, N'WMATA YR1', 1244)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61426, N'WMATA', 1259)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61427, N'WMATA YR1', 1259)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61428, N'WMATA', 1260)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61429, N'WMATA YR2', 1260)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61430, N'WMATA', 1269)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61431, N'WMATA YR1', 1269)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61432, N'WMATA', 1280)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61433, N'WMATA YR1', 1280)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61434, N'WMATA', 1282)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61435, N'WMATA YR3', 1282)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61436, N'WMATA', 1283)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61437, N'WMATA YR3', 1283)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61438, N'WMATA', 1284)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61439, N'WMATA YR2', 1284)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61440, N'WMATA', 1292)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61441, N'WMATA YR2', 1292)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61442, N'WMATA', 1293)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61443, N'WMATA YR2', 1293)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61444, N'WMATA', 1297)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61445, N'WMATA YR2', 1297)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61446, N'WMATA', 1301)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61447, N'WMATA YR1', 1301)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61448, N'WMATA', 1302)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61449, N'WMATA YR1', 1302)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61450, N'WMATA', 1304)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61451, N'WMATA YR3', 1304)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61452, N'WMATA', 1308)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61453, N'WMATA YR1', 1308)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61454, N'WMATA', 1309)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61455, N'WMATA', 1310)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61456, N'WMATA YR2', 1310)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61457, N'WMATA', 1311)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61458, N'WMATA YR2', 1311)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61459, N'WMATA', 1312)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61460, N'WMATA YR3', 1312)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61461, N'WMATA', 1313)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61462, N'WMATA YR3', 1313)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61463, N'WMATA', 1314)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61464, N'WMATA YR3', 1314)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61465, N'WMATA', 1315)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61466, N'WMATA YR2', 1315)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61467, N'WMATA', 1316)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61468, N'WMATA YR2', 1316)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61469, N'WMATA', 1321)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61470, N'WMATA YR3', 1321)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61471, N'WMATA', 1324)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61472, N'WMATA YR2', 1324)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61473, N'WMATA', 1326)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61474, N'WMATA YR1', 1326)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61475, N'WMATA', 1327)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61476, N'WMATA YR1', 1327)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61477, N'WMATA', 1328)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61478, N'WMATA YR1', 1328)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61479, N'WMATA', 1329)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61480, N'WMATA YR1', 1329)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61481, N'WMATA', 1330)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61482, N'WMATA YR1', 1330)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61483, N'WMATA', 1334)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61484, N'WMATA YR1', 1334)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61485, N'WMATA', 1336)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61486, N'WMATA YR3', 1336)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61487, N'WMATA', 1337)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61488, N'WMATA YR3', 1337)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61489, N'WMATA', 1338)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61490, N'WMATA YR3', 1338)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61491, N'WMATA', 1346)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61492, N'WMATA YR3', 1346)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61493, N'WMATA', 1352)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61494, N'WMATA YR2', 1352)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61495, N'WMATA', 1356)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61496, N'WMATA YR3', 1356)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61497, N'WMATA', 1358)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61498, N'WMATA', 1367)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61499, N'WMATA', 1368)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61500, N'WMATA', 1369)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61501, N'WMATA', 1378)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61502, N'WMATA', 1384)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61503, N'WMATA YR1', 1384)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61504, N'WMATA', 1392)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61505, N'WMATA', 1405)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61506, N'WMATA', 1406)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61507, N'WMATA', 1407)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61508, N'WMATA', 1416)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61509, N'WMATA', 1421)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61510, N'WMATA YR2', 1421)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61511, N'WMATA', 1468)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61512, N'WMATA YR3', 1468)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61513, N'WMATA', 1840)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61514, N'WMATA YR2', 1840)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61515, N'WMATA', 1853)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61516, N'WMATA YR1', 1853)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61517, N'WMATA', 1854)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61518, N'WMATA YR1', 1854)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61519, N'WMATA', 1865)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61520, N'WMATA YR3', 1865)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61521, N'WMATA', 1871)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61522, N'WMATA YR2', 1871)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61523, N'WMATA', 1872)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61524, N'WMATA YR2', 1872)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61525, N'WMATA', 1873)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61526, N'WMATA YR2', 1873)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61527, N'WMATA', 1874)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61528, N'WMATA YR2', 1874)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61529, N'WMATA', 1875)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61530, N'WMATA YR2', 1875)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61531, N'WMATA', 1877)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61532, N'WMATA YR3', 1877)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61533, N'WMATA', 1878)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61534, N'WMATA YR3', 1878)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61535, N'WMATA', 1882)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61536, N'WMATA YR3', 1882)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61537, N'WMATA', 1883)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61538, N'WMATA YR3', 1883)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61539, N'WMATA', 1885)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61540, N'WMATA YR2', 1885)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61541, N'WMATA', 1886)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61542, N'WMATA YR2', 1886)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61543, N'WMATA', 1889)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61544, N'WMATA YR2', 1889)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61545, N'WMATA', 1890)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61546, N'WMATA YR2', 1890)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61547, N'WMATA', 1891)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61548, N'WMATA YR2', 1891)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61549, N'WMATA', 1892)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61550, N'WMATA YR2', 1892)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61551, N'WMATA', 1893)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61552, N'WMATA YR2', 1893)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61553, N'WMATA', 1894)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61554, N'WMATA YR3', 1894)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61555, N'WMATA', 1896)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61556, N'WMATA YR3', 1896)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61557, N'WMATA', 1899)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61558, N'WMATA YR2', 1899)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61559, N'WMATA', 1900)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61560, N'WMATA YR3', 1900)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61561, N'WMATA', 1902)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61562, N'WMATA YR2', 1902)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61563, N'WMATA', 1903)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61564, N'WMATA YR2', 1903)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61565, N'WMATA', 1904)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61566, N'WMATA YR3', 1904)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61567, N'WMATA', 1905)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61568, N'WMATA YR3', 1905)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61569, N'WMATA', 1906)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61570, N'WMATA YR2', 1906)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61571, N'WMATA', 1908)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61572, N'WMATA YR3', 1908)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61573, N'WMATA', 1911)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61574, N'WMATA', 1913)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61575, N'WMATA', 1916)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61576, N'WMATA YR3', 1916)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61577, N'WMATA', 1917)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61578, N'WMATA YR1', 1917)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61579, N'WMATA', 1920)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61580, N'WMATA', 1927)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61581, N'WMATA YR3', 1927)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61582, N'WMATA', 1939)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61583, N'WMATA YR2', 1939)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61584, N'WMATA', 1946)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61585, N'WMATA YR1', 1946)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61586, N'WMATA', 1947)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61587, N'WMATA YR3', 1947)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61588, N'WMATA', 1948)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61589, N'WMATA', 1950)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61590, N'WMATA', 1951)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61591, N'WMATA', 1952)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61592, N'WMATA', 1967)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61593, N'WMATA YR2', 1967)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61594, N'WMATA', 1968)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61595, N'WMATA', 1969)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61596, N'WMATA', 1970)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61597, N'WMATA', 1971)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61598, N'WMATA', 1972)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61599, N'WMATA', 1974)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61600, N'WMATA', 1975)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61601, N'WMATA', 1981)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61602, N'WMATA', 1984)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61603, N'WMATA', 1985)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61604, N'WMATA', 1987)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61605, N'WMATA', 1995)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61606, N'WMATA YR2', 1995)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61607, N'WMATA', 2006)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61608, N'WMATA', 2007)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61609, N'WMATA', 2013)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61610, N'WMATA', 2022)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61611, N'WMATA', 2804)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61612, N'WMATA', 2819)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61613, N'WMATA', 2820)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61614, N'WMATA', 2821)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61615, N'WMATA', 2839)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61616, N'WMATA', 2841)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61617, N'WMATA', 2853)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61618, N'WMATA', 2854)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61619, N'WMATA', 2867)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61620, N'WMATA', 3848)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61621, N'WMATA', 3875)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61622, N'WMATA', 3876)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61623, N'WMATA', 3944)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61624, N'WMATA', 9716)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61625, N'WMATA', 9718)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61626, N'WMATA', 9726)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61627, N'WMATA YR1', 9726)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61628, N'WMATA', 9727)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61629, N'WMATA YR1', 9727)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61630, N'WMATA', 9729)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61631, N'WMATA YR1', 9729)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61632, N'WMATA', 9730)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61633, N'WMATA YR1', 9730)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61634, N'WMATA', 9732)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61635, N'WMATA YR1', 9732)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61636, N'WMATA', 9737)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61637, N'WMATA YR1', 9737)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61638, N'WMATA', 9738)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61639, N'WMATA YR1', 9738)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61640, N'WMATA', 9745)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61641, N'WMATA YR1', 9745)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61642, N'WMATA', 9747)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61643, N'WMATA YR1', 9747)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61644, N'WMATA', 9769)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61645, N'WMATA YR1', 9769)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61646, N'WMATA', 9770)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61647, N'WMATA YR1', 9770)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61648, N'WMATA', 9771)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61649, N'WMATA YR1', 9771)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61650, N'WMATA', 9772)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61651, N'WMATA YR1', 9772)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61652, N'WMATA', 9773)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61653, N'WMATA YR1', 9773)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61654, N'WMATA', 9791)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61655, N'WMATA YR2', 9791)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61656, N'WMATA', 9792)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61657, N'WMATA YR1', 9792)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61658, N'WMATA', 9793)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61659, N'WMATA YR1', 9793)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61660, N'WMATA', 9794)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61661, N'WMATA YR1', 9794)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61662, N'WMATA', 9795)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61663, N'WMATA YR1', 9795)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61664, N'WMATA', 9821)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61665, N'WMATA YR1', 9821)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61666, N'WMATA', 9823)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61667, N'WMATA YR1', 9823)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61668, N'WMATA', 9824)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61669, N'WMATA YR1', 9824)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61670, N'WMATA', 9827)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61671, N'WMATA YR1', 9827)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61672, N'WMATA', 9829)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61673, N'WMATA YR1', 9829)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61674, N'WMATA', 9832)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61675, N'WMATA YR1', 9832)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61676, N'WMATA', 9833)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61677, N'WMATA YR1', 9833)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61678, N'WMATA', 9837)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61679, N'WMATA YR2', 9837)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61680, N'WMATA', 9838)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61681, N'WMATA YR2', 9838)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61682, N'WMATA', 9845)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61683, N'WMATA', 9847)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61684, N'WMATA YR1', 9847)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61685, N'WMATA', 9848)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61686, N'WMATA YR1', 9848)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61687, N'WMATA', 9849)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61688, N'WMATA YR1', 9849)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61689, N'WMATA', 9850)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61690, N'WMATA YR2', 9850)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61691, N'WMATA', 9851)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61692, N'WMATA YR2', 9851)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61693, N'WMATA', 9852)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61694, N'WMATA YR2', 9852)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61695, N'WMATA', 9853)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61696, N'WMATA YR2', 9853)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61697, N'WMATA', 9855)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61698, N'WMATA YR1', 9855)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61699, N'WMATA', 9856)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61700, N'WMATA YR1', 9856)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61701, N'WMATA', 9857)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61702, N'WMATA YR1', 9857)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61703, N'WMATA', 9859)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61704, N'WMATA YR2', 9859)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61705, N'WMATA', 9860)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61706, N'WMATA YR2', 9860)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61707, N'WMATA', 9862)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61708, N'WMATA YR2', 9862)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61709, N'WMATA', 9863)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61710, N'WMATA YR2', 9863)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61711, N'WMATA', 9864)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61712, N'WMATA YR2', 9864)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61713, N'WMATA', 9865)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61714, N'WMATA YR2', 9865)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61715, N'WMATA', 9866)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61716, N'WMATA YR2', 9866)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61717, N'WMATA', 9868)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61718, N'WMATA YR2', 9868)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61719, N'WMATA', 9869)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61720, N'WMATA YR2', 9869)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61721, N'WMATA', 9870)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61722, N'WMATA YR2', 9870)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61723, N'WMATA', 9871)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61724, N'WMATA YR2', 9871)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61725, N'WMATA', 9882)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61726, N'WMATA', 9888)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61727, N'WMATA YR3', 9888)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61728, N'WMATA', 9897)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61729, N'WMATA', 9913)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61730, N'WMATA YR1', 9913)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61731, N'WMATA', 9932)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61732, N'WMATA YR2', 9932)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61733, N'WMATA', 9949)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61734, N'WMATA YR2', 9949)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61735, N'WMATA', 9951)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61736, N'WMATA YR1', 9951)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61737, N'WMATA', 9952)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61738, N'WMATA YR1', 9952)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61739, N'WMATA', 9961)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61740, N'WMATA', 9985)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61741, N'WMATA YR2', 9985)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61742, N'WMATA', 9986)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61743, N'WMATA YR2', 9986)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61744, N'WMATA', 9997)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61745, N'WMATA', 10011)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61746, N'WMATA YR3', 10011)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61747, N'WMATA', 10032)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61748, N'WMATA', 10033)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61749, N'WMATA', 10036)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61750, N'WMATA YR2', 10036)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61751, N'WMATA', 10037)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61752, N'WMATA YR2', 10037)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61753, N'WMATA', 10038)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61754, N'WMATA YR2', 10038)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61755, N'WMATA', 10039)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61756, N'WMATA YR2', 10039)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61757, N'WMATA', 10042)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61758, N'WMATA YR2', 10042)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61759, N'WMATA', 10059)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61760, N'WMATA', 10078)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61761, N'WMATA YR3', 10078)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61762, N'WMATA', 10081)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61763, N'WMATA YR1', 10081)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61764, N'WMATA', 10237)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61765, N'WMATA', 10240)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61766, N'WMATA YR1', 10240)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61767, N'WMATA', 10307)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61768, N'WMATA YR1', 10307)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61769, N'WMATA', 10322)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61770, N'WMATA YR3', 10322)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61771, N'WMATA', 10323)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61772, N'WMATA YR3', 10323)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61773, N'WMATA', 10337)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61774, N'WMATA', 10339)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61775, N'WMATA YR2', 10339)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61776, N'WMATA', 10340)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61777, N'WMATA YR2', 10340)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61778, N'WMATA', 10351)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61779, N'WMATA YR2', 10351)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61780, N'WMATA', 10365)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61781, N'WMATA YR1', 10365)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61782, N'WMATA', 10408)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61783, N'WMATA', 10455)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61784, N'WMATA', 10466)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61785, N'WMATA YR1', 10466)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61786, N'WMATA', 10477)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61787, N'WMATA', 10513)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61788, N'WMATA YR2', 10513)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61789, N'WMATA', 10514)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61790, N'WMATA YR2', 10514)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61791, N'WMATA', 10564)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61792, N'WMATA YR2', 10564)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61793, N'WMATA', 10565)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61794, N'WMATA YR2', 10565)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61795, N'WMATA', 10566)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61796, N'WMATA YR2', 10566)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61797, N'WMATA', 10567)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61798, N'WMATA YR2', 10567)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61799, N'WMATA', 10568)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61800, N'WMATA YR2', 10568)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61801, N'WMATA', 10573)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61802, N'WMATA', 10574)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61803, N'WMATA', 10579)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61804, N'WMATA', 10597)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61805, N'WMATA', 10644)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61806, N'WMATA', 10695)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61807, N'WMATA', 10697)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61808, N'WMATA', 10703)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61809, N'WMATA', 10713)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61810, N'WMATA YR2', 10713)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61811, N'WMATA', 10744)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61812, N'WMATA', 10765)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61813, N'WMATA', 10798)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61814, N'WMATA', 10799)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61815, N'WMATA', 10813)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61816, N'WMATA', 10835)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61817, N'WMATA', 10837)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61818, N'WMATA', 10872)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61819, N'WMATA YR1', 10872)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61820, N'WMATA', 10963)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61821, N'WMATA YR2', 10963)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61822, N'WMATA', 11061)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61823, N'WMATA', 11216)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61824, N'WMATA YR2', 11216)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61825, N'WMATA', 11218)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61826, N'WMATA YR1', 11218)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61827, N'WMATA', 11236)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61828, N'WMATA YR1', 11236)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61829, N'WMATA', 11258)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61830, N'WMATA YR2', 11258)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61831, N'WMATA', 11278)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61832, N'WMATA YR1', 11278)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61833, N'WMATA', 11279)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61834, N'WMATA YR1', 11279)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61835, N'WMATA', 11288)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61836, N'WMATA YR1', 11288)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61837, N'WMATA', 11291)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61838, N'WMATA YR1', 11291)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61839, N'WMATA', 11303)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61840, N'WMATA YR2', 11303)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61841, N'WMATA', 11306)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61842, N'WMATA YR2', 11306)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61843, N'WMATA', 11366)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61844, N'WMATA YR2', 11366)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61845, N'WMATA', 11369)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61846, N'WMATA YR2', 11369)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61847, N'WMATA', 11410)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61848, N'WMATA YR1', 11410)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61849, N'WMATA', 11433)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61850, N'WMATA YR2', 11433)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61851, N'WMATA', 11434)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61852, N'WMATA', 11445)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61853, N'WMATA YR3', 11445)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61854, N'WMATA', 11488)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61855, N'WMATA YR2', 11488)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61856, N'WMATA', 11492)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61857, N'WMATA YR3', 11492)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61858, N'WMATA', 11616)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61859, N'WMATA YR3', 11616)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61860, N'WMATA', 11623)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61861, N'WMATA YR3', 11623)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61862, N'WMATA', 11625)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61863, N'WMATA YR3', 11625)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61864, N'WMATA', 11633)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61865, N'WMATA YR2', 11633)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61866, N'WMATA', 11634)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61867, N'WMATA YR2', 11634)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61868, N'WMATA', 11697)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61869, N'WMATA YR3', 11697)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61870, N'WMATA', 11700)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61871, N'WMATA YR2', 11700)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61872, N'WMATA', 11731)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61873, N'WMATA YR3', 11731)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61874, N'WMATA', 11732)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61875, N'WMATA YR3', 11732)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61876, N'WMATA', 11733)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61877, N'WMATA YR3', 11733)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61878, N'WMATA', 11792)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61879, N'WMATA YR3', 11792)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61880, N'WMATA', 11843)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61881, N'WMATA YR3', 11843)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61882, N'WMATA', 11921)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61883, N'WMATA', 11923)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61884, N'WMATA', 12080)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61885, N'WMATA YR2', 12080)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61886, N'WMATA', 12153)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61887, N'WMATA', 12169)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61888, N'WMATA YR1', 12169)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61889, N'WMATA', 12232)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61890, N'WMATA YR1', 12232)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61891, N'WMATA', 12237)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61892, N'WMATA YR1', 12237)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61893, N'WMATA', 12238)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61894, N'WMATA YR1', 12238)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61895, N'WMATA', 12239)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61896, N'WMATA YR1', 12239)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61897, N'WMATA', 12258)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61898, N'WMATA', 12259)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61899, N'WMATA', 12260)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61900, N'WMATA', 12275)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61901, N'WMATA', 12276)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61902, N'WMATA', 12281)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61903, N'WMATA', 12282)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61904, N'WMATA', 12340)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61905, N'WMATA', 12341)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61906, N'WMATA', 12342)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61907, N'WMATA', 12343)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61908, N'WMATA', 12349)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61909, N'WMATA', 12357)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61910, N'WMATA', 12358)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61911, N'WMATA', 12401)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61912, N'WMATA', 12412)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61913, N'WMATA', 12413)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61914, N'WMATA', 12451)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61915, N'WMATA YR2', 12451)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61916, N'WMATA', 12456)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61917, N'WMATA YR1', 12456)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61918, N'WMATA', 12486)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61919, N'WMATA', 12505)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61920, N'WMATA YR3', 12505)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61921, N'WMATA', 12522)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61922, N'WMATA YR3', 12522)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61923, N'WMATA', 12596)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61924, N'WMATA', 12668)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61925, N'WMATA YR3', 12668)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61926, N'WMATA', 12669)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61927, N'WMATA', 12748)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61928, N'WMATA YR3', 12748)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61929, N'WMATA', 12835)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61930, N'WMATA YR3', 12835)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61931, N'WMATA', 12890)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61932, N'WMATA', 12892)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61933, N'WMATA', 12896)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61934, N'WMATA', 12898)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61935, N'WMATA', 12900)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61936, N'WMATA', 12901)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61937, N'WMATA', 12902)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61938, N'WMATA', 12905)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61939, N'WMATA', 12908)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61940, N'WMATA', 12925)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61941, N'WMATA', 12957)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61942, N'WMATA', 12958)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61943, N'WMATA', 12959)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61944, N'WMATA', 12960)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61945, N'WMATA', 12961)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61946, N'WMATA', 13009)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61947, N'WMATA', 13019)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61948, N'WMATA', 13023)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61949, N'WMATA', 13039)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61950, N'WMATA YR1', 13039)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61951, N'WMATA', 13040)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61952, N'WMATA YR1', 13040)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61953, N'WMATA', 13044)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61954, N'WMATA', 13045)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61955, N'WMATA', 13054)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61956, N'WMATA', 13117)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61957, N'WMATA', 13119)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61958, N'WMATA', 13182)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61959, N'WMATA YR1', 13182)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61960, N'WMATA', 13185)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61961, N'WMATA YR1', 13185)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61962, N'WMATA', 13200)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61963, N'WMATA', 13233)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61964, N'WMATA YR2', 13233)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61965, N'WMATA', 13248)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61966, N'WMATA', 13280)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61967, N'WMATA', 13281)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61968, N'WMATA', 13282)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61969, N'WMATA', 13290)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61970, N'WMATA', 13331)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61971, N'WMATA', 13337)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61972, N'WMATA', 13340)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61973, N'WMATA', 15979)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61974, N'WMATA', 15980)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61975, N'WMATA', 15981)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61976, N'WMATA', 15985)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61977, N'WMATA', 15990)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61978, N'WMATA YR1', 15990)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61979, N'WMATA', 15992)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61980, N'WMATA YR1', 15992)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61981, N'WMATA', 15993)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61982, N'WMATA', 15998)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61983, N'WMATA', 15999)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61984, N'WMATA', 16000)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61985, N'WMATA', 16003)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61986, N'WMATA', 16004)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61987, N'WMATA', 16005)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61988, N'WMATA', 16006)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61989, N'WMATA YR2', 16006)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61990, N'WMATA', 16009)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61991, N'WMATA YR2', 16009)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61992, N'WMATA', 16010)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61993, N'WMATA YR2', 16010)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61994, N'WMATA', 16014)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61995, N'WMATA YR3', 16014)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61996, N'WMATA', 16015)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61997, N'WMATA YR3', 16015)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61998, N'WMATA', 16017)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (61999, N'WMATA', 16018)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62000, N'WMATA', 16019)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62001, N'WMATA', 16022)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62002, N'WMATA YR3', 16022)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62003, N'WMATA', 16023)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62004, N'WMATA YR3', 16023)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62005, N'WMATA', 16024)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62006, N'WMATA YR3', 16024)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62007, N'WMATA', 16025)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62008, N'WMATA YR3', 16025)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62009, N'WMATA', 16026)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62010, N'WMATA', 16027)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62011, N'WMATA', 16028)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62012, N'WMATA', 16029)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62013, N'WMATA YR2', 16029)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62014, N'WMATA', 16030)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62015, N'WMATA', 16031)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62016, N'WMATA', 16033)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62017, N'WMATA YR1', 16033)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62018, N'WMATA', 16037)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62019, N'WMATA YR3', 16037)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62020, N'WMATA', 16040)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62021, N'WMATA YR3', 16040)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62022, N'WMATA', 16041)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62023, N'WMATA YR3', 16041)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62024, N'WMATA', 16042)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62025, N'WMATA YR3', 16042)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62026, N'WMATA', 16043)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62027, N'WMATA YR3', 16043)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62028, N'WMATA', 16044)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62029, N'WMATA YR3', 16044)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62030, N'WMATA', 16045)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62031, N'WMATA YR3', 16045)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62032, N'WMATA', 16046)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62033, N'WMATA YR3', 16046)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62034, N'WMATA', 16055)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62035, N'WMATA', 16056)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62036, N'WMATA', 16058)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62037, N'WMATA', 16059)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62038, N'WMATA', 16063)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62039, N'WMATA YR1', 16063)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62040, N'WMATA', 16064)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62041, N'WMATA YR3', 16064)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62042, N'WMATA', 16065)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62043, N'WMATA', 16066)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62044, N'WMATA', 16067)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62045, N'WMATA', 16068)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62046, N'WMATA', 16069)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62047, N'WMATA', 16070)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62048, N'WMATA YR1', 16070)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62049, N'WMATA', 16071)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62050, N'WMATA', 16072)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62051, N'WMATA', 16079)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62052, N'WMATA', 16080)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62053, N'WMATA', 16082)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62054, N'WMATA YR3', 16082)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62055, N'WMATA', 16083)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62056, N'WMATA', 16084)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62057, N'WMATA', 16085)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62058, N'WMATA', 16086)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62059, N'WMATA', 16087)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62060, N'WMATA', 16088)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62061, N'WMATA', 16089)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62062, N'WMATA', 16090)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62063, N'WMATA', 16091)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62064, N'WMATA', 16092)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62065, N'WMATA', 16093)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62066, N'WMATA', 16094)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62067, N'WMATA', 16095)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62068, N'WMATA', 16096)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62069, N'WMATA', 16097)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62070, N'WMATA', 16098)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62071, N'WMATA', 16103)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62072, N'WMATA', 16104)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62073, N'WMATA', 16105)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62074, N'WMATA', 16106)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62075, N'WMATA', 16107)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62076, N'WMATA', 16109)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62077, N'WMATA', 16110)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62078, N'WMATA', 16111)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62079, N'WMATA', 16112)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62080, N'WMATA', 16113)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62081, N'WMATA', 16114)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62082, N'WMATA', 16115)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62083, N'WMATA', 16116)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62084, N'WMATA', 16117)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62085, N'WMATA', 16119)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62086, N'WMATA YR2', 16119)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62087, N'WMATA', 16120)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62088, N'WMATA YR2', 16120)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62089, N'WMATA', 16121)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62090, N'WMATA', 16122)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62091, N'WMATA', 16123)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62092, N'WMATA YR1', 16123)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62093, N'WMATA', 16124)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62094, N'WMATA', 16125)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62095, N'WMATA', 16126)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62096, N'WMATA', 16127)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62097, N'WMATA', 16128)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62098, N'WMATA', 16129)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62099, N'WMATA', 16130)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62100, N'WMATA', 16131)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62101, N'WMATA', 16133)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62102, N'WMATA', 16134)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62103, N'WMATA YR2', 16134)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62104, N'WMATA', 16139)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62105, N'WMATA', 16140)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62106, N'WMATA', 16141)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62107, N'WMATA', 16142)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62108, N'WMATA', 16143)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62109, N'WMATA', 16145)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62110, N'WMATA', 16146)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62111, N'WMATA', 16147)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62112, N'WMATA', 16148)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62113, N'WMATA', 16151)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62114, N'WMATA YR2', 16151)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62115, N'WMATA', 16155)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62116, N'WMATA', 16156)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62117, N'WMATA', 16157)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62118, N'WMATA YR1', 16157)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62119, N'WMATA', 16164)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62120, N'WMATA YR1', 16164)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62121, N'WMATA', 16165)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62122, N'WMATA YR1', 16165)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62123, N'WMATA', 16168)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62124, N'WMATA', 17057)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62125, N'WMATA', 17058)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62126, N'WMATA YR1', 17058)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62127, N'WMATA', 17059)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62128, N'WMATA YR1', 17059)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62129, N'WMATA', 17060)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62130, N'WMATA YR1', 17060)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62131, N'WMATA', 17061)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62132, N'WMATA YR1', 17061)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62133, N'WMATA', 17062)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62134, N'WMATA YR1', 17062)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62135, N'WMATA', 17081)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62136, N'WMATA YR1', 17081)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62137, N'WMATA', 17083)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62138, N'WMATA YR1', 17083)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62139, N'WMATA', 17084)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62140, N'WMATA YR2', 17084)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62141, N'WMATA', 17085)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62142, N'WMATA YR2', 17085)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62143, N'WMATA', 17086)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62144, N'WMATA YR2', 17086)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62145, N'WMATA', 17087)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62146, N'WMATA YR3', 17087)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62147, N'WMATA', 17091)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62148, N'WMATA YR3', 17091)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62149, N'WMATA', 17092)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62150, N'WMATA YR3', 17092)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62151, N'WMATA', 17093)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62152, N'WMATA', 17095)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62153, N'WMATA YR1', 17095)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62154, N'WMATA', 17097)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62155, N'WMATA YR2', 17097)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62156, N'WMATA', 17101)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62157, N'WMATA YR1', 17101)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62158, N'WMATA', 17103)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62159, N'WMATA YR3', 17103)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62160, N'WMATA', 17106)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62161, N'WMATA YR3', 17106)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62162, N'WMATA', 17107)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62163, N'WMATA YR3', 17107)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62164, N'WMATA', 17108)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62165, N'WMATA YR3', 17108)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62166, N'WMATA', 17112)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62167, N'WMATA YR1', 17112)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62168, N'WMATA', 17114)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62169, N'WMATA YR2', 17114)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62170, N'WMATA', 17115)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62171, N'WMATA YR2', 17115)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62172, N'WMATA', 17120)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62173, N'WMATA YR3', 17120)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62174, N'WMATA', 17121)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62175, N'WMATA YR3', 17121)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62176, N'WMATA', 17122)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62177, N'WMATA YR2', 17122)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62178, N'WMATA', 17123)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62179, N'WMATA', 17124)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62180, N'WMATA YR2', 17124)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62181, N'WMATA', 17129)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62182, N'WMATA YR1', 17129)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62183, N'WMATA', 17130)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62184, N'WMATA', 17133)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62185, N'WMATA YR2', 17133)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62186, N'WMATA', 17134)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62187, N'WMATA YR3', 17134)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62188, N'WMATA', 17136)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62189, N'WMATA YR3', 17136)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62190, N'WMATA', 17137)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62191, N'WMATA', 17138)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62192, N'WMATA', 17139)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62193, N'WMATA', 17140)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62194, N'WMATA', 17141)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62195, N'WMATA', 17142)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62196, N'WMATA', 17143)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62197, N'WMATA', 17144)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62198, N'WMATA', 17146)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62199, N'WMATA', 17150)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62200, N'WMATA', 17151)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62201, N'WMATA', 17152)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62202, N'WMATA', 17153)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62203, N'WMATA', 17154)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62204, N'WMATA', 17155)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62205, N'WMATA', 17156)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62206, N'WMATA', 17157)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62207, N'WMATA', 17158)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62208, N'WMATA', 17159)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62209, N'WMATA', 17160)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62210, N'WMATA', 17161)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62211, N'WMATA', 17162)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62212, N'WMATA', 17163)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62213, N'WMATA', 17164)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62214, N'WMATA', 17165)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62215, N'WMATA', 17167)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62216, N'WMATA', 17168)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62217, N'WMATA', 17175)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62218, N'WMATA', 17177)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62219, N'WMATA', 17179)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62220, N'WMATA', 17182)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62221, N'WMATA', 17187)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62222, N'WMATA', 17191)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62223, N'WMATA', 17197)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62224, N'WMATA', 17198)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62225, N'WMATA', 17201)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62226, N'WMATA', 17202)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62227, N'WMATA', 17203)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62228, N'WMATA', 17206)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62229, N'WMATA', 17207)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62230, N'WMATA', 17210)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62231, N'WMATA', 17211)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62232, N'WMATA', 17212)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62233, N'WMATA', 17213)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62234, N'WMATA', 17214)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62235, N'WMATA', 17215)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62236, N'WMATA', 17216)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62237, N'WMATA', 17217)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62238, N'WMATA', 17218)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62239, N'WMATA', 17219)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62240, N'WMATA', 17220)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62241, N'WMATA', 17221)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62242, N'WMATA', 17222)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62243, N'WMATA', 17223)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62244, N'WMATA', 17224)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62245, N'WMATA', 17225)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62246, N'WMATA', 17226)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62247, N'WMATA', 17227)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62248, N'WMATA', 17228)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62249, N'WMATA', 17229)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62250, N'WMATA', 17230)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62251, N'WMATA', 17231)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62252, N'WMATA', 17232)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62253, N'WMATA', 17233)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62254, N'WMATA', 17234)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62255, N'WMATA', 17235)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62256, N'WMATA', 17236)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62257, N'WMATA', 17237)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62258, N'WMATA', 17238)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62259, N'WMATA', 17239)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62260, N'WMATA', 17240)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62261, N'WMATA', 17241)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62262, N'WMATA', 17242)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62263, N'WMATA', 17243)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62264, N'WMATA', 17244)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62265, N'WMATA', 17245)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62266, N'WMATA', 17246)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62267, N'WMATA', 17247)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62268, N'WMATA', 17248)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62269, N'WMATA', 17249)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62270, N'WMATA', 17250)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62271, N'WMATA', 17251)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62272, N'WMATA', 17252)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62273, N'WMATA', 17253)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62274, N'WMATA', 17254)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62275, N'WMATA', 17255)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62276, N'WMATA', 17256)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62277, N'WMATA', 17257)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62278, N'WMATA', 17258)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62279, N'WMATA', 17259)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62280, N'WMATA', 17260)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62281, N'WMATA', 17261)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62282, N'WMATA', 17264)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62283, N'WMATA', 17269)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62284, N'WMATA', 17270)
INSERT INTO [dbo].[NEW_QUESTION_SETS] ([New_Question_Set_Id], [Set_Name], [Question_Id]) VALUES (62285, N'WMATA', 17303)
SET IDENTITY_INSERT [dbo].[NEW_QUESTION_SETS] OFF
PRINT(N'Operation applied to 1579 rows out of 1579')

PRINT(N'Add rows to [dbo].[PARAMETERS]')
SET IDENTITY_INSERT [dbo].[PARAMETERS] ON
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5250, N'[WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5251, N'[OT Systems Only: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5252, N'[NIST 800-82 Rev 3: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5253, N'[a: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5254, N'[b: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5255, N'[c: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5256, N'[a.i: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5257, N'[a.ii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5258, N'[b.i: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5259, N'[b.ii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5260, N'[b.iii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5261, N'[b.iv: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5262, N'[b.i.1: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5263, N'[b.i.2: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5264, N'[b.i.3: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5265, N'[b.i.4: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5266, N'[1: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5267, N'[2: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5268, N'[NIST 800-82 Rev 3_OT Discussion: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5269, N'[NIST 800-82 Rev 3_Rationale: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5270, N'[c.i: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5271, N'[c.ii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5272, N'[c.iii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5273, N'[c.iv: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5274, N'[c.v: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5275, N'[d: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5276, N'[e: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5277, N'[f: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5278, N'[f.i: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5279, N'[f.ii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5280, N'[f.iii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5281, N'[f.iv: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5282, N'[f.v: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5283, N'[g: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5284, N'[a.iii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5285, N'[1.a: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5286, N'[1.b: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5287, N'[1.c: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5288, N'[d.i: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5289, N'[d.ii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5290, N'[d.iii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5291, N'[h: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5292, N'[h.i: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5293, N'[h.ii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5294, N'[h.iii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5295, N'[i: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5296, N'[i.i: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5297, N'[i.ii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5298, N'[i.iii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5299, N'[j: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5300, N'[j.i: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5301, N'[ j.ii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5302, N'[k: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5303, N'[l: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5304, N'[OT Systems Only 1: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5305, N'[OT Systems Only 2: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5306, N'[m: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5307, N'[3: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5308, N'[4: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5309, N'[2.a: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5310, N'[2.b: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5311, N'[2.c: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5312, N'[3.a: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5313, N'[3.b: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5314, N'[NIST 800-82 Rev 3_Access to OT: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5315, N'[a.iv: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5316, N'[a.v: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5317, N'[b.v: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5318, N'[a.vi: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5319, N'[a.vii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5320, N'[a.viii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5321, N'[a.ix: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5322, N'[a.x: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5323, N'[a.xi: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5324, N'[a.xi.1: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5325, N'[a.xi.2: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5326, N'[a.xi.3: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5327, N'[a.xi.4: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5328, N'[a.xii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5329, N'[a.xiii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5330, N'[a.xiv: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5331, N'[a.xv: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5332, N'[a.xvi: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5333, N'[d:WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5334, N'[c.1: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5335, N'[c.2: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5336, N'[b.i.2.i: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5337, N'[b.i.2.ii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5338, N'[b.i.2.ii.1: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5339, N'[b.i.2.ii.2: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5340, N'[5: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5341, N'[6: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5342, N'[7: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5343, N'[8: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5344, N'[9: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5345, N'[a.i.1: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5346, N'[a.i.2: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5347, N'[a.i.3: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5348, N'[a.i.4: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5349, N'[a.i.5: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5350, N'[a.i.6: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5351, N'[a.ii.1: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5352, N'[a.ii.2: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5353, N'[a.ii.3: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5354, N'[a.ii.4: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5355, N'[a.iii.1: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5356, N'[a.iii.2: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5357, N'[a.iii.3: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5358, N'[a.iii.4: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5359, N'[a.iii.5: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5360, N'[Note: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5361, N'[a.v.1: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5362, N'[a.v.1.a: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5363, N'[a.v.1.b: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5364, N'[a.v.1.c: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5365, N'[OMB-M1917]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5366, N'[h.i.1: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5367, N'[h.i.2: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5368, N'[h.i.3: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5369, N'[h.ii.1: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5370, N'[h.ii.2: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5371, N'[n: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5372, N'[o: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5373, N'[p: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5374, N'[7.a: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5375, N'[7.b: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5376, N'[7.c: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5377, N'[7.d: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5378, N'[9.a: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5379, N'[9.b: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5380, N'[9.c: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5381, N'[9.c.i: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5382, N'[9.c.ii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5383, N'[9.c.iii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5384, N'[9.c.iv: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5385, N'[9.d: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5386, N'[9.e: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5387, N'[9.f: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5388, N'[9.g: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5389, N'[g.i: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5390, N'[g.ii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5391, N'[g.iii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5392, N'[1.b.i: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5393, N'[1.b.ii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5394, N'[organization-defined parameters]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5395, N'[b: Assignment: organization-defined events]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5396, N'[d: Assignment: organization-defined frequency]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5397, N'[a.1: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5398, N'[a.2: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5399, N'[a.3: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5400, N'[a.4: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5401, N'[a.5: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5402, N'[a.6: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5403, N'[a.7: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5404, N'[a.8: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5405, N'[a.9: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5406, N'[e.i: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5407, N'[e.ii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5408, N'[e.iii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5409, N'[e.iv: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5410, N'[e.v: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5411, N'[e.vi: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5412, N'[e.vii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5413, N'[e.viii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5414, N'[d.iv: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5415, N'[2: Assignment: organization-defined time frame]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5416, N'[10: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5417, N'[c.vi: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5418, N'[c.vii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5419, N'[b.vi: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5420, N'[b.vii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5421, N'[b.viii: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5422, N'[b.ix: WMATA System Implementation Statement]')
INSERT INTO [dbo].[PARAMETERS] ([Parameter_ID], [Parameter_Name]) VALUES (5423, N'[3.c: WMATA System Implementation Statement]')
SET IDENTITY_INSERT [dbo].[PARAMETERS] OFF
PRINT(N'Operation applied to 174 rows out of 174')

PRINT(N'Add row to [dbo].[GALLERY_GROUP_DETAILS]')
SET IDENTITY_INSERT [dbo].[GALLERY_GROUP_DETAILS] ON
INSERT INTO [dbo].[GALLERY_GROUP_DETAILS] ([Group_Detail_Id], [Group_Id], [Column_Index], [Click_Count], [Gallery_Item_Guid]) VALUES (6251, 34, 2, 0, 'ff43e99b-d6dd-409f-a07f-22f7aa55b9f3')
SET IDENTITY_INSERT [dbo].[GALLERY_GROUP_DETAILS] OFF

PRINT(N'Add rows to [dbo].[MATURITY_GROUPINGS]')
SET IDENTITY_INSERT [dbo].[MATURITY_GROUPINGS] ON
INSERT INTO [dbo].[MATURITY_GROUPINGS] ([Grouping_Id], [Title], [Description], [Maturity_Model_Id], [Sequence], [Parent_Id], [Group_Level], [Type_Id], [Title_Id], [Abbreviation], [Title_Prefix], [Description_Extended]) VALUES (1203, N'CMMC 2.0 Practices', NULL, 19, 1, NULL, NULL, 2, N'16', NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_GROUPINGS] ([Grouping_Id], [Title], [Description], [Maturity_Model_Id], [Sequence], [Parent_Id], [Group_Level], [Type_Id], [Title_Id], [Abbreviation], [Title_Prefix], [Description_Extended]) VALUES (1204, N'Access Control (AC)', NULL, 19, 1, 1203, NULL, 2, N'17', NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_GROUPINGS] ([Grouping_Id], [Title], [Description], [Maturity_Model_Id], [Sequence], [Parent_Id], [Group_Level], [Type_Id], [Title_Id], [Abbreviation], [Title_Prefix], [Description_Extended]) VALUES (1205, N'Awareness and Training (AT)', NULL, 19, 2, 1203, NULL, 2, N'18', NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_GROUPINGS] ([Grouping_Id], [Title], [Description], [Maturity_Model_Id], [Sequence], [Parent_Id], [Group_Level], [Type_Id], [Title_Id], [Abbreviation], [Title_Prefix], [Description_Extended]) VALUES (1206, N'Audit and Accountability (AU)', NULL, 19, 3, 1203, NULL, 2, N'19', NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_GROUPINGS] ([Grouping_Id], [Title], [Description], [Maturity_Model_Id], [Sequence], [Parent_Id], [Group_Level], [Type_Id], [Title_Id], [Abbreviation], [Title_Prefix], [Description_Extended]) VALUES (1207, N'Configuration Management (CM)', NULL, 19, 4, 1203, NULL, 2, N'20', NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_GROUPINGS] ([Grouping_Id], [Title], [Description], [Maturity_Model_Id], [Sequence], [Parent_Id], [Group_Level], [Type_Id], [Title_Id], [Abbreviation], [Title_Prefix], [Description_Extended]) VALUES (1208, N'Identification and Authentication (IA)', NULL, 19, 5, 1203, NULL, 2, N'21', NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_GROUPINGS] ([Grouping_Id], [Title], [Description], [Maturity_Model_Id], [Sequence], [Parent_Id], [Group_Level], [Type_Id], [Title_Id], [Abbreviation], [Title_Prefix], [Description_Extended]) VALUES (1209, N'Incident Response (IR)', NULL, 19, 6, 1203, NULL, 2, N'22', NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_GROUPINGS] ([Grouping_Id], [Title], [Description], [Maturity_Model_Id], [Sequence], [Parent_Id], [Group_Level], [Type_Id], [Title_Id], [Abbreviation], [Title_Prefix], [Description_Extended]) VALUES (1210, N'Maintenance (MA)', NULL, 19, 7, 1203, NULL, 2, N'23', NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_GROUPINGS] ([Grouping_Id], [Title], [Description], [Maturity_Model_Id], [Sequence], [Parent_Id], [Group_Level], [Type_Id], [Title_Id], [Abbreviation], [Title_Prefix], [Description_Extended]) VALUES (1211, N'Media Protection (MP)', NULL, 19, 8, 1203, NULL, 2, N'24', NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_GROUPINGS] ([Grouping_Id], [Title], [Description], [Maturity_Model_Id], [Sequence], [Parent_Id], [Group_Level], [Type_Id], [Title_Id], [Abbreviation], [Title_Prefix], [Description_Extended]) VALUES (1212, N'Personnel Security (PS)', NULL, 19, 9, 1203, NULL, 2, N'25', NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_GROUPINGS] ([Grouping_Id], [Title], [Description], [Maturity_Model_Id], [Sequence], [Parent_Id], [Group_Level], [Type_Id], [Title_Id], [Abbreviation], [Title_Prefix], [Description_Extended]) VALUES (1213, N'Physical Protection (PE)', NULL, 19, 10, 1203, NULL, 2, N'26', NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_GROUPINGS] ([Grouping_Id], [Title], [Description], [Maturity_Model_Id], [Sequence], [Parent_Id], [Group_Level], [Type_Id], [Title_Id], [Abbreviation], [Title_Prefix], [Description_Extended]) VALUES (1214, N'Risk Assessment (RA)', NULL, 19, 11, 1203, NULL, 2, N'27', NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_GROUPINGS] ([Grouping_Id], [Title], [Description], [Maturity_Model_Id], [Sequence], [Parent_Id], [Group_Level], [Type_Id], [Title_Id], [Abbreviation], [Title_Prefix], [Description_Extended]) VALUES (1215, N'Security Assessment (CA)', NULL, 19, 12, 1203, NULL, 2, N'28', NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_GROUPINGS] ([Grouping_Id], [Title], [Description], [Maturity_Model_Id], [Sequence], [Parent_Id], [Group_Level], [Type_Id], [Title_Id], [Abbreviation], [Title_Prefix], [Description_Extended]) VALUES (1216, N'Systems and Communications Protection (SC)', NULL, 19, 13, 1203, NULL, 2, N'29', NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_GROUPINGS] ([Grouping_Id], [Title], [Description], [Maturity_Model_Id], [Sequence], [Parent_Id], [Group_Level], [Type_Id], [Title_Id], [Abbreviation], [Title_Prefix], [Description_Extended]) VALUES (1217, N'System and Information Integrity (SI)', NULL, 19, 14, 1203, NULL, 2, N'30', NULL, NULL, NULL)
SET IDENTITY_INSERT [dbo].[MATURITY_GROUPINGS] OFF
PRINT(N'Operation applied to 15 rows out of 15')

PRINT(N'Add rows to [dbo].[MATURITY_LEVELS]')
SET IDENTITY_INSERT [dbo].[MATURITY_LEVELS] ON
INSERT INTO [dbo].[MATURITY_LEVELS] ([Maturity_Level_Id], [Level], [Level_Name], [Maturity_Model_Id]) VALUES (36, 1, N'Level 1', 19)
INSERT INTO [dbo].[MATURITY_LEVELS] ([Maturity_Level_Id], [Level], [Level_Name], [Maturity_Model_Id]) VALUES (37, 2, N'Level 2', 19)
INSERT INTO [dbo].[MATURITY_LEVELS] ([Maturity_Level_Id], [Level], [Level_Name], [Maturity_Model_Id]) VALUES (38, 2, N'Level 3', 19)
SET IDENTITY_INSERT [dbo].[MATURITY_LEVELS] OFF
PRINT(N'Operation applied to 3 rows out of 3')

PRINT(N'Add rows to [dbo].[NCSF_ENTRY_TO_MID]')
INSERT INTO [dbo].[NCSF_ENTRY_TO_MID] ([Entry_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.OC-02', N'1.B')
INSERT INTO [dbo].[NCSF_ENTRY_TO_MID] ([Entry_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.OC-02', N'1.C')
INSERT INTO [dbo].[NCSF_ENTRY_TO_MID] ([Entry_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.OC-02', N'1.D')
INSERT INTO [dbo].[NCSF_ENTRY_TO_MID] ([Entry_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.RM-05', N'1.G')
INSERT INTO [dbo].[NCSF_ENTRY_TO_MID] ([Entry_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.RM-05', N'1.H')
INSERT INTO [dbo].[NCSF_ENTRY_TO_MID] ([Entry_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.RM-05', N'1.I')
INSERT INTO [dbo].[NCSF_ENTRY_TO_MID] ([Entry_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.SC-05', N'1.G')
INSERT INTO [dbo].[NCSF_ENTRY_TO_MID] ([Entry_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.SC-05', N'1.H')
INSERT INTO [dbo].[NCSF_ENTRY_TO_MID] ([Entry_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.SC-05', N'1.I')
INSERT INTO [dbo].[NCSF_ENTRY_TO_MID] ([Entry_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.RA-01', N'1.E')
INSERT INTO [dbo].[NCSF_ENTRY_TO_MID] ([Entry_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.RA-01', N'1.F')
INSERT INTO [dbo].[NCSF_ENTRY_TO_MID] ([Entry_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.DS-01', N'2.K')
INSERT INTO [dbo].[NCSF_ENTRY_TO_MID] ([Entry_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.DS-01', N'2.L')
INSERT INTO [dbo].[NCSF_ENTRY_TO_MID] ([Entry_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.DS-01', N'2.M')
PRINT(N'Operation applied to 14 rows out of 14')

PRINT(N'Add rows to [dbo].[NCSF_FULL_TO_MID]')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'DE.CM-01', N'2.F')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'DE.CM-01', N'3.A')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.OC-02', N'1.B')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.OC-02', N'1.C')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.OC-02', N'1.D')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.PO-01', N'1.B')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.PO-01', N'1.C')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.PO-02', N'1.B')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.PO-02', N'1.C')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.RM-05', N'1.G')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.RM-05', N'1.H')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.RM-05', N'1.I')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.RR-02', N'1.B')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.RR-02', N'1.C')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.RR-02', N'1.D')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.SC-01', N'1.G')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.SC-01', N'1.H')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.SC-01', N'1.I')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.SC-06', N'1.G')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.SC-06', N'1.H')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.SC-06', N'1.I')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.SC-09', N'1.G')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.SC-09', N'1.H')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.SC-09', N'1.I')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.SC-10', N'1.G')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.SC-10', N'1.H')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'GV.SC-10', N'1.I')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.AM-01', N'1.A')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.IM-02', N'2.S')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.IM-02', N'5.A')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.IM-04', N'2.S')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.IM-04', N'5.A')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.RA-01', N'1.E')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.RA-02', N'1.E')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.RA-02', N'1.F')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.RA-03', N'1.F')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.RA-03', N'3.A')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.RA-06', N'1.E')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.RA-07', N'2.N')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.RA-07', N'2.Q')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.RA-08', N'1.E')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.RA-08', N'4.B')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'ID.RA-08', N'4.C')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.AA-01', N'2.A')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.AA-01', N'2.B')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.AA-01', N'2.C')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.AA-01', N'2.D')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.AA-03', N'2.G')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.AA-03', N'2.H')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.AA-05', N'2.A')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.AA-05', N'2.B')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.AA-05', N'2.C')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.AA-05', N'2.D')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.AA-05', N'2.E')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.AA-06', N'2.F')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.AA-06', N'2.W')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.AA-06', N'2.X')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.AT-01', N'2.I')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.AT-01', N'2.J')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.AT-02', N'2.J')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.DS-01', N'2.K')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.DS-01', N'2.L')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.DS-01', N'2.M')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.DS-01', N'2.V')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.DS-02', N'2.K')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.DS-02', N'2.L')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.DS-02', N'2.M')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.DS-10', N'2.L')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.DS-10', N'2.M')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.DS-11', N'2.R')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.IR-01', N'2.F')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.IR-01', N'2.W')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.IR-01', N'2.X')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.PS-01', N'2.N')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.PS-01', N'2.O')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.PS-01', N'2.P')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.PS-01', N'2.Q')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.PS-01', N'2.V')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.PS-02', N'1.E')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.PS-04', N'2.T')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'PR.PS-04', N'2.U')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'RC.RP-01', N'5.A')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'RC.RP-02', N'5.A')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'RS.CO-02', N'4.A')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'RS.MA-01', N'4.A')
INSERT INTO [dbo].[NCSF_FULL_TO_MID] ([Full_Level_Titles], [Mid_Level_Titles]) VALUES (N'RS.MA-04', N'4.A')
PRINT(N'Operation applied to 86 rows out of 86')

PRINT(N'Add rows to [dbo].[NEW_QUESTION_LEVELS]')
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60707, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60708, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60709, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60710, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60711, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60712, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60713, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60714, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60715, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60716, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60717, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60718, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60719, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60720, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60721, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60722, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60723, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60724, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60725, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60726, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60727, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60728, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60729, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60730, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60731, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60732, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60733, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60734, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60735, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60736, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60737, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60738, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60739, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60740, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60741, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60742, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60743, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60744, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60745, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60746, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60747, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60748, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60749, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60750, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60751, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60752, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60753, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60754, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60755, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60756, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60757, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60758, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60759, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60760, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60761, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60762, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60763, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60764, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60765, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60766, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60767, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60768, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60769, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60770, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60771, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60772, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60773, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60774, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60775, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60776, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60777, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60778, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60779, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60780, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60781, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60782, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60783, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60784, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60785, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60786, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60787, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60788, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60789, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60790, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60791, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60792, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60793, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60794, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60795, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60796, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60797, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60798, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60799, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60800, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60801, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60802, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60803, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60804, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60805, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60806, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60807, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60808, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60809, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60810, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60811, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60812, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60813, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60814, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60815, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60816, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60817, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60818, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60819, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60820, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60821, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60822, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60823, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60824, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60825, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60826, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60827, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60828, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60829, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60830, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60831, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60832, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60833, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60834, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60835, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60836, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60837, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60838, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60839, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60840, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60841, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60842, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60843, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60844, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60845, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60846, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60847, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60848, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60849, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60850, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60851, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60852, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60853, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60854, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60855, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60856, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60857, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60858, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60859, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60860, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60861, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60862, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60863, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60864, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60865, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60866, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60867, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60868, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60869, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60870, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60871, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60872, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60873, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60874, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60875, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60876, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60877, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60878, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60879, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60880, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60881, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60882, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60883, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60884, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60885, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60886, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60887, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60888, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60889, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60890, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60891, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60892, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60893, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60894, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60895, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60896, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60897, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60898, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60899, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60900, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60901, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60902, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60903, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60904, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60905, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60906, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60907, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60908, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60909, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60910, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60911, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60912, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60913, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60914, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60915, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60916, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60917, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60918, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60919, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60920, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60921, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60922, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60923, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60924, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60925, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60926, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60927, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60928, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60929, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60930, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60931, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60932, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60933, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60934, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60935, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60936, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60937, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60938, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60939, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60940, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60941, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60942, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60943, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60944, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60945, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60946, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60947, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60948, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60949, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60950, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60951, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60952, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60953, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60954, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60955, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60956, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60957, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60958, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60959, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60960, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60961, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60962, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60963, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60964, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60965, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60966, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60967, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60968, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60969, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60970, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60971, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60972, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60973, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60974, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60975, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60976, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60977, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60978, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60979, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60980, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60981, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60982, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60983, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60984, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60985, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60986, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60987, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60988, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60989, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60990, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60991, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60992, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60993, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60994, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60995, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60996, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60997, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60998, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 60999, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61000, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61001, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61002, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61003, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61004, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61005, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61006, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61007, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61008, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61009, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61010, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61011, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61012, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61013, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61014, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61015, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61016, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61017, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61018, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61019, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61020, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61021, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61022, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61023, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61024, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61025, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61026, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61027, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61028, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61029, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61030, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61031, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61032, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61033, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61034, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61035, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61036, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61037, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61038, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61039, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61040, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61041, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61042, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61043, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61044, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61045, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61046, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61047, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61048, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61049, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61050, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61051, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61052, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61053, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61054, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61055, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61056, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61057, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61058, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61059, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61060, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61061, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61062, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61063, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61064, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61065, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61066, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61067, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61068, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61069, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61070, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61071, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61072, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61073, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61074, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61075, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61076, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61077, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61078, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61079, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61080, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61081, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61082, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61083, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61084, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61085, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61086, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61087, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61088, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61089, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61090, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61091, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61092, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61093, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61094, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61095, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61096, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61097, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61098, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61099, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61100, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61101, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61102, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61103, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61104, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61105, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61106, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61107, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61108, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61109, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61110, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61111, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61112, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61113, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61114, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61115, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61116, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61117, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61118, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61119, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61120, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61121, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61122, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61123, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61124, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61125, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61126, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61127, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61128, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61129, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61130, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61131, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61132, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61133, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61134, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61135, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61136, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61137, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61138, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61139, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61140, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61141, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61142, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61143, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61144, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61145, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61146, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61147, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61148, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61149, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61150, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61151, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61152, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61153, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61154, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61155, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61156, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61157, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61158, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61159, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61160, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61161, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61162, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61163, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61164, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61165, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61166, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61167, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61168, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61169, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61170, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61171, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61172, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61173, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61174, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61175, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61176, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61177, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61178, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61179, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61180, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61181, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61182, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61183, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61184, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61185, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61186, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61187, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61188, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61189, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61190, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61191, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61192, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61193, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61194, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61195, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61196, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61197, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61198, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61199, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61200, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61201, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61202, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61203, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61204, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61205, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61206, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61207, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61208, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61209, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61210, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61211, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61212, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61213, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61214, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61215, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61216, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61217, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61218, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61219, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61220, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61221, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61222, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61223, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61224, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61225, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61226, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61227, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61228, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61229, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61230, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61231, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61232, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61233, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61234, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61235, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61236, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61237, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61238, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61239, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61240, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61241, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61242, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61243, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61244, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61245, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61246, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61247, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61248, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61249, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61250, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61251, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61252, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61253, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61254, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61255, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61256, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61257, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61258, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61259, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61260, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61261, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61262, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61263, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61264, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61265, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61266, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61267, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61268, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61269, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61270, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61271, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61272, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61273, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61274, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61275, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61276, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61277, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61278, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61279, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61280, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61281, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61282, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61283, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61284, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61285, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61286, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61287, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61288, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61289, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61290, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61291, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61292, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61293, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61294, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61295, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61296, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61297, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61298, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61299, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61300, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61301, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61302, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61303, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61304, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61305, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61306, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61307, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61308, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61309, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61310, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61311, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61312, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61313, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61314, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61315, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61316, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61317, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61318, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61319, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61320, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61321, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61322, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61323, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61324, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61325, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61326, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61327, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61328, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61329, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61330, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61331, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61332, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61333, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61334, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61335, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61336, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61337, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61338, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61339, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61340, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61341, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61342, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61343, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61344, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61345, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61346, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61347, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61348, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61349, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61350, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61351, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61352, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61353, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61354, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61355, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61356, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61357, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61358, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61359, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61360, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61361, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61362, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61363, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61364, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61365, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61366, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61367, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61368, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61369, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61370, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61371, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61372, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61373, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61374, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61375, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61376, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61377, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61378, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61379, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61380, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61381, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61382, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61383, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61384, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61385, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61386, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61387, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61388, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61389, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61390, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61391, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61392, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61393, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61394, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61395, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61396, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61397, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61398, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61399, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61400, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61401, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61402, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61403, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61404, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61405, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61406, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61407, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61408, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61409, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61410, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61411, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61412, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61413, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61414, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61415, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61416, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61417, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61418, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61419, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61420, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61421, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61422, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61423, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61424, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61425, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61426, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61427, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61428, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61429, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61430, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61431, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61432, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61433, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61434, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61435, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61436, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61437, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61438, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61439, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61440, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61441, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61442, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61443, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61444, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61445, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61446, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61447, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61448, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61449, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61450, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61451, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61452, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61453, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61454, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61455, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61456, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61457, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61458, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61459, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61460, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61461, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61462, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61463, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61464, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61465, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61466, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61467, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61468, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61469, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61470, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61471, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61472, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61473, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61474, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61475, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61476, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61477, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61478, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61479, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61480, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61481, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61482, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61483, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61484, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61485, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61486, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61487, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61488, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61489, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61490, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61491, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61492, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61493, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61494, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61495, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61496, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61497, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61498, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61499, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61500, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61501, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61502, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61503, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61504, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61505, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61506, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61507, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61508, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61509, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61510, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61511, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61512, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61513, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61514, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61515, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61516, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61517, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61518, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61519, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61520, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61521, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61522, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61523, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61524, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61525, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61526, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61527, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61528, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61529, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61530, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61531, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61532, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61533, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61534, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61535, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61536, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61537, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61538, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61539, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61540, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61541, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61542, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61543, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61544, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61545, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61546, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61547, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61548, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61549, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61550, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61551, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61552, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61553, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61554, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61555, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61556, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61557, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61558, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61559, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61560, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61561, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61562, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61563, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61564, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61565, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61566, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61567, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61568, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61569, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61570, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61571, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61572, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61573, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61574, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61575, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61576, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61577, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61578, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61579, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61580, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61581, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61582, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61583, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61584, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61585, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61586, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61587, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61588, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61589, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61590, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61591, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61592, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61593, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61594, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61595, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61596, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61597, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61598, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61599, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61600, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61601, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61602, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61603, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61604, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61605, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61606, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61607, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61608, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61609, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61610, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61611, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61612, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61613, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61614, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61615, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61616, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61617, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61618, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61619, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61620, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61621, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61622, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61623, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61624, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61625, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61626, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61627, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61628, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61629, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61630, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61631, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61632, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61633, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61634, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61635, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61636, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61637, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61638, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61639, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61640, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61641, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61642, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61643, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61644, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61645, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61646, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61647, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61648, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61649, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61650, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61651, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61652, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61653, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61654, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61655, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61656, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61657, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61658, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61659, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61660, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61661, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61662, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61663, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61664, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61665, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61666, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61667, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61668, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61669, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61670, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61671, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61672, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61673, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61674, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61675, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61676, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61677, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61678, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61679, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61680, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61681, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61682, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61683, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61684, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61685, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61686, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61687, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61688, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61689, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61690, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61691, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61692, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61693, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61694, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61695, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61696, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61697, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61698, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61699, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61700, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61701, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61702, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61703, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61704, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61705, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61706, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61707, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61708, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61709, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61710, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61711, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61712, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61713, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61714, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61715, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61716, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61717, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61718, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61719, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61720, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61721, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61722, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61723, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61724, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61725, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61726, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61727, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61728, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61729, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61730, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61731, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61732, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61733, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61734, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61735, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61736, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61737, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61738, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61739, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61740, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61741, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61742, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61743, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61744, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61745, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61746, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61747, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61748, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61749, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61750, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61751, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61752, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61753, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61754, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61755, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61756, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61757, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61758, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61759, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61760, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61761, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61762, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61763, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61764, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61765, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61766, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61767, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61768, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61769, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61770, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61771, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61772, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61773, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61774, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61775, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61776, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61777, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61778, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61779, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61780, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61781, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61782, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61783, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61784, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61785, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61786, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61787, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61788, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61789, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61790, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61791, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61792, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61793, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61794, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61795, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61796, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61797, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61798, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61799, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61800, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61801, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61802, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61803, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61804, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61805, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61806, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61807, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61808, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61809, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61810, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61811, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61812, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61813, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61814, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61815, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61816, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61817, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61818, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61819, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61820, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61821, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61822, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61823, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61824, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61825, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61826, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61827, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61828, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61829, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61830, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61831, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61832, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61833, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61834, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61835, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61836, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61837, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61838, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61839, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61840, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61841, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61842, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61843, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61844, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61845, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61846, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61847, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61848, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61849, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61850, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61851, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61852, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61853, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61854, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61855, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61856, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61857, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61858, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61859, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61860, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61861, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61862, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61863, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61864, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61865, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61866, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61867, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61868, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61869, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61870, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61871, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61872, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61873, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61874, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61875, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61876, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61877, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61878, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61879, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61880, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61881, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61882, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61883, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61884, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61885, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61886, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61887, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61888, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61889, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61890, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61891, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61892, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61893, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61894, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61895, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61896, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61897, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61898, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61899, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61900, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61901, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61902, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61903, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61904, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61905, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61906, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61907, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61908, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61909, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61910, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61911, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61912, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61913, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61914, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61915, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61916, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61917, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61918, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61919, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61920, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61921, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61922, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61923, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61924, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61925, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61926, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61927, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61928, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61929, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61930, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61931, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61932, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61933, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61934, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61935, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61936, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61937, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61938, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61939, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61940, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61941, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61942, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61943, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61944, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61945, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61946, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61947, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61948, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61949, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61950, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61951, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61952, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61953, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61954, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61955, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61956, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61957, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61958, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61959, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61960, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61961, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61962, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61963, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61964, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61965, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61966, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61967, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61968, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61969, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61970, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61971, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61972, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61973, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61974, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61975, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61976, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61977, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61978, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61979, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61980, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61981, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61982, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61983, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61984, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61985, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61986, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61987, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61988, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61989, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61990, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61991, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61992, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61993, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61994, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61995, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61996, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61997, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61998, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 61999, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62000, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62001, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62002, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62003, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62004, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62005, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62006, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62007, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62008, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62009, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62010, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62011, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62012, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62013, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62014, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62015, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62016, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62017, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62018, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62019, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62020, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62021, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62022, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62023, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62024, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62025, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62026, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62027, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62028, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62029, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62030, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62031, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62032, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62033, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62034, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62035, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62036, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62037, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62038, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62039, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62040, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62041, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62042, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62043, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62044, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62045, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62046, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62047, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62048, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62049, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62050, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62051, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62052, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62053, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62054, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62055, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62056, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62057, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62058, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62059, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62060, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62061, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62062, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62063, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62064, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62065, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62066, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62067, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62068, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62069, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62070, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62071, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62072, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62073, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62074, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62075, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62076, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62077, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62078, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62079, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62080, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62081, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62082, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62083, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62084, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62085, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62086, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62087, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62088, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62089, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62090, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62091, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62092, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62093, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62094, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62095, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62096, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62097, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62098, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62099, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62100, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62101, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62102, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62103, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62104, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62105, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62106, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62107, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62108, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62109, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62110, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62111, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62112, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62113, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62114, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62115, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62116, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62117, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62118, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62119, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62120, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62121, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62122, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62123, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62124, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62125, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62126, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62127, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62128, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62129, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62130, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62131, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62132, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62133, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62134, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62135, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62136, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62137, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62138, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62139, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62140, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62141, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62142, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62143, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62144, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62145, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62146, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62147, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62148, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62149, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62150, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62151, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62152, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62153, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62154, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62155, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62156, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62157, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62158, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62159, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62160, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62161, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62162, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62163, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62164, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62165, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62166, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62167, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62168, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62169, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62170, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62171, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62172, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62173, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62174, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62175, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62176, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62177, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62178, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62179, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62180, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62181, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62182, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62183, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62184, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62185, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62186, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62187, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62188, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62189, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62190, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62191, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62192, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62193, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62194, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62195, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62196, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62197, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62198, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62199, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62200, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62201, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62202, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62203, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62204, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62205, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62206, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62207, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62208, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62209, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62210, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62211, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62212, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62213, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62214, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62215, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62216, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62217, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62218, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62219, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62220, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62221, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62222, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62223, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62224, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62225, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62226, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62227, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62228, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62229, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62230, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62231, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62232, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62233, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62234, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62235, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62236, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62237, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62238, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62239, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62240, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62241, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62242, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62243, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62244, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62245, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62246, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62247, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62248, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62249, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62250, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62251, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62252, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62253, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62254, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62255, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62256, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62257, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62258, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62259, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62260, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62261, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62262, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62263, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62264, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62265, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62266, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62267, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62268, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62269, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62270, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62271, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62272, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62273, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62274, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62275, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62276, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62277, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62278, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62279, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62280, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62281, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62282, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62283, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62284, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'H', 62285, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60707, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60708, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60709, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60710, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60711, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60712, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60713, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60714, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60715, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60716, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60717, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60718, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60719, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60720, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60721, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60722, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60723, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60724, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60725, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60726, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60727, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60728, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60729, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60730, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60731, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60732, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60733, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60734, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60735, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60736, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60737, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60738, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60739, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60740, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60741, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60742, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60743, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60744, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60745, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60746, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60747, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60748, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60749, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60750, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60751, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60752, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60753, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60754, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60755, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60756, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60757, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60758, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60759, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60760, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60761, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60762, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60763, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60764, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60765, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60766, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60767, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60768, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60769, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60770, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60771, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60772, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60773, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60774, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60775, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60776, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60777, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60778, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60779, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60780, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60781, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60782, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60783, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60784, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60785, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60786, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60787, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60788, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60789, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60790, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60791, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60792, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60793, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60794, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60795, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60796, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60797, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60798, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60799, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60800, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60801, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60802, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60803, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60804, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60805, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60806, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60807, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60808, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60809, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60810, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60811, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60812, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60813, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60814, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60815, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60816, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60817, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60818, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60819, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60820, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60821, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60822, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60823, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60824, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60825, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60826, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60827, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60828, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60829, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60830, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60831, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60832, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60833, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60834, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60835, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60836, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60837, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60838, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60839, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60840, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60841, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60842, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60843, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60844, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60845, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60846, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60847, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60848, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60849, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60850, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60851, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60852, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60853, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60854, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60855, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60856, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60857, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60858, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60859, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60860, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60861, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60862, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60863, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60864, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60865, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60866, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60867, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60868, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60869, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60870, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60871, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60872, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60873, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60874, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60875, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60876, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60877, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60878, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60879, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60880, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60881, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60882, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60883, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60884, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60885, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60886, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60887, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60888, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60889, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60890, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60891, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60892, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60893, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60894, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60895, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60896, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60897, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60898, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60899, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60900, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60901, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60902, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60903, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60904, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60905, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60906, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60907, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60908, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60909, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60910, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60911, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60912, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60913, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60914, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60915, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60916, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60917, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60918, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60919, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60920, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60921, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60922, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60923, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60924, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60925, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60926, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60927, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60928, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60929, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60930, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60931, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60932, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60933, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60934, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60935, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60936, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60937, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60938, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60939, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60940, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60941, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60942, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60943, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60944, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60945, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60946, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60947, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60948, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60949, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60950, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60951, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60952, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60953, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60954, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60955, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60956, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60957, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60958, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60959, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60960, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60961, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60962, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60963, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60964, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60965, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60966, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60967, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60968, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60969, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60970, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60971, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60972, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60973, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60974, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60975, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60976, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60977, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60978, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60979, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60980, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60981, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60982, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60983, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60984, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60985, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60986, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60987, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60988, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60989, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60990, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60991, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60992, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60993, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60994, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60995, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60996, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60997, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60998, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 60999, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61000, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61001, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61002, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61003, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61004, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61005, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61006, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61007, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61008, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61009, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61010, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61011, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61012, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61013, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61014, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61015, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61016, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61017, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61018, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61019, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61020, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61021, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61022, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61023, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61024, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61025, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61026, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61027, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61028, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61029, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61030, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61031, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61032, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61033, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61034, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61035, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61036, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61037, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61038, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61039, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61040, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61041, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61042, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61043, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61044, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61045, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61046, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61047, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61048, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61049, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61050, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61051, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61052, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61053, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61054, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61055, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61056, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61057, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61058, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61059, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61060, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61061, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61062, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61063, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61064, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61065, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61066, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61067, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61068, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61069, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61070, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61071, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61072, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61073, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61074, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61075, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61076, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61077, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61078, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61079, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61080, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61081, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61082, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61083, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61084, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61085, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61086, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61087, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61088, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61089, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61090, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61091, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61092, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61093, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61094, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61095, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61096, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61097, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61098, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61099, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61100, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61101, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61102, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61103, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61104, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61105, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61106, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61107, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61108, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61109, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61110, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61111, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61112, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61113, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61114, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61115, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61116, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61117, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61118, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61119, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61120, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61121, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61122, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61123, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61124, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61125, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61126, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61127, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61128, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61129, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61130, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61131, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61132, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61133, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61134, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61135, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61136, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61137, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61138, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61139, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61140, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61141, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61142, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61143, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61144, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61145, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61146, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61147, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61148, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61149, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61150, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61151, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61152, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61153, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61154, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61155, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61156, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61157, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61158, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61159, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61160, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61161, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61162, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61163, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61164, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61165, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61166, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61167, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61168, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61169, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61170, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61171, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61172, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61173, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61174, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61175, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61176, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61177, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61178, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61179, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61180, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61181, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61182, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61183, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61184, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61185, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61186, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61187, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61188, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61189, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61190, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61191, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61192, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61193, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61194, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61195, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61196, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61197, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61198, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61199, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61200, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61201, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61202, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61203, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61204, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61205, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61206, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61207, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61208, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61209, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61210, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61211, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61212, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61213, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61214, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61215, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61216, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61217, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61218, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61219, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61220, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61221, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61222, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61223, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61224, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61225, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61226, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61227, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61228, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61229, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61230, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61231, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61232, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61233, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61234, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61235, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61236, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61237, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61238, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61239, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61240, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61241, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61242, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61243, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61244, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61245, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61246, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61247, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61248, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61249, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61250, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61251, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61252, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61253, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61254, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61255, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61256, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61257, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61258, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61259, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61260, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61261, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61262, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61263, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61264, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61265, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61266, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61267, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61268, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61269, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61270, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61271, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61272, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61273, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61274, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61275, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61276, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61277, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61278, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61279, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61280, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61281, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61282, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61283, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61284, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61285, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61286, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61287, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61288, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61289, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61290, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61291, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61292, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61293, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61294, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61295, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61296, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61297, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61298, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61299, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61300, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61301, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61302, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61303, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61304, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61305, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61306, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61307, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61308, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61309, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61310, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61311, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61312, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61313, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61314, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61315, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61316, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61317, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61318, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61319, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61320, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61321, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61322, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61323, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61324, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61325, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61326, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61327, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61328, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61329, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61330, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61331, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61332, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61333, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61334, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61335, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61336, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61337, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61338, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61339, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61340, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61341, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61342, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61343, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61344, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61345, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61346, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61347, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61348, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61349, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61350, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61351, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61352, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61353, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61354, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61355, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61356, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61357, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61358, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61359, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61360, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61361, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61362, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61363, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61364, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61365, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61366, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61367, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61368, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61369, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61370, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61371, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61372, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61373, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61374, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61375, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61376, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61377, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61378, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61379, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61380, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61381, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61382, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61383, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61384, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61385, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61386, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61387, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61388, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61389, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61390, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61391, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61392, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61393, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61394, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61395, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61396, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61397, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61398, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61399, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61400, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61401, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61402, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61403, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61404, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61405, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61406, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61407, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61408, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61409, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61410, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61411, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61412, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61413, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61414, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61415, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61416, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61417, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61418, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61419, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61420, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61421, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61422, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61423, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61424, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61425, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61426, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61427, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61428, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61429, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61430, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61431, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61432, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61433, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61434, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61435, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61436, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61437, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61438, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61439, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61440, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61441, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61442, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61443, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61444, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61445, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61446, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61447, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61448, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61449, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61450, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61451, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61452, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61453, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61454, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61455, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61456, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61457, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61458, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61459, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61460, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61461, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61462, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61463, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61464, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61465, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61466, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61467, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61468, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61469, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61470, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61471, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61472, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61473, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61474, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61475, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61476, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61477, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61478, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61479, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61480, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61481, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61482, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61483, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61484, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61485, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61486, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61487, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61488, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61489, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61490, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61491, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61492, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61493, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61494, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61495, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61496, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61497, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61498, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61499, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61500, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61501, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61502, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61503, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61504, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61505, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61506, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61507, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61508, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61509, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61510, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61511, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61512, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61513, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61514, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61515, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61516, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61517, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61518, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61519, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61520, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61521, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61522, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61523, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61524, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61525, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61526, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61527, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61528, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61529, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61530, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61531, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61532, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61533, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61534, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61535, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61536, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61537, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61538, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61539, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61540, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61541, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61542, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61543, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61544, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61545, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61546, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61547, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61548, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61549, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61550, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61551, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61552, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61553, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61554, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61555, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61556, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61557, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61558, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61559, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61560, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61561, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61562, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61563, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61564, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61565, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61566, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61567, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61568, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61569, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61570, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61571, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61572, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61573, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61574, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61575, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61576, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61577, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61578, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61579, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61580, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61581, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61582, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61583, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61584, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61585, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61586, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61587, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61588, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61589, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61590, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61591, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61592, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61593, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61594, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61595, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61596, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61597, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61598, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61599, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61600, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61601, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61602, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61603, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61604, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61605, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61606, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61607, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61608, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61609, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61610, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61611, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61612, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61613, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61614, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61615, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61616, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61617, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61618, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61619, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61620, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61621, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61622, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61623, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61624, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61625, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61626, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61627, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61628, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61629, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61630, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61631, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61632, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61633, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61634, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61635, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61636, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61637, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61638, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61639, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61640, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61641, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61642, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61643, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61644, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61645, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61646, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61647, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61648, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61649, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61650, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61651, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61652, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61653, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61654, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61655, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61656, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61657, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61658, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61659, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61660, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61661, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61662, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61663, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61664, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61665, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61666, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61667, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61668, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61669, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61670, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61671, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61672, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61673, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61674, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61675, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61676, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61677, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61678, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61679, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61680, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61681, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61682, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61683, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61684, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61685, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61686, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61687, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61688, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61689, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61690, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61691, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61692, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61693, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61694, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61695, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61696, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61697, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61698, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61699, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61700, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61701, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61702, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61703, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61704, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61705, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61706, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61707, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61708, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61709, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61710, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61711, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61712, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61713, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61714, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61715, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61716, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61717, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61718, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61719, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61720, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61721, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61722, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61723, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61724, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61725, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61726, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61727, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61728, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61729, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61730, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61731, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61732, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61733, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61734, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61735, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61736, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61737, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61738, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61739, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61740, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61741, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61742, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61743, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61744, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61745, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61746, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61747, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61748, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61749, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61750, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61751, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61752, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61753, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61754, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61755, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61756, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61757, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61758, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61759, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61760, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61761, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61762, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61763, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61764, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61765, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61766, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61767, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61768, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61769, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61770, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61771, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61772, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61773, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61774, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61775, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61776, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61777, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61778, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61779, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61780, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61781, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61782, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61783, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61784, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61785, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61786, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61787, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61788, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61789, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61790, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61791, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61792, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61793, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61794, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61795, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61796, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61797, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61798, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61799, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61800, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61801, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61802, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61803, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61804, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61805, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61806, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61807, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61808, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61809, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61810, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61811, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61812, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61813, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61814, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61815, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61816, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61817, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61818, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61819, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61820, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61821, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61822, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61823, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61824, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61825, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61826, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61827, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61828, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61829, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61830, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61831, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61832, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61833, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61834, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61835, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61836, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61837, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61838, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61839, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61840, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61841, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61842, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61843, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61844, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61845, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61846, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61847, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61848, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61849, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61850, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61851, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61852, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61853, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61854, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61855, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61856, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61857, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61858, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61859, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61860, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61861, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61862, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61863, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61864, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61865, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61866, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61867, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61868, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61869, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61870, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61871, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61872, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61873, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61874, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61875, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61876, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61877, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61878, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61879, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61880, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61881, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61882, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61883, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61884, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61885, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61886, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61887, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61888, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61889, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61890, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61891, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61892, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61893, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61894, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61895, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61896, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61897, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61898, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61899, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61900, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61901, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61902, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61903, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61904, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61905, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61906, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61907, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61908, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61909, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61910, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61911, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61912, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61913, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61914, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61915, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61916, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61917, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61918, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61919, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61920, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61921, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61922, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61923, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61924, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61925, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61926, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61927, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61928, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61929, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61930, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61931, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61932, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61933, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61934, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61935, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61936, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61937, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61938, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61939, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61940, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61941, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61942, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61943, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61944, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61945, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61946, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61947, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61948, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61949, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61950, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61951, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61952, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61953, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61954, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61955, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61956, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61957, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61958, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61959, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61960, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61961, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61962, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61963, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61964, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61965, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61966, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61967, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61968, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61969, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61970, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61971, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61972, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61973, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61974, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61975, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61976, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61977, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61978, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61979, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61980, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61981, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61982, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61983, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61984, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61985, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61986, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61987, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61988, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61989, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61990, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61991, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61992, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61993, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61994, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61995, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61996, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61997, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61998, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 61999, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62000, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62001, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62002, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62003, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62004, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62005, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62006, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62007, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62008, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62009, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62010, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62011, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62012, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62013, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62014, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62015, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62016, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62017, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62018, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62019, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62020, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62021, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62022, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62023, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62024, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62025, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62026, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62027, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62028, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62029, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62030, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62031, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62032, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62033, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62034, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62035, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62036, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62037, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62038, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62039, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62040, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62041, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62042, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62043, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62044, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62045, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62046, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62047, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62048, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62049, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62050, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62051, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62052, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62053, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62054, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62055, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62056, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62057, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62058, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62059, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62060, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62061, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62062, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62063, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62064, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62065, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62066, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62067, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62068, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62069, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62070, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62071, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62072, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62073, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62074, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62075, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62076, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62077, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62078, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62079, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62080, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62081, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62082, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62083, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62084, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62085, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62086, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62087, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62088, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62089, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62090, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62091, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62092, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62093, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62094, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62095, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62096, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62097, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62098, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62099, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62100, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62101, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62102, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62103, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62104, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62105, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62106, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62107, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62108, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62109, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62110, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62111, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62112, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62113, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62114, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62115, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62116, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62117, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62118, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62119, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62120, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62121, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62122, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62123, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62124, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62125, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62126, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62127, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62128, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62129, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62130, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62131, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62132, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62133, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62134, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62135, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62136, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62137, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62138, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62139, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62140, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62141, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62142, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62143, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62144, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62145, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62146, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62147, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62148, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62149, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62150, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62151, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62152, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62153, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62154, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62155, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62156, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62157, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62158, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62159, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62160, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62161, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62162, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62163, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62164, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62165, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62166, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62167, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62168, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62169, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62170, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62171, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62172, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62173, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62174, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62175, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62176, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62177, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62178, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62179, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62180, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62181, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62182, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62183, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62184, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62185, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62186, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62187, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62188, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62189, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62190, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62191, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62192, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62193, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62194, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62195, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62196, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62197, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62198, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62199, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62200, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62201, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62202, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62203, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62204, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62205, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62206, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62207, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62208, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62209, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62210, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62211, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62212, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62213, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62214, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62215, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62216, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62217, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62218, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62219, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62220, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62221, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62222, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62223, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62224, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62225, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62226, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62227, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62228, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62229, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62230, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62231, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62232, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62233, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62234, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62235, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62236, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62237, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62238, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62239, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62240, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62241, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62242, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62243, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62244, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62245, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62246, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62247, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62248, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62249, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62250, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62251, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62252, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62253, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62254, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62255, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62256, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62257, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62258, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62259, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62260, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62261, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62262, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62263, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62264, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62265, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62266, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62267, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62268, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62269, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62270, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62271, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62272, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62273, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62274, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62275, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62276, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62277, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62278, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62279, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62280, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62281, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62282, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62283, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62284, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'L', 62285, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60707, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60708, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60709, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60710, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60711, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60712, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60713, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60714, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60715, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60716, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60717, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60718, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60719, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60720, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60721, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60722, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60723, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60724, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60725, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60726, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60727, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60728, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60729, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60730, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60731, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60732, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60733, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60734, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60735, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60736, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60737, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60738, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60739, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60740, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60741, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60742, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60743, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60744, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60745, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60746, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60747, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60748, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60749, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60750, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60751, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60752, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60753, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60754, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60755, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60756, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60757, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60758, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60759, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60760, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60761, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60762, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60763, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60764, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60765, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60766, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60767, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60768, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60769, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60770, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60771, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60772, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60773, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60774, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60775, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60776, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60777, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60778, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60779, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60780, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60781, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60782, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60783, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60784, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60785, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60786, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60787, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60788, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60789, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60790, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60791, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60792, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60793, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60794, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60795, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60796, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60797, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60798, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60799, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60800, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60801, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60802, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60803, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60804, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60805, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60806, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60807, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60808, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60809, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60810, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60811, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60812, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60813, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60814, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60815, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60816, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60817, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60818, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60819, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60820, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60821, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60822, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60823, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60824, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60825, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60826, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60827, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60828, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60829, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60830, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60831, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60832, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60833, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60834, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60835, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60836, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60837, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60838, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60839, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60840, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60841, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60842, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60843, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60844, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60845, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60846, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60847, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60848, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60849, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60850, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60851, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60852, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60853, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60854, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60855, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60856, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60857, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60858, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60859, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60860, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60861, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60862, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60863, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60864, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60865, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60866, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60867, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60868, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60869, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60870, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60871, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60872, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60873, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60874, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60875, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60876, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60877, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60878, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60879, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60880, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60881, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60882, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60883, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60884, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60885, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60886, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60887, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60888, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60889, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60890, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60891, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60892, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60893, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60894, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60895, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60896, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60897, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60898, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60899, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60900, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60901, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60902, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60903, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60904, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60905, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60906, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60907, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60908, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60909, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60910, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60911, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60912, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60913, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60914, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60915, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60916, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60917, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60918, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60919, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60920, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60921, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60922, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60923, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60924, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60925, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60926, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60927, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60928, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60929, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60930, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60931, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60932, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60933, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60934, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60935, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60936, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60937, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60938, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60939, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60940, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60941, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60942, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60943, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60944, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60945, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60946, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60947, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60948, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60949, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60950, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60951, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60952, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60953, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60954, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60955, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60956, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60957, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60958, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60959, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60960, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60961, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60962, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60963, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60964, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60965, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60966, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60967, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60968, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60969, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60970, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60971, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60972, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60973, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60974, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60975, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60976, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60977, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60978, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60979, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60980, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60981, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60982, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60983, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60984, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60985, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60986, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60987, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60988, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60989, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60990, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60991, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60992, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60993, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60994, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60995, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60996, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60997, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60998, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 60999, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61000, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61001, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61002, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61003, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61004, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61005, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61006, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61007, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61008, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61009, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61010, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61011, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61012, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61013, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61014, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61015, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61016, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61017, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61018, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61019, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61020, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61021, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61022, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61023, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61024, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61025, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61026, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61027, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61028, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61029, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61030, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61031, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61032, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61033, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61034, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61035, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61036, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61037, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61038, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61039, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61040, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61041, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61042, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61043, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61044, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61045, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61046, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61047, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61048, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61049, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61050, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61051, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61052, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61053, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61054, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61055, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61056, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61057, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61058, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61059, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61060, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61061, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61062, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61063, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61064, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61065, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61066, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61067, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61068, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61069, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61070, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61071, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61072, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61073, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61074, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61075, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61076, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61077, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61078, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61079, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61080, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61081, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61082, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61083, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61084, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61085, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61086, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61087, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61088, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61089, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61090, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61091, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61092, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61093, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61094, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61095, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61096, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61097, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61098, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61099, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61100, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61101, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61102, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61103, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61104, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61105, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61106, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61107, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61108, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61109, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61110, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61111, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61112, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61113, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61114, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61115, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61116, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61117, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61118, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61119, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61120, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61121, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61122, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61123, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61124, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61125, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61126, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61127, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61128, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61129, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61130, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61131, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61132, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61133, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61134, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61135, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61136, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61137, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61138, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61139, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61140, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61141, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61142, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61143, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61144, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61145, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61146, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61147, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61148, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61149, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61150, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61151, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61152, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61153, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61154, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61155, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61156, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61157, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61158, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61159, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61160, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61161, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61162, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61163, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61164, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61165, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61166, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61167, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61168, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61169, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61170, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61171, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61172, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61173, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61174, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61175, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61176, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61177, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61178, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61179, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61180, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61181, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61182, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61183, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61184, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61185, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61186, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61187, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61188, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61189, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61190, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61191, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61192, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61193, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61194, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61195, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61196, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61197, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61198, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61199, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61200, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61201, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61202, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61203, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61204, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61205, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61206, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61207, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61208, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61209, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61210, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61211, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61212, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61213, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61214, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61215, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61216, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61217, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61218, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61219, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61220, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61221, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61222, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61223, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61224, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61225, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61226, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61227, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61228, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61229, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61230, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61231, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61232, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61233, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61234, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61235, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61236, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61237, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61238, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61239, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61240, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61241, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61242, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61243, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61244, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61245, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61246, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61247, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61248, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61249, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61250, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61251, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61252, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61253, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61254, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61255, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61256, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61257, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61258, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61259, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61260, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61261, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61262, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61263, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61264, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61265, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61266, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61267, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61268, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61269, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61270, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61271, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61272, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61273, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61274, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61275, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61276, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61277, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61278, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61279, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61280, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61281, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61282, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61283, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61284, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61285, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61286, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61287, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61288, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61289, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61290, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61291, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61292, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61293, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61294, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61295, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61296, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61297, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61298, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61299, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61300, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61301, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61302, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61303, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61304, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61305, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61306, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61307, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61308, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61309, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61310, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61311, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61312, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61313, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61314, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61315, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61316, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61317, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61318, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61319, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61320, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61321, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61322, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61323, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61324, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61325, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61326, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61327, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61328, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61329, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61330, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61331, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61332, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61333, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61334, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61335, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61336, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61337, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61338, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61339, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61340, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61341, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61342, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61343, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61344, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61345, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61346, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61347, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61348, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61349, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61350, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61351, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61352, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61353, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61354, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61355, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61356, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61357, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61358, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61359, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61360, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61361, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61362, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61363, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61364, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61365, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61366, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61367, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61368, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61369, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61370, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61371, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61372, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61373, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61374, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61375, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61376, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61377, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61378, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61379, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61380, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61381, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61382, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61383, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61384, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61385, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61386, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61387, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61388, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61389, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61390, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61391, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61392, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61393, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61394, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61395, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61396, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61397, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61398, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61399, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61400, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61401, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61402, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61403, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61404, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61405, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61406, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61407, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61408, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61409, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61410, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61411, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61412, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61413, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61414, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61415, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61416, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61417, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61418, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61419, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61420, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61421, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61422, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61423, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61424, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61425, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61426, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61427, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61428, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61429, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61430, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61431, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61432, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61433, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61434, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61435, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61436, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61437, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61438, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61439, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61440, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61441, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61442, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61443, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61444, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61445, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61446, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61447, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61448, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61449, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61450, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61451, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61452, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61453, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61454, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61455, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61456, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61457, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61458, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61459, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61460, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61461, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61462, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61463, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61464, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61465, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61466, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61467, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61468, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61469, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61470, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61471, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61472, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61473, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61474, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61475, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61476, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61477, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61478, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61479, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61480, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61481, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61482, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61483, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61484, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61485, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61486, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61487, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61488, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61489, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61490, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61491, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61492, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61493, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61494, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61495, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61496, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61497, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61498, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61499, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61500, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61501, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61502, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61503, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61504, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61505, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61506, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61507, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61508, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61509, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61510, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61511, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61512, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61513, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61514, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61515, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61516, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61517, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61518, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61519, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61520, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61521, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61522, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61523, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61524, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61525, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61526, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61527, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61528, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61529, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61530, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61531, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61532, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61533, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61534, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61535, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61536, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61537, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61538, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61539, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61540, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61541, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61542, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61543, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61544, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61545, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61546, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61547, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61548, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61549, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61550, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61551, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61552, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61553, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61554, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61555, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61556, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61557, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61558, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61559, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61560, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61561, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61562, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61563, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61564, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61565, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61566, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61567, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61568, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61569, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61570, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61571, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61572, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61573, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61574, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61575, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61576, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61577, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61578, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61579, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61580, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61581, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61582, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61583, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61584, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61585, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61586, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61587, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61588, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61589, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61590, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61591, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61592, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61593, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61594, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61595, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61596, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61597, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61598, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61599, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61600, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61601, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61602, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61603, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61604, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61605, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61606, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61607, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61608, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61609, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61610, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61611, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61612, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61613, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61614, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61615, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61616, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61617, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61618, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61619, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61620, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61621, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61622, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61623, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61624, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61625, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61626, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61627, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61628, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61629, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61630, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61631, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61632, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61633, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61634, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61635, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61636, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61637, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61638, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61639, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61640, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61641, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61642, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61643, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61644, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61645, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61646, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61647, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61648, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61649, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61650, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61651, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61652, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61653, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61654, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61655, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61656, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61657, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61658, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61659, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61660, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61661, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61662, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61663, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61664, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61665, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61666, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61667, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61668, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61669, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61670, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61671, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61672, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61673, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61674, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61675, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61676, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61677, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61678, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61679, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61680, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61681, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61682, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61683, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61684, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61685, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61686, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61687, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61688, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61689, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61690, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61691, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61692, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61693, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61694, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61695, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61696, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61697, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61698, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61699, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61700, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61701, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61702, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61703, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61704, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61705, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61706, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61707, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61708, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61709, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61710, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61711, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61712, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61713, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61714, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61715, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61716, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61717, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61718, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61719, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61720, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61721, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61722, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61723, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61724, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61725, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61726, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61727, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61728, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61729, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61730, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61731, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61732, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61733, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61734, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61735, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61736, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61737, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61738, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61739, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61740, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61741, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61742, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61743, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61744, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61745, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61746, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61747, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61748, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61749, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61750, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61751, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61752, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61753, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61754, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61755, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61756, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61757, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61758, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61759, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61760, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61761, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61762, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61763, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61764, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61765, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61766, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61767, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61768, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61769, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61770, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61771, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61772, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61773, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61774, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61775, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61776, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61777, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61778, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61779, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61780, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61781, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61782, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61783, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61784, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61785, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61786, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61787, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61788, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61789, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61790, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61791, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61792, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61793, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61794, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61795, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61796, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61797, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61798, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61799, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61800, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61801, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61802, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61803, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61804, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61805, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61806, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61807, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61808, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61809, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61810, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61811, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61812, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61813, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61814, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61815, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61816, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61817, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61818, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61819, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61820, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61821, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61822, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61823, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61824, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61825, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61826, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61827, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61828, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61829, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61830, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61831, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61832, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61833, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61834, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61835, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61836, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61837, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61838, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61839, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61840, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61841, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61842, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61843, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61844, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61845, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61846, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61847, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61848, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61849, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61850, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61851, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61852, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61853, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61854, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61855, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61856, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61857, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61858, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61859, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61860, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61861, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61862, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61863, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61864, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61865, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61866, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61867, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61868, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61869, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61870, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61871, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61872, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61873, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61874, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61875, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61876, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61877, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61878, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61879, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61880, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61881, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61882, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61883, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61884, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61885, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61886, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61887, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61888, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61889, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61890, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61891, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61892, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61893, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61894, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61895, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61896, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61897, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61898, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61899, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61900, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61901, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61902, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61903, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61904, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61905, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61906, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61907, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61908, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61909, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61910, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61911, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61912, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61913, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61914, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61915, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61916, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61917, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61918, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61919, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61920, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61921, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61922, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61923, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61924, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61925, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61926, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61927, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61928, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61929, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61930, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61931, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61932, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61933, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61934, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61935, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61936, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61937, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61938, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61939, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61940, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61941, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61942, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61943, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61944, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61945, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61946, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61947, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61948, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61949, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61950, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61951, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61952, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61953, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61954, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61955, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61956, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61957, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61958, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61959, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61960, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61961, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61962, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61963, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61964, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61965, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61966, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61967, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61968, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61969, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61970, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61971, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61972, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61973, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61974, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61975, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61976, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61977, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61978, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61979, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61980, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61981, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61982, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61983, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61984, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61985, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61986, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61987, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61988, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61989, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61990, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61991, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61992, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61993, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61994, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61995, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61996, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61997, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61998, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 61999, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62000, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62001, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62002, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62003, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62004, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62005, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62006, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62007, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62008, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62009, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62010, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62011, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62012, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62013, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62014, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62015, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62016, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62017, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62018, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62019, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62020, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62021, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62022, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62023, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62024, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62025, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62026, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62027, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62028, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62029, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62030, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62031, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62032, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62033, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62034, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62035, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62036, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62037, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62038, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62039, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62040, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62041, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62042, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62043, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62044, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62045, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62046, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62047, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62048, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62049, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62050, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62051, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62052, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62053, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62054, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62055, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62056, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62057, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62058, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62059, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62060, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62061, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62062, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62063, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62064, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62065, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62066, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62067, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62068, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62069, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62070, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62071, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62072, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62073, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62074, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62075, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62076, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62077, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62078, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62079, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62080, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62081, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62082, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62083, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62084, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62085, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62086, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62087, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62088, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62089, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62090, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62091, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62092, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62093, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62094, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62095, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62096, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62097, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62098, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62099, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62100, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62101, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62102, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62103, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62104, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62105, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62106, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62107, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62108, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62109, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62110, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62111, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62112, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62113, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62114, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62115, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62116, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62117, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62118, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62119, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62120, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62121, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62122, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62123, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62124, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62125, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62126, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62127, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62128, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62129, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62130, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62131, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62132, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62133, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62134, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62135, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62136, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62137, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62138, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62139, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62140, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62141, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62142, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62143, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62144, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62145, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62146, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62147, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62148, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62149, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62150, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62151, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62152, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62153, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62154, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62155, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62156, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62157, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62158, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62159, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62160, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62161, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62162, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62163, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62164, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62165, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62166, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62167, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62168, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62169, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62170, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62171, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62172, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62173, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62174, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62175, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62176, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62177, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62178, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62179, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62180, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62181, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62182, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62183, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62184, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62185, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62186, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62187, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62188, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62189, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62190, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62191, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62192, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62193, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62194, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62195, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62196, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62197, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62198, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62199, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62200, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62201, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62202, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62203, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62204, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62205, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62206, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62207, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62208, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62209, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62210, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62211, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62212, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62213, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62214, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62215, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62216, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62217, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62218, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62219, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62220, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62221, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62222, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62223, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62224, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62225, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62226, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62227, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62228, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62229, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62230, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62231, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62232, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62233, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62234, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62235, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62236, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62237, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62238, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62239, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62240, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62241, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62242, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62243, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62244, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62245, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62246, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62247, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62248, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62249, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62250, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62251, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62252, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62253, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62254, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62255, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62256, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62257, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62258, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62259, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62260, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62261, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62262, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62263, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62264, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62265, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62266, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62267, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62268, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62269, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62270, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62271, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62272, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62273, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62274, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62275, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62276, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62277, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62278, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62279, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62280, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62281, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62282, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62283, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62284, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'M', 62285, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60707, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60708, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60709, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60710, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60711, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60712, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60713, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60714, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60715, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60716, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60717, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60718, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60719, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60720, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60721, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60722, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60723, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60724, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60725, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60726, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60727, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60728, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60729, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60730, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60731, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60732, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60733, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60734, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60735, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60736, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60737, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60738, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60739, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60740, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60741, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60742, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60743, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60744, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60745, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60746, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60747, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60748, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60749, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60750, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60751, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60752, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60753, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60754, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60755, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60756, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60757, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60758, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60759, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60760, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60761, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60762, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60763, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60764, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60765, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60766, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60767, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60768, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60769, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60770, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60771, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60772, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60773, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60774, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60775, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60776, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60777, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60778, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60779, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60780, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60781, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60782, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60783, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60784, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60785, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60786, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60787, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60788, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60789, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60790, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60791, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60792, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60793, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60794, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60795, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60796, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60797, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60798, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60799, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60800, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60801, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60802, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60803, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60804, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60805, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60806, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60807, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60808, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60809, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60810, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60811, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60812, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60813, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60814, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60815, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60816, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60817, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60818, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60819, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60820, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60821, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60822, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60823, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60824, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60825, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60826, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60827, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60828, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60829, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60830, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60831, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60832, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60833, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60834, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60835, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60836, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60837, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60838, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60839, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60840, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60841, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60842, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60843, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60844, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60845, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60846, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60847, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60848, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60849, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60850, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60851, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60852, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60853, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60854, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60855, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60856, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60857, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60858, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60859, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60860, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60861, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60862, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60863, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60864, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60865, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60866, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60867, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60868, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60869, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60870, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60871, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60872, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60873, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60874, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60875, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60876, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60877, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60878, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60879, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60880, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60881, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60882, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60883, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60884, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60885, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60886, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60887, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60888, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60889, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60890, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60891, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60892, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60893, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60894, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60895, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60896, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60897, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60898, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60899, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60900, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60901, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60902, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60903, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60904, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60905, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60906, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60907, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60908, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60909, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60910, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60911, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60912, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60913, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60914, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60915, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60916, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60917, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60918, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60919, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60920, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60921, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60922, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60923, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60924, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60925, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60926, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60927, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60928, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60929, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60930, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60931, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60932, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60933, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60934, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60935, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60936, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60937, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60938, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60939, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60940, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60941, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60942, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60943, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60944, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60945, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60946, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60947, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60948, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60949, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60950, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60951, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60952, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60953, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60954, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60955, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60956, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60957, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60958, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60959, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60960, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60961, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60962, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60963, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60964, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60965, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60966, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60967, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60968, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60969, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60970, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60971, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60972, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60973, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60974, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60975, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60976, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60977, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60978, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60979, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60980, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60981, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60982, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60983, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60984, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60985, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60986, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60987, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60988, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60989, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60990, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60991, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60992, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60993, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60994, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60995, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60996, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60997, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60998, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 60999, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61000, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61001, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61002, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61003, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61004, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61005, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61006, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61007, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61008, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61009, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61010, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61011, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61012, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61013, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61014, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61015, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61016, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61017, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61018, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61019, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61020, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61021, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61022, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61023, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61024, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61025, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61026, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61027, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61028, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61029, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61030, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61031, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61032, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61033, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61034, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61035, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61036, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61037, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61038, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61039, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61040, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61041, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61042, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61043, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61044, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61045, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61046, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61047, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61048, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61049, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61050, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61051, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61052, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61053, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61054, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61055, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61056, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61057, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61058, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61059, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61060, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61061, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61062, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61063, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61064, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61065, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61066, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61067, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61068, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61069, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61070, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61071, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61072, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61073, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61074, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61075, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61076, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61077, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61078, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61079, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61080, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61081, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61082, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61083, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61084, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61085, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61086, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61087, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61088, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61089, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61090, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61091, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61092, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61093, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61094, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61095, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61096, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61097, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61098, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61099, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61100, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61101, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61102, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61103, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61104, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61105, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61106, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61107, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61108, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61109, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61110, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61111, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61112, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61113, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61114, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61115, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61116, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61117, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61118, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61119, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61120, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61121, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61122, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61123, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61124, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61125, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61126, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61127, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61128, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61129, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61130, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61131, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61132, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61133, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61134, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61135, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61136, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61137, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61138, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61139, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61140, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61141, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61142, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61143, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61144, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61145, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61146, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61147, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61148, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61149, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61150, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61151, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61152, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61153, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61154, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61155, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61156, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61157, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61158, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61159, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61160, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61161, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61162, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61163, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61164, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61165, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61166, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61167, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61168, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61169, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61170, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61171, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61172, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61173, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61174, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61175, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61176, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61177, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61178, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61179, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61180, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61181, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61182, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61183, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61184, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61185, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61186, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61187, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61188, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61189, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61190, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61191, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61192, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61193, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61194, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61195, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61196, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61197, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61198, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61199, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61200, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61201, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61202, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61203, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61204, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61205, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61206, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61207, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61208, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61209, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61210, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61211, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61212, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61213, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61214, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61215, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61216, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61217, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61218, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61219, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61220, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61221, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61222, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61223, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61224, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61225, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61226, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61227, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61228, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61229, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61230, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61231, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61232, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61233, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61234, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61235, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61236, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61237, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61238, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61239, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61240, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61241, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61242, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61243, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61244, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61245, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61246, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61247, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61248, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61249, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61250, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61251, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61252, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61253, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61254, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61255, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61256, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61257, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61258, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61259, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61260, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61261, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61262, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61263, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61264, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61265, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61266, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61267, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61268, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61269, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61270, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61271, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61272, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61273, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61274, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61275, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61276, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61277, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61278, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61279, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61280, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61281, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61282, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61283, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61284, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61285, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61286, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61287, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61288, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61289, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61290, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61291, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61292, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61293, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61294, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61295, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61296, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61297, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61298, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61299, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61300, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61301, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61302, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61303, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61304, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61305, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61306, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61307, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61308, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61309, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61310, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61311, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61312, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61313, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61314, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61315, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61316, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61317, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61318, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61319, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61320, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61321, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61322, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61323, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61324, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61325, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61326, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61327, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61328, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61329, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61330, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61331, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61332, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61333, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61334, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61335, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61336, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61337, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61338, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61339, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61340, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61341, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61342, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61343, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61344, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61345, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61346, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61347, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61348, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61349, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61350, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61351, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61352, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61353, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61354, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61355, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61356, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61357, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61358, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61359, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61360, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61361, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61362, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61363, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61364, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61365, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61366, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61367, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61368, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61369, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61370, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61371, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61372, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61373, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61374, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61375, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61376, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61377, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61378, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61379, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61380, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61381, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61382, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61383, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61384, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61385, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61386, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61387, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61388, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61389, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61390, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61391, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61392, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61393, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61394, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61395, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61396, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61397, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61398, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61399, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61400, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61401, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61402, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61403, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61404, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61405, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61406, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61407, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61408, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61409, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61410, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61411, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61412, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61413, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61414, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61415, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61416, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61417, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61418, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61419, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61420, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61421, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61422, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61423, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61424, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61425, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61426, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61427, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61428, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61429, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61430, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61431, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61432, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61433, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61434, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61435, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61436, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61437, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61438, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61439, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61440, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61441, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61442, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61443, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61444, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61445, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61446, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61447, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61448, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61449, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61450, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61451, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61452, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61453, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61454, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61455, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61456, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61457, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61458, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61459, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61460, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61461, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61462, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61463, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61464, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61465, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61466, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61467, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61468, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61469, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61470, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61471, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61472, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61473, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61474, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61475, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61476, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61477, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61478, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61479, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61480, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61481, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61482, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61483, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61484, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61485, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61486, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61487, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61488, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61489, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61490, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61491, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61492, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61493, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61494, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61495, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61496, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61497, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61498, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61499, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61500, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61501, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61502, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61503, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61504, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61505, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61506, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61507, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61508, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61509, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61510, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61511, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61512, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61513, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61514, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61515, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61516, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61517, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61518, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61519, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61520, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61521, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61522, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61523, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61524, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61525, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61526, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61527, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61528, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61529, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61530, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61531, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61532, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61533, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61534, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61535, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61536, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61537, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61538, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61539, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61540, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61541, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61542, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61543, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61544, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61545, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61546, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61547, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61548, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61549, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61550, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61551, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61552, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61553, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61554, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61555, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61556, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61557, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61558, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61559, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61560, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61561, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61562, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61563, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61564, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61565, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61566, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61567, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61568, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61569, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61570, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61571, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61572, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61573, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61574, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61575, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61576, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61577, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61578, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61579, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61580, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61581, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61582, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61583, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61584, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61585, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61586, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61587, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61588, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61589, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61590, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61591, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61592, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61593, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61594, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61595, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61596, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61597, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61598, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61599, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61600, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61601, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61602, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61603, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61604, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61605, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61606, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61607, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61608, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61609, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61610, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61611, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61612, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61613, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61614, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61615, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61616, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61617, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61618, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61619, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61620, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61621, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61622, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61623, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61624, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61625, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61626, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61627, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61628, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61629, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61630, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61631, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61632, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61633, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61634, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61635, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61636, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61637, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61638, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61639, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61640, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61641, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61642, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61643, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61644, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61645, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61646, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61647, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61648, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61649, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61650, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61651, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61652, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61653, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61654, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61655, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61656, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61657, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61658, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61659, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61660, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61661, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61662, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61663, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61664, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61665, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61666, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61667, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61668, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61669, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61670, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61671, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61672, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61673, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61674, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61675, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61676, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61677, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61678, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61679, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61680, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61681, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61682, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61683, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61684, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61685, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61686, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61687, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61688, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61689, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61690, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61691, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61692, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61693, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61694, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61695, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61696, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61697, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61698, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61699, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61700, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61701, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61702, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61703, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61704, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61705, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61706, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61707, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61708, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61709, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61710, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61711, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61712, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61713, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61714, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61715, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61716, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61717, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61718, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61719, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61720, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61721, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61722, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61723, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61724, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61725, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61726, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61727, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61728, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61729, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61730, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61731, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61732, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61733, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61734, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61735, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61736, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61737, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61738, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61739, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61740, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61741, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61742, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61743, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61744, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61745, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61746, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61747, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61748, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61749, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61750, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61751, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61752, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61753, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61754, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61755, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61756, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61757, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61758, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61759, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61760, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61761, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61762, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61763, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61764, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61765, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61766, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61767, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61768, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61769, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61770, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61771, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61772, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61773, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61774, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61775, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61776, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61777, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61778, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61779, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61780, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61781, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61782, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61783, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61784, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61785, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61786, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61787, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61788, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61789, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61790, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61791, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61792, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61793, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61794, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61795, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61796, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61797, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61798, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61799, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61800, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61801, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61802, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61803, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61804, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61805, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61806, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61807, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61808, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61809, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61810, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61811, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61812, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61813, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61814, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61815, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61816, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61817, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61818, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61819, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61820, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61821, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61822, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61823, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61824, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61825, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61826, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61827, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61828, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61829, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61830, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61831, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61832, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61833, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61834, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61835, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61836, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61837, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61838, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61839, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61840, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61841, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61842, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61843, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61844, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61845, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61846, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61847, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61848, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61849, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61850, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61851, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61852, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61853, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61854, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61855, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61856, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61857, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61858, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61859, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61860, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61861, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61862, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61863, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61864, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61865, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61866, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61867, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61868, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61869, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61870, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61871, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61872, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61873, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61874, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61875, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61876, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61877, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61878, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61879, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61880, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61881, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61882, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61883, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61884, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61885, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61886, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61887, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61888, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61889, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61890, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61891, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61892, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61893, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61894, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61895, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61896, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61897, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61898, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61899, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61900, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61901, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61902, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61903, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61904, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61905, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61906, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61907, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61908, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61909, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61910, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61911, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61912, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61913, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61914, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61915, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61916, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61917, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61918, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61919, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61920, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61921, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61922, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61923, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61924, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61925, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61926, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61927, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61928, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61929, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61930, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61931, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61932, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61933, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61934, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61935, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61936, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61937, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61938, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61939, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61940, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61941, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61942, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61943, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61944, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61945, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61946, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61947, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61948, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61949, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61950, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61951, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61952, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61953, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61954, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61955, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61956, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61957, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61958, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61959, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61960, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61961, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61962, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61963, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61964, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61965, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61966, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61967, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61968, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61969, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61970, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61971, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61972, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61973, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61974, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61975, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61976, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61977, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61978, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61979, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61980, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61981, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61982, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61983, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61984, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61985, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61986, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61987, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61988, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61989, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61990, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61991, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61992, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61993, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61994, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61995, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61996, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61997, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61998, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 61999, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62000, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62001, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62002, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62003, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62004, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62005, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62006, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62007, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62008, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62009, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62010, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62011, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62012, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62013, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62014, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62015, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62016, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62017, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62018, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62019, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62020, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62021, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62022, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62023, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62024, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62025, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62026, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62027, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62028, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62029, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62030, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62031, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62032, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62033, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62034, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62035, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62036, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62037, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62038, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62039, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62040, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62041, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62042, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62043, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62044, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62045, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62046, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62047, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62048, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62049, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62050, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62051, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62052, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62053, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62054, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62055, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62056, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62057, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62058, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62059, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62060, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62061, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62062, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62063, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62064, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62065, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62066, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62067, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62068, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62069, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62070, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62071, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62072, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62073, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62074, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62075, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62076, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62077, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62078, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62079, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62080, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62081, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62082, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62083, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62084, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62085, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62086, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62087, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62088, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62089, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62090, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62091, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62092, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62093, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62094, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62095, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62096, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62097, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62098, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62099, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62100, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62101, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62102, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62103, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62104, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62105, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62106, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62107, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62108, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62109, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62110, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62111, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62112, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62113, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62114, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62115, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62116, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62117, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62118, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62119, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62120, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62121, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62122, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62123, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62124, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62125, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62126, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62127, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62128, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62129, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62130, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62131, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62132, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62133, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62134, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62135, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62136, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62137, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62138, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62139, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62140, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62141, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62142, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62143, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62144, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62145, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62146, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62147, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62148, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62149, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62150, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62151, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62152, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62153, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62154, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62155, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62156, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62157, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62158, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62159, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62160, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62161, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62162, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62163, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62164, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62165, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62166, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62167, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62168, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62169, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62170, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62171, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62172, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62173, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62174, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62175, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62176, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62177, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62178, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62179, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62180, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62181, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62182, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62183, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62184, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62185, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62186, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62187, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62188, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62189, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62190, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62191, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62192, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62193, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62194, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62195, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62196, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62197, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62198, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62199, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62200, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62201, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62202, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62203, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62204, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62205, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62206, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62207, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62208, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62209, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62210, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62211, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62212, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62213, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62214, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62215, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62216, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62217, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62218, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62219, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62220, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62221, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62222, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62223, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62224, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62225, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62226, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62227, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62228, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62229, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62230, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62231, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62232, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62233, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62234, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62235, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62236, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62237, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62238, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62239, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62240, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62241, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62242, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62243, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62244, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62245, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62246, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62247, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62248, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62249, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62250, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62251, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62252, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62253, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62254, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62255, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62256, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62257, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62258, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62259, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62260, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62261, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62262, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62263, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62264, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62265, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62266, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62267, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62268, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62269, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62270, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62271, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62272, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62273, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62274, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62275, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62276, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62277, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62278, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62279, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62280, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62281, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62282, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62283, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62284, NULL)
INSERT INTO [dbo].[NEW_QUESTION_LEVELS] ([Universal_Sal_Level], [New_Question_Set_Id], [IgnoreMe]) VALUES (N'VH', 62285, NULL)
PRINT(N'Operation applied to 6316 rows out of 6316')

PRINT(N'Add rows to [dbo].[PARAMETER_REQUIREMENTS]')
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37523, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37523, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37523, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37524, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37524, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37524, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37525, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37525, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37525, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37525, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37525, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37526, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37526, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37526, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37527, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37527, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37527, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37528, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37528, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37528, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37528, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37528, 5258, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37528, 5259, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37528, 5260, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37528, 5261, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37529, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37529, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37529, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37529, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37529, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37529, 5258, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37529, 5259, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37529, 5260, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37529, 5262, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37529, 5263, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37529, 5264, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37529, 5265, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37530, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37530, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37530, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37531, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37531, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37532, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37532, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37532, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37533, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37533, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37533, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37534, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37534, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37534, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37535, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37535, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37535, 5268, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37535, 5269, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5270, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5271, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5272, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5273, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5274, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5278, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5279, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5280, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5281, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5282, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37536, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37537, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37537, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37537, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37537, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37538, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37539, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37540, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37540, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37540, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37541, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37541, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37541, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37541, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37541, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37541, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37541, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37541, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37541, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37541, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37542, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37542, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37542, 5285, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37542, 5286, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37542, 5287, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5278, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5279, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5280, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5288, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5289, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5290, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5291, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5292, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5293, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5294, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5295, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5296, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5297, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5298, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5299, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5300, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5301, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5302, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5303, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5304, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5305, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37543, 5306, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37544, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37545, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37545, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37545, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37545, 5308, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37546, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37546, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37547, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37547, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37547, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37548, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37548, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37548, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37549, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37549, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37549, 5285, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37549, 5286, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37549, 5287, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37549, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37549, 5309, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37549, 5310, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37549, 5311, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37549, 5312, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37549, 5313, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37550, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37551, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37551, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37551, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37552, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37552, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37552, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37552, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37552, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37552, 5268, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37552, 5304, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37552, 5305, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37552, 5314, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37553, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37553, 5285, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37553, 5286, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37554, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37555, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37555, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37555, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37555, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37555, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37555, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37555, 5278, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37555, 5279, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37555, 5280, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37555, 5281, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37555, 5282, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37556, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37556, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37556, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37556, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37556, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37556, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37557, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37558, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37558, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37558, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37558, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37559, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37559, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37559, 5268, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37559, 5269, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37560, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37561, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37562, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37562, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37562, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37562, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37563, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37563, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37563, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37563, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37564, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37564, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37564, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37564, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37564, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37564, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37564, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37564, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37564, 5315, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37564, 5316, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37565, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37565, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37565, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37565, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37565, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37566, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37566, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37566, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37566, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37566, 5309, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37566, 5310, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37566, 5311, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37567, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37567, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37567, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37568, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37568, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37568, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37569, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37569, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37569, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37570, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37570, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37570, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37571, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37571, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37571, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37572, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37572, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37572, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37573, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37573, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37573, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37573, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37573, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37573, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37573, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37574, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37574, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37574, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37574, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37574, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37574, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37574, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37574, 5270, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37574, 5271, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37574, 5272, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37574, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37574, 5315, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37575, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37575, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37576, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37576, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37576, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37576, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37576, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37576, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37576, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37576, 5258, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37576, 5259, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37576, 5260, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37576, 5261, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37576, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37576, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37576, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37576, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37576, 5317, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37577, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37578, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37578, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37578, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37579, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37579, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37579, 5268, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37579, 5269, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37580, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37580, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37580, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37580, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37580, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37580, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37580, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37580, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37581, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37582, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37582, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37582, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37583, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37583, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37584, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37584, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37584, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37585, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37586, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37586, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37586, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37586, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37587, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37587, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37588, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37588, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37589, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37589, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5315, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5316, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5318, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5319, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5320, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5321, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5322, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5323, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5324, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5325, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5326, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5327, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5328, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5329, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5330, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5331, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5332, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37590, 5333, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37591, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37591, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37591, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37591, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37591, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37591, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37591, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37591, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37592, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37593, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37594, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37594, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37594, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37594, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37594, 5333, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37594, 5334, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37594, 5335, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37595, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37595, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37596, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37596, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37596, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37596, 5258, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37596, 5262, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37596, 5336, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37596, 5337, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37596, 5338, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37596, 5339, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37597, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37598, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37598, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37598, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37598, 5309, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37598, 5310, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37599, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37599, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37599, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37599, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37600, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37600, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37600, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37601, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37602, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37603, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37604, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37604, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37604, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37605, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37606, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37606, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37606, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37606, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37607, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37607, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37607, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37608, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37609, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37610, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37610, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37610, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37611, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37611, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37612, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37612, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37612, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37612, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37612, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37612, 5258, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37612, 5259, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37612, 5260, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37612, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37612, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37612, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37612, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37613, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37614, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37614, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37614, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37614, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37614, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37614, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37614, 5308, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37614, 5340, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37614, 5341, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37614, 5342, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37614, 5343, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37614, 5344, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37615, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37615, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37615, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37615, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37615, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37615, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37616, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37617, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37617, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37617, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37617, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37618, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37618, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37618, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37618, 5270, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37618, 5271, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37618, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37618, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5291, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5345, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5346, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5347, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5348, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5349, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5350, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5351, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5352, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5353, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5354, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5355, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5356, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5357, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5358, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37619, 5359, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37620, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37621, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37621, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37621, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37621, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37622, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37622, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37622, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37622, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37623, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37623, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37624, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37624, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37624, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37624, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37624, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37624, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37625, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37625, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37626, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37626, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37626, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37627, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37627, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37627, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37628, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37628, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37628, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37628, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37628, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37628, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37629, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37630, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37630, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37630, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37630, 5258, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37630, 5259, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37630, 5260, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37631, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37631, 5360, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37632, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37633, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37633, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37633, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37634, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37634, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37634, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37634, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37634, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37634, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37634, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37634, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37634, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37634, 5291, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37634, 5295, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37634, 5299, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37634, 5302, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37634, 5303, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37635, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37635, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37635, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37635, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37635, 5308, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37635, 5340, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37635, 5341, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37636, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37637, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37638, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37638, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37638, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37638, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37638, 5308, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37639, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37639, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37639, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37640, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37640, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37640, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37641, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37641, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37641, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37641, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37642, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37643, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37644, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37644, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37644, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37644, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37644, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37645, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37645, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37646, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37646, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37646, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37646, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37646, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37646, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37647, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37648, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37648, 5285, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37648, 5286, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37649, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37649, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37649, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37649, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37649, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37650, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37650, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37651, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37651, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37651, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37652, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37652, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37652, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37652, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37652, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37653, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37653, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37653, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37653, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37653, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37653, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37653, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37653, 5315, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37653, 5316, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37653, 5361, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37653, 5362, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37653, 5363, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37653, 5364, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37654, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37655, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37656, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37656, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37656, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37657, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37658, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37658, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37658, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37658, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37658, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37658, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37658, 5315, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37658, 5316, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37658, 5318, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37659, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37659, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37660, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37660, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37660, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37660, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37661, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37662, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37663, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37663, 5268, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37663, 5269, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37664, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37664, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5291, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5295, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5299, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5315, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5316, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5318, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37665, 5319, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37666, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37667, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37668, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37669, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37670, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37671, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37671, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37671, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37671, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37671, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37671, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37672, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37673, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37673, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37673, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37673, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37673, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37673, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37674, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37675, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37675, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37675, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37675, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37675, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37676, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37676, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37676, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37676, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37676, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37676, 5334, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37677, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37678, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37679, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37680, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37680, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37680, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37680, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37680, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37680, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37680, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37680, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37680, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37681, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37682, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37683, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37684, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37685, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37685, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37685, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37685, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37686, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37686, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37686, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37687, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37687, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37688, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37689, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37689, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37689, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37690, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37690, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37690, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37690, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37690, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37691, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37691, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37692, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37692, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37693, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37694, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37695, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37696, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37696, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37697, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37698, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37698, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37698, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37698, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37698, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37698, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37699, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37699, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37699, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37700, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37700, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37700, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37701, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37701, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37701, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37702, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37702, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37702, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37703, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37703, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37703, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37704, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37704, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37704, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37705, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37705, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37705, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37706, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37706, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37706, 5365, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37707, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37707, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37707, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37708, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37708, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37709, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37710, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37710, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37710, 5268, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37710, 5269, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37711, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37711, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37712, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37712, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37713, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37713, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37713, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37713, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37713, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37713, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37713, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37713, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37714, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37714, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37714, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5291, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5292, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5293, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5295, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5299, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5302, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5303, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5306, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5366, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5367, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5368, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5369, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5370, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5371, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5372, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37715, 5373, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5308, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5309, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5310, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5311, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5340, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5341, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5342, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5343, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5344, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5374, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5375, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5376, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5377, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5378, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5379, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5380, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5381, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5382, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5383, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5384, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5385, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5386, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5387, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37716, 5388, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37717, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37717, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37717, 5285, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37717, 5286, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37717, 5309, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37717, 5310, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37718, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37719, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37719, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37720, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37721, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37721, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37721, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37722, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37722, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37722, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37722, 5365, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37723, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37723, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37723, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37723, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37724, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37724, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37724, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37725, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37725, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37726, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37726, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37726, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37726, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37726, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37726, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37727, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37728, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37729, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37730, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37730, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37731, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37732, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37732, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37732, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37732, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37732, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37732, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37732, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37732, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37733, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37734, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37735, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37736, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37736, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37737, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37738, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37738, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37738, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37738, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37738, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37739, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37739, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37739, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37740, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37741, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37741, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37742, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5291, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5295, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5299, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5315, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5316, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5318, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5319, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5320, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5321, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37743, 5322, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37744, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37744, 5285, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37744, 5286, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37744, 5287, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37745, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37745, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37745, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37745, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37745, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37745, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37745, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37745, 5291, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37745, 5389, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37745, 5390, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37745, 5391, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37746, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37747, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37748, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37749, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37749, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37750, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37750, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37750, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37750, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37750, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37750, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37750, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37750, 5291, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37751, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37751, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37751, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37752, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37752, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37752, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37753, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37754, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37755, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37755, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37755, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37755, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37755, 5308, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37756, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37757, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37757, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37757, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37757, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37757, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37757, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37758, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37758, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37758, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37759, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37759, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37759, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37759, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37760, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37760, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37760, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37760, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37761, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37761, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37761, 5285, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37761, 5286, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37762, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37763, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37763, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37764, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37765, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37765, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37765, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37766, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37766, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37767, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37767, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37767, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37767, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37767, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37767, 5285, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37767, 5286, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37767, 5392, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37767, 5393, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37768, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37768, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37768, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37768, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37769, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37770, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37771, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37772, 3933, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37773, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37773, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37773, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37774, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37774, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37774, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37775, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37775, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37775, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37775, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37775, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37775, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37775, 5394, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37776, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37776, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37776, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37777, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37777, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37778, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37778, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37778, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37778, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37779, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37780, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37780, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37780, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37780, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37781, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37782, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37783, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37783, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37783, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37783, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37784, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37784, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37784, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37784, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37785, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37786, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37786, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37787, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37787, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37787, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37787, 5258, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37787, 5259, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37787, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37788, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37789, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37789, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37789, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37789, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37790, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37790, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37790, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37791, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37791, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37791, 5268, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37791, 5269, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37792, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37792, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37792, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37792, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37792, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37792, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37792, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37792, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37792, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37792, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37792, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37792, 5291, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37793, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37794, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37795, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37795, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37795, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37795, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37796, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37796, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37796, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37796, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37796, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37797, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37798, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37798, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37799, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37799, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37799, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37799, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37800, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37801, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37802, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37803, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37803, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37804, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37805, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5315, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5316, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5318, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5319, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5320, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5321, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5322, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5323, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5328, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5329, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37806, 5330, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37807, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37807, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37807, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37807, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37807, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37807, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37807, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37808, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37808, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37808, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37808, 5291, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37808, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37809, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37809, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37809, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37809, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37809, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37810, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37810, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37810, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37810, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37810, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37810, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37810, 5295, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37810, 5315, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37811, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37811, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37811, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37811, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37812, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37812, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37812, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37813, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37813, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37813, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37813, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37813, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37813, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37813, 5315, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37813, 5395, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37814, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37814, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37814, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37815, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37815, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37815, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37816, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37817, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37818, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37818, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37818, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37818, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37819, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37819, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37819, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37819, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37819, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37819, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37820, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37820, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37820, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37821, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37822, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37822, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37822, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37822, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37823, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37823, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37823, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37823, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37823, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37823, 5315, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37823, 5316, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37823, 5318, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37824, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37825, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37826, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37826, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37826, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37826, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37827, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37827, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37827, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37827, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37827, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37828, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37828, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37828, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37828, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37828, 5315, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37829, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37829, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37829, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37830, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37830, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37830, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37831, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37831, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37831, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37831, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37831, 5396, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37832, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37832, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37832, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37832, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37832, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37832, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37833, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37833, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37833, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37833, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37834, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37834, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37834, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37834, 5397, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37834, 5398, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37834, 5399, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37834, 5400, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37835, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37835, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37835, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37835, 5258, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37836, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37836, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37836, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37837, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37837, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37837, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37837, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37838, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37839, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37839, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37839, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37839, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37839, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37839, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37839, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37839, 5397, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37839, 5398, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37839, 5399, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37839, 5400, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37839, 5401, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37839, 5402, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37839, 5403, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37839, 5404, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37839, 5405, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37840, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37841, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37841, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37841, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37841, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37841, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37842, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37843, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37844, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37845, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37846, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37847, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37847, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37847, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37848, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37848, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37848, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37848, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37848, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37849, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37849, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37850, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37850, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37850, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37850, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37850, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37851, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37851, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37851, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37851, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37851, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37852, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37852, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37852, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37852, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37852, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37852, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37852, 5270, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37852, 5271, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37852, 5272, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37852, 5273, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37852, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37852, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37852, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37852, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37852, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37852, 5315, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37853, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37854, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37854, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37854, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37854, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37855, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37855, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37855, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37855, 5258, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37855, 5259, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37855, 5270, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37855, 5271, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37856, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37856, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37856, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37856, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37856, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37856, 5288, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37856, 5289, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37856, 5290, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37857, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37857, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37858, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37859, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37860, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37860, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37860, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37860, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37860, 5288, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37860, 5289, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37861, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37862, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37863, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37863, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37863, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37863, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37864, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37865, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37866, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37867, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37868, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37869, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37870, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37870, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37870, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37870, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37870, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37870, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37870, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37870, 5406, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37870, 5407, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37870, 5408, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37870, 5409, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37870, 5410, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37870, 5411, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37870, 5412, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37870, 5413, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37871, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37872, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37873, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37873, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37873, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37873, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37874, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37875, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37876, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37876, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37877, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37877, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37877, 5285, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37877, 5286, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37877, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37878, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37879, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37879, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37879, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37879, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37880, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37880, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37881, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37881, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37881, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37881, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37881, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37882, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37882, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37882, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37882, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37882, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37882, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37882, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37882, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37882, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37883, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37883, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37884, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37884, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37884, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37884, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37884, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37884, 5258, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37884, 5259, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37884, 5260, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37884, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37884, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37884, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37884, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37884, 5288, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37884, 5289, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37884, 5290, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37884, 5414, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37885, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37885, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37885, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37886, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37887, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37887, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37887, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37888, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37889, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37890, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37890, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37890, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37890, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37890, 5258, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37890, 5259, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37890, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37891, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37892, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37892, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37893, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37893, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37893, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37893, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37893, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37893, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37894, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37894, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37894, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37894, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37894, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37894, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37894, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37895, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37895, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37895, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37895, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37895, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37895, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37895, 5315, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37896, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37896, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37896, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37896, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37897, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37898, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37898, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37898, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37898, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37899, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37899, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37899, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37900, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37900, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37900, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37900, 5258, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37900, 5259, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37901, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37901, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37901, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37901, 5269, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37902, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37902, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37902, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37902, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37902, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37902, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37903, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37903, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37903, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37904, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37904, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37904, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37905, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37905, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37905, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37905, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37905, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37905, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37905, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37905, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37905, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37905, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37905, 5291, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37905, 5295, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37905, 5299, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37905, 5302, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37906, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37906, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37906, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37907, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37907, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37907, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37908, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37908, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37908, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37908, 5415, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37909, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37909, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37909, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37909, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37909, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37909, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37909, 5308, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37909, 5340, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37909, 5341, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37909, 5342, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37909, 5343, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37909, 5344, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37909, 5416, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37910, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37910, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37910, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37910, 5285, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37910, 5286, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37910, 5287, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37911, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37911, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37911, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37912, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37912, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37912, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37912, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37912, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37912, 5258, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37912, 5259, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37912, 5260, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37912, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37912, 5284, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37913, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37913, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37913, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37913, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37913, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37913, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37913, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37913, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37913, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37913, 5291, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37913, 5295, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37913, 5299, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37914, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37915, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37915, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37915, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37915, 5270, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37915, 5271, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37915, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37916, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37917, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37917, 5269, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37918, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37918, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37919, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37919, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37919, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37919, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37919, 5270, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37919, 5271, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37919, 5272, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37919, 5273, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37919, 5274, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37919, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37919, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37919, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37919, 5417, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37919, 5418, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37920, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37921, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37921, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37922, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37922, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37923, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37923, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37924, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37924, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37924, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37925, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37926, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37927, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37928, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37928, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37928, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37929, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37930, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37930, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37930, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37931, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37931, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37931, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37931, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37932, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37932, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37932, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37933, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37933, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37933, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37934, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37934, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37934, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37935, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37935, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37935, 5268, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37935, 5269, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37936, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37936, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37936, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37936, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37937, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37938, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37938, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37938, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37939, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37939, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37940, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37940, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37940, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37941, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37941, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37942, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37942, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37942, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37943, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37943, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37944, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37944, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37944, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37944, 5268, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37944, 5269, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37945, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37945, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37945, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37945, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37946, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37946, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37946, 5268, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37946, 5269, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37947, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37947, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37947, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37947, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37947, 5258, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37947, 5259, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37947, 5260, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37947, 5261, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37947, 5317, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37947, 5419, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37947, 5420, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37947, 5421, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37947, 5422, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37948, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37948, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37948, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37948, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37949, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37949, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37949, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37949, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37950, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37951, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37951, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37951, 5268, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37951, 5269, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37952, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37953, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37954, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37954, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37954, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37954, 5285, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37954, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37954, 5308, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37955, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37955, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37955, 5268, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37955, 5269, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37956, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37956, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37956, 5268, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37956, 5269, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37957, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37958, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37958, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37958, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37958, 5308, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37958, 5340, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37958, 5341, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37958, 5342, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37958, 5343, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37959, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37960, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37961, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37961, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37961, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37961, 5258, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37961, 5259, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37961, 5260, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37961, 5261, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37961, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37961, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37961, 5285, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37961, 5317, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37962, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37962, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37963, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37963, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37963, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37964, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37964, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37965, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37965, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37965, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37965, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37965, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37965, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37965, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37965, 5291, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37965, 5295, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37965, 5299, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37966, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37966, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37967, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37967, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37968, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37969, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37969, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37969, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37970, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37971, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37971, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37971, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37972, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37973, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37973, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37973, 5268, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37973, 5269, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37974, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37974, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37974, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37974, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37975, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37975, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37976, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37976, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37976, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37977, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37977, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37977, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37977, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37977, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37977, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37977, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37978, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37979, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37979, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37979, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37979, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37980, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37980, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37980, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37980, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37980, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37980, 5270, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37980, 5271, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37980, 5272, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37980, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37981, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37981, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37981, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37981, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37981, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37981, 5256, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37981, 5257, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37981, 5270, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37981, 5271, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37981, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37981, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37981, 5277, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37981, 5283, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37981, 5291, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37981, 5345, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37981, 5346, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37982, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37983, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37984, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37985, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37985, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37985, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37986, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37986, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37986, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37987, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37988, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37988, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37989, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37989, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37989, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37989, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37989, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37989, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37989, 5308, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37989, 5340, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37989, 5341, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37989, 5342, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37989, 5343, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37989, 5344, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37990, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37990, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37990, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37990, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37990, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37990, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37990, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37991, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37992, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37992, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37992, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37992, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37992, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37992, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37992, 5276, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37993, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37993, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37993, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37993, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37993, 5258, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37993, 5259, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37993, 5260, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37994, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37994, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37994, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37995, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37995, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37995, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37996, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37996, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37996, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37997, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37997, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37997, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37998, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37998, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37998, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37999, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37999, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37999, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37999, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (37999, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38000, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38000, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38001, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38001, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38001, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38002, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38002, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38002, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38002, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38002, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38003, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38003, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38003, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38004, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38005, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38006, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38007, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38007, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38007, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38007, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38008, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38008, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38008, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38008, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38008, 5308, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38009, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38009, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38009, 5255, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38009, 5270, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38009, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38010, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38010, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38010, 5252, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38011, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38011, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38011, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38011, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38011, 5308, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38011, 5340, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38011, 5341, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38012, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38013, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38013, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38014, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38014, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38014, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38014, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38015, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38016, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38016, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38016, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38016, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38017, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38017, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38018, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38018, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38018, 5275, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38018, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38018, 5312, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38018, 5313, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38018, 5423, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38019, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38019, 5251, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38019, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38019, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38019, 5268, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38019, 5269, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38019, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38019, 5308, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38020, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38021, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38021, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38022, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38022, 5266, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38022, 5267, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38022, 5307, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38023, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38024, 5250, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38025, 5253, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38025, 5254, NULL)
INSERT INTO [dbo].[PARAMETER_REQUIREMENTS] ([Requirement_Id], [Parameter_Id], [ID]) VALUES (38026, 5250, NULL)
PRINT(N'Operation applied to 1959 rows out of 1959')

PRINT(N'Add rows to [dbo].[REQUIREMENT_QUESTIONS_SETS]')
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1, N'WMATA', 37902)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1, N'WMATA YR2', 37902)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (5, N'WMATA', 37721)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (5, N'WMATA YR1', 37721)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (8, N'WMATA', 37627)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (8, N'WMATA YR2', 37627)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9, N'WMATA', 37726)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9, N'WMATA YR2', 37726)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12, N'WMATA', 37813)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (20, N'WMATA', 37760)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (20, N'WMATA YR2', 37760)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (23, N'WMATA', 37760)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (23, N'WMATA YR2', 37760)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (24, N'WMATA', 37803)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (26, N'WMATA', 37849)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (27, N'WMATA', 37774)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (28, N'WMATA', 37892)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (29, N'WMATA', 37625)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (30, N'WMATA', 37917)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (32, N'WMATA', 37749)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (33, N'WMATA', 37575)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (34, N'WMATA', 37725)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (35, N'WMATA', 37763)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (36, N'WMATA', 37964)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (37, N'WMATA', 37523)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (38, N'WMATA', 37696)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (39, N'WMATA', 37583)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (41, N'WMATA', 37611)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (43, N'WMATA', 37880)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (44, N'WMATA', 37856)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (45, N'WMATA', 37856)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (48, N'WMATA', 37803)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (49, N'WMATA', 37849)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (50, N'WMATA', 37774)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (51, N'WMATA', 37892)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (52, N'WMATA', 37625)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (54, N'WMATA', 37917)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (56, N'WMATA', 37749)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (57, N'WMATA', 37575)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (58, N'WMATA', 37725)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (59, N'WMATA', 37763)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (60, N'WMATA', 37964)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (61, N'WMATA', 37523)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (62, N'WMATA', 37696)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (63, N'WMATA', 37583)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (65, N'WMATA', 37880)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (66, N'WMATA', 37611)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (68, N'WMATA', 37641)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (68, N'WMATA YR1', 37641)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (69, N'WMATA', 37658)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (69, N'WMATA YR3', 37658)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (71, N'WMATA', 37659)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (74, N'WMATA', 37847)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (75, N'WMATA', 37882)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (75, N'WMATA YR2', 37882)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (76, N'WMATA', 37806)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (76, N'WMATA YR2', 37806)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (77, N'WMATA', 37806)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (77, N'WMATA YR2', 37806)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (78, N'WMATA', 37806)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (78, N'WMATA YR2', 37806)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (79, N'WMATA', 37806)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (79, N'WMATA YR2', 37806)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (80, N'WMATA', 37806)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (80, N'WMATA YR2', 37806)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (81, N'WMATA', 37806)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (81, N'WMATA YR2', 37806)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (82, N'WMATA', 37806)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (82, N'WMATA YR2', 37806)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (84, N'WMATA', 37806)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (84, N'WMATA YR2', 37806)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (85, N'WMATA', 37658)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (85, N'WMATA YR3', 37658)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (87, N'WMATA', 37658)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (87, N'WMATA YR3', 37658)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (88, N'WMATA', 37658)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (88, N'WMATA YR3', 37658)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (89, N'WMATA', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (89, N'WMATA YR2', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (90, N'WMATA', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (90, N'WMATA YR3', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (91, N'WMATA', 37735)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (91, N'WMATA YR2', 37735)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (92, N'WMATA', 37673)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (92, N'WMATA YR2', 37673)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (93, N'WMATA', 37730)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (93, N'WMATA YR2', 37730)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (94, N'WMATA', 37673)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (94, N'WMATA YR2', 37673)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (95, N'WMATA', 37666)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (95, N'WMATA YR3', 37666)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (96, N'WMATA', 37675)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (96, N'WMATA YR3', 37675)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (98, N'WMATA', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (98, N'WMATA YR2', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (99, N'WMATA', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (99, N'WMATA YR3', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (100, N'WMATA', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (100, N'WMATA YR3', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (101, N'WMATA', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (101, N'WMATA YR3', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (102, N'WMATA', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (102, N'WMATA YR3', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (105, N'WMATA', 37882)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (105, N'WMATA YR2', 37882)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (106, N'WMATA', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (106, N'WMATA YR3', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (107, N'WMATA', 37617)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (107, N'WMATA YR2', 37617)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (108, N'WMATA', 37617)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (108, N'WMATA YR2', 37617)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (109, N'WMATA', 37841)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (115, N'WMATA', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (115, N'WMATA YR3', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (123, N'WMATA', 37612)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (123, N'WMATA YR2', 37612)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (124, N'WMATA', 37612)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (124, N'WMATA YR2', 37612)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (126, N'WMATA', 37615)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (126, N'WMATA YR3', 37615)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (127, N'WMATA', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (127, N'WMATA YR2', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (130, N'WMATA', 37620)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (130, N'WMATA YR3', 37620)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (131, N'WMATA', 37881)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (131, N'WMATA YR2', 37881)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (132, N'WMATA', 37881)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (132, N'WMATA YR2', 37881)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (133, N'WMATA', 37881)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (133, N'WMATA YR2', 37881)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (134, N'WMATA', 37882)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (134, N'WMATA YR2', 37882)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (135, N'WMATA', 37841)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (136, N'WMATA', 37848)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (137, N'WMATA', 37848)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (141, N'WMATA', 37899)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (142, N'WMATA', 37899)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (143, N'WMATA', 37902)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (143, N'WMATA YR2', 37902)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (145, N'WMATA', 37807)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (145, N'WMATA YR2', 37807)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (148, N'WMATA', 37902)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (148, N'WMATA YR2', 37902)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (152, N'WMATA', 37618)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (152, N'WMATA YR2', 37618)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (153, N'WMATA', 37618)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (153, N'WMATA YR2', 37618)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (163, N'WMATA', 37814)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (164, N'WMATA', 37814)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (165, N'WMATA', 37815)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (166, N'WMATA', 37815)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (170, N'WMATA', 37825)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (171, N'WMATA', 37850)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (172, N'WMATA', 37836)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (173, N'WMATA', 37851)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (174, N'WMATA', 37852)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (174, N'WMATA YR2', 37852)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (175, N'WMATA', 37852)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (175, N'WMATA YR2', 37852)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (176, N'WMATA', 37852)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (176, N'WMATA YR2', 37852)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (178, N'WMATA', 37853)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (179, N'WMATA', 37854)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (179, N'WMATA YR2', 37854)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (180, N'WMATA', 37855)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (181, N'WMATA', 37856)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (182, N'WMATA', 37857)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (184, N'WMATA', 37855)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (187, N'WMATA', 37576)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (187, N'WMATA YR2', 37576)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (192, N'WMATA', 37580)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (192, N'WMATA YR3', 37580)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (193, N'WMATA', 37582)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (193, N'WMATA YR3', 37582)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (196, N'WMATA', 37671)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (196, N'WMATA YR2', 37671)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (197, N'WMATA', 37672)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (197, N'WMATA YR3', 37672)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (198, N'WMATA', 37728)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (198, N'WMATA YR3', 37728)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (202, N'WMATA', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (202, N'WMATA YR1', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (205, N'WMATA', 37721)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (205, N'WMATA YR1', 37721)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (206, N'WMATA', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (206, N'WMATA YR1', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (208, N'WMATA', 37544)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (208, N'WMATA YR1', 37544)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (209, N'WMATA', 37548)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (209, N'WMATA YR2', 37548)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (211, N'WMATA', 37550)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (211, N'WMATA YR1', 37550)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (214, N'WMATA', 37713)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (214, N'WMATA YR2', 37713)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (215, N'WMATA', 37713)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (215, N'WMATA YR2', 37713)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (216, N'WMATA', 37713)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (216, N'WMATA YR2', 37713)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (217, N'WMATA', 37713)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (217, N'WMATA YR2', 37713)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (219, N'WMATA', 37715)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (219, N'WMATA YR1', 37715)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (220, N'WMATA', 37715)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (220, N'WMATA YR1', 37715)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (221, N'WMATA', 37715)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (221, N'WMATA YR1', 37715)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (222, N'WMATA', 37715)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (222, N'WMATA YR1', 37715)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (223, N'WMATA', 37715)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (223, N'WMATA YR1', 37715)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (224, N'WMATA', 37715)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (224, N'WMATA YR1', 37715)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (225, N'WMATA', 37715)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (225, N'WMATA YR1', 37715)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (226, N'WMATA', 37715)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (226, N'WMATA YR1', 37715)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (227, N'WMATA', 37717)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (227, N'WMATA YR3', 37717)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (231, N'WMATA', 37564)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (231, N'WMATA YR1', 37564)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (232, N'WMATA', 37564)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (232, N'WMATA YR1', 37564)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (233, N'WMATA', 37565)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (233, N'WMATA YR1', 37565)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (234, N'WMATA', 37566)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (234, N'WMATA YR2', 37566)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (235, N'WMATA', 37568)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (235, N'WMATA YR1', 37568)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (236, N'WMATA', 37569)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (236, N'WMATA YR2', 37569)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (237, N'WMATA', 37717)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (237, N'WMATA YR3', 37717)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (238, N'WMATA', 37717)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (238, N'WMATA YR3', 37717)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (241, N'WMATA', 37615)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (241, N'WMATA YR3', 37615)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (243, N'WMATA', 37807)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (243, N'WMATA YR2', 37807)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (244, N'WMATA', 37808)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (244, N'WMATA YR3', 37808)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (245, N'WMATA', 37983)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (248, N'WMATA', 37558)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (248, N'WMATA YR1', 37558)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (252, N'WMATA', 37704)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (252, N'WMATA YR1', 37704)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (254, N'WMATA', 37705)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (254, N'WMATA YR1', 37705)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (258, N'WMATA', 37710)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (258, N'WMATA YR1', 37710)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (259, N'WMATA', 37711)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (260, N'WMATA', 37711)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (261, N'WMATA', 37719)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (261, N'WMATA YR1', 37719)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (262, N'WMATA', 37720)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (262, N'WMATA YR2', 37720)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (268, N'WMATA', 37574)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (268, N'WMATA YR1', 37574)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (269, N'WMATA', 37574)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (269, N'WMATA YR1', 37574)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (270, N'WMATA', 37574)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (270, N'WMATA YR1', 37574)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (276, N'WMATA', 37573)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (276, N'WMATA YR1', 37573)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (277, N'WMATA', 37573)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (277, N'WMATA YR1', 37573)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (282, N'WMATA', 37918)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (290, N'WMATA', 37530)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (290, N'WMATA YR2', 37530)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (304, N'WMATA', 37632)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (304, N'WMATA YR3', 37632)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (310, N'WMATA', 37924)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (310, N'WMATA YR1', 37924)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (311, N'WMATA', 37924)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (311, N'WMATA YR1', 37924)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (312, N'WMATA', 37925)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (312, N'WMATA YR1', 37925)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (325, N'WMATA', 37938)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (336, N'WMATA', 37962)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (336, N'WMATA YR1', 37962)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (338, N'WMATA', 37923)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (340, N'WMATA', 37935)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (344, N'WMATA', 37936)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (345, N'WMATA', 37937)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (347, N'WMATA', 37939)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (352, N'WMATA', 37901)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (352, N'WMATA YR1', 37901)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (353, N'WMATA', 37971)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (360, N'WMATA', 37649)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (360, N'WMATA YR1', 37649)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (361, N'WMATA', 37649)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (361, N'WMATA YR1', 37649)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (362, N'WMATA', 37651)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (362, N'WMATA YR2', 37651)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (364, N'WMATA', 37845)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (385, N'WMATA', 37942)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (387, N'WMATA', 37949)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (387, N'WMATA YR1', 37949)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (388, N'WMATA', 37957)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (388, N'WMATA YR1', 37957)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (389, N'WMATA', 37958)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (389, N'WMATA YR1', 37958)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (393, N'WMATA', 37950)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (393, N'WMATA YR1', 37950)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (395, N'WMATA', 37960)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (395, N'WMATA YR2', 37960)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (396, N'WMATA', 37961)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (396, N'WMATA YR2', 37961)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (397, N'WMATA', 37963)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (397, N'WMATA YR1', 37963)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (403, N'WMATA', 37919)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (403, N'WMATA YR2', 37919)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (404, N'WMATA', 37920)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (406, N'WMATA', 37922)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (414, N'WMATA', 37934)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (416, N'WMATA', 37933)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (418, N'WMATA', 37931)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (420, N'WMATA', 37932)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (420, N'WMATA YR2', 37932)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (424, N'WMATA', 37562)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (424, N'WMATA YR1', 37562)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (428, N'WMATA', 37563)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (428, N'WMATA YR2', 37563)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (437, N'WMATA', 37922)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (440, N'WMATA', 37943)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (440, N'WMATA YR1', 37943)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (441, N'WMATA', 37977)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (441, N'WMATA YR1', 37977)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (442, N'WMATA', 37977)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (442, N'WMATA YR1', 37977)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (443, N'WMATA', 37977)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (443, N'WMATA YR1', 37977)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (444, N'WMATA', 37978)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (446, N'WMATA', 37978)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (450, N'WMATA', 37990)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (450, N'WMATA YR1', 37990)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (451, N'WMATA', 37990)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (451, N'WMATA YR1', 37990)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (452, N'WMATA', 37990)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (452, N'WMATA YR1', 37990)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (453, N'WMATA', 37990)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (453, N'WMATA YR1', 37990)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (454, N'WMATA', 37991)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (455, N'WMATA', 37992)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (456, N'WMATA', 37992)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (459, N'WMATA', 37993)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (459, N'WMATA YR1', 37993)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (460, N'WMATA', 37993)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (460, N'WMATA YR1', 37993)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (464, N'WMATA', 37965)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (465, N'WMATA', 37966)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (466, N'WMATA', 37966)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (467, N'WMATA', 37966)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (469, N'WMATA', 37967)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (470, N'WMATA', 37789)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (470, N'WMATA YR2', 37789)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (471, N'WMATA', 37789)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (471, N'WMATA YR2', 37789)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (474, N'WMATA', 37792)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (474, N'WMATA YR1', 37792)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (475, N'WMATA', 37792)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (475, N'WMATA YR1', 37792)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (476, N'WMATA', 37792)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (476, N'WMATA YR1', 37792)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (477, N'WMATA', 37792)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (477, N'WMATA YR1', 37792)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (478, N'WMATA', 37792)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (478, N'WMATA YR1', 37792)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (479, N'WMATA', 37792)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (479, N'WMATA YR1', 37792)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (480, N'WMATA', 37792)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (480, N'WMATA YR1', 37792)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (482, N'WMATA', 37795)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (482, N'WMATA YR2', 37795)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (483, N'WMATA', 37793)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (483, N'WMATA YR3', 37793)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (487, N'WMATA', 37796)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (487, N'WMATA YR2', 37796)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (488, N'WMATA', 37796)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (488, N'WMATA YR2', 37796)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (489, N'WMATA', 37796)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (489, N'WMATA YR2', 37796)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (490, N'WMATA', 37797)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (490, N'WMATA YR3', 37797)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (511, N'WMATA', 37775)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (511, N'WMATA YR2', 37775)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (512, N'WMATA', 37775)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (512, N'WMATA YR2', 37775)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (513, N'WMATA', 37776)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (513, N'WMATA YR2', 37776)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (514, N'WMATA', 37777)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (514, N'WMATA YR3', 37777)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (515, N'WMATA', 37778)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (516, N'WMATA', 37779)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (516, N'WMATA YR2', 37779)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (518, N'WMATA', 37781)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (518, N'WMATA YR2', 37781)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (519, N'WMATA', 37782)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (519, N'WMATA YR2', 37782)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (520, N'WMATA', 37782)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (520, N'WMATA YR2', 37782)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (521, N'WMATA', 37783)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (521, N'WMATA YR2', 37783)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (522, N'WMATA', 37784)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (522, N'WMATA YR2', 37784)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (523, N'WMATA', 37785)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (523, N'WMATA YR3', 37785)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (524, N'WMATA', 37786)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (524, N'WMATA YR3', 37786)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (525, N'WMATA', 37788)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (525, N'WMATA YR3', 37788)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (527, N'WMATA', 37802)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (527, N'WMATA YR3', 37802)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (529, N'WMATA', 37842)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (531, N'WMATA', 37630)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (531, N'WMATA YR1', 37630)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (532, N'WMATA', 37630)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (532, N'WMATA YR1', 37630)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (533, N'WMATA', 37631)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (533, N'WMATA YR3', 37631)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (535, N'WMATA', 37631)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (535, N'WMATA YR3', 37631)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (536, N'WMATA', 37634)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (536, N'WMATA YR1', 37634)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (537, N'WMATA', 37634)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (537, N'WMATA YR1', 37634)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (538, N'WMATA', 37634)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (538, N'WMATA YR1', 37634)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (539, N'WMATA', 37635)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (539, N'WMATA YR2', 37635)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (540, N'WMATA', 37634)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (540, N'WMATA YR1', 37634)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (542, N'WMATA', 37644)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (542, N'WMATA YR3', 37644)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (544, N'WMATA', 37645)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (544, N'WMATA YR3', 37645)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (547, N'WMATA', 37646)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (547, N'WMATA YR1', 37646)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (548, N'WMATA', 37646)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (548, N'WMATA YR1', 37646)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (551, N'WMATA', 37646)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (551, N'WMATA YR1', 37646)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (552, N'WMATA', 37646)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (552, N'WMATA YR1', 37646)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (553, N'WMATA', 37647)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (553, N'WMATA YR2', 37647)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (554, N'WMATA', 37648)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (554, N'WMATA YR3', 37648)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (557, N'WMATA', 37653)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (557, N'WMATA YR1', 37653)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (558, N'WMATA', 37653)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (558, N'WMATA YR1', 37653)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (559, N'WMATA', 37653)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (559, N'WMATA YR1', 37653)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (560, N'WMATA', 37653)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (560, N'WMATA YR1', 37653)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (561, N'WMATA', 37654)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (561, N'WMATA YR2', 37654)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (562, N'WMATA', 37655)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (562, N'WMATA YR2', 37655)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (565, N'WMATA', 37657)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (565, N'WMATA YR3', 37657)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (576, N'WMATA', 37732)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (576, N'WMATA YR1', 37732)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (577, N'WMATA', 37732)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (577, N'WMATA YR1', 37732)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (578, N'WMATA', 37732)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (578, N'WMATA YR1', 37732)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (579, N'WMATA', 37739)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (579, N'WMATA YR1', 37739)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (580, N'WMATA', 37736)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (580, N'WMATA YR1', 37736)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (581, N'WMATA', 37737)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (581, N'WMATA YR2', 37737)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (583, N'WMATA', 37742)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (583, N'WMATA YR3', 37742)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (587, N'WMATA', 37732)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (587, N'WMATA YR1', 37732)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (588, N'WMATA', 37947)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (588, N'WMATA YR1', 37947)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (591, N'WMATA', 37980)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (591, N'WMATA YR1', 37980)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (592, N'WMATA', 37980)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (592, N'WMATA YR1', 37980)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (593, N'WMATA', 37980)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (593, N'WMATA YR1', 37980)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (595, N'WMATA', 37980)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (595, N'WMATA YR1', 37980)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (601, N'WMATA', 37980)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (601, N'WMATA YR1', 37980)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (603, N'WMATA', 37884)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (603, N'WMATA YR1', 37884)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (605, N'WMATA', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (605, N'WMATA YR1', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (606, N'WMATA', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (606, N'WMATA YR1', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (607, N'WMATA', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (607, N'WMATA YR1', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (608, N'WMATA', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (608, N'WMATA YR1', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (609, N'WMATA', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (609, N'WMATA YR1', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (610, N'WMATA', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (610, N'WMATA YR1', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (612, N'WMATA', 37985)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (614, N'WMATA', 37988)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (615, N'WMATA', 37989)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (616, N'WMATA', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (616, N'WMATA YR1', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (620, N'WMATA', 37982)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (622, N'WMATA', 37999)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (622, N'WMATA YR1', 37999)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (623, N'WMATA', 38000)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (623, N'WMATA YR1', 38000)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (630, N'WMATA', 37884)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (630, N'WMATA YR1', 37884)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (631, N'WMATA', 37884)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (631, N'WMATA YR1', 37884)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (632, N'WMATA', 37884)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (632, N'WMATA YR1', 37884)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (634, N'WMATA', 37887)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (636, N'WMATA', 37887)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (638, N'WMATA', 37887)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (640, N'WMATA', 37656)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (640, N'WMATA YR3', 37656)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (641, N'WMATA', 37663)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (643, N'WMATA', 37676)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (643, N'WMATA YR2', 37676)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (644, N'WMATA', 37679)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (644, N'WMATA YR3', 37679)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (645, N'WMATA', 37677)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (645, N'WMATA YR3', 37677)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (646, N'WMATA', 37678)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (646, N'WMATA YR3', 37678)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (648, N'WMATA', 37686)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (648, N'WMATA YR3', 37686)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (649, N'WMATA', 37687)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (649, N'WMATA YR3', 37687)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (650, N'WMATA', 37688)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (650, N'WMATA YR3', 37688)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (651, N'WMATA', 37689)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (651, N'WMATA YR3', 37689)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (652, N'WMATA', 37687)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (652, N'WMATA YR3', 37687)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (654, N'WMATA', 37683)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (654, N'WMATA YR3', 37683)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (655, N'WMATA', 37683)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (655, N'WMATA YR3', 37683)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (656, N'WMATA', 37684)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (656, N'WMATA YR3', 37684)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (657, N'WMATA', 37676)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (657, N'WMATA YR2', 37676)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (658, N'WMATA', 37690)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (658, N'WMATA YR2', 37690)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (659, N'WMATA', 37690)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (659, N'WMATA YR2', 37690)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (660, N'WMATA', 37690)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (660, N'WMATA YR2', 37690)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (661, N'WMATA', 37691)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (661, N'WMATA YR2', 37691)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (662, N'WMATA', 37692)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (662, N'WMATA YR2', 37692)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (663, N'WMATA', 37693)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (663, N'WMATA YR2', 37693)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (664, N'WMATA', 37660)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (664, N'WMATA YR2', 37660)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (665, N'WMATA', 37661)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (665, N'WMATA YR2', 37661)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (666, N'WMATA', 37662)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (666, N'WMATA YR2', 37662)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (669, N'WMATA', 37764)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (669, N'WMATA YR2', 37764)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (675, N'WMATA', 37766)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (675, N'WMATA YR2', 37766)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (677, N'WMATA', 37767)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (677, N'WMATA YR2', 37767)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (678, N'WMATA', 37767)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (678, N'WMATA YR2', 37767)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (679, N'WMATA', 37767)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (679, N'WMATA YR2', 37767)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (680, N'WMATA', 37767)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (680, N'WMATA YR2', 37767)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (682, N'WMATA', 37768)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (682, N'WMATA YR2', 37768)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (683, N'WMATA', 37769)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (683, N'WMATA YR2', 37769)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (684, N'WMATA', 37770)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (684, N'WMATA YR3', 37770)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (691, N'WMATA', 37615)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (691, N'WMATA YR3', 37615)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (693, N'WMATA', 37765)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (693, N'WMATA YR3', 37765)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (694, N'WMATA', 37765)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (694, N'WMATA YR3', 37765)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (703, N'WMATA', 37912)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (703, N'WMATA YR1', 37912)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (704, N'WMATA', 37912)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (704, N'WMATA YR1', 37912)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (705, N'WMATA', 37912)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (705, N'WMATA YR1', 37912)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (707, N'WMATA', 37626)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (707, N'WMATA YR2', 37626)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (708, N'WMATA', 37626)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (708, N'WMATA YR2', 37626)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (709, N'WMATA', 37626)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (709, N'WMATA YR2', 37626)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (710, N'WMATA', 37907)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (710, N'WMATA YR3', 37907)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (711, N'WMATA', 37905)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (711, N'WMATA YR2', 37905)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (712, N'WMATA', 37905)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (712, N'WMATA YR2', 37905)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (713, N'WMATA', 37906)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (716, N'WMATA', 37913)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (719, N'WMATA', 37895)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (720, N'WMATA', 37915)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (720, N'WMATA YR2', 37915)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (721, N'WMATA', 37915)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (721, N'WMATA YR2', 37915)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (722, N'WMATA', 37915)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (722, N'WMATA YR2', 37915)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (723, N'WMATA', 37893)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (724, N'WMATA', 37893)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (725, N'WMATA', 37893)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (728, N'WMATA', 37894)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (728, N'WMATA YR2', 37894)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (729, N'WMATA', 37894)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (729, N'WMATA YR2', 37894)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (730, N'WMATA', 37894)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (730, N'WMATA YR2', 37894)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (742, N'WMATA', 37623)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (742, N'WMATA YR3', 37623)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (746, N'WMATA', 37750)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (746, N'WMATA YR2', 37750)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (747, N'WMATA', 37750)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (747, N'WMATA YR2', 37750)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (748, N'WMATA', 37750)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (748, N'WMATA YR2', 37750)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (749, N'WMATA', 37750)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (749, N'WMATA YR2', 37750)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (750, N'WMATA', 37751)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (750, N'WMATA YR3', 37751)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (751, N'WMATA', 37751)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (751, N'WMATA YR3', 37751)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (752, N'WMATA', 37752)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (752, N'WMATA YR1', 37752)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (753, N'WMATA', 37753)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (753, N'WMATA YR2', 37753)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (754, N'WMATA', 37754)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (754, N'WMATA YR2', 37754)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (755, N'WMATA', 37755)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (755, N'WMATA YR2', 37755)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (758, N'WMATA', 37760)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (758, N'WMATA YR2', 37760)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (759, N'WMATA', 37757)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (759, N'WMATA YR1', 37757)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (760, N'WMATA', 37757)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (760, N'WMATA YR1', 37757)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (761, N'WMATA', 37757)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (761, N'WMATA YR1', 37757)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (762, N'WMATA', 37757)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (762, N'WMATA YR1', 37757)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (763, N'WMATA', 37757)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (763, N'WMATA YR1', 37757)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (764, N'WMATA', 37758)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (766, N'WMATA', 37759)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (766, N'WMATA YR2', 37759)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (772, N'WMATA', 37762)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (772, N'WMATA YR3', 37762)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (773, N'WMATA', 37590)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (773, N'WMATA YR1', 37590)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (774, N'WMATA', 37590)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (774, N'WMATA YR1', 37590)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (775, N'WMATA', 37590)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (775, N'WMATA YR1', 37590)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (779, N'WMATA', 37591)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (779, N'WMATA YR1', 37591)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (780, N'WMATA', 37592)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (780, N'WMATA YR1', 37592)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (782, N'WMATA', 37594)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (782, N'WMATA YR1', 37594)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (783, N'WMATA', 37596)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (783, N'WMATA YR1', 37596)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (784, N'WMATA', 37596)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (784, N'WMATA YR1', 37596)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (785, N'WMATA', 37597)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (785, N'WMATA YR2', 37597)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (786, N'WMATA', 37598)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (786, N'WMATA YR2', 37598)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (788, N'WMATA', 37599)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (788, N'WMATA YR1', 37599)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (790, N'WMATA', 37600)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (790, N'WMATA YR2', 37600)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (794, N'WMATA', 37604)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (794, N'WMATA YR1', 37604)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (797, N'WMATA', 37606)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (797, N'WMATA YR1', 37606)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (799, N'WMATA', 37607)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (799, N'WMATA YR2', 37607)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (800, N'WMATA', 37610)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (800, N'WMATA YR3', 37610)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (801, N'WMATA', 37585)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (801, N'WMATA YR1', 37585)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (812, N'WMATA', 37586)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (812, N'WMATA YR1', 37586)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (814, N'WMATA', 37586)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (814, N'WMATA YR1', 37586)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (815, N'WMATA', 37586)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (815, N'WMATA YR1', 37586)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (816, N'WMATA', 37587)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (816, N'WMATA YR2', 37587)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (818, N'WMATA', 37589)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (818, N'WMATA YR1', 37589)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (895, N'WMATA', 37773)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (895, N'WMATA YR1', 37773)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (991, N'WMATA', 37731)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (991, N'WMATA YR3', 37731)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1217, N'WMATA', 37812)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1244, N'WMATA', 37650)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1244, N'WMATA YR1', 37650)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1259, N'WMATA', 37551)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1259, N'WMATA YR1', 37551)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1260, N'WMATA', 37603)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1260, N'WMATA YR2', 37603)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1269, N'WMATA', 37564)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1269, N'WMATA YR1', 37564)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1280, N'WMATA', 37546)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1280, N'WMATA YR1', 37546)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1282, N'WMATA', 37609)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1282, N'WMATA YR3', 37609)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1283, N'WMATA', 37610)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1283, N'WMATA YR3', 37610)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1284, N'WMATA', 37584)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1284, N'WMATA YR2', 37584)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1292, N'WMATA', 37612)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1292, N'WMATA YR2', 37612)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1293, N'WMATA', 37612)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1293, N'WMATA YR2', 37612)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1297, N'WMATA', 37618)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1297, N'WMATA YR2', 37618)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1301, N'WMATA', 37634)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1301, N'WMATA YR1', 37634)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1302, N'WMATA', 37634)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1302, N'WMATA YR1', 37634)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1304, N'WMATA', 37643)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1304, N'WMATA YR3', 37643)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1308, N'WMATA', 37653)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1308, N'WMATA YR1', 37653)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1309, N'WMATA', 37659)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1310, N'WMATA', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1310, N'WMATA YR2', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1311, N'WMATA', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1311, N'WMATA YR2', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1312, N'WMATA', 37667)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1312, N'WMATA YR3', 37667)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1313, N'WMATA', 37668)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1313, N'WMATA YR3', 37668)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1314, N'WMATA', 37675)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1314, N'WMATA YR3', 37675)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1315, N'WMATA', 37690)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1315, N'WMATA YR2', 37690)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1316, N'WMATA', 37694)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1316, N'WMATA YR2', 37694)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1321, N'WMATA', 37709)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1321, N'WMATA YR3', 37709)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1324, N'WMATA', 37714)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1324, N'WMATA YR2', 37714)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1326, N'WMATA', 37716)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1326, N'WMATA YR1', 37716)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1327, N'WMATA', 37716)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1327, N'WMATA YR1', 37716)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1328, N'WMATA', 37716)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1328, N'WMATA YR1', 37716)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1329, N'WMATA', 37716)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1329, N'WMATA YR1', 37716)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1330, N'WMATA', 37716)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1330, N'WMATA YR1', 37716)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1334, N'WMATA', 37738)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1334, N'WMATA YR1', 37738)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1336, N'WMATA', 37761)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1336, N'WMATA YR3', 37761)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1337, N'WMATA', 37761)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1337, N'WMATA YR3', 37761)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1338, N'WMATA', 37761)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1338, N'WMATA YR3', 37761)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1346, N'WMATA', 37771)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1346, N'WMATA YR3', 37771)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1352, N'WMATA', 37794)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1352, N'WMATA YR2', 37794)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1356, N'WMATA', 37787)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1356, N'WMATA YR3', 37787)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1358, N'WMATA', 37809)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1367, N'WMATA', 37844)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1368, N'WMATA', 37814)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1369, N'WMATA', 37815)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1378, N'WMATA', 37909)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1384, N'WMATA', 37912)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1384, N'WMATA YR1', 37912)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1392, N'WMATA', 37930)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1405, N'WMATA', 37926)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1406, N'WMATA', 37927)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1407, N'WMATA', 37928)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1416, N'WMATA', 37984)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1421, N'WMATA', 37852)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1421, N'WMATA YR2', 37852)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1468, N'WMATA', 37706)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1468, N'WMATA YR3', 37706)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1840, N'WMATA', 37542)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1840, N'WMATA YR2', 37542)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1853, N'WMATA', 37565)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1853, N'WMATA YR1', 37565)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1854, N'WMATA', 37567)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1854, N'WMATA YR1', 37567)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1865, N'WMATA', 37608)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1865, N'WMATA YR3', 37608)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1871, N'WMATA', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1871, N'WMATA YR2', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1872, N'WMATA', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1872, N'WMATA YR2', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1873, N'WMATA', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1873, N'WMATA YR2', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1874, N'WMATA', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1874, N'WMATA YR2', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1875, N'WMATA', 37622)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1875, N'WMATA YR2', 37622)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1877, N'WMATA', 37624)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1877, N'WMATA YR3', 37624)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1878, N'WMATA', 37638)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1878, N'WMATA YR3', 37638)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1882, N'WMATA', 37658)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1882, N'WMATA YR3', 37658)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1883, N'WMATA', 37658)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1883, N'WMATA YR3', 37658)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1885, N'WMATA', 37627)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1885, N'WMATA YR2', 37627)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1886, N'WMATA', 37627)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1886, N'WMATA YR2', 37627)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1889, N'WMATA', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1889, N'WMATA YR2', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1890, N'WMATA', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1890, N'WMATA YR2', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1891, N'WMATA', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1891, N'WMATA YR2', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1892, N'WMATA', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1892, N'WMATA YR2', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1893, N'WMATA', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1893, N'WMATA YR2', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1894, N'WMATA', 37670)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1894, N'WMATA YR3', 37670)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1896, N'WMATA', 37669)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1896, N'WMATA YR3', 37669)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1899, N'WMATA', 37671)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1899, N'WMATA YR2', 37671)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1900, N'WMATA', 37672)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1900, N'WMATA YR3', 37672)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1902, N'WMATA', 37673)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1902, N'WMATA YR2', 37673)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1903, N'WMATA', 37673)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1903, N'WMATA YR2', 37673)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1904, N'WMATA', 37674)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1904, N'WMATA YR3', 37674)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1905, N'WMATA', 37675)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1905, N'WMATA YR3', 37675)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1906, N'WMATA', 37680)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1906, N'WMATA YR2', 37680)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1908, N'WMATA', 37686)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1908, N'WMATA YR3', 37686)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1911, N'WMATA', 37663)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1913, N'WMATA', 37664)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1916, N'WMATA', 37706)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1916, N'WMATA YR3', 37706)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1917, N'WMATA', 37708)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1917, N'WMATA YR1', 37708)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1920, N'WMATA', 37712)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1927, N'WMATA', 37718)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1927, N'WMATA YR3', 37718)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1939, N'WMATA', 37697)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1939, N'WMATA YR2', 37697)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1946, N'WMATA', 37740)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1946, N'WMATA YR1', 37740)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1947, N'WMATA', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1947, N'WMATA YR3', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1948, N'WMATA', 37745)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1950, N'WMATA', 37746)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1951, N'WMATA', 37747)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1952, N'WMATA', 37748)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1967, N'WMATA', 37780)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1967, N'WMATA YR2', 37780)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1968, N'WMATA', 37816)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1969, N'WMATA', 37817)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1970, N'WMATA', 37818)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1971, N'WMATA', 37819)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1972, N'WMATA', 37820)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1974, N'WMATA', 37886)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1975, N'WMATA', 37888)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1981, N'WMATA', 37897)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1984, N'WMATA', 37900)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1985, N'WMATA', 37900)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1987, N'WMATA', 37929)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1995, N'WMATA', 37941)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (1995, N'WMATA YR2', 37941)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (2006, N'WMATA', 37986)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (2007, N'WMATA', 37997)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (2013, N'WMATA', 37995)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (2022, N'WMATA', 37972)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (2804, N'WMATA', 37823)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (2819, N'WMATA', 37827)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (2820, N'WMATA', 37827)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (2821, N'WMATA', 37827)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (2839, N'WMATA', 37831)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (2841, N'WMATA', 37969)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (2853, N'WMATA', 37832)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (2854, N'WMATA', 37832)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (2867, N'WMATA', 37826)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (3848, N'WMATA', 38023)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (3875, N'WMATA', 38026)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (3876, N'WMATA', 38002)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (3944, N'WMATA', 38003)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9716, N'WMATA', 37523)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9718, N'WMATA', 37523)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9726, N'WMATA', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9726, N'WMATA YR1', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9727, N'WMATA', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9727, N'WMATA YR1', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9729, N'WMATA', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9729, N'WMATA YR1', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9730, N'WMATA', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9730, N'WMATA YR1', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9732, N'WMATA', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9732, N'WMATA YR1', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9737, N'WMATA', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9737, N'WMATA YR1', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9738, N'WMATA', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9738, N'WMATA YR1', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9745, N'WMATA', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9745, N'WMATA YR1', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9747, N'WMATA', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9747, N'WMATA YR1', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9769, N'WMATA', 37546)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9769, N'WMATA YR1', 37546)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9770, N'WMATA', 37546)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9770, N'WMATA YR1', 37546)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9771, N'WMATA', 37546)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9771, N'WMATA YR1', 37546)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9772, N'WMATA', 37546)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9772, N'WMATA YR1', 37546)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9773, N'WMATA', 37547)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9773, N'WMATA YR1', 37547)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9791, N'WMATA', 37570)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9791, N'WMATA YR2', 37570)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9792, N'WMATA', 37571)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9792, N'WMATA YR1', 37571)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9793, N'WMATA', 37571)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9793, N'WMATA YR1', 37571)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9794, N'WMATA', 37571)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9794, N'WMATA YR1', 37571)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9795, N'WMATA', 37571)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9795, N'WMATA YR1', 37571)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9821, N'WMATA', 37525)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9821, N'WMATA YR1', 37525)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9823, N'WMATA', 37528)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9823, N'WMATA YR1', 37528)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9824, N'WMATA', 37528)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9824, N'WMATA YR1', 37528)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9827, N'WMATA', 37529)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9827, N'WMATA YR1', 37529)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9829, N'WMATA', 37529)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9829, N'WMATA YR1', 37529)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9832, N'WMATA', 37532)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9832, N'WMATA YR1', 37532)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9833, N'WMATA', 37532)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9833, N'WMATA YR1', 37532)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9837, N'WMATA', 37534)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9837, N'WMATA YR2', 37534)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9838, N'WMATA', 37534)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9838, N'WMATA YR2', 37534)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9845, N'WMATA', 37535)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9847, N'WMATA', 37536)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9847, N'WMATA YR1', 37536)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9848, N'WMATA', 37536)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9848, N'WMATA YR1', 37536)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9849, N'WMATA', 37536)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9849, N'WMATA YR1', 37536)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9850, N'WMATA', 37537)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9850, N'WMATA YR2', 37537)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9851, N'WMATA', 37537)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9851, N'WMATA YR2', 37537)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9852, N'WMATA', 37538)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9852, N'WMATA YR2', 37538)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9853, N'WMATA', 37539)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9853, N'WMATA YR2', 37539)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9855, N'WMATA', 37541)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9855, N'WMATA YR1', 37541)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9856, N'WMATA', 37541)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9856, N'WMATA YR1', 37541)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9857, N'WMATA', 37541)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9857, N'WMATA YR1', 37541)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9859, N'WMATA', 37552)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9859, N'WMATA YR2', 37552)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9860, N'WMATA', 37552)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9860, N'WMATA YR2', 37552)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9862, N'WMATA', 37553)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9862, N'WMATA YR2', 37553)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9863, N'WMATA', 37553)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9863, N'WMATA YR2', 37553)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9864, N'WMATA', 37553)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9864, N'WMATA YR2', 37553)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9865, N'WMATA', 37553)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9865, N'WMATA YR2', 37553)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9866, N'WMATA', 37554)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9866, N'WMATA YR2', 37554)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9868, N'WMATA', 37556)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9868, N'WMATA YR2', 37556)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9869, N'WMATA', 37556)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9869, N'WMATA YR2', 37556)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9870, N'WMATA', 37556)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9870, N'WMATA YR2', 37556)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9871, N'WMATA', 37556)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9871, N'WMATA YR2', 37556)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9882, N'WMATA', 37575)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9888, N'WMATA', 37577)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9888, N'WMATA YR3', 37577)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9897, N'WMATA', 37579)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9913, N'WMATA', 37590)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9913, N'WMATA YR1', 37590)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9932, N'WMATA', 37595)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9932, N'WMATA YR2', 37595)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9949, N'WMATA', 37601)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9949, N'WMATA YR2', 37601)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9951, N'WMATA', 37599)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9951, N'WMATA YR1', 37599)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9952, N'WMATA', 37599)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9952, N'WMATA YR1', 37599)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9961, N'WMATA', 37945)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9985, N'WMATA', 37588)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9985, N'WMATA YR2', 37588)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9986, N'WMATA', 37588)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9986, N'WMATA YR2', 37588)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (9997, N'WMATA', 37611)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10011, N'WMATA', 37613)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10011, N'WMATA YR3', 37613)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10032, N'WMATA', 37839)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10033, N'WMATA', 37839)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10036, N'WMATA', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10036, N'WMATA YR2', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10037, N'WMATA', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10037, N'WMATA YR2', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10038, N'WMATA', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10038, N'WMATA YR2', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10039, N'WMATA', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10039, N'WMATA YR2', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10042, N'WMATA', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10042, N'WMATA YR2', 37619)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10059, N'WMATA', 37804)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10078, N'WMATA', 37637)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10078, N'WMATA YR3', 37637)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10081, N'WMATA', 37641)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10081, N'WMATA YR1', 37641)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10237, N'WMATA', 37696)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10240, N'WMATA', 37707)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10240, N'WMATA YR1', 37707)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10307, N'WMATA', 37716)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10307, N'WMATA YR1', 37716)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10322, N'WMATA', 37722)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10322, N'WMATA YR3', 37722)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10323, N'WMATA', 37722)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10323, N'WMATA YR3', 37722)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10337, N'WMATA', 37725)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10339, N'WMATA', 37726)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10339, N'WMATA YR2', 37726)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10340, N'WMATA', 37726)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10340, N'WMATA YR2', 37726)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10351, N'WMATA', 37735)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10351, N'WMATA YR2', 37735)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10365, N'WMATA', 37741)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10365, N'WMATA YR1', 37741)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10408, N'WMATA', 37749)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10455, N'WMATA', 37763)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10466, N'WMATA', 37773)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10466, N'WMATA YR1', 37773)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10477, N'WMATA', 37774)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10513, N'WMATA', 37799)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10513, N'WMATA YR2', 37799)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10514, N'WMATA', 37799)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10514, N'WMATA YR2', 37799)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10564, N'WMATA', 37810)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10564, N'WMATA YR2', 37810)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10565, N'WMATA', 37810)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10565, N'WMATA YR2', 37810)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10566, N'WMATA', 37810)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10566, N'WMATA YR2', 37810)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10567, N'WMATA', 37810)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10567, N'WMATA YR2', 37810)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10568, N'WMATA', 37810)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10568, N'WMATA YR2', 37810)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10573, N'WMATA', 37811)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10574, N'WMATA', 37811)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10579, N'WMATA', 37811)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10597, N'WMATA', 37836)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10644, N'WMATA', 37849)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10695, N'WMATA', 37880)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10697, N'WMATA', 37880)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10703, N'WMATA', 37813)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10713, N'WMATA', 37882)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10713, N'WMATA YR2', 37882)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10744, N'WMATA', 37892)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10765, N'WMATA', 37911)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10798, N'WMATA', 37916)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10799, N'WMATA', 37916)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10813, N'WMATA', 38009)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10835, N'WMATA', 38003)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10837, N'WMATA', 38003)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10872, N'WMATA', 37959)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10872, N'WMATA YR1', 37959)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10963, N'WMATA', 37695)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (10963, N'WMATA YR2', 37695)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11061, N'WMATA', 37987)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11216, N'WMATA', 37524)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11216, N'WMATA YR2', 37524)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11218, N'WMATA', 37525)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11218, N'WMATA YR1', 37525)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11236, N'WMATA', 37529)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11236, N'WMATA YR1', 37529)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11258, N'WMATA', 37540)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11258, N'WMATA YR2', 37540)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11278, N'WMATA', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11278, N'WMATA YR1', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11279, N'WMATA', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11279, N'WMATA YR1', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11288, N'WMATA', 37549)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11288, N'WMATA YR1', 37549)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11291, N'WMATA', 37546)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11291, N'WMATA YR1', 37546)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11303, N'WMATA', 37555)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11303, N'WMATA YR2', 37555)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11306, N'WMATA', 37555)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11306, N'WMATA YR2', 37555)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11366, N'WMATA', 37569)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11366, N'WMATA YR2', 37569)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11369, N'WMATA', 37569)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11369, N'WMATA YR2', 37569)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11410, N'WMATA', 37590)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11410, N'WMATA YR1', 37590)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11433, N'WMATA', 37605)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11433, N'WMATA YR2', 37605)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11434, N'WMATA', 37945)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11445, N'WMATA', 37614)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11445, N'WMATA YR3', 37614)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11488, N'WMATA', 37636)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11488, N'WMATA YR2', 37636)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11492, N'WMATA', 37642)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11492, N'WMATA YR3', 37642)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11616, N'WMATA', 37682)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11616, N'WMATA YR3', 37682)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11623, N'WMATA', 37681)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11623, N'WMATA YR3', 37681)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11625, N'WMATA', 37683)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11625, N'WMATA YR3', 37683)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11633, N'WMATA', 37685)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11633, N'WMATA YR2', 37685)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11634, N'WMATA', 37685)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11634, N'WMATA YR2', 37685)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11697, N'WMATA', 37727)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11697, N'WMATA YR3', 37727)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11700, N'WMATA', 37733)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11700, N'WMATA YR2', 37733)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11731, N'WMATA', 37761)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11731, N'WMATA YR3', 37761)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11732, N'WMATA', 37761)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11732, N'WMATA YR3', 37761)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11733, N'WMATA', 37761)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11733, N'WMATA YR3', 37761)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11792, N'WMATA', 37787)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11792, N'WMATA YR3', 37787)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11843, N'WMATA', 37808)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11843, N'WMATA YR3', 37808)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11921, N'WMATA', 38010)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (11923, N'WMATA', 38010)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12080, N'WMATA', 37951)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12080, N'WMATA YR2', 37951)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12153, N'WMATA', 37996)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12169, N'WMATA', 37527)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12169, N'WMATA YR1', 37527)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12232, N'WMATA', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12232, N'WMATA YR1', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12237, N'WMATA', 37545)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12237, N'WMATA YR1', 37545)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12238, N'WMATA', 37545)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12238, N'WMATA YR1', 37545)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12239, N'WMATA', 37545)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12239, N'WMATA YR1', 37545)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12258, N'WMATA', 37557)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12259, N'WMATA', 37557)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12260, N'WMATA', 37557)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12275, N'WMATA', 37561)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12276, N'WMATA', 37561)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12281, N'WMATA', 37561)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12282, N'WMATA', 37561)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12340, N'WMATA', 37863)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12341, N'WMATA', 37863)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12342, N'WMATA', 37863)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12343, N'WMATA', 37863)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12349, N'WMATA', 37823)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12357, N'WMATA', 37823)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12358, N'WMATA', 37611)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12401, N'WMATA', 37827)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12412, N'WMATA', 37583)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12413, N'WMATA', 37583)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12451, N'WMATA', 37602)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12451, N'WMATA YR2', 37602)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12456, N'WMATA', 37599)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12456, N'WMATA YR1', 37599)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12486, N'WMATA', 37955)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12505, N'WMATA', 37633)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12505, N'WMATA YR3', 37633)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12522, N'WMATA', 37645)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12522, N'WMATA YR3', 37645)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12596, N'WMATA', 37830)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12668, N'WMATA', 37702)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12668, N'WMATA YR3', 37702)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12669, N'WMATA', 37699)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12748, N'WMATA', 37761)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12748, N'WMATA YR3', 37761)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12835, N'WMATA', 37798)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12835, N'WMATA YR3', 37798)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12890, N'WMATA', 38011)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12892, N'WMATA', 38020)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12896, N'WMATA', 38016)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12898, N'WMATA', 38022)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12900, N'WMATA', 38024)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12901, N'WMATA', 38024)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12902, N'WMATA', 38019)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12905, N'WMATA', 38014)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12908, N'WMATA', 38009)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12925, N'WMATA', 37896)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12957, N'WMATA', 37898)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12958, N'WMATA', 37898)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12959, N'WMATA', 37898)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12960, N'WMATA', 37898)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (12961, N'WMATA', 37898)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13009, N'WMATA', 38025)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13019, N'WMATA', 38004)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13023, N'WMATA', 38005)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13039, N'WMATA', 37901)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13039, N'WMATA YR1', 37901)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13040, N'WMATA', 37901)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13040, N'WMATA YR1', 37901)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13044, N'WMATA', 37909)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13045, N'WMATA', 37909)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13054, N'WMATA', 37910)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13117, N'WMATA', 37948)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13119, N'WMATA', 37948)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13182, N'WMATA', 37952)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13182, N'WMATA YR1', 37952)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13185, N'WMATA', 37953)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13185, N'WMATA YR1', 37953)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13200, N'WMATA', 37843)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13233, N'WMATA', 37973)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13233, N'WMATA YR2', 37973)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13248, N'WMATA', 37531)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13280, N'WMATA', 37994)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13281, N'WMATA', 37994)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13282, N'WMATA', 37994)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13290, N'WMATA', 37998)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13331, N'WMATA', 37560)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13337, N'WMATA', 37872)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (13340, N'WMATA', 37826)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (15979, N'WMATA', 37523)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (15980, N'WMATA', 37523)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (15981, N'WMATA', 37523)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (15985, N'WMATA', 37559)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (15990, N'WMATA', 37525)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (15990, N'WMATA YR1', 37525)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (15992, N'WMATA', 37541)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (15992, N'WMATA YR1', 37541)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (15993, N'WMATA', 37575)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (15998, N'WMATA', 37583)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (15999, N'WMATA', 37583)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16000, N'WMATA', 37593)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16003, N'WMATA', 37611)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16004, N'WMATA', 37611)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16005, N'WMATA', 37611)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16006, N'WMATA', 37612)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16006, N'WMATA YR2', 37612)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16009, N'WMATA', 37618)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16009, N'WMATA YR2', 37618)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16010, N'WMATA', 37618)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16010, N'WMATA YR2', 37618)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16014, N'WMATA', 37621)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16014, N'WMATA YR3', 37621)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16015, N'WMATA', 37621)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16015, N'WMATA YR3', 37621)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16017, N'WMATA', 37625)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16018, N'WMATA', 37625)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16019, N'WMATA', 37625)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16022, N'WMATA', 37628)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16022, N'WMATA YR3', 37628)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16023, N'WMATA', 37628)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16023, N'WMATA YR3', 37628)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16024, N'WMATA', 37628)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16024, N'WMATA YR3', 37628)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16025, N'WMATA', 37629)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16025, N'WMATA YR3', 37629)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16026, N'WMATA', 37659)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16027, N'WMATA', 37659)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16028, N'WMATA', 37659)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16029, N'WMATA', 37695)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16029, N'WMATA YR2', 37695)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16030, N'WMATA', 37696)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16031, N'WMATA', 37696)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16033, N'WMATA', 37716)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16033, N'WMATA YR1', 37716)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16037, N'WMATA', 37723)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16037, N'WMATA YR3', 37723)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16040, N'WMATA', 37698)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16040, N'WMATA YR3', 37698)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16041, N'WMATA', 37698)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16041, N'WMATA YR3', 37698)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16042, N'WMATA', 37698)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16042, N'WMATA YR3', 37698)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16043, N'WMATA', 37700)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16043, N'WMATA YR3', 37700)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16044, N'WMATA', 37701)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16044, N'WMATA YR3', 37701)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16045, N'WMATA', 37703)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16045, N'WMATA YR3', 37703)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16046, N'WMATA', 37703)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16046, N'WMATA YR3', 37703)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16055, N'WMATA', 37870)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16056, N'WMATA', 37870)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16058, N'WMATA', 37725)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16059, N'WMATA', 37725)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16063, N'WMATA', 37732)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16063, N'WMATA YR1', 37732)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16064, N'WMATA', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16064, N'WMATA YR3', 37743)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16065, N'WMATA', 37744)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16066, N'WMATA', 37744)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16067, N'WMATA', 37744)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16068, N'WMATA', 37749)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16069, N'WMATA', 37749)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16070, N'WMATA', 37752)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16070, N'WMATA YR1', 37752)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16071, N'WMATA', 37763)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16072, N'WMATA', 37763)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16079, N'WMATA', 37774)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16080, N'WMATA', 37774)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16082, N'WMATA', 37787)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16082, N'WMATA YR3', 37787)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16083, N'WMATA', 37790)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16084, N'WMATA', 37791)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16085, N'WMATA', 37791)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16086, N'WMATA', 37803)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16087, N'WMATA', 37803)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16088, N'WMATA', 37803)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16089, N'WMATA', 37804)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16090, N'WMATA', 37805)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16091, N'WMATA', 37813)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16092, N'WMATA', 37813)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16093, N'WMATA', 37836)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16094, N'WMATA', 37821)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16095, N'WMATA', 37822)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16096, N'WMATA', 37822)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16097, N'WMATA', 37824)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16098, N'WMATA', 37826)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16103, N'WMATA', 37831)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16104, N'WMATA', 37831)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16105, N'WMATA', 37832)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16106, N'WMATA', 37832)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16107, N'WMATA', 37832)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16109, N'WMATA', 37837)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16110, N'WMATA', 37837)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16111, N'WMATA', 37837)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16112, N'WMATA', 37834)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16113, N'WMATA', 37834)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16114, N'WMATA', 37834)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16115, N'WMATA', 37834)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16116, N'WMATA', 37849)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16117, N'WMATA', 37849)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16119, N'WMATA', 37882)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16119, N'WMATA YR2', 37882)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16120, N'WMATA', 37882)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16120, N'WMATA YR2', 37882)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16121, N'WMATA', 37883)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16122, N'WMATA', 37883)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16123, N'WMATA', 37884)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16123, N'WMATA YR1', 37884)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16124, N'WMATA', 37889)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16125, N'WMATA', 37890)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16126, N'WMATA', 37890)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16127, N'WMATA', 37890)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16128, N'WMATA', 37891)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16129, N'WMATA', 37892)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16130, N'WMATA', 37892)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16131, N'WMATA', 37903)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16133, N'WMATA', 37904)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16134, N'WMATA', 37905)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16134, N'WMATA YR2', 37905)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16139, N'WMATA', 38009)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16140, N'WMATA', 38013)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16141, N'WMATA', 37917)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16142, N'WMATA', 37917)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16143, N'WMATA', 37917)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16145, N'WMATA', 37954)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16146, N'WMATA', 37954)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16147, N'WMATA', 37954)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16148, N'WMATA', 37954)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16151, N'WMATA', 37921)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16151, N'WMATA YR2', 37921)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16155, N'WMATA', 37964)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16156, N'WMATA', 37964)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16157, N'WMATA', 37977)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16157, N'WMATA YR1', 37977)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16164, N'WMATA', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16164, N'WMATA YR1', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16165, N'WMATA', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16165, N'WMATA YR1', 37981)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (16168, N'WMATA', 37968)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17057, N'WMATA', 37523)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17058, N'WMATA', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17058, N'WMATA YR1', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17059, N'WMATA', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17059, N'WMATA YR1', 37543)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17060, N'WMATA', 37549)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17060, N'WMATA YR1', 37549)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17061, N'WMATA', 37549)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17061, N'WMATA YR1', 37549)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17062, N'WMATA', 37549)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17062, N'WMATA YR1', 37549)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17081, N'WMATA', 37572)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17081, N'WMATA YR1', 37572)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17083, N'WMATA', 37533)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17083, N'WMATA YR1', 37533)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17084, N'WMATA', 37552)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17084, N'WMATA YR2', 37552)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17085, N'WMATA', 37576)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17085, N'WMATA YR2', 37576)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17086, N'WMATA', 37576)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17086, N'WMATA YR2', 37576)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17087, N'WMATA', 37578)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17087, N'WMATA YR3', 37578)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17091, N'WMATA', 37580)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17091, N'WMATA YR3', 37580)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17092, N'WMATA', 37580)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17092, N'WMATA YR3', 37580)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17093, N'WMATA', 37581)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17095, N'WMATA', 37590)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17095, N'WMATA YR1', 37590)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17097, N'WMATA', 37607)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17097, N'WMATA YR2', 37607)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17101, N'WMATA', 37589)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17101, N'WMATA YR1', 37589)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17103, N'WMATA', 37616)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17103, N'WMATA YR3', 37616)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17106, N'WMATA', 37624)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17106, N'WMATA YR3', 37624)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17107, N'WMATA', 37624)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17107, N'WMATA YR3', 37624)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17108, N'WMATA', 37652)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17108, N'WMATA YR3', 37652)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17112, N'WMATA', 37653)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17112, N'WMATA YR1', 37653)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17114, N'WMATA', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17114, N'WMATA YR2', 37665)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17115, N'WMATA', 37671)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17115, N'WMATA YR2', 37671)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17120, N'WMATA', 37723)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17120, N'WMATA YR3', 37723)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17121, N'WMATA', 37724)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17121, N'WMATA YR3', 37724)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17122, N'WMATA', 37726)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17122, N'WMATA YR2', 37726)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17123, N'WMATA', 37729)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17124, N'WMATA', 37734)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17124, N'WMATA YR2', 37734)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17129, N'WMATA', 37756)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17129, N'WMATA YR1', 37756)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17130, N'WMATA', 37772)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17133, N'WMATA', 37799)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17133, N'WMATA YR2', 37799)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17134, N'WMATA', 37800)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17134, N'WMATA YR3', 37800)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17136, N'WMATA', 37808)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17136, N'WMATA YR3', 37808)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17137, N'WMATA', 37846)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17138, N'WMATA', 37823)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17139, N'WMATA', 37823)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17140, N'WMATA', 37823)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17141, N'WMATA', 37823)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17142, N'WMATA', 37823)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17143, N'WMATA', 37823)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17144, N'WMATA', 37823)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17146, N'WMATA', 37826)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17150, N'WMATA', 37828)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17151, N'WMATA', 37828)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17152, N'WMATA', 37828)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17153, N'WMATA', 37828)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17154, N'WMATA', 37829)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17155, N'WMATA', 37830)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17156, N'WMATA', 37830)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17157, N'WMATA', 37832)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17158, N'WMATA', 37833)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17159, N'WMATA', 37833)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17160, N'WMATA', 37833)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17161, N'WMATA', 37833)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17162, N'WMATA', 37834)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17163, N'WMATA', 37834)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17164, N'WMATA', 37838)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17165, N'WMATA', 37839)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17167, N'WMATA', 37956)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17168, N'WMATA', 37956)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17175, N'WMATA', 37923)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17177, N'WMATA', 37940)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17179, N'WMATA', 37944)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17182, N'WMATA', 37946)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17187, N'WMATA', 37988)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17191, N'WMATA', 37970)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17197, N'WMATA', 37974)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17198, N'WMATA', 37974)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17201, N'WMATA', 37975)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17202, N'WMATA', 37976)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17203, N'WMATA', 37976)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17206, N'WMATA', 37979)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17207, N'WMATA', 37979)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17210, N'WMATA', 38001)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17211, N'WMATA', 38001)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17212, N'WMATA', 38001)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17213, N'WMATA', 38008)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17214, N'WMATA', 38012)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17215, N'WMATA', 38015)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17216, N'WMATA', 38017)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17217, N'WMATA', 38018)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17218, N'WMATA', 38006)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17219, N'WMATA', 37801)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17220, N'WMATA', 37840)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17221, N'WMATA', 37858)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17222, N'WMATA', 37859)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17223, N'WMATA', 37859)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17224, N'WMATA', 37859)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17225, N'WMATA', 37859)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17226, N'WMATA', 37859)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17227, N'WMATA', 37859)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17228, N'WMATA', 37859)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17229, N'WMATA', 37860)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17230, N'WMATA', 37860)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17231, N'WMATA', 37861)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17232, N'WMATA', 37862)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17233, N'WMATA', 37863)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17234, N'WMATA', 37863)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17235, N'WMATA', 37863)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17236, N'WMATA', 37864)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17237, N'WMATA', 37865)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17238, N'WMATA', 37866)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17239, N'WMATA', 37867)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17240, N'WMATA', 37868)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17241, N'WMATA', 37869)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17242, N'WMATA', 37870)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17243, N'WMATA', 37870)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17244, N'WMATA', 37870)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17245, N'WMATA', 37871)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17246, N'WMATA', 37873)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17247, N'WMATA', 37873)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17248, N'WMATA', 37873)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17249, N'WMATA', 37873)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17250, N'WMATA', 37873)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17251, N'WMATA', 37874)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17252, N'WMATA', 37875)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17253, N'WMATA', 37876)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17254, N'WMATA', 37877)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17255, N'WMATA', 37877)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17256, N'WMATA', 37877)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17257, N'WMATA', 37878)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17258, N'WMATA', 37879)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17259, N'WMATA', 37880)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17260, N'WMATA', 37880)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17261, N'WMATA', 37880)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17264, N'WMATA', 37885)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17269, N'WMATA', 37908)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17270, N'WMATA', 37908)
INSERT INTO [dbo].[REQUIREMENT_QUESTIONS_SETS] ([Question_Id], [Set_Name], [Requirement_Id]) VALUES (17303, N'WMATA', 37914)
PRINT(N'Operation applied to 1579 rows out of 1579')

PRINT(N'Add rows to [dbo].[MATURITY_QUESTIONS]')
SET IDENTITY_INSERT [dbo].[MATURITY_QUESTIONS] ON
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5270, N'AC.L1-b.1.i', N'Limit information system access to authorized users, processes acting on behalf of authorized users, or devices (including other information systems).', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>authorized users are identified;</li>
<li>processes acting on behalf of authorized users are identified;</li>
<li>devices (and other systems) authorized to connect to the system are identified;</li>
<li>system access is limited to authorized users;</li>
<li>system access is limited to processes acting on behalf of authorized users; and</li>
<li>system access is limited to authorized devices (including other systems).</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing account management; system security plan45; system design documentation; system configuration settings and associated documentation; list of active system accounts and the name of the individual associated with each account; notifications or records of recently transferred, separated, or terminated employees; list of conditions for group and role membership; list of recently disabled system accounts along with the name of the individual associated with each account; access authorization records; account management compliance reviews; system monitoring records; system audit logs and records; list of devices and systems authorized to connect to organizational systems; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with account management responsibilities; system or network administrators; personnel with information security responsibilities].</p>
<p>4 It is recommended that an OSA develop a SSP as a best practice at Level 1, however, it is not required in order to obtain a Level 1 self-assessment.</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for managing system accounts; mechanisms for implementing account management].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Access control policies (e.g., identity- or role-based policies, control matrices, and cryptography) control access between active entities or subjects (i.e., users or processes acting on behalf of users) and passive entities or objects (e.g., devices, files, records, and domains) in systems. Access enforcement mechanisms can be employed at the application and service level to provide increased information security. Other systems include systems internal and external to the organization. This requirement focuses on account management for systems and applications. The definition of and enforcement of access authorizations, other than those determined by account type (e.g., privileged verses [sic] non-privileged) are addressed in AC.L1-b.1.ii.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Identify users, processes, and devices that are allowed to use company computers and can log on to the company network. Automated updates and other automatic processes should be associated with the user who initiated (authorized) the process. Limit the devices (e.g., printers) that can be accessed by company computers. Set up your system so that only authorized users, processes, and devices can access the company network.</p>
<p>This requirement, AC.L1-b.1.i, controls system access based on user, process, or device identity. AC.L1-b.1.i leverages IA.L1-b.1.v which provides a vetted and trusted identity for access control.</p>
<div class="sub-header-2">Example 1</div>
<p>Your company maintains a list of all personnel authorized to use company information systems [a]. This list is used to support identification and authentication activities conducted by IT when authorizing access to systems [a,d].</p>
<div class="sub-header-2">Example 2</div>
<p>A coworker wants to buy a new multi-function printer/scanner/fax device and make it available on the company network. You explain that the company controls system and device access to the network, and will prevent network access by unauthorized systems and devices [c]. You help the coworker submit a ticket that asks for the printer to be granted access to the network, and appropriate leadership approves the device [f].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is a list of authorized users maintained that defines their identities and roles [a]?</li>
<li>Are account requests authorized before system access is granted [d,e,f]?</li>
</ul>

', NULL, NULL, 36, 1, 19, NULL, NULL, 1204, NULL, N'Authorized Access Control', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5271, N'AC.L1-b.1.ii', N'Limit information system access to the types of transactions and functions that authorized users are permitted to execute.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the types of transactions and functions that authorized users are permitted to execute are defined; and</li>
<li>system access is limited to the defined types of transactions and functions for authorized users.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing access enforcement; system security plan; system design documentation; list of approved authorizations including remote access authorizations; system audit logs and records; system configuration settings and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with access enforcement responsibilities; system or network administrators; personnel with information security responsibilities; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing access control policy].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations may choose to define access privileges or other attributes by account, by type of account, or a combination of both. System account types include individual, shared, group, system, anonymous, guest, emergency, developer, manufacturer, vendor, and temporary. Other attributes required for authorizing access include restrictions on time-of-day, day-of- week, and point-of -origin. In defining other account attributes, organizations consider system-related requirements (e.g., system upgrades scheduled maintenance,) and mission or business requirements, (e.g., time zone differences, customer requirements, remote access to support travel requirements).</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Limit users to only the information systems, roles, or applications they are permitted to use and require for their roles and responsibilities. Limit access to applications and data based on authorized users’ roles and responsibilities. Common types of functions a user can be assigned are create, read, update, and delete.</p>
<div class="sub-header-2">Example</div>
<p>You supervise the team that manages DoD contracts for your company. Members of your team need to access the contract information to perform their work properly. Because some of that data contains FCI, you work with IT to set up your group’s systems so that users can be assigned access based on their specific roles [a]. Each role limits whether an employee has read-access or create/read/delete/update -access [b]. Implementing this access control restricts access to FCI information unless specifically authorized.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are access control lists used to limit access to applications and data based on role and/or identity [a]?</li>
<li>Is access for authorized users restricted to those parts of the system they are explicitly permitted to use, that is, is access denied by default and allowed by exception (e.g., a person who only performs word-processing cannot access developer tools) [b]?</li>
</ul>

', NULL, NULL, 36, 2, 19, NULL, NULL, 1204, NULL, N'Transaction & Function Control', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5272, N'AC.L1-b.1.iii', N'Verify and control/limit connections to and use of external information systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>connections to external systems are identified;</li>
<li>the use of external systems is identified;</li>
<li>connections to external systems are verified;</li>
<li>the use of external systems is verified;</li>
<li>connections to external systems are controlled/limited; and</li>
<li>the use of external systems is controlled/limited.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing the use of external systems; terms and conditions for external systems; system security plan; list of applications accessible from external systems; system configuration settings and associated documentation; system connection or processing agreements; account management documents; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with responsibilities for defining terms and conditions for use of external systems to access organizational systems; system or network administrators; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing terms and conditions on use of external systems].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>External systems are systems or components of systems for which organizations typically have no direct supervision and authority over the application of security requirements and controls or the determination of the effectiveness of implemented controls on those systems. External systems include personally owned systems, components, or devices and privately- owned computing and communications devices resident in commercial or public facilities.</p>
<p>This requirement also addresses the use of external systems for the processing, storage, or transmission of FCI, including accessing cloud services (e.g., infrastructure as a service, platform as a service, or software as a service) from organizational systems.</p>
<p>Organizations establish terms and conditions for the use of external systems in accordance with organizational security policies and procedures. Terms and conditions address as a minimum, the types of applications that can be accessed on organizational systems from external systems. If terms and conditions with the owners of external systems cannot be established, organizations may impose restrictions on organizational personnel using those external systems.</p>
<p>This requirement recognizes that there are circumstances where individuals using external systems (e.g., contractors, coalition partners) need to access organizational systems. In those situations, organizations need confidence that the external systems contain the necessary controls so as not to compromise, damage, or otherwise harm organizational systems. Verification that the required controls have been effectively implemented can be achieved by third-party, independent assessments, attestations, or other means, depending on the assurance or confidence level required by organizations.</p>
<p>Note that while “external” typically refers to outside of the organization’s direct supervision and authority, that is not always the case. Regarding the protection of FCI across an organization, the organization may have systems that process FCI and others that do not. And among the systems that process FCI there are likely access restrictions for FCI that apply between systems. Therefore, from the perspective of a given system, other systems within the organization may be considered “external" to that system.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Control and manage connections between your company network and outside networks. Outside networks could include the public internet, one of your own company’s networks that falls outside of your CMMC Assessment Scope (e.g., an isolated lab), or a network that does not belong to your company. Tools to manage connections include firewalls and connection allow/deny lists. External systems not controlled by your company could be running applications that are prohibited or blocked. Control and limit access to corporate networks from personally owned devices such as laptops, tablets, and phones. You may choose to limit how and when your network is connected to outside systems or only allow certain employees to connect to outside systems from network resources.</p>
<div class="sub-header-2">Example</div>
<p>Your company has just been awarded a contract which contains FCI. You remind your coworkers of the policy requirement to use their company laptops, not personal laptops or tablets, when working remotely on this contract [b,f]. You also remind everyone to work from the cloud environment that is approved for processing and storing FCI rather than the other collaborative tools that may be used for other projects [b,f].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are all connections to external systems outside of the assessment scope identified [a]?</li>
<li>Are external systems (e.g., systems managed by OSAs, partners, or vendors; personal devices) that are permitted to connect to or make use of organizational systems identified [b]?</li>
<li>Are methods employed to ensure that only authorized connections are being made to external systems (e.g., requiring log-ins or certificates, access from a specific IP address, or access via VPN) [c,e]?</li>
<li>Are methods employed to confirm that only authorized external systems are connecting (e.g., if employees are receiving company email on personal cell phones, is the OSA checking to verify that only known/expected devices are connecting) [d]?</li>
<li>Is the use of external systems limited, including by policy or physical control [f]?</li>
</ul>

', NULL, NULL, 36, 3, 19, NULL, NULL, 1204, NULL, N'External Connections', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5273, N'AC.L1-b.1.iv', N'Control information posted or processed on publicly accessible information systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>individuals authorized to post or process information on publicly accessible systems are identified;</li>
<li>procedures to ensure [FCI] is not posted or processed on publicly accessible systems are identified;</li>
<li>a review process is in place prior to posting of any content to publicly accessible systems;</li>
<li>content on publicly accessible systems is reviewed to ensure that it does not include [FCI]; and</li>
<li>mechanisms are in place to remove and address improper posting of [FCI].</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing publicly accessible content; system security plan; list of users authorized to post publicly accessible content on organizational systems; training materials and/or records; records of publicly accessible information reviews; records of response to nonpublic information on public websites; system audit logs and records; security awareness training records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with responsibilities for managing publicly accessible information posted on organizational systems; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing management of publicly accessible content].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>In accordance with laws, Executive Orders, directives, policies, regulations, or standards, the public is not authorized access to nonpublic information (e.g., information protected under the Privacy Act, FCI, and proprietary information). This requirement addresses systems that are controlled by the organization and accessible to the public, typically without identification or authentication. Individuals authorized to post FCI onto publicly accessible systems are designated. The content of information is reviewed prior to posting onto publicly accessible systems to ensure that nonpublic information is not included.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Only government officials can be authorized to publicly release FCI. Do not allow FCI to become public – always safeguard the confidentiality of FCI by controlling the posting of FCI on company-controlled websites or public forums and the exposure of FCI in public presentations or on public displays. It is important to know which users are allowed to publish information on publicly accessible systems, like your company website, and implement a review process before posting such information. If FCI is discovered on a publicly accessible system, procedures should be in place to remove that information and alert the appropriate parties.</p>
<div class="sub-header-2">Example</div>
<p>Your company decides to start issuing press releases about its projects in an effort to reach more potential customers. Your company receives FCI from the government as part of its DoD contract. Because you recognize the need to manage controlled information, including FCI, you meet with the employees who write the releases and post information to establish a review process [c]. It is decided that you will review press releases for FCI before posting it on the company website [a,d]. Only certain employees will be authorized to post to the website [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does information on externally facing systems (e.g., publicly accessible) have a documented approval chain for public release [c]?</li>
</ul>

', NULL, NULL, 36, 4, 19, NULL, NULL, 1204, NULL, N'Control Public Information', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5274, N'IA.L1-b.1.v', N'Identify information system users, processes acting on behalf of users, or devices.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>system users are identified;</li>
<li>processes acting on behalf of users are identified; and</li>
<li>devices accessing the system are identified.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Identification and authentication policy; procedures addressing user identification and authentication; system security plan, system design documentation; system configuration settings and associated documentation; system audit logs and records; list of system accounts; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with system operations responsibilities; personnel with information security responsibilities; system or network administrators; personnel with account management responsibilities; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for uniquely identifying and authenticating users; mechanisms supporting or implementing identification and authentication capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Common device identifiers include media access control (MAC), Internet Protocol (IP) addresses, or device-unique token identifiers. Management of individual identifiers is not applicable to shared system accounts. Typically, individual identifiers are the user names associated with the system accounts assigned to those individuals. Organizations may require unique identification of individuals in group accounts or for detailed accountability of individual activity. In addition, this requirement addresses individual identifiers that are not necessarily associated with system accounts. Organizational devices requiring identification may be defined by type, by device, or by a combination of type/device. NIST SP 800-63-3 provides guidance on digital identities.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Individual, unique identifiers (e.g., user names) should be assigned to all users and processes that access company systems. Authorized devices also should have unique identifiers. Unique identifiers can be as simple as a short set of alphanumeric characters (e.g., SW001 could refer to a network switch, SW002 could refer to a different network switch).</p>
<p>This requirement, IA.L1-b.1.v, provides a vetted and trusted identity that supports the access control mechanism required by AC.L1-b.1.i.</p>
<div class="sub-header-2">Example</div>
<p>You want to make sure that all employees working on a project can access important information about it. Because this is work for the DoD and contains FCI, you also need to prevent employees who are not working on that project from being able to access the information. You assign each employee a unique user ID, which they use to log on to the system [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are unique identifiers issued to individual users (e.g., usernames) [a]?</li>
<li>Are the processes and service accounts that an authorized user initiates identified (e.g., scripts, automatic updates, configuration updates, vulnerability scans) [b]?</li>
<li>Are unique device identifiers used for devices that access the system identified [c]?</li>
</ul>

', NULL, NULL, 36, 1, 19, NULL, NULL, 1208, NULL, N'Identification', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5275, N'IA.L1-b.1.vi', N'Authenticate (or verify) the identities of those users, processes, or devices, as a prerequisite to allowing access to organizational information systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the identity of each user is authenticated or verified as a prerequisite to system access;</li>
<li>the identity of each process acting on behalf of a user is authenticated or verified as a prerequisite to system access; and</li>
<li>the identity of each device accessing or connecting to the system is authenticated or verified as a prerequisite to system access.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Identification and authentication policy; system security plan; procedures addressing authenticator management; procedures addressing user identification and authentication; system design documentation; list of system authenticator types; system configuration settings and associated documentation; change control records associated with managing system authenticators; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with authenticator management responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting or implementing authenticator management capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Individual authenticators include the following: passwords, key cards, cryptographic devices, and one-time password devices. Initial authenticator content is the actual content of the authenticator, for example, the initial password. In contrast, the requirements about authenticator content include the minimum password length. Developers ship system components with factory default authentication credentials to allow for initial installation and configuration. Default authentication credentials are often well known, easily discoverable, and present a significant security risk.</p>
<p>Systems support authenticator management by organization-defined settings and restrictions for various authenticator characteristics including minimum password length, validation time window for time synchronous one-time tokens, and number of allowed rejections during the verification stage of biometric authentication. Authenticator management includes issuing and revoking, when no longer needed, authenticators for temporary access such as that required for remote maintenance. Device authenticators include certificates and passwords.</p>
<p>NIST SP 800-63-3 provides guidance on digital identities.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Before a person or device is given system access, verify that the user or device is who or what it claims to be. This verification is called authentication. The most common way to verify identity is using a username and a hard-to-guess password.</p>
<p>Some devices ship with a default username (e.g., admin) and password. A default username and password should be immediately changed to something unique. Default passwords may be well known to the public, easily found in a search, or easy to guess, allowing an unauthorized person to access the system.</p>
<div class="sub-header-2">Example 1</div>
<p>You are in charge of purchasing laptops that will store FCI. You know that some laptops come with a default username and password. You notify IT that all default passwords should be reset prior to laptop use [a]. You ask IT to explain the importance of resetting default passwords and convey how easily they are discovered using internet searches during next week’s cybersecurity awareness training.</p>
<div class="sub-header-2">Example 2</div>
<p>Your company decides to use cloud services for email and other capabilities that will transmit FCI. Upon reviewing this requirement, you realize every user or device that connects to the cloud service must be authenticated. As a result, you work with your cloud service provider to ensure that only properly authenticated users and devices are allowed to connect to the system [a,c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are unique authenticators used to verify user identities (e.g., usernames and passwords) [a]?</li>
<li>An example of a process acting on behalf of users could be a script that logs in as a person or service account [b]. Can the OSA show that it maintains a record of all of those service accounts for use when reviewing log data or responding to an incident?</li>
<li>Are user credentials authenticated in system processes (e.g., credentials binding, certificates, tokens) [b]?</li>
<li>Are device identifiers used in authentication processes (e.g., MAC address, non- anonymous computer name, certificates) [c]?</li>
</ul>

', NULL, NULL, 36, 2, 19, NULL, NULL, 1208, NULL, N'Authentication', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5276, N'MP.L1-b.1.vii', N'Sanitize or destroy information system media containing Federal Contract Information before disposal or release for reuse.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>system media containing [FCI] is sanitized or destroyed before disposal; and</li>
<li>system media containing [FCI] is sanitized before it is released for reuse.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System media protection policy; procedures addressing media sanitization and disposal; applicable standards and policies addressing media sanitization; system security plan; media sanitization records; system audit logs and records; system design documentation; system configuration settings and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with media sanitization responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for media sanitization; mechanisms supporting or implementing media sanitization].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement applies to all system media, digital and non-digital, subject to disposal or reuse. Examples include: digital media found in workstations, network components, scanners, copiers, printers, notebook computers, and mobile devices; and non-digital media such as paper and microfilm. The sanitization process removes information from the media such that the information cannot be retrieved or reconstructed. Sanitization techniques, including clearing, purging, cryptographic erase, and destruction, prevent the disclosure of information to unauthorized individuals when such media is released for reuse or disposal.</p>
<p>Organizations determine the appropriate sanitization methods, recognizing that destruction may be necessary when other methods cannot be applied to the media requiring sanitization.</p>
<p>Organizations use discretion on the employment of sanitization techniques and procedures for media containing information that is in the public domain or publicly releasable or deemed to have no adverse impact on organizations or individuals if released for reuse or disposal. Sanitization of non-digital media includes destruction, removing FCI from documents, or redacting selected sections or words from a document by obscuring the redacted sections or words in a manner equivalent in effectiveness to removing the words or sections from the document. NARA policy and guidance control sanitization processes. NIST SP 800-88 provides guidance on media sanitization.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Media can include a broad range of items that store information, including paper documents, disks, tapes, digital photography, USB drives, CDs, DVDs, and mobile phones. It is important to know what information is on media so that you can handle it properly. If there is FCI, you or someone in your company should either:</p>
<ul>
<li>shred or destroy the device before disposal so it cannot be read; or</li>
<li>clean or purge the information, if you want to reuse the device.</li>
</ul>
<p>See NIST Special Publication 800-88, Revision 1, Guidelines for Media Sanitization, for more information.</p>
<div class="sub-header-2">Example</div>
<p>As you pack for an office move, you find some old CDs in a file cabinet. You determine that one has FCI from a project your company did for the DoD. You shred the CD rather than simply throwing it in the trash [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is all managed data storage erased, encrypted, or destroyed using mechanisms to ensure that no usable data is retrievable [a,b]?</li>
</ul>

', NULL, NULL, 36, 1, 19, NULL, NULL, 1211, NULL, N'Media Disposal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5277, N'PE.L1-b.1.viii', N'Limit physical access to organizational information systems, equipment, and the respective operating environments to authorized individuals.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>authorized individuals allowed physical access are identified;</li>
<li>physical access to organizational systems is limited to authorized individuals;</li>
<li>physical access to equipment is limited to authorized individuals; and</li>
<li>physical access to operating environments is limited to authorized individuals.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Physical and environmental protection policy; procedures addressing physical access authorizations; system security plan; authorized personnel access list; authorization credentials; physical access list reviews; physical access termination records and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with physical access authorization responsibilities; personnel with physical access to system facility; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for physical access authorizations; mechanisms supporting or implementing physical access authorizations].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement applies to employees, individuals with permanent physical access authorization credentials, and visitors. Authorized individuals have credentials that include badges, identification cards, and smart cards. Organizations determine the strength of authorization credentials needed consistent with applicable laws, directives, policies, regulations, standards, procedures, and guidelines. This requirement applies only to areas within facilities that have not been designated as publicly accessible.</p>
<p>Limiting physical access to equipment may include placing equipment in locked rooms or other secured areas and allowing access to authorized individuals only, and placing equipment in locations that can be monitored by organizational personnel. Computing devices, external disk drives, networking devices, monitors, printers, copiers, scanners, facsimile machines, and audio devices are examples of equipment.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>This addresses the company’s physical space (e.g., office, testing environments, equipment rooms), technical assets, and non-technical assets that need to be protected from unauthorized physical access. Specific environments are limited to authorized employees, and access is controlled with badges, electronic locks, physical key locks, etc.</p>
<p>Output devices, such as printers, are placed in areas where their use does not expose data to unauthorized individuals. Lists of personnel with authorized access are developed and maintained, and personnel are issued appropriate authorization credentials.</p>
<div class="sub-header-2">Example</div>
<p>You manage a DoD project that stores FCI on computers used only by project team members [b,c]. You work with the facilities manager to put locks on the doors to the areas where the computers are stored and used [b,c,d]. Project team members are the only individuals issued with keys to the space. This restricts access to only those employees who work on the DoD project and require access.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are lists of personnel with authorized access developed and maintained, and are appropriate authorization credentials issued [a]?</li>
<li>Has the facility/building manager designated building areas as “sensitive” and designed physical security protections (e.g., guards, locks, cameras, card readers) to limit physical access to the area to only authorized employees [b,c,d]?</li>
<li>Are output devices such as printers placed in areas where their use does not expose data to unauthorized individuals [c]?</li>
</ul>

', NULL, NULL, 36, 1, 19, NULL, NULL, 1213, NULL, N'Limit Physical Access', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5278, N'PE.L1-b.1.ix', N'Escort visitors and monitor visitor activity; maintain audit logs of physical access; and control and manage physical access devices.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>visitors are escorted;</li>
<li>visitor activity is monitored;</li>
<li>audit logs of physical access are maintained;</li>
<li>physical access devices are identified;</li>
<li>physical access devices are controlled; and</li>
<li>physical access devices are managed.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Physical and environmental protection policy; procedures addressing physical access control; system security plan; physical access control logs or records; inventory records of physical access control devices; system entry and exit points; records of key and lock combination changes; storage locations for physical access control devices; physical access control devices; list of security safeguards controlling access to designated publicly accessible areas within facility; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with physical access control responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for physical access control; mechanisms supporting or implementing physical access control; physical access control devices].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Individuals with permanent physical access authorization credentials are not considered visitors. Audit logs can be used to monitor visitor activity.</p>
<p>Organizations have flexibility in the types of audit logs employed. Audit logs can be procedural (e.g., written log of individuals accessing the facility), automated (e.g., capturing ID provided by a Personal Identity Verification (PIV) card), or some combination thereof. Physical access points can include facility access points, interior access points to systems or system components requiring supplemental access controls, or both. System components (e.g., workstations, notebook computers) may be in areas designated as publicly accessible with organizations safeguarding access to such devices.</p>
<p>Physical access devices include keys, locks, combinations, and card readers.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Do not allow visitors, even those people you know well, to walk around your facility without an escort. All non-employees should wear special visitor badges and/or are escorted by an employee at all times while on the property.</p>
<p>Make sure you have a record of who accesses your facility (e.g., office, plant, factory). You can do this in writing by having employees and visitors sign in and sign out or by electronic means such as badge readers. Whatever means you use, you need to retain the access records for the time period that your company has defined.</p>
<p>Identifying and controlling physical access devices (e.g., locks, badges, key cards) is just as important as monitoring and limiting who is able to physically access certain equipment. Physical access devices are only strong protection if you know who has them and what access they allow. Physical access devices can be managed using manual or automatic processes such a list of who is assigned what key, or updating the badge access system as personnel change roles.</p>
<div class="sub-header-2">Example 1</div>
<p>Coming back from a meeting, you see the friend of a coworker walking down the hallway near your office where FCI is stored. You know this person well and trust them, but are not sure why they are in the building. You stop to talk, and the person explains that they are meeting a coworker for lunch, but cannot remember where the lunchroom is. You walk the person back to the reception area to get a visitor badge and wait until someone can escort them to the lunchroom [a]. You report this incident, and the company decides to install a badge reader at the main door so visitors cannot enter without an escort [a].</p>
<div class="sub-header-2">Example 2</div>
<p>You and your coworkers like to have friends and family join you for lunch at the office on Fridays. Your small company has just signed a contract with the DoD in which your company will receive FCI and you now need to document who enters and leaves your facility. You work with the reception staff to ensure that all non-employees sign in at the reception area and sign out when they leave [c]. You retain those paper sign-in sheets in a locked filing cabinet for one year. Employees receive badges or key cards that enable tracking and logging access to company facilities.</p>
<div class="sub-header-2">Example 3</div>
<p>You are a facility manager. A team member retired today and returns their company keys to you. The project on which they were working requires access to areas that contain equipment with FCI. You receive the keys, check your electronic records against the serial numbers on the keys to ensure all have been returned, and mark each key returned [f].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are personnel required to accompany visitors to areas in a facility with physical access to organizational systems [a]?</li>
<li>Are visitors clearly distinguishable from regular personnel [b]?</li>
<li>Is visitor activity monitored (e.g., use of cameras or guards, reviews of secure areas upon visitor departure, review of visitor audit logs) [b]?</li>
<li>Are logs of physical access to sensitive areas (both authorized access and visitor access) maintained per retention requirements [c]?</li>
<li>Are visitor access records retained for as long as required [c]?</li>
<li>Are lists or inventories of physical access devices maintained (e.g., keys, facility badges, key cards) [d]?</li>
<li>Is access to physical access devices limited (e.g., granted to, and accessible only by, authorized individuals) [e]?</li>
<li>Are physical access devices managed (e.g., revoking key card access when necessary, changing locks as needed, maintaining access control devices and systems) [f]?</li>
</ul>

', NULL, NULL, 36, 2, 19, NULL, NULL, 1213, NULL, N'Manage Visitors & Physical Access', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5279, N'SC.L1-b.1.x', N'Monitor, control, and protect organizational communications (i.e., information transmitted or received by organizational information systems) at the external boundaries and key internal boundaries of the information systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the external system boundary is defined;</li>
<li>key internal system boundaries are defined;</li>
<li>communications are monitored at the external system boundary;</li>
<li>communications are monitored at key internal boundaries;</li>
<li>communications are controlled at the external system boundary;</li>
<li>communications are controlled at key internal boundaries;</li>
<li>communications are protected at the external system boundary; and</li>
<li>communications are protected at key internal boundaries.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing boundary protection; system security plan; list of key internal boundaries of the system; system design documentation; boundary protection hardware and software; enterprise security architecture documentation; system audit logs and records; system configuration settings and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developers; personnel with boundary protection responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing boundary protection capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Communications can be monitored, controlled, and protected at boundary components and by restricting or prohibiting interfaces in organizational systems. Boundary components include gateways, routers, firewalls, guards, network-based malicious code analysis and virtualization systems, or encrypted tunnels implemented within a system security architecture (e.g., routers protecting firewalls or application gateways residing on protected subnetworks). Restricting or prohibiting interfaces in organizational systems includes restricting external web communications traffic to designated web servers within managed interfaces and prohibiting external traffic that appears to be spoofing internal addresses.</p>
<p>Organizations consider the shared nature of commercial telecommunications services in the implementation of security requirements associated with the use of such services. Commercial telecommunications services are commonly based on network components and consolidated management systems shared by all attached commercial customers and may also include third party-provided access lines and other service elements. Such transmission services may represent sources of increased risk despite contract security provisions. NIST SP 800-41 provides guidance on firewalls and firewall policy. NIST SP 800-125B provides guidance on security for virtualization technologies.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Fences, locks, badges, and key cards help keep non-employees out of your physical facilities. Similarly, your company’s IT network or system has boundaries that must be protected. Many companies use a web proxy and a firewall.</p>
<p>When an employee uses a company computer to go to a website, a web proxy makes the request on the user’s behalf, looks at the web request, and decides if it should let the employee go to the website.</p>
<p>A firewall controls access from the inside and outside, protecting valuable information and resources stored on the company’s network. A firewall stops unwanted traffic on the internet from passing through an outside “fence” to the company’s networks and information systems. Internal boundaries determine where data can flow, for instance a software development environment may have its own boundary controlling, monitoring, and protecting the data that can leave that boundary.</p>
<p>It may be wise to monitor, control, or protect one part of the company network from another. This can also be accomplished with a firewall and limits the ability of attackers and disgruntled employees from entering sensitive parts of your internal network and causing damage.</p>
<div class="sub-header-2">Example</div>
<p>You are setting up the new network with an FCI enclave. You start by sketching out a simple diagram that identifies the external boundary of your network and any internal boundaries that are needed [a,b]. The first piece of equipment you install is the firewall, a device to separate your internal network from the internet. The firewall also has a feature that allows you to block access to potentially malicious websites, and you configure that service as well [a,c,e,g]. Some of your coworkers complain that they cannot get to certain websites [c,e,g]. You explain that the new network blocks websites that are known for spreading malware. The firewall sends you a daily digest of blocked activity so that you can monitor the system for attack trends [c,d].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>What are the external system boundary components that make up the entry and exit points for data flow (e.g., firewalls, gateways, cloud service boundaries), behind which all system components that handle regulated data are contained? What are the supporting system components necessary for the protection of regulated data [a]?</li>
<li>What are the internal system boundary components that make up the entry and exit points for key internal data flow (e.g., internal firewalls, routers, any devices that can bridge the connection between one segment of the system and another) that separate segments of the internal network – including devices that separate internal network segments such as development and production networks as well as a traditional DMZ at the edge of the network [b]?</li>
<li>Is data flowing in and out of the external and key internal system boundaries monitored (e.g., connections are logged and able to be reviewed, suspicious traffic generates alerts) [c,d]?</li>
<li>Is data traversing the external and internal system boundaries controlled such that connections are denied by default and only authorized connections are allowed [e,f]?</li>
<li>Is data flowing in and out of the external and key internal system boundaries protected (e.g., applying encryption when required or prudent, tunneling traffic as needed) [g,h]?</li>
</ul>

', NULL, NULL, 36, 1, 19, NULL, NULL, 1216, NULL, N'Boundary Protection', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5280, N'SC.L1-b.1.xi', N'Implement subnetworks for publicly accessible system components that are physically or logically separated from internal networks.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>publicly accessible system components are identified; and</li>
<li>subnetworks for publicly accessible system components are physically or logically separated from internal networks.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing boundary protection; system security plan; list of key internal boundaries of the system; system design documentation; boundary protection hardware and software; system configuration settings and associated documentation; enterprise security architecture documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developers; personnel with boundary protection responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing boundary protection capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Subnetworks that are physically or logically separated from internal networks are referred to as demilitarized zones (DMZs). DMZs are typically implemented with boundary control devices and techniques that include routers, gateways, firewalls, virtualization, or cloud- based technologies.</p>
<p>NIST SP 800-41 provides guidance on firewalls and firewall policy. SP 800-125B provides guidance on security for virtualization technologies.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Publicly accessible systems should be separated from the internal systems that need to be protected. Internal systems should not be placed on the same network as publicly accessible systems, and access by default from DMZ networks to internal networks should be blocked.</p>
<p>One method of accomplishing this is to create a DMZ network, which enhances security by providing public access to a specific set of resources while preventing connections from those resources to the rest of the IT environment. Some OSAs may achieve a similar result through the use of a cloud computing environment that is separated from the rest of the company’s infrastructure.</p>
<div class="sub-header-2">Example</div>
<p>The head of recruiting at your firm wants to launch a website to post job openings and allow the public to download an application form [a]. After some discussion, your team realizes it needs to use a firewall to create a perimeter network to do this because your network contains FCI [b]. You host the server separately from the company’s internal network where FCI is stored and make sure the network on which it resides is isolated with the proper firewall rules [b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are any system components reachable by the public (e.g., internet-facing web servers, VPN gateways, publicly accessible cloud services) [a]?</li>
<li>Are publicly accessible system components on physically or logically separated subnetworks (e.g., isolated subnetworks using separate, dedicated VLAN segments such as DMZs) [b]?</li>
</ul>

', NULL, NULL, 36, 2, 19, NULL, NULL, 1216, NULL, N'Public-Access System Separation', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5281, N'SI.L1-b.1.xii', N'Identify, report, and correct information and information system flaws in a timely manner.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the time within which to identify system flaws is specified;</li>
<li>system flaws are identified within the specified time frame;</li>
<li>the time within which to report system flaws is specified;</li>
<li>system flaws are reported within the specified time frame;</li>
<li>the time within which to correct system flaws is specified; and</li>
<li>system flaws are corrected within the specified time frame.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and information integrity policy; procedures addressing flaw remediation; procedures addressing configuration management; system security plan; list of flaws and vulnerabilities potentially affecting the system; list of recent security flaw remediation actions performed on the system (e.g., list of installed patches, service packs, hot fixes, and other software updates to correct system flaws); test results from the installation of software and firmware updates to correct system flaws; installation/change control records for security-relevant software and firmware updates; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; personnel installing, configuring, and maintaining the system; personnel with responsibility for flaw remediation; personnel with configuration management responsibility].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for identifying, reporting, and correcting system flaws; organizational process for installing software and firmware updates; mechanisms supporting or implementing reporting, and correcting system flaws; mechanisms supporting or implementing testing software and firmware updates].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations identify systems that are affected by announced software and firmware flaws including potential vulnerabilities resulting from those flaws and report this information to designated personnel with information security responsibilities. Security-relevant updates include patches, service packs, hot fixes, and anti-virus signatures. Organizations address flaws discovered during security assessments, continuous monitoring, incident response activities, and system error handling. Organizations can take advantage of available resources such as the Common Weakness Enumeration (CWE) database or Common Vulnerabilities and Exposures (CVE) database in remediating flaws discovered in organizational systems.</p>
<p>Organization-defined time periods for updating security-relevant software and firmware may vary based on a variety of factors including the criticality of the update (i.e., severity of the vulnerability related to the discovered flaw). Some types of flaw remediation may require more testing than other types of remediation. NIST SP 800-40 provides guidance on patch management technologies.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>All software and firmware have potential flaws. Many vendors work to remedy those flaws by releasing vulnerability information and updates to their software and firmware. OSAs should have a process to review relevant vendor notifications and updates about problems or weaknesses. After reviewing the information, the OSA should implement a patch management process that allows for software and firmware flaws to be fixed without adversely affecting the system functionality. OSAs should define the time frames within which flaws are identified, reported, and corrected for all systems.</p>
<div class="sub-header-2">Example</div>
<p>You know that software vendors typically release patches, service packs, hot fixes, etc. and want to make sure your software that processes FCI is up to date. You develop a policy that requires checking vendor websites for flaw notifications every week [a]. The policy further requires that those flaws be assessed for severity and patched on end-user computers once each week and servers once each month [c,e]. Consistent with that policy, you configure the system to check for updates weekly or daily depending on the criticality of the software [b,e]. Your team reviews available updates and implements the applicable ones according to the defined schedule [f].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is the time frame (e.g., a set number of days) within which system flaw identification activities (e.g., vulnerability scans, configuration scans, manual review) must be performed defined and documented [a]?</li>
<li>Are system flaws (e.g., vulnerabilities, misconfigurations) identified in accordance with the specified time frame [b]?</li>
<li>Is the time frame (e.g., a set number of days dependent on the assessed severity of a flaw) within which system flaws must be corrected defined and documented [e]?</li>
<li>Are system flaws (e.g., applied security patches, made configuration changes, or implemented workarounds or mitigations) corrected within the specified time frame [f]?</li>
</ul>

', NULL, NULL, 36, 1, 19, NULL, NULL, 1217, NULL, N'Flaw Remediation', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5282, N'SI.L1-b.1.xiii', N'Provide protection from malicious code at appropriate locations within organizational information systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>designated locations for malicious code protection are identified; and</li>
<li>protection from malicious code at designated locations is provided.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and information integrity policy; configuration management policy and procedures; procedures addressing malicious code protection; records of malicious code protection updates; malicious code protection mechanisms; system security plan; system configuration settings and associated documentation; record of actions initiated by malicious code protection mechanisms in response to malicious code detection; scan results from malicious code protection mechanisms; system design documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; personnel installing, configuring, and maintaining the system; personnel with responsibility for malicious code protection; personnel with configuration management responsibility].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for employing, updating, and configuring malicious code protection mechanisms; organizational process for addressing false positives and resulting potential impact; mechanisms supporting or implementing employing, updating, and configuring malicious code protection mechanisms; mechanisms supporting or implementing malicious code scanning and subsequent actions].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Designated [appropriate] locations include system entry and exit points which may include firewalls, remote access servers, workstations, electronic mail servers, web servers, proxy servers, notebook computers, and mobile devices. Malicious code includes viruses, worms,</p>
<p>Trojan horses, and spyware. Malicious code can be encoded in various formats (e.g., UUENCODE, Unicode), contained within compressed or hidden files, or hidden in files using techniques such as steganography. Malicious code can be inserted into systems in a variety of ways including web accesses, electronic mail, electronic mail attachments, and portable storage devices. Malicious code insertions occur through the exploitation of system vulnerabilities.</p>
<p>Malicious code protection mechanisms include anti-virus signature definitions and reputation-based technologies. A variety of technologies and methods exist to limit or eliminate the effects of malicious code. Pervasive configuration management and comprehensive software integrity controls may be effective in preventing execution of unauthorized code. In addition to commercial off-the-shelf software, malicious code may also be present in custom-built software. This could include logic bombs, back doors, and other types of cyber-attacks that could affect organizational missions/business functions. Traditional malicious code protection mechanisms cannot always detect such code. In these situations, organizations rely instead on other safeguards including secure coding practices, configuration management and control, trusted procurement processes, and monitoring practices to help ensure that software does not perform functions other than the functions intended. NIST SP 800-83 provides guidance on malware incident prevention.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Malicious code purposely performs unauthorized activity that undermines the security of an information system. A designated location may be a network device such as a firewall or an end user’s computer.</p>
<p>Malicious code, which can be delivered by a range of means (e.g., email, removable media, or websites), includes the following:</p>
<ul>
<li>Virus – program designed to cause damage, steal information, change data, send email, show messages, or any combination of these things;</li>
<li>Spyware – program designed to secretly gather information about a person’s activity;</li>
<li>Trojan Horse – type of malware made to look like legitimate software and used by cyber criminals to get access to a company’s systems; and</li>
<li>Ransomware – type of malware that threatens to publish the victim’s data or perpetually block access to it unless a ransom is paid.</li>
</ul>
<p>Consider use of anti-malware tools to stop or lessen the impact of malicious code.</p>
<div class="sub-header-2">Example</div>
<p>Your company’s IT team is buying new computers and wants to protect your company’s information from viruses and spyware. The computers will be used to process, store, and transmit FCI. They research anti-malware products, select an appropriate solution, and deploy antivirus software on all hosts for which satisfactory antivirus software is available [a,b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are system components (e.g., workstations, servers, email gateways, mobile devices) for which malicious code protection must be provided identified and documented [a]?</li>
</ul>

', NULL, NULL, 36, 2, 19, NULL, NULL, 1217, NULL, N'Malicious Code Protection', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5283, N'SI.L1-b.1.xiv', N'Update malicious code protection mechanisms when new releases are available.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>malicious code protection mechanisms are updated when new releases are available.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and information integrity policy; configuration management policy and procedures; procedures addressing malicious code protection; malicious code protection mechanisms; records of malicious code protection updates; system security plan; system design documentation; system configuration settings and associated documentation; scan results from malicious code protection mechanisms; record of actions initiated by malicious code protection mechanisms in response to malicious code detection; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; personnel installing, configuring, and maintaining the system; personnel with responsibility for malicious code protection; personnel with configuration management responsibility].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for employing, updating, and configuring malicious code protection mechanisms; organizational process for addressing false positives and resulting potential impact; mechanisms supporting or implementing malicious code protection mechanisms (including updates and configurations); mechanisms supporting or implementing malicious code scanning and subsequent actions].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Malicious code protection mechanisms include anti-virus signature definitions and reputation-based technologies. A variety of technologies and methods exist to limit or eliminate the effects of malicious code. Pervasive configuration management and comprehensive software integrity controls may be effective in preventing execution of unauthorized code. In addition to commercial off-the-shelf software, malicious code may also be present in custom-built software. This could include logic bombs, back doors, and other</p>
<p>36 NIST SP 800-171 Rev. 2, pp 41-42 types of cyber-attacks that could affect organizational missions/business functions. Traditional malicious code protection mechanisms cannot always detect such code. In these situations, organizations rely instead on other safeguards including secure coding practices, configuration management and control, trusted procurement processes, and monitoring practices to help ensure that software does not perform functions other than the functions intended.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Malware changes on an hourly or daily basis, and it is important to update detection and protection mechanisms frequently to maintain the effectiveness of the protection.</p>
<div class="sub-header-2">Example</div>
<p>You have installed anti-malware software to protect a computer that stores FCI from malicious code. Knowing that malware evolves rapidly, you configure the software to automatically check for malware definition updates every day and update as needed [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is there a defined frequency at which malicious code protection mechanisms must be updated (e.g., frequency of automatic updates or manual processes) [a]?</li>
</ul>

', NULL, NULL, 36, 3, 19, NULL, NULL, 1217, NULL, N'Update Malicious Code Protection', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5284, N'SI.L1-b.1.xv', N'Perform periodic scans of the information system and real-time scans of files from external sources as files are downloaded, opened, or executed.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the frequency for malicious code scans is defined;</li>
<li>malicious code scans are performed with the defined frequency; and</li>
<li>real-time malicious code scans of files from external sources as files are downloaded, opened, or executed are performed.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and information integrity policy; configuration management policy and procedures; procedures addressing malicious code protection; malicious code protection mechanisms; records of malicious code protection updates; system security plan; system design documentation; system configuration settings and associated documentation; scan results from malicious code protection mechanisms; record of actions initiated by malicious code protection mechanisms in response to malicious code detection; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; personnel installing, configuring, and maintaining the system; personnel with responsibility for malicious code protection; personnel with configuration management responsibility].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for employing, updating, and configuring malicious code protection mechanisms; organizational process for addressing false positives and resulting potential impact; mechanisms supporting or implementing malicious code protection mechanisms (including updates and configurations); mechanisms supporting or implementing malicious code scanning and subsequent actions].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Periodic scans of organizational systems and real-time scans of files from external sources can detect malicious code. Malicious code can be encoded in various formats (e.g.,</p>
<p>UUENCODE, Unicode), contained within compressed or hidden files, or hidden in files using techniques such as steganography. Malicious code can be inserted into systems in a variety of ways including web accesses, electronic mail, electronic mail attachments, and portable storage devices. Malicious code insertions occur through the exploitation of system vulnerabilities.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Consider use of anti-malware software to scan for viruses in your computer systems and determine how often scans are conducted. Real-time scans look at the system whenever files are downloaded, opened, and saved. Periodic scans check previously saved files against updated malware information. Anti-malware software should be installed, run, and updated on all hosts for which satisfactory antivirus software is available.</p>
<div class="sub-header-2">Example</div>
<p>Your company transmits FCI over email. You work with your company’s email provider to enable enhanced protections that will scan all attachments to identify and quarantine those that may be harmful prior to a user opening them [c]. In addition, you configure antivirus software on each computer to scan for malicious code every day [a,b]. The software also scans files that are downloaded or copied from removable media such as USB drives. It quarantines any suspicious files and notifies the security team [c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are files from media (e.g., USB drives, CD-ROM) included in the definition of external sources and are they being scanned [c]?</li>
</ul>

', NULL, NULL, 36, 4, 19, NULL, NULL, 1217, NULL, N'System & File Scanning', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5285, N'AC.L2-3.1.1', N'Limit system access to authorized users, processes acting on behalf of authorized users, and devices (including other systems).', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>authorized users are identified;</li>
<li>processes acting on behalf of authorized users are identified;</li>
<li>devices (and other systems) authorized to connect to the system are identified;</li>
<li>system access is limited to authorized users;</li>
<li>system access is limited to processes acting on behalf of authorized users; and</li>
<li>system access is limited to authorized devices (including other systems).</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing account management; system security plan; system design documentation; system configuration settings and associated documentation; list of active system accounts and the name of the individual associated with each account; notifications or records of recently transferred, separated, or terminated employees; list of conditions for group and role membership; list of recently disabled system accounts along with the name of the individual associated with each account; access authorization records; account management compliance reviews; system monitoring records; system audit logs and records; list of devices and systems authorized to connect to organizational systems; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with account management responsibilities; system or network administrators; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for managing system accounts; mechanisms for implementing account management].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Access control policies (e.g., identity- or role-based policies, control matrices, and cryptography) control access between active entities or subjects (i.e., users or processes acting on behalf of users) and passive entities or objects (e.g., devices, files, records, and domains) in systems. Access enforcement mechanisms can be employed at the application and service level to provide increased information security. Other systems include systems internal and external to the organization. This requirement focuses on account management for systems and applications. The definition of and enforcement of access authorizations, other than those determined by account type (e.g., privileged verses [sic] non-privileged) are addressed in requirement 3.1.2 (AC.L2-3.1.2).</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Identify users, processes, and devices that are allowed to use company computers and can log on to the company network. Automated updates and other automatic processes should be associated with the user who initiated (authorized) the process. Limit the devices (e.g., printers) that can be accessed by company computers. Set up your system so that only authorized users, processes, and devices can access the company network.</p>
<p>This requirement, AC.L2-3.1.1, controls system access based on user, process, or device identity. AC.L2-3.1.1 leverages IA.L2-3.5.1 which provides a vetted and trusted identity for access control.</p>
<div class="sub-header-2">Example 1</div>
<p>Your company maintains a list of all personnel authorized to use company information systems, including those that store, process, and transmit CUI [a]. This list is used to support identification and authentication activities conducted by IT when authorizing access to systems [a,d].</p>
<div class="sub-header-2">Example 2</div>
<p>A coworker wants to buy a new multi-function printer/scanner/fax device and make it available on the company network within the CUI enclave. You explain that the company controls system and device access to the network and will prevent network access by unauthorized systems and devices [c]. You help the coworker submit a ticket that asks for the printer to be granted access to the network, and appropriate leadership approves the device [f].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is a list of authorized users maintained that defines their identities and roles [a]?</li>
<li>Are account requests authorized before system access is granted [d,e,f]?</li>
</ul>

', NULL, NULL, 37, 5, 19, NULL, NULL, 1204, NULL, N'Authorized Access Control', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5286, N'AC.L2-3.1.2', N'Limit system access to the types of transactions and functions that authorized users are permitted to execute.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the types of transactions and functions that authorized users are permitted to execute are defined; and</li>
<li>system access is limited to the defined types of transactions and functions for authorized users.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing access enforcement; system security plan; system design documentation; list of approved authorizations including remote access authorizations; system audit logs and records; system configuration settings and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with access enforcement responsibilities; system or network administrators; personnel with information security responsibilities; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing access control policy].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations may choose to define access privileges or other attributes by account, by type of account, or a combination of both. System account types include individual, shared, group, system, anonymous, guest, emergency, developer, manufacturer, vendor, and temporary. Other attributes required for authorizing access include restrictions on time-of-day, day-of- week, and point-of-origin. In defining other account attributes, organizations consider system-related requirements (e.g., system upgrades scheduled maintenance,) and mission or business requirements, (e.g., time zone differences, customer requirements, remote access to support travel requirements).</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Limit users to only the information systems, roles, or applications they are permitted to use and are needed for their roles and responsibilities. Limit access to applications and data based on the authorized users’ roles and responsibilities. Common types of functions a user can be assigned are create, read, update, and delete.</p>
<div class="sub-header-2">Example</div>
<p>Your team manages DoD contracts for your company. Members of your team need to access the contract information to perform their work properly. Because some of that data contains CUI, you work with IT to set up your group’s systems so that users can be assigned access based on their specific roles [a]. Each role limits whether an employee has read-access or create/read/delete/update -access [b]. Implementing this access control restricts access to CUI information unless specifically authorized.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are access control lists used to limit access to applications and data based on role and/or identity [a]?</li>
<li>Is access for authorized users restricted to those parts of the system they are explicitly permitted to use (e.g., a person who only performs word-processing cannot access developer tools) [b]?</li>
</ul>

', NULL, NULL, 37, 6, 19, NULL, NULL, 1204, NULL, N'Transaction & Function Control', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5287, N'AC.L2-3.1.3', N'Control the flow of CUI in accordance with approved authorizations.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>information flow control policies are defined;</li>
<li>methods and enforcement mechanisms for controlling the flow of CUI are defined;</li>
<li>designated sources and destinations (e.g., networks, individuals, and devices) for CUI within the system and between interconnected systems are identified;</li>
<li>authorizations for controlling the flow of CUI are defined; and</li>
<li>approved authorizations for controlling the flow of CUI are enforced.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; information flow control policies; procedures addressing information flow enforcement; system security plan; system design documentation; system configuration settings and associated documentation; list of information flow authorizations; system baseline configuration; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing information flow enforcement policy].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Information flow control regulates where information can travel within a system and between systems (versus who can access the information) and without explicit regard to subsequent accesses to that information. Flow control restrictions include the following: keeping export-controlled information from being transmitted in the clear to the internet; blocking outside traffic that claims to be from within the organization; restricting requests to the internet that are not from the internal web proxy server; and limiting information transfers between organizations based on data structures and content.</p>
<p>Organizations commonly use information flow control policies and enforcement mechanisms to control the flow of information between designated sources and destinations (e.g., networks, individuals, and devices) within systems and between interconnected systems. Flow control is based on characteristics of the information or the information path. Enforcement occurs in boundary protection devices (e.g., gateways, routers, guards, encrypted tunnels, firewalls) that employ rule sets or establish configuration settings that restrict system services, provide a packet-filtering capability based on header information, or message-filtering capability based on message content (e.g., implementing key word searches or using document characteristics). Organizations also consider the trustworthiness of filtering and inspection mechanisms (i.e., hardware, firmware, and software components) that are critical to information flow enforcement.</p>
<p>Transferring information between systems representing different security domains with different security policies introduces risk that such transfers violate one or more domain security policies.</p>
<p>Organizations consider the shared nature of commercial telecommunications services in the implementation of security requirements associated with the use of such services. Commercial telecommunications services are commonly based on network components and consolidated management systems shared by all attached commercial customers and may also include third party-provided access lines and other service elements. Such transmission services may represent sources of increased risk despite contract security provisions. NIST SP 800-41 provides guidance on firewalls and firewall policy. SP 800-125B provides guidance on security for virtualization technologies.</p>
<p>In such situations, information owners or stewards provide guidance at designated policy enforcement points between interconnected systems. Organizations consider mandating specific architectural solutions when required to enforce specific security policies. Enforcement includes: prohibiting information transfers between interconnected systems (i.e., allowing access only); employing hardware mechanisms to enforce one-way information flows; and implementing trustworthy regrading mechanisms to reassign security attributes and security labels.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Typically, companies will have a firewall between the internal network and the internet. Often multiple firewalls or routing switches are used inside a network to create zones to separate sensitive data, business units, or user groups. Proxy servers can be used to break the connection between multiple networks. All traffic entering or leaving a network is intercepted by the proxy, preventing direct access between networks. Companies should also ensure by policy and enforcement mechanisms that all CUI allowed to flow across the internet is encrypted.</p>
<div class="sub-header-2">Example 1</div>
<p>You configure a proxy device on your company’s network. CUI is stored within this environment. Your goal is to better mask and protect the devices inside the network while enforcing information flow policies. After the device is configured, information does not flow directly from the internal network to the internet. The proxy device intercepts the traffic and analyzes it to determine if the traffic conforms to organization information flow control policies. If it does, the device allows the information to pass to its destination [b]. The proxy blocks traffic that does not meet policy requirements [e].</p>
<div class="sub-header-2">Example 2</div>
<p>As a subcontractor on a DoD contract, your organization sometimes needs to transmit CUI to the prime contractor. You create a policy document that specifies who is allowed to transmit CUI and that such transmission requires manager approval [a,c,d]. The policy instructs users to encrypt any CUI transmitted via email or to use a designated secure file sharing utility [b,d]. The policy states that users who do not follow appropriate procedures may be subject to disciplinary action [e].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are designated sources of regulated data identified within the system (e.g., internal network and IP address) and between interconnected systems (e.g., external networks, IP addresses, ports, and protocols) [c]?</li>
<li>Are designated destinations of regulated data identified within the system (e.g., internal network and IP address) and between interconnected systems (external networks and IP addresses) [c]?</li>
<li>Are authorizations defined for each source and destination within the system and between interconnected systems (e.g., allow or deny rules for each combination of source and destination) [d]?</li>
<li>Are approved authorizations for controlling the flow of regulated data enforced within the system and between interconnected systems (e.g., traffic between authorized sources and destinations is allowed and traffic between unauthorized sources and destinations is denied) [e]?</li>
</ul>

', NULL, NULL, 37, 7, 19, NULL, NULL, 1204, NULL, N'Control CUI Flow', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5288, N'AC.L2-3.1.4', N'Separate the duties of individuals to reduce the risk of malevolent activity without collusion.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the duties of individuals requiring separation are defined;</li>
<li>responsibilities for duties that require separation are assigned to separate individuals; and</li>
<li>access privileges that enable individuals to exercise the duties that require separation are granted to separate individuals.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing divisions of responsibility and separation of duties; system security plan; system configuration settings and associated documentation; list of divisions of responsibility and separation of duties; system access authorizations; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with responsibilities for defining divisions of responsibility and separation of duties; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing separation of duties policy].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Separation of duties addresses the potential for abuse of authorized privileges and helps to reduce the risk of malevolent activity without collusion. Separation of duties includes dividing mission functions and system support functions among different individuals or roles; conducting system support functions with different individuals (e.g., configuration management, quality assurance and testing, system management, programming, and network security); and ensuring that security personnel administering access control functions do not also administer audit functions. Because separation of duty violations can span systems and application domains, organizations consider the entirety of organizational systems and system components when developing policy on separation of duties.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>No one person should be in charge of an entire critical task from beginning to end. Documenting and dividing elements of important duties and tasks between employees reduces intentional or unintentional execution of malicious activities.</p>
<div class="sub-header-2">Example 1</div>
<p>You are responsible for the management of several key systems within your organization including some that process CUI. You assign the task of reviewing the system logs to two different people. This way, no one person is solely responsible for the execution of this critical security function [c].</p>
<div class="sub-header-2">Example 2</div>
<p>You are a system administrator. Human Resources notifies you of a new hire, and you create an account with general privileges, but you are not allowed to grant access to systems that contain CUI [a,b]. The program manager contacts the team in your organization that has system administration authority over the CUI systems and informs them which CUI the new hire will need to access. Subsequently, a second system administrator grants access privileges to the new hire [c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does system documentation identify the system functions or processes that require separation of duties (e.g., function combinations that represent a conflict of interest or an over-allocation of security privilege for one individual) [a]?</li>
</ul>

', NULL, NULL, 37, 8, 19, NULL, NULL, 1204, NULL, N'Separation Of Duties', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5289, N'AC.L2-3.1.5', N'Employ the principle of least privilege, including for specific security functions and privileged accounts.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>privileged accounts are identified;</li>
<li>access to privileged accounts is authorized in accordance with the principle of least privilege;</li>
<li>security functions are identified; and</li>
<li>access to security functions is authorized in accordance with the principle of least privilege.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing account management; system security plan; system design documentation; system configuration settings and associated documentation; list of active system accounts and the name of the individual associated with each account; list of conditions for group and role membership; notifications or records of recently transferred, separated, or terminated employees; list of recently disabled system accounts along with the name of the individual associated with each account; access authorization records; account management compliance reviews; system monitoring/audit records; procedures addressing least privilege; list of security functions (deployed in hardware, software, and firmware) and security-relevant information for which access is to be explicitly authorized; list of system-generated privileged accounts; list of system administration personnel; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with account management responsibilities; system or network administrators; personnel with information security responsibilities; personnel with responsibilities for defining least privileges necessary to accomplish specified tasks].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for managing system accounts; mechanisms for implementing account management; mechanisms implementing least privilege functions; mechanisms prohibiting privileged access to the system].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations employ the principle of least privilege for specific duties and authorized accesses for users and processes. The principle of least privilege is applied with the goal of authorized privileges no higher than necessary to accomplish required organizational missions or business functions. Organizations consider the creation of additional processes, roles, and system accounts as necessary, to achieve least privilege. Organizations also apply least privilege to the development, implementation, and operation of organizational systems. Security functions include establishing system accounts, setting events to be logged, setting intrusion detection parameters, and configuring access authorizations (i.e., permissions, privileges).</p>
<p>Privileged accounts, including super user accounts, are typically described as system administrator for various types of commercial off-the-shelf operating systems. Restricting privileged accounts to specific personnel or roles prevents day-to-day users from having access to privileged information or functions. Organizations may differentiate in the application of this requirement between allowed privileges for local accounts and for domain accounts provided organizations retain the ability to control system configurations for key security parameters and as otherwise necessary to sufficiently mitigate risk.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>The principle of least privilege applies to all users and processes on all systems, but it is critical to systems containing or accessing CUI. Least privilege:</p>
<ul>
<li>restricts user access to only the machines and information needed to fulfill job responsibilities; and</li>
<li>limits what system configuration settings users can change, only allowing individuals with a business need to change them.</li>
</ul>
<div class="sub-header-2">Example</div>
<p>You create accounts for an organization that processes CUI. By default, everyone is assigned a basic user role, which prevents a user from modifying system configurations. Privileged access is only assigned to users and processes that require it to carry out job functions, such as IT staff, and is very selectively granted [b,d].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are privileged accounts documented and is when they may be used defined [a]?</li>
<li>Are users assigned privileged accounts to perform their job functions only when it is necessary [b]?</li>
<li>Are necessary security functions identified (e.g., access control configuration, system configuration settings, or privileged account lists) that must be managed through the use of privileged accounts [c]?</li>
<li>Is access to privileged functions and security information restricted to authorized employees [d]?</li>
</ul>

', NULL, NULL, 37, 9, 19, NULL, NULL, 1204, NULL, N'Least Privilege', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5290, N'AC.L2-3.1.6', N'Use non-privileged accounts or roles when accessing nonsecurity functions.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>nonsecurity functions are identified; and</li>
<li>users are required to use non-privileged accounts or roles when accessing nonsecurity functions.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing least privilege; system security plan; list of system-generated security functions assigned to system accounts or roles; system configuration settings and associated documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with responsibilities for defining least privileges necessary to accomplish specified organizational tasks; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing least privilege functions].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement limits exposure when operating from within privileged accounts or roles. The inclusion of roles addresses situations where organizations implement access control policies such as role-based access control and where a change of role provides the same degree of assurance in the change of access authorizations for the user and all processes acting on behalf of the user as would be provided by a change between a privileged and non- privileged account.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>A user with a privileged account can perform more tasks and access more information than a person with a non-privileged account. Tasks (including unauthorized tasks orchestrated by attackers) performed when using the privileged account can have a greater impact on the system. System administrators and users with privileged accounts must be trained not to use their privileged accounts for everyday tasks, such as browsing the internet or connecting unnecessarily to other systems or services.</p>
<div class="sub-header-2">Example</div>
<p>You are logged in using your privileged account and you need to look up how to reset a non- functioning application which processes CUI. You should log on to another computer with your non-privileged account before you connect to the web and start searching for the reset information [b]. That way, if your account is compromised during the search, it will be your regular user account rather than an account with elevated privileges.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are nonsecurity functions and non-privileged roles defined [a,b]?</li>
<li>Is it required that nonsecurity functions only be accessed with the use of non-privileged accounts? How is this verified [b]?</li>
</ul>

', NULL, NULL, 37, 10, 19, NULL, NULL, 1204, NULL, N'Non-Privileged Account Use', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5291, N'AC.L2-3.1.7', N'Prevent non-privileged users from executing privileged functions and capture the execution of such functions in audit logs.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>privileged functions are defined;</li>
<li>non-privileged users are defined;</li>
<li>non-privileged users are prevented from executing privileged functions; and</li>
<li>the execution of privileged functions is captured in audit logs.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Privacy and security policies, procedures addressing system use notification; documented approval of system use notification messages or banners; system audit logs and records; system design documentation; user acknowledgements of notification message or banner; system security plan; system use notification messages; system configuration settings and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with responsibilities for defining least privileges necessary to accomplish specified tasks; personnel with information security responsibilities; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing least privilege functions for non-privileged users; mechanisms auditing the execution of privileged functions].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Privileged functions include establishing system accounts, performing system integrity checks, conducting patching operations, or administering cryptographic key management activities. Non-privileged users are individuals that do not possess appropriate authorizations. Circumventing intrusion detection and prevention mechanisms or malicious code protection mechanisms are examples of privileged functions that require protection from non-privileged users. Note that this requirement represents a condition to be achieved by the definition of authorized privileges in 3.1.2 (AC.L2-3.1.2).</p>
<p>Misuse of privileged functions, either intentionally or unintentionally by authorized users, or by unauthorized external entities that have compromised system accounts, is a serious and ongoing concern and can have significant adverse impacts on organizations. Logging the use of privileged functions is one way to detect such misuse, and in doing so, help mitigate the risk from insider threats and the advanced persistent threat.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Non-privileged users should receive only those permissions required to perform their basic job functions. Privileged users are granted additional permissions because their jobs require them. Privileged functions typically involve the control, monitoring, or administration of the system and its security measures. When these special privileged functions are performed, the activity must be captured in an audit log, which can be used to identify abuse. Non- privileged employees must not be granted permission to perform any of the functions of a privileged user.</p>
<p>This requirement, AC.L2-3.1.7, manages non-privileged users by logging any attempts to execute privileged functions. AC.L2-3.1.7 leverages AU.L2-3.3.2, which ensures logging and traceability of user actions. AC.L2-3.1.7 also extends AC.L2-3.1.2, which defines a requirement to limit types of transactions and functions to those that authorized users are permitted to execute.</p>
<div class="sub-header-2">Example</div>
<p>Your organization handles CUI and has put security controls in place that prevent non- privileged users from performing privileged activities [a,b,c]. However, a standard user was accidentally given elevated system administrator privileges. The organization has implemented an endpoint detection and response solution that provides visibility into the use of privileged activities. The monitoring system logs a security misconfiguration because the use of administrative privileges was performed by a user who was not known to have that ability. This allows you to correct the error [d].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is it possible to identify who enabled privileges at any particular time [d]?</li>
<li>Are the privileged system functions documented (e.g., functions that involve the control, monitoring or administration of the system, including security functions and log management) [a]?</li>
<li>Do documented procedures describe the configuration of the system to ensure system roles do not grant non-privileged users the ability to execute privileged functions [c]?</li>
<li>Do procedures describe the configuration of system settings to capture the execution of all privileged functions in audit logs [d]?</li>
</ul>

', NULL, NULL, 37, 11, 19, NULL, NULL, 1204, NULL, N'Privileged Functions', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5292, N'AC.L2-3.1.8', N'Limit unsuccessful logon attempts.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the means of limiting unsuccessful logon attempts is defined; and</li>
<li>the defined means of limiting unsuccessful logon attempts is implemented.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing unsuccessful logon attempts; system security plan; system design documentation; system configuration settings and associated documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with information security responsibilities; system developers; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing access control policy for unsuccessful logon attempts].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement applies regardless of whether the logon occurs via a local or network connection. Due to the potential for denial of service, automatic lockouts initiated by systems are, in most cases, temporary and automatically release after a predetermined period established by the organization (i.e., a delay algorithm). If a delay algorithm is selected, organizations may employ different algorithms for different system components based on the capabilities of the respective components. Responses to unsuccessful logon attempts may be implemented at the operating system and application levels.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Consecutive unsuccessful logon attempts may indicate malicious activity. OSAs can mitigate these attacks by limiting the number of unsuccessful logon attempts, typically by locking the account. A defined number of consecutive unsuccessful logon attempts is a common configuration setting. OSAs are expected to set this number at a level that fits their risk profile with the knowledge that fewer unsuccessful attempts provide higher security.</p>
<p>After an unsuccessful login attempt threshold is exceeded and the system locks an account, the account may either remain locked until an administrator takes action to unlock it, or it may be locked for a predefined time after which it unlocks automatically.</p>
<div class="sub-header-2">Example</div>
<p>You attempt to log on to your work computer, which stores CUI. You mistype your password three times in a row, and an error message is generated telling you the account is locked [b]. You call your IT help desk or system administrator to request assistance. The system administrator explains that the account is locked as a result of three unsuccessful logon attempts [a]. The administrator offers to unlock the account and notes that you can wait 30 minutes for the account to unlock automatically.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is there a defined threshold for the number of unsuccessful logon attempts for which the system takes action to prevent additional attempts [a]?</li>
<li>Is a mechanism for limiting the number of unsuccessful logon attempts implemented and does it use the defined threshold [b]?</li>
</ul>

', NULL, NULL, 37, 12, 19, NULL, NULL, 1204, NULL, N'Unsuccessful Logon Attempts', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5293, N'AC.L2-3.1.9', N'Provide privacy and security notices consistent with applicable CUI rules.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>privacy and security notices required by CUI-specified rules are identified, consistent, and associated with the specific CUI category; and</li>
<li>privacy and security notices are displayed.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Privacy and security policies, procedures addressing system use notification; documented approval of system use notification messages or banners; system audit logs and records; system design documentation; user acknowledgements of notification message or banner; system security plan; system use notification messages; system configuration settings and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; personnel with responsibility for providing legal advice; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing system use notification].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>System use notifications can be implemented using messages or warning banners displayed before individuals log in to organizational systems. System use notifications are used only for access via logon interfaces with human users and are not required when such human interfaces do not exist. Based on a risk assessment, organizations consider whether a secondary system use notification is needed to access applications or other system resources after the initial network logon. Where necessary, posters or other printed materials may be used in lieu of an automated system banner. Organizations consult with the Office of General Counsel for legal review and approval of warning banner content.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Every system containing or providing access to CUI has legal requirements concerning user privacy and security notices. One method of addressing this requirement is the use of a system-use notification banner that displays the legal requirements of using the system. Users may be required to click to agree to the displayed requirements of using the system each time they log on to the machine. This agreement can be used in the civil and/or criminal prosecution of an attacker that violates the terms.</p>
<p>The legal notification should meet all applicable requirements. At a minimum, the notice should inform the user that:</p>
<ul>
<li>information system usage may be monitored or recorded, and is subject to audit;</li>
<li>unauthorized use of the information systems is prohibited;</li>
<li>unauthorized use is subject to criminal and civil penalties;</li>
<li>use of the information system affirms consent to monitoring and recording;</li>
<li>the information system contains CUI with specific requirements imposed by the Department of Defense; and</li>
<li>use of the information system may be subject to other specified requirements associated with certain types of CUI such as Export Controlled information.</li>
</ul>
<div class="sub-header-2">Example</div>
<p>You are setting up IT equipment including a database server that will contain CUI. You have worked with legal counsel to draft a notification. It contains both general and specific CUI security and privacy requirements [a]. The system displays the required security and privacy information before anyone logs on to your organization’s computers that contain or provide access to CUI [b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are objectives identified for privacy and security notices, and does the implementation satisfy the required objectives [a,b]? Discrepancies may indicate a deficient process and/or an incomplete objective for the overall requirement.</li>
<li>Are there any special requirements associated with the specific CUI category [a]?</li>
<li>Are appropriate notices displayed in areas where paper-based CUI is stored and processed [b]?</li>
</ul>

', NULL, NULL, 37, 13, 19, NULL, NULL, 1204, NULL, N'Privacy & Security Notices', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5294, N'AC.L2-3.1.10', N'Use session lock with pattern-hiding displays to prevent access and viewing of data after a period of inactivity.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the period of inactivity after which the system initiates a session lock is defined;</li>
<li>access to the system and viewing of data is prevented by initiating a session lock after the defined period of inactivity; and</li>
<li>previously visible information is concealed via a pattern-hiding display after the defined period of inactivity.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing session lock; procedures addressing identification and authentication; system design documentation; system configuration settings and associated documentation; system security plan; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing access control policy for session lock].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Session locks are temporary actions taken when users stop work and move away from the immediate vicinity of the system but do not want to log out because of the temporary nature of their absences. Session locks are implemented where session activities can be determined, typically at the operating system level (but can also be at the application level). Session locks are not an acceptable substitute for logging out of the system, for example, if organizations require users to log out at the end of the workday.</p>
<p>Pattern-hiding displays can include static or dynamic images, for example, patterns used with screen savers, photographic images, solid colors, clock, battery life indicator, or a blank screen, with the additional caveat that none of the images convey controlled unclassified information.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Session locks can be initiated by the user or, more fundamentally, enabled automatically when the system has been idle for a period of time, for example, five minutes. Session locks are a quick way to prevent unauthorized use of the systems without having a user log off. Minimum configuration requirements are left up to the organization to define.</p>
<p>A locked session shows pattern-hiding information on the screen to mask the data on the display.</p>
<div class="sub-header-2">Example</div>
<p>You manage systems for an organization that stores, processes, and transmits CUI. You notice that employees leave their offices without locking their computers. Sometimes their screens display sensitive company information. You configure all machines to lock after five minutes of inactivity [a,b]. You also remind your coworkers to lock their systems when they walk away [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does the session lock hide previously visible information (e.g., replacing what was visible with a lock screen or screensaver that does not include sensitive information) [c]?</li>
<li>If session locks are not managed centrally, how are all computer users made aware of the requirements and how to configure them [a,b,c]?</li>
</ul>

', NULL, NULL, 37, 14, 19, NULL, NULL, 1204, NULL, N'Session Lock', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5295, N'AC.L2-3.1.11', N'Terminate (automatically) a user session after a defined condition.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>conditions requiring a user session to terminate are defined; and</li>
<li>a user session is automatically terminated after any of the defined conditions occur.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing session termination; system design documentation; system security plan; system configuration settings and associated documentation; list of conditions or trigger events requiring session disconnect; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing user session termination].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement addresses the termination of user-initiated logical sessions in contrast to the termination of network connections that are associated with communications sessions (i.e., disconnecting from the network). A logical session (for local, network, and remote access) is initiated whenever a user (or process acting on behalf of a user) accesses an organizational system. Such user sessions can be terminated (and thus terminate user access) without terminating network sessions. Session termination terminates all processes associated with a user’s logical session except those processes that are specifically created by the user (i.e., session owner) to continue after the session is terminated. Conditions or trigger events requiring automatic session termination can include organization-defined periods of user inactivity, targeted responses to certain types of incidents, and time-of-day restrictions on system use.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Configure the system to terminate user sessions based on the organization’s policy. Session termination policies can be simple or sophisticated. Examples are inactivity (end the session after a specified duration (e.g., one hour33) of inactivity), day/time (all sessions are terminated at the end of the established workday), misbehavior (end the session due to an attempted policy violation), and maintenance (terminate sessions to prevent issues with an upgrade or service outage). If there is no automatic control of user sessions, an attacker can take advantage of an unattended session.</p>
<div class="sub-header-2">Example 1</div>
<p>You manage systems containing CUI for your organization and configure the system to terminate all user sessions after 1 hour of inactivity [a]. As the session timeout approaches, the system prompts users with a warning banner asking if they want to continue the session. When the session timeout does occur, the login page pops up, and the users must log in to start a new session [b].</p>
<div class="sub-header-2">Example 2</div>
<p>A user is logged into a corporate database containing CUI but is not authorized to view CUI. The user has submitted a series of queries that unintentionally violate policy, as they attempt to extract CUI that the user is not authorized to view [a]. The session terminates with a warning as a result of a violation of corporate policy [b]. The user must reestablish the session before being able to submit additional legitimate queries.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are the conditions in which a user session must be terminated described (e.g., after a period of inactivity or after a defined time limit) [a]?</li>
<li>Are procedures documented that describe how to configure the system to enable automatic termination of user sessions after any of the defined conditions occur [b]?</li>
<li>Are user sessions terminated based on organization-defined conditions [a,b]?</li>
</ul>

', NULL, NULL, 37, 15, 19, NULL, NULL, 1204, NULL, N'Session Termination', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5296, N'AC.L2-3.1.12', N'Monitor and control remote access sessions.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>remote access sessions are permitted;</li>
<li>the types of permitted remote access are identified;</li>
<li>remote access sessions are controlled; and</li>
<li>remote access sessions are monitored.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing remote access implementation and usage (including restrictions); configuration management plan; system security plan; system design documentation; system configuration settings and associated documentation; remote access authorizations; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with responsibilities for managing remote access connections; system or network administrators; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Remote access management capability for the system].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Remote access is access to organizational systems by users (or processes acting on behalf of users) communicating through external networks (e.g., the internet). Remote access methods include dial-up, broadband, and wireless. Organizations often employ encrypted virtual private networks (VPNs) to enhance confidentiality over remote connections. The use of encrypted VPNs does not make the access non-remote; however, the use of VPNs, when adequately provisioned with appropriate control (e.g., employing encryption techniques for confidentiality protection), may provide sufficient assurance to the organization that it can effectively treat such connections as internal networks. VPNs with encrypted tunnels can affect the capability to adequately monitor network communications traffic for malicious code.</p>
<p>Automated monitoring and control of remote access sessions allows organizations to detect cyber-attacks and help to ensure ongoing compliance with remote access policies by auditing connection activities of remote users on a variety of system components (e.g., servers, workstations, notebook computers, smart phones, and tablets).</p>
<p>NIST SP 800-46, SP 800-77, and SP 800-113 provide guidance on secure remote access and virtual private networks.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Remote access connections pass through untrusted networks and therefore require proper security controls such as encryption to ensure data confidentiality. Initialization of all remote sessions should ensure that only authorized users and devices are connecting. After the remote session is established, the connection is monitored to track who is accessing the network remotely and what files are being accessed during the session.</p>
<p>Remote access sessions can encompass more than just remote connections back to a headquarters network. Access to cloud-based email providers or server infrastructures also are relevant to this requirement if those environments contain CUI.</p>
<p>This requirement, AC.L2-3.1.12, requires the control of remote access sessions and complements five other requirements dealing with remote access (AC.L2-3.1.14, AC.L2- 3.1.13, AC.L2-3.1.15, IA.L2-3.5.3, and MA.L2-3.7.5):</p>
<ul>
<li>AC.L2-3.1.14 limits remote access to specific access control points.</li>
<li>AC.L2-3.1.13 requires the use of cryptographic mechanisms when enabling remote sessions.</li>
<li>AC.L2-3.1.15 requires authorization for privileged commands executed during a remote session.</li>
<li>IA.L2-3.5.3 requires multifactor authentication for network access to non-privileged accounts.</li>
<li>Finally, MA.L2-3.7.5 requires the addition of multifactor authentication for remote maintenance sessions.</li>
</ul>
<div class="sub-header-2">Example</div>
<p>You often need to work from remote locations, such as your home or client sites, and you are permitted to access your organization’s internal networks (including a network containing CUI) from those remote locations [a]. A system administrator issues you a company laptop with VPN software installed, which is required to connect to the networks remotely [b]. After the laptop connects to the VPN server, you must accept a privacy notice that states that the company’s security department may monitor the connection. This monitoring is achieved through the analysis of data from sensors on the network notifying IT if issues arise. The security department may also review audit logs to see who is connecting remotely, when, and what information they are accessing [d]. During session establishment, the message “Verifying Compliance” means software like a Device Health Check (DHC) application is checking the remote device to ensure it meets the established requirements to connect [c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Do policies identify when remote access is permitted and what methods must be used [a,b]?</li>
<li>Are systems configured to permit only approved remote access sessions (e.g., disallow remote access sessions by default) [c]?</li>
<li>Are automated or manual mechanisms employed for monitoring remote connections? If the monitoring is manual, does it occur at a frequency commensurate with the level of risk [d]?</li>
</ul>

', NULL, NULL, 37, 16, 19, NULL, NULL, 1204, NULL, N'Control Remote Access', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5297, N'AC.L2-3.1.13', N'Employ cryptographic mechanisms to protect the confidentiality of remote access sessions.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>cryptographic mechanisms to protect the confidentiality of remote access sessions are identified; and</li>
<li>cryptographic mechanisms to protect the confidentiality of remote access sessions are implemented.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing remote access to the system; system security plan; system design documentation; system configuration settings and associated documentation; cryptographic mechanisms and associated configuration documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Cryptographic mechanisms protecting remote access sessions].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Cryptographic standards include FIPS-validated cryptography and NSA-approved cryptography.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>A remote access session involves logging into the organization’s systems such as its internal network or a cloud service provider from a remote location such as home or an alternate work site. Because the use of cryptography in this requirement is to protect the confidentiality of CUI, the cryptography used must meet the criteria specified in requirement SC.L2-3.13.11. Although not explicitly required to meet AC.L2-3.1.13 requirements, this remote access session must be secured using FIPS-validated cryptography to provide confidentiality and prevent anyone from deciphering session information exchanges.</p>
<p>This requirement, AC.L2-3.1.13, requires the use of cryptographic mechanisms when enabling remote sessions and complements five other requirements dealing with remote access (AC.L2-3.1.12, AC.L2-3.1.14, AC.L2-3.1.15, IA.L2-3.5.3, and MA.L2-3.7.5):</p>
<ul>
<li>AC.L2-3.1.12 requires the control of remote access sessions.</li>
<li>AC.L2-3.1.14 limits remote access to specific access control points.</li>
<li>AC.L2-3.1.15 requires authorization for privileged commands executed during a remote session.</li>
<li>IA.L2-3.5.3 requires multifactor authentication for network access to non-privileged accounts.</li>
<li>Finally, MA.L2-3.7.5 requires the addition of multifactor authentication for remote maintenance sessions.</li>
</ul>
<div class="sub-header-2">Example</div>
<p>You are responsible for implementing a remote network access capability for users who access CUI remotely. In order to provide session confidentiality, you decide to implement a VPN mechanism and select a product that has completed FIPS 140 validation [a,b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are cryptographic mechanisms used for remote access sessions (e.g., Transport Layer Security (TLS) and Internet Protocol Security (IPSec) using FIPS-validated encryption algorithms) defined and implemented [a,b]? Note that simply using an approved algorithm is not sufficient – the module (software and/or hardware) used to implement the algorithm must be separately validated under FIPS 140.</li>
</ul>

', NULL, NULL, 37, 17, 19, NULL, NULL, 1204, NULL, N'Remote Access Confidentiality', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5298, N'AC.L2-3.1.14', N'Route remote access via managed access control points.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>managed access control points are identified and implemented; and</li>
<li>remote access is routed through managed network access control points.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing remote access to the system; system security plan; system design documentation; list of all managed network access control points; system configuration settings and associated documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms routing all remote accesses through managed network access control points].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Routing remote access through managed access control points enhances explicit, organizational control over such connections, reducing the susceptibility to unauthorized access to organizational systems resulting in the unauthorized disclosure of CUI.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>The OSA can route all remote access through a limited number of remote access control points to reduce the attack surface and simplify network management. This allows for better monitoring and control of the remote connections.</p>
<p>This requirement, AC.L2-3.1.14, limits remote access to specific access control points and complements five other requirements dealing with remote access (AC.L2-3.1.12, AC.L2- 3.1.13, AC.L2-3.1.15, IA.L2-3.5.3, and MA.L2-3.7.5):</p>
<ul>
<li>AC.L2-3.1.12 requires the control of remote access sessions.</li>
<li>AC.L2-3.1.13 requires the use of cryptographic mechanisms when enabling remote sessions.</li>
<li>AC.L2-3.1.15 requires authorization for privileged commands executed during a remote session.</li>
<li>IA.L2-3.5.3 requires multifactor authentication for network access to non-privileged accounts.</li>
<li>Finally, MA.L2-3.7.5 requires the addition of multifactor authentication for remote maintenance sessions.</li>
</ul>
<div class="sub-header-2">Example</div>
<p>You manage systems for a company that processes CUI at multiple locations, and several employees at different locations need to connect to the organization’s networks while working remotely. Because each company location has a direct connection to headquarters, you decide to route all remote access through the headquarters location [a]. All remote traffic is routed through a single location to simplify monitoring [b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>How many managed access control points are implemented [a]?</li>
<li>Is all remote access routed through the managed access control points [b]?</li>
</ul>

', NULL, NULL, 37, 18, 19, NULL, NULL, 1204, NULL, N'Remote Access Routing', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5299, N'AC.L2-3.1.15', N'Authorize remote execution of privileged commands and remote access to security-relevant information.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>privileged commands authorized for remote execution are identified;</li>
<li>security-relevant information authorized to be accessed remotely is identified;</li>
<li>the execution of the identified privileged commands via remote access is authorized; and</li>
<li>access to the identified security-relevant information via remote access is authorized.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing remote access to the system; system configuration settings and associated documentation; system security plan; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing remote access management].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>A privileged command is a human-initiated (interactively or via a process operating on behalf of the human) command executed on a system involving the control, monitoring, or administration of the system including security functions and associated security-relevant information. Security-relevant information is any information within the system that can potentially impact the operation of security functions or the provision of security services in a manner that could result in failure to enforce the system security policy or maintain isolation of code and data. Privileged commands give individuals the ability to execute sensitive, security-critical, or security-relevant system functions. Controlling such access from remote locations helps to ensure that unauthorized individuals are not able to execute such commands freely with the potential to do serious or catastrophic damage to organizational systems. Note that the ability to affect the integrity of the system is considered security-relevant as that could enable the means to by-pass security functions although not directly impacting the function itself.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Privileged users are not necessarily allowed to perform their job functions from a remote location. Likewise, not all privileged commands may be executed remotely. Allowing remote execution of privileged commands or remote access to security-relevant information should be avoided if possible. If absolutely necessary, the privileged commands authorized for remote execution should be identified and documented. Document which user roles have permissions to remotely execute privileged commands to make changes and to access security relevant information. Documentation must be used to establish security mechanisms that enforce the policy.</p>
<p>This requirement, AC.L2-3.1.15, requires authorization for privileged commands executed during a remote session and complements five other requirements dealing with remote access (AC.L2-3.1.12, AC.L2-3.1.14, AC.L2-3.1.13, IA.L2-3.5.3, and MA.L2-3.7.5):</p>
<ul>
<li>AC.L2-3.1.12 requires the control of remote access sessions.</li>
<li>AC.L2-3.1.14 limits remote access to specific access control points.</li>
<li>AC.L2-3.1.13 requires the use of cryptographic mechanisms when enabling remote sessions.</li>
<li>IA.L2-3.5.3 requires multifactor authentication for network access to non-privileged accounts.</li>
<li>Finally, MA.L2-3.7.5 requires the addition of multifactor authentication for remote maintenance sessions.</li>
</ul>
<p>This requirement, AC.L2-3.1.15, also extends AC.L2-3.1.2, which limits the types of transactions and functions that authorized users are permitted to execute.</p>
<div class="sub-header-2">Example</div>
<p>Your company’s Access Control Policy permits certain work roles to remotely perform a limited set of privileged commands from company-owned computers [a]. You implement controls to enforce who can remotely execute a privileged command, which privileged commands they can execute, and who is allowed access to security relevant information such as audit log configuration settings [a,c,d].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does system documentation identify system administration or security functions that can be executed remotely [a]?</li>
<li>Is execution of the identified privileged commands via remote access only authorized for documented operational needs [c]?</li>
</ul>

', NULL, NULL, 37, 19, 19, NULL, NULL, 1204, NULL, N'Privileged Remote Access', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5300, N'AC.L2-3.1.16', N'Authorize wireless access prior to allowing such connections.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>wireless access points are identified; and</li>
<li>wireless access is authorized prior to allowing such connections.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; configuration management plan; procedures addressing wireless access implementation and usage (including restrictions); system security plan; system design documentation; system configuration settings and associated documentation; wireless access authorizations; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with responsibilities for managing wireless access connections; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Wireless access management capability for the system].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Establishing usage restrictions and configuration/connection requirements for wireless access to the system provides criteria for organizations to support wireless access authorization decisions. Such restrictions and requirements reduce the susceptibility to unauthorized access to the system through wireless technologies. Wireless networks use authentication protocols that provide credential protection and mutual authentication.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Guidelines from management form the basis for the requirements that must be met prior to authorizing a wireless connection. These guidelines may include the following:</p>
<ul>
<li>types of devices, such as corporate or privately owned equipment;</li>
<li>configuration requirements of the devices; and</li>
<li>authorization requirements before granting such connections.</li>
</ul>
<p>AC.L2-3.1.16, AC.L2-3.1.17, and AC.L2-3.1.18 are complementary requirements in that they all establish control for the connection of mobile devices and wireless devices through the use of authentication, authorization, and encryption mechanisms.</p>
<div class="sub-header-2">Example</div>
<p>Your company is implementing a wireless network at its headquarters. CUI may be transmitted on this network. You work with management to draft a policy about the use of the wireless network. The policy states that only company-approved devices that contain verified security configuration settings are allowed to connect. The policy also includes usage restrictions that must be followed for anyone who wants to use the wireless network. Authorization is required before devices are allowed to connect to the wireless network [b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is an updated list of approved network devices providing wireless access to the system maintained [a]?</li>
<li>Are network devices providing wireless access configured to require users or devices be authorized prior to permitting a wireless connection [b]?</li>
<li>Is wireless access to the system authorized and managed [b]?</li>
</ul>

', NULL, NULL, 37, 20, 19, NULL, NULL, 1204, NULL, N'Wireless Access Authorization', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5301, N'AC.L2-3.1.17', N'Protect wireless access using authentication and encryption.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>wireless access to the system is protected using authentication; and</li>
<li>wireless access to the system is protected using encryption.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; system design documentation; procedures addressing wireless implementation and usage (including restrictions); system security plan; system configuration settings and associated documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing wireless access protections to the system].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations authenticate individuals and devices to help protect wireless access to the system. Special attention is given to the wide variety of devices that are part of the Internet of Things with potential wireless access to organizational systems.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Use a combination of authentication and encryption methods to protect the access to wireless networks. Authenticating users to a wireless access point can be achieved in multiple ways. The most common authentication and encryption methods used include:</p>
<ul>
<li>WPA2-PSK (WiFi Protected Access-Pre-shared Key) – This method uses a password or passphrase known by the wireless access point and the client (user device). It is common in small companies that have little turnover because the key must be changed each time an employee leaves in order to prevent the terminated employee from connecting to the network without authorization. WPA2 is typically configured to use Advanced Encryption Standard (AES) encryption.</li>
<li>WPA2 Enterprise – This method may be better for larger companies and enterprise networks because authentication is based on the identity of the individual user or device rather than a shared password or passphrase. It typically requires a Remote Authentication Dial-in User Service (RADIUS) server for authentication and can provide higher security than WPA2-PSK.</li>
</ul>
<p>Open authentication must not be used because it authenticates any user and lacks security capabilities.</p>
<p>Because the use of cryptography in this requirement is to protect the confidentiality of CUI, the cryptography used must meet the criteria specified in requirement SC.L2-3.13.11.</p>
<p>AC.L2-3.1.16, AC.L2-3.1.17, and AC.L2-3.1.18 are complementary requirements in that they all establish control for the connection of mobile devices and wireless devices through the use of authentication, authorization, and encryption mechanisms.</p>
<div class="sub-header-2">Example 1</div>
<p>You manage the wireless network at a small company and are installing a new wireless solution that may transmit CUI. You start by selecting a product that employs encryption validated against the FIPS 140 standard. You configure the wireless solution to use WPA2, requiring users to enter a pre-shared key to connect to the wireless network [a,b].</p>
<div class="sub-header-2">Example 2</div>
<p>You manage the wireless network at a large company and are installing a new wireless solution that may transmit CUI. You start by selecting a product that employs encryption that is validated against the FIPS 140 standard. Because of the size of your workforce, you configure the wireless system to authenticate users with a RADIUS server. Users must provide the wireless system with their domain usernames and passwords to be able to connect, and the RADIUS server verifies those credentials. Users unable to authenticate are denied access [a,b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is wireless access limited only to authenticated and authorized users (e.g., required to supply a username and password) [a]?</li>
<li>If the organization is securing its wireless network with a pre-shared key, is access to that key restricted to only authorized users [a]?</li>
<li>Is wireless access encrypted using FIPS-validated cryptography? Note that simply using an approved algorithm is not sufficient; the module (software and/or hardware) used to implement the algorithm must be separately validated under FIPS 140 [b].</li>
</ul>

', NULL, NULL, 37, 21, 19, NULL, NULL, 1204, NULL, N'Wireless Access Protection', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5302, N'AC.L2-3.1.18', N'Control connection of mobile devices.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>mobile devices that process, store, or transmit CUI are identified;</li>
<li>mobile device connections are authorized; and</li>
<li>mobile device connections are monitored and logged.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; authorizations for mobile device connections to organizational systems; procedures addressing access control for mobile device usage (including restrictions); system design documentation; configuration management plan; system security plan; system audit logs and records; system configuration settings and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel using mobile devices to access organizational systems; system or network administrators; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Access control capability authorizing mobile device connections to organizational systems].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>A mobile device is a computing device that has a small form factor such that it can easily be carried by a single individual; is designed to operate without a physical connection (e.g., wirelessly transmit or receive information); possesses local, non-removable or removable data storage; and includes a self-contained power source. Mobile devices may also include voice communication capabilities, on-board sensors that allow the device to capture information, or built-in features for synchronizing local data with remote locations. Examples of mobile devices include smart phones, e-readers, and tablets.</p>
<p>Due to the large variety of mobile devices with different technical characteristics and capabilities, organizational restrictions may vary for the different types of devices. Usage restrictions and implementation guidance for mobile devices include: device identification and authentication; configuration management; implementation of mandatory protective software (e.g., malicious code detection, firewall); scanning devices for malicious code; updating virus protection software; scanning for critical software updates and patches; conducting primary operating system (and possibly other resident software) integrity checks; and disabling unnecessary hardware (e.g., wireless, infrared). The need to provide adequate security for mobile devices goes beyond this requirement. Many controls for mobile devices are reflected in other CUI security requirements. NIST SP 800-124 provides guidance on mobile device security.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Establish guidelines and acceptable requirements for proper configuration, use, and management of mobile devices. Devices that process, store, or transmit CUI must be identified with a device-specific identifier. There are many different types of identifiers, and it is important to select one that can accommodate all devices and be used in a consistent manner. These identifiers are important for facilitating the required monitoring and logging function.</p>
<p>In addition to smartphones, consider the security of other portable devices such as e-readers and tablets.</p>
<p>AC.L2-3.1.16, AC.L2-3.1.17, and AC.L2-3.1.18 are complementary requirements in that they all establish control for the connection of mobile devices and wireless devices through the use of authentication, authorization, and encryption mechanisms.</p>
<div class="sub-header-2">Example</div>
<p>Your organization has a policy stating that all mobile devices, including iPads, tablets, mobile phones, and Personal Digital Assistants (PDAs), must be approved and registered with the IT department before connecting to the network that contains CUI. The IT department uses a Mobile Device Management solution to monitor mobile devices and enforce policies across the enterprise [b,c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is a list of mobile devices that are permitted to process, store, or transmit CUI maintained [a,b]?</li>
<li>Is the system configured to only permit connections from identified, authorized mobile devices [b]?</li>
</ul>

', NULL, NULL, 37, 22, 19, NULL, NULL, 1204, NULL, N'Mobile Device Connection', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5303, N'AC.L2-3.1.19', N'Encrypt CUI on mobile devices and mobile computing platforms.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>mobile devices and mobile computing platforms that process, store, or transmit CUI are identified; and</li>
<li>encryption is employed to protect CUI on identified mobile devices and mobile computing platforms.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing access control for mobile devices; system design documentation; system configuration settings and associated documentation; encryption mechanisms and associated configuration documentation; system security plan; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with access control responsibilities for mobile devices; system or network administrators; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Encryption mechanisms protecting confidentiality of information on mobile devices].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations can employ full-device encryption or container-based encryption to protect the confidentiality of CUI on mobile devices and computing platforms. Container-based encryption provides a more fine-grained approach to the encryption of data and information including encrypting selected data structures such as files, records, or fields.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Ensure CUI is encrypted on all mobile devices and mobile computing platforms that process, store, or transmit CUI including smartphones, tablets, and e-readers.</p>
<p>Because the use of cryptography in this requirement is to protect the confidentiality of CUI, the cryptography used must meet the criteria specified in requirement SC.L2-3.13.11.</p>
<p>This requirement, AC.L2-3.1.19, specifies that CUI be encrypted on mobile devices and extends three other CUI protection requirements (MP.L2-3.8.1, MP.L2-3.8.2, and SC.L2- 3.13.16):</p>
<ul>
<li>MP.L2-3.8.1 requires that media containing CUI be protected.</li>
<li>MP.L2-3.8.2 limits access to CUI to authorized users.</li>
<li>Finally, SC.L2-3.13.16 requires confidentiality of CUI at rest.</li>
</ul>
<p>This requirement, AC.L2-3.1.19, also leverages SC.L2-3.13.11, which specifies that the algorithms used must be FIPS-validated cryptography, and SC.L2-3.13.10, which specifies that any cryptographic keys in use must be protected.</p>
<div class="sub-header-2">Example</div>
<p>You are in charge of mobile device security for a company that processes CUI. You configure all laptops to use the full-disk encryption technology built into the operating system. This approach is FIPS-validated and encrypts all files, folders, and volumes.</p>
<p>Phones and tablets pose a greater technical challenge with their wide range of manufacturers and operating systems. You select a proprietary mobile device management (MDM) solution to enforce FIPS-validated encryption on those devices [a,b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is a list maintained of mobile devices and mobile computing platforms that are permitted to process, store, or transmit CUI [a]?</li>
<li>Is CUI encrypted on mobile devices using FIPS-validated algorithms [b]?</li>
</ul>

', NULL, NULL, 37, 23, 19, NULL, NULL, 1204, NULL, N'Encrypt Cui On Mobile', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5304, N'AC.L2-3.1.20', N'Verify and control/limit connections to and use of external systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>connections to external systems are identified;</li>
<li>the use of external systems is identified;</li>
<li>connections to external systems are verified;</li>
<li>the use of external systems is verified;</li>
<li>connections to external systems are controlled/limited; and</li>
<li>the use of external systems is controlled/limited.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing the use of external systems; terms and conditions for external systems; system security plan; list of applications accessible from external systems; system configuration settings and associated documentation; system connection or processing agreements; account management documents; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with responsibilities for defining terms and conditions for use of external systems to access organizational systems; system or network administrators; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing terms and conditions on use of external systems].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>External systems are systems or components of systems for which organizations typically have no direct supervision and authority over the application of security requirements and controls or the determination of the effectiveness of implemented controls on those systems. External systems include personally owned systems, components, or devices and privately- owned computing and communications devices resident in commercial or public facilities.</p>
<p>This requirement also addresses the use of external systems for the processing, storage, or transmission of CUI, including accessing cloud services (e.g., infrastructure as a service, platform as a service, or software as a service) from organizational systems.</p>
<p>Organizations establish terms and conditions for the use of external systems in accordance with organizational security policies and procedures. Terms and conditions address as a minimum, the types of applications that can be accessed on organizational systems from external systems. If terms and conditions with the owners of external systems cannot be established, organizations may impose restrictions on organizational personnel using those external systems.</p>
<p>This requirement recognizes that there are circumstances where individuals using external systems (e.g., contractors, coalition partners) need to access organizational systems. In those situations, organizations need confidence that the external systems contain the necessary controls so as not to compromise, damage, or otherwise harm organizational systems. Verification that the required controls have been effectively implemented can be achieved by third-party, independent assessments, attestations, or other means, depending on the assurance or confidence level required by organizations.</p>
<p>Note that while “external” typically refers to outside of the organization’s direct supervision and authority, that is not always the case. Regarding the protection of CUI across an organization, the organization may have systems that process CUI and others that do not. And among the systems that process CUI there are likely access restrictions for CUI that apply between systems. Therefore, from the perspective of a given system, other systems within the organization may be considered “external" to that system.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Control and manage connections between your company network and outside networks. Outside networks could include the public internet, one of your own company’s networks that falls outside of your CMMC Assessment Scope (e.g., an isolated lab), or a network that does not belong to your company. Tools to accomplish include firewalls and connection allow/deny lists. External systems not controlled by your company could be running applications that are prohibited or blocked. Control and limit access to corporate networks from personally owned devices such as laptops, tablets, and phones. You may choose to limit how and when your network is connected to outside systems or only allow certain employees to connect to outside systems from network resources.</p>
<div class="sub-header-2">Example</div>
<p>Your company has a project that contains CUI. You remind your coworkers of the policy requirement to use their company laptops, not personal laptops or tablets, when working remotely on the project [b,f]. You also remind everyone to work from the cloud environment that is approved for processing and storing CUI rather than the other collaborative tools that may be used for other projects [b,f].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are all connections to external systems outside of the assessment scope identified [a]?</li>
<li>Are external systems (e.g., systems managed by OSAs, partners, or vendors; personal devices) that are permitted to connect to or make use of organizational systems identified [b]?</li>
<li>Are methods employed to ensure that only authorized connections are being made to external systems (e.g., requiring log-ins or certificates, access from a specific IP address, or access via Virtual Private Network (VPN)) [c,e]?</li>
<li>Are methods employed to confirm that only authorized external systems are connecting (e.g., if employees are receiving company email on personal cell phones, is the OSA checking to verify that only known/expected devices are connecting) [d]?</li>
<li>Is the use of external systems limited, including by policy or physical control [f]?</li>
</ul>

', NULL, NULL, 37, 24, 19, NULL, NULL, 1204, NULL, N'External Connections', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5305, N'AC.L2-3.1.21', N'Limit use of portable storage devices on external systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the use of portable storage devices containing CUI on external systems is identified and documented;</li>
<li>limits on the use of portable storage devices containing CUI on external systems are defined; and</li>
<li>the use of portable storage devices containing CUI on external systems is limited as defined.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing the use of external systems; system security plan; system configuration settings and associated documentation; system connection or processing agreements; account management documents; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with responsibilities for restricting or prohibiting use of organization-controlled storage devices on external systems; system or network administrators; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing restrictions on use of portable storage devices].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Limits on the use of organization-controlled portable storage devices in external systems include complete prohibition of the use of such devices or restrictions on how the devices may be used and under what conditions the devices may be used. Note that while “external” typically refers to outside of the organization’s direct supervision and authority that is not always the case. Regarding the protection of CUI across an organization, the organization may have systems that process CUI and others that do not. Among the systems that process CUI there are likely access restrictions for CUI that apply between systems. Therefore, from the perspective of a given system, other systems within the organization may be considered</p>
<p>“external" to that system.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>A portable storage device is a system component that can be inserted or attached and easily removed from a system. It is used to store data or information. Examples of portable storage devices include:</p>
<ul>
<li>compact/digital video disks (CDs/DVDs);</li>
<li>Universal Serial Bus (USB) drives;</li>
<li>external hard disk drives;</li>
<li>flash memory cards/drives; and</li>
<li>floppy disks.</li>
</ul>
<p>This requirement can be implemented in two ways:</p>
<ul>
<li>identifying the portable storage device usage restrictions, identifying portable storage devices that may be used on external systems, identifying associated external systems on which a portable storage device may be used, and administratively (through the use of a written policy) limiting the usage of the devices to those systems; or</li>
<li>configuring devices to work only when connected to a system to which the portable storage device can authenticate, limiting the devices’ use on external systems to those that the OSA has the ability to manage.</li>
</ul>
<div class="sub-header-2">Example</div>
<p>Your organization, which stores and processes CUI, has a written portable device usage restriction policy. It states that users can only use external storage devices such as thumb dives or external hard disks that belong to the company. When needed for a specific business function, a user checks the device out from IT and returns it to IT when no longer needed [a,b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are the portable storage devices authorized for external use identified and documented [a]?</li>
<li>Are the circumstances defined in which portable storage devices containing CUI may be used on external systems (e.g., with management approval) [b]?</li>
<li>Are limitations stipulated for the use of portable storage devices containing CUI on external systems (e.g., authorized personnel only, encrypted drives required) [b]?</li>
</ul>

', NULL, NULL, 37, 25, 19, NULL, NULL, 1204, NULL, N'Portable Storage Use', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5306, N'AC.L2-3.1.22', N'Control CUI posted or processed on publicly accessible systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>individuals authorized to post or process information on publicly accessible systems are identified;</li>
<li>procedures to ensure CUI is not posted or processed on publicly accessible systems are identified;</li>
<li>a review process is in place prior to posting of any content to publicly accessible systems;</li>
<li>content on publicly accessible systems is reviewed to ensure that it does not include CUI; and</li>
<li>mechanisms are in place to remove and address improper posting of CUI.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing publicly accessible content; system security plan; list of users authorized to post publicly accessible content on organizational systems; training materials and/or records; records of publicly accessible information reviews; records of response to nonpublic information on public websites; system audit logs and records; security awareness training records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with responsibilities for managing publicly accessible information posted on organizational systems; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing management of publicly accessible content].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>In accordance with laws, Executive Orders, directives, policies, regulations, or standards, the public is not authorized access to nonpublic information (e.g., information protected under the Privacy Act, CUI, and proprietary information). This requirement addresses systems that are controlled by the organization and accessible to the public, typically without identification or authentication. Individuals authorized to post CUI onto publicly accessible systems are designated. The content of information is reviewed prior to posting onto publicly accessible systems to ensure that nonpublic information is not included.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Only government officials can be authorized to release CUI to the public. Do not allow CUI to become public – always safeguard the confidentiality of CUI by controlling the posting of CUI on company-controlled websites or public forums, and the exposure of CUI in public presentations or on public displays. It is important to know which users are allowed to publish information on publicly accessible systems, like your company website, and implement a review process before posting such information. If CUI is discovered on a publicly accessible system, procedures should be in place to remove that information and alert the appropriate parties.</p>
<div class="sub-header-2">Example</div>
<p>Your company decides to start issuing press releases about its projects in an effort to reach more potential customers. Your company receives CUI from the government as part of its DoD contract. Because you recognize the need to manage controlled information, including CUI, you meet with the employees who write the releases and post information to establish a review process [c]. It is decided that you will review press releases for CUI before posting it on the company website [a,d]. Only certain employees will be authorized to post to the website [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does information on externally facing systems (i.e., publicly accessible) have a documented approval chain for public release [c]?</li>
</ul>

', NULL, NULL, 37, 26, 19, NULL, NULL, 1204, NULL, N'Control Public Information', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5307, N'AT.L2-3.2.1', N'Ensure that managers, systems administrators, and users of organizational systems are made aware of the security risks associated with their activities and of the applicable policies, standards, and procedures related to the security of those systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>security risks associated with organizational activities involving CUI are identified;</li>
<li>policies, standards, and procedures related to the security of the system are identified;</li>
<li>managers, systems administrators, and users of the system are made aware of the security risks associated with their activities; and</li>
<li>managers, systems administrators, and users of the system are made aware of the applicable policies, standards, and procedures related to the security of the system.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Security awareness and training policy; procedures addressing security awareness training implementation; relevant codes of federal regulations; security awareness training curriculum; security awareness training materials; system security plan; training records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with responsibilities for security awareness training; personnel with information security responsibilities; personnel composing the general system user community; personnel with responsibilities for role-based awareness training].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms managing security awareness training; mechanisms managing role-based security training].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations determine the content and frequency of security awareness training and security awareness techniques based on the specific organizational requirements and the systems to which personnel have authorized access. The content includes a basic understanding of the need for information security and user actions to maintain security and to respond to suspected security incidents. The content also addresses awareness of the need for operations security. Security awareness techniques include: formal training; offering supplies inscribed with security reminders; generating email advisories or notices from organizational officials; displaying logon screen messages; displaying security awareness posters; and conducting information security awareness events.</p>
<p>NIST SP 800-50 provides guidance on security awareness and training programs.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Awareness training focuses user attention on security. Several techniques can be used, such as:</p>
<ul>
<li>synchronous or asynchronous training;</li>
<li>simulations (e.g., simulated phishing emails);</li>
<li>security awareness campaigns (posters, reminders, group discussions); and</li>
<li>communicating regular email advisories and notices to employees.</li>
</ul>
<p>Awareness training and role-based training are different. This requirement, AT.L2-3.2.1, covers awareness training, which provides general security training to influence user behavior. This training can apply broadly or be tailored to a specific role. Role-based training focuses on the knowledge, skills, and abilities needed to complete a specific job and is covered by AT.L2-3.2.2.</p>
<div class="sub-header-2">Example</div>
<p>Your organization holds a DoD contract which requires the use of CUI. You want to provide information to employees so they can identify phishing emails. To do this, you prepare a presentation that highlights basic traits, including:</p>
<ul>
<li>suspicious-looking email address or domain name;</li>
<li>a message that contains an attachment or URL; and</li>
<li>a message that is poorly written and often contains obvious misspelled words.</li>
</ul>
<p>You encourage everyone to not click on attachments or links in a suspicious email [c]. You tell employees to forward such a message immediately to IT security [d]. You download free security awareness posters to hang in the office [c,d]. You send regular emails and tips to all employees to ensure your message is not forgotten over time [c,d].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Do all users, managers, and system administrators receive initial and refresher training commensurate with their roles and responsibilities [c,d]?</li>
<li>Do training materials identify the organization-defined security requirements that must be met by users while interacting with the system as described in written policies, standards, and procedures [d]?</li>
</ul>

', NULL, NULL, 37, 1, 19, NULL, NULL, 1205, NULL, N'Role-Based Risk Awareness', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5308, N'AT.L2-3.2.2', N'Ensure that personnel are trained to carry out their assigned information security-related duties and responsibilities.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>information security-related duties, roles, and responsibilities are defined;</li>
<li>information security-related duties, roles, and responsibilities are assigned to designated personnel; and</li>
<li>personnel are adequately trained to carry out their assigned information security- related duties, roles, and responsibilities.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Security awareness and training policy; procedures addressing security training implementation; codes of federal regulations; security training curriculum; security training materials; system security plan; training records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with responsibilities for role-based security training; personnel with assigned system security roles and responsibilities; personnel with responsibilities for security awareness training; personnel with information security responsibilities; personnel representing the general system user community].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms managing role-based security training; mechanisms managing security awareness training].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations determine the content and frequency of security training based on the assigned duties, roles, and responsibilities of individuals and the security requirements of organizations and the systems to which personnel have authorized access. In addition, organizations provide system developers, enterprise architects, security architects, acquisition/procurement officials, software developers, system developers, systems integrators, system/network administrators, personnel conducting configuration management and auditing activities, personnel performing independent verification and validation, security assessors, and other personnel having access to system-level software, security-related technical training specifically tailored for their assigned duties.</p>
<p>Comprehensive role-based training addresses management, operational, and technical roles and responsibilities covering physical, personnel, and technical controls. Such training can include policies, procedures, tools, and artifacts for the security roles defined. Organizations also provide the training necessary for individuals to carry out their responsibilities related to operations and supply chain security within the context of organizational information security programs.</p>
<p>NIST SP 800-181 provides guidance on role-based information security training in the workplace. SP 800-161 provides guidance on supply chain risk management.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Training imparts skills and knowledge to enable staff to perform a specific job function. Training should be available to all employees for all organizational roles to accommodate role changes without being constrained by the training schedule. Awareness training and role-based training are different. Awareness training provides general security training to influence user behavior and is covered by AT.L2-3.2.1. This requirement, AT.L2-3.2.2, covers role-based training that focuses on the knowledge, skills, and abilities needed to complete a specific job. Role-based training may include awareness topics specific to individual roles such as ensuring systems administrators understand the risk associated with using an administrative account.</p>
<div class="sub-header-2">Example</div>
<p>Your company upgraded the firewall to a newer, more advanced system to protect the CUI it stores. You have been identified as an employee who needs training on the new device [a,b,c]. This will enable you to use the firewall effectively and efficiently. Your company considered training resources when it planned for the upgrade and ensured that training funds were available as part of the upgrade project [c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are the duties, roles, and responsibilities that impact, directly or indirectly, the information security of the company or its systems defined and documented [a]?</li>
<li>Do information security-related tasks have accountable owners, and is a strictly limited group of individuals assigned to perform them [b]?</li>
<li>Are personnel who are assigned information security-related duties, roles, and responsibilities trained on those responsibilities, including the security requirements unique or inherent to their roles or responsibilities [c]?</li>
</ul>

', NULL, NULL, 37, 2, 19, NULL, NULL, 1205, NULL, N'Role-Based Training', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5309, N'AT.L2-3.2.3', N'Provide security awareness training on recognizing and reporting potential indicators of insider threat.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>potential indicators associated with insider threats are identified; and</li>
<li>security awareness training on recognizing and reporting potential indicators of insider threat is provided to managers and employees.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Security awareness and training policy; procedures addressing security awareness training implementation; security awareness training curriculum; security awareness training materials; insider threat policy and procedures; system security plan; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel that participate in security awareness training; personnel with responsibilities for basic security awareness training; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms managing insider threat training].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Potential indicators and possible precursors of insider threat include behaviors such as: inordinate, long-term job dissatisfaction; attempts to gain access to information that is not required for job performance; unexplained access to financial resources; bullying or sexual harassment of fellow employees; workplace violence; and other serious violations of the policies, procedures, directives, rules, or practices of organizations. Security awareness training includes how to communicate employee and management concerns regarding potential indicators of insider threat through appropriate organizational channels in accordance with established organizational policies and procedures. Organizations may consider tailoring insider threat awareness topics to the role (e.g., training for managers may be focused on specific changes in behavior of team members, while training for employees may be focused on more general observations).</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>An insider threat is the threat that an insider will use their authorized access, wittingly or unwittingly, to do harm. Insider threat security awareness training focuses on recognizing employee behaviors and characteristics that might be indicators of an insider threat and the guidelines and procedures to handle and report it. Training for managers will provide guidance on observing team members to identify all potential threat indicators, while training for general employees will provide guidance for focusing on a smaller number of indicators. Employee behaviors will vary depending on roles, team membership, and associated information needs. The person responsible for specifying insider threat indicators must be cognizant of these factors. Because of this, organizations may choose to tailor the training for specific roles. This requirement does not require separate training regarding insider threat. Organizations may choose to integrate these topics into their standard security awareness training programs.</p>
<div class="sub-header-2">Example</div>
<p>You are responsible for training all employees on the awareness of high-risk behaviors that can indicate a potential insider threat [b]. You educate yourself on the latest research on insider threat indicators by reviewing a number of law enforcement bulletins [a]. You then add the following example to the training package: A baseline of normal behavior for work schedules has been created. One employee’s normal work schedule is 8:00 AM–5:00 PM, but another employee noticed that the employee has been working until 9:00 PM every day even though no projects requiring additional hours have been assigned [b]. The observing employee reports the abnormal work schedule using the established reporting guidelines.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Do training materials include potential indicators associated with insider threats (e.g., repeated security violations, unusual work hours, unexpected significant transfers of data, suspicious contacts, concerning behaviors outside the workplace) [a,b]?</li>
<li>Do training materials include methods of reporting potential indicators of insider threats to management or responsible security personnel [b]?</li>
</ul>

', NULL, NULL, 37, 3, 19, NULL, NULL, 1205, NULL, N'Insider Threat Awareness', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5310, N'AU.L2-3.3.1', N'Create and retain system audit logs and records to the extent needed to enable the monitoring, analysis, investigation, and reporting of unlawful or unauthorized system activity.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>audit logs needed (i.e., event types to be logged) to enable the monitoring, analysis, investigation, and reporting of unlawful or unauthorized system activity are specified;</li>
<li>the content of audit records needed to support monitoring, analysis, investigation, and reporting of unlawful or unauthorized system activity is defined;</li>
<li>audit records are created (generated);</li>
<li>audit records, once created, contain the defined content;</li>
<li>retention requirements for audit records are defined; and</li>
<li>audit records are retained as defined.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Audit and accountability policy; procedures addressing auditable events; system security plan; system design documentation; system configuration settings and associated documentation; procedures addressing control of audit records; procedures addressing audit record generation; system audit logs and records; system auditable events; system incident reports; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with audit and accountability responsibilities; personnel with information security responsibilities; personnel with audit review, analysis and reporting responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing system audit logging].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>An event is any observable occurrence in a system, which includes unlawful or unauthorized system activity. Organizations identify event types for which a logging functionality is needed as those events which are significant and relevant to the security of systems and the environments in which those systems operate to meet specific and ongoing auditing needs. Event types can include password changes, failed logons or failed accesses related to systems, administrative privilege usage, or third-party credential usage. In determining event types that require logging, organizations consider the monitoring and auditing appropriate for each of the CUI security requirements. Monitoring and auditing requirements can be balanced with other system needs. For example, organizations may determine that systems must have the capability to log every file access both successful and unsuccessful, but not activate that capability except for specific circumstances due to the potential burden on system performance.</p>
<p>Audit records can be generated at various levels of abstraction, including at the packet level as information traverses the network. Selecting the appropriate level of abstraction is a critical aspect of an audit logging capability and can facilitate the identification of root causes to problems. Organizations consider in the definition of event types, the logging necessary to cover related events such as the steps in distributed, transaction-based processes (e.g., processes that are distributed across multiple organizations) and actions that occur in service-oriented or cloud-based architectures.</p>
<p>Audit record content that may be necessary to satisfy this requirement includes time stamps, source and destination addresses, user or process identifiers, event descriptions, success or failure indications, filenames involved, and access control or flow control rules invoked. Event outcomes can include indicators of event success or failure and event-specific results (e.g., the security state of the system after the event occurred).</p>
<p>Detailed information that organizations may consider in audit records includes full text recording of privileged commands or the individual identities of group account users. Organizations consider limiting the additional audit log information to only that information explicitly needed for specific audit requirements. This facilitates the use of audit trails and audit logs by not including information that could potentially be misleading or could make it more difficult to locate information of interest. Audit logs are reviewed and analyzed as often as needed to provide important information to organizations to facilitate risk-based decision making. NIST SP 800-92 provides guidance on security log management.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>OSAs must ensure that all applicable systems create and retain audit logs that contain enough information to identify and investigate potentially unlawful or unauthorized system activity. OSAs must define the audit logs it needs to collect as well as the specific events to capture within the selected logs. Captured audit records are checked to verify that they contain the required events.</p>
<p>In defining the audit log retention period, OSAs must ensure that logs are retained for a sufficiently long period to allow for the investigation of a security event. The retention period must take into account the delay of weeks or months that can occur between an initial compromise and the discovery of attacker activity.</p>
<div class="sub-header-2">Example</div>
<p>You set up audit logging capability for your company. You determine that all systems that contain CUI must have extra detail in the audit logs. Because of this, you configure these systems to log the following information for all user actions [b,c]:</p>
<ul>
<li>time stamps;</li>
<li>source and destination addresses;</li>
<li>user or process identifiers;</li>
<li>event descriptions;</li>
<li>success or fail indications; and</li>
<li>filenames.</li>
</ul>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are audit log retention requirements appropriate to the system and its associated level of risk [e]?</li>
</ul>

', NULL, NULL, 37, 1, 19, NULL, NULL, 1206, NULL, N'System Auditing', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5311, N'AU.L2-3.3.2', N'Ensure that the actions of individual system users can be uniquely traced to those users so they can be held accountable for their actions.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the content of the audit records needed to support the ability to uniquely trace users to their actions is defined; and</li>
<li>audit records, once created, contain the defined content.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Audit and accountability policy; procedures addressing audit records and event types; system security plan; system design documentation; system configuration settings and associated documentation; procedures addressing audit record generation; procedures addressing audit review, analysis, and reporting; reports of audit findings; system audit logs and records; system events; system incident reports; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with audit and accountability responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing system audit logging].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement ensures that the contents of the audit record include the information needed to link the audit event to the actions of an individual to the extent feasible. Organizations consider logging for traceability including results from monitoring of account usage, remote access, wireless connectivity, mobile device connection, communications at system boundaries, configuration settings, physical access, nonlocal maintenance, use of maintenance tools, temperature and humidity, equipment delivery and removal, system component inventory, use of mobile code, and use of VoIP.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Capturing the necessary information in audit logs ensures that you can trace actions to a specific user. This may include capturing user IDs, source and destination addresses, and time stamps. Logging from networks, servers, clients, and applications should be considered in ensuring accountability.</p>
<p>This requirement, AU.L2-3.3.2, which ensures logging and traceability of user actions, supports the control of non-privileged users required by AC.L2-3.1.7 as well as many other auditing, configuration management, incident response, and situation awareness requirements.</p>
<div class="sub-header-2">Example</div>
<p>You manage systems for a company that stores, processes, and transmits CUI. You want to ensure that you can trace all remote access sessions to a specific user. You configure the VPN device to capture the following information for all remote access connections: source and destination IP address, user ID, machine name, time stamp, and user actions during the remote session [b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are users uniquely traced and held responsible for unauthorized actions [a]?</li>
<li>Does the system protect against an individual denying having performed an action (non- repudiation) [b]?</li>
</ul>

', NULL, NULL, 37, 2, 19, NULL, NULL, 1206, NULL, N'User Accountability', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5312, N'AU.L2-3.3.3', N'Review and update logged events.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>a process for determining when to review logged events is defined;</li>
<li>event types being logged are reviewed in accordance with the defined review process; and</li>
<li>event types being logged are updated based on the review.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Audit and accountability policy; procedures addressing audit records and event types; system security plan; list of organization-defined event types to be logged; reviewed and updated records of logged event types; system audit logs and records; system incident reports; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with audit and accountability responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting review and update of logged event types].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>The intent of this requirement is to periodically re-evaluate which logged events will continue to be included in the list of events to be logged. The event types that are logged by organizations may change over time. Reviewing and updating the set of logged event types periodically is necessary to ensure that the current set remains necessary and sufficient.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>This requirement is focused on the configuration of the auditing system, not the review of the audit records produced by the selected events. The review of the audit logs is covered under AU.L2-3.3.5 and AU.L2-3.3.6.</p>
<div class="sub-header-2">Example</div>
<p>You are in charge of IT operations for a company that processes CUI and are responsible for identifying and documenting which events are relevant to the security of your company’s systems. Your company has decided that this list of events should be updated annually or when new security threats or events have been identified, which may require additional events to be logged and reviewed [a]. The list of events you are capturing in your logs started as the list of recommended events given by the manufacturers of your operating systems and devices, but it has grown from experience.</p>
<p>Your company experiences a security incident, and a forensics review shows the logs appear to have been deleted by a remote user. You notice that remote sessions are not currently being logged [b]. You update the list of events to include logging all VPN sessions [c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Do documented processes include methods for determining when to review logged event types (i.e., regular frequency, after incidents, after major system changes) [a]?</li>
<li>Do documented processes include methods for reviewing event types being logged (i.e., based on specific threat, use case, retention capacity, current utilization, and/or newly added system component or functionality) [b]?</li>
</ul>

', NULL, NULL, 37, 3, 19, NULL, NULL, 1206, NULL, N'Event Review', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5313, N'AU.L2-3.3.4', N'Alert in the event of an audit logging process failure.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>personnel or roles to be alerted in the event of an audit logging process failure are identified;</li>
<li>types of audit logging process failures for which alert will be generated are defined; and</li>
<li>identified personnel or roles are alerted in the event of an audit logging process failure.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Audit and accountability policy; procedures addressing response to audit logging processing failures; system design documentation; system security plan; system configuration settings and associated documentation; list of personnel to be notified in case of an audit logging processing failure; system incident reports; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with audit and accountability responsibilities; personnel with information security responsibilities; system or network administrators; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing system response to audit logging process failures].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Audit logging process failures include software and hardware errors, failures in the audit record capturing mechanisms, and audit record storage capacity being reached or exceeded. This requirement applies to each audit record data storage repository (i.e., distinct system component where audit records are stored), the total audit record storage capacity of organizations (i.e., all audit record data storage repositories combined), or both.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Audit logging keeps track of activities occurring on the network, servers, user workstations, and other components of the overall system. These logs must always be available and functional. The company’s designated security personnel (e.g., system administrator and security officer) need to be aware when the audit log process fails or becomes unavailable [a]. Notifications (e.g., email, Short Message Service (SMS)) should to be sent to the company’s designated security personnel to immediately take appropriate action. If security personnel are unaware of the audit logging process failure, then they will be unaware of any suspicious activity occurring at that time. Response to an audit logging process failure should account for the extent of the failure (e.g., a single component’s audit logging versus failure of the centralized logging solution), the risks involved in this loss of audit logging, and other factors (e.g., the possibility that an adversary could have caused the audit logging process failure).</p>
<div class="sub-header-2">Example</div>
<p>You are in charge of IT operations for a company that processes CUI, and your responsibilities include managing the audit logging process. You configure your systems to send you an email in the event of an audit log failure. One day, you receive one of these alerts. You connect to the system, restart logging, and determine why the logging stopped [a,b,c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Will the system alert personnel with security responsibilities in the event of an audit processing failure?</li>
</ul>

', NULL, NULL, 37, 4, 19, NULL, NULL, 1206, NULL, N'Audit Failure Alerting', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5314, N'AU.L2-3.3.5', N'Correlate audit record review, analysis, and reporting processes for investigation and response to indications of unlawful, unauthorized, suspicious, or unusual activity.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>audit record review, analysis, and reporting processes for investigation and response to indications of unlawful, unauthorized, suspicious, or unusual activity are defined; and</li>
<li>defined audit record review, analysis, and reporting processes are correlated.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Audit and accountability policy; procedures addressing audit record review, analysis, and reporting; system security plan; system design documentation; system configuration settings and associated documentation; procedures addressing investigation of and response to suspicious activities; system audit logs and records across different repositories; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with audit record review, analysis, and reporting responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting analysis and correlation of audit records; mechanisms integrating audit review, analysis and reporting].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Correlating audit record review, analysis, and reporting processes helps to ensure that they do not operate independently, but rather collectively. Regarding the assessment of a given organizational system, the requirement is agnostic as to whether this correlation is applied at the system level or at the organization level across all systems.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Companies must review, analyze, and report audit records to help detect and respond to security incidents in a timely manner for the purpose of investigation and corrective actions. Collection of audit logs into one or more central repositories may facilitate correlated review.</p>
<p>Small companies may be able to accomplish this manually with well-defined and -managed procedures. Larger companies will use an automated system for analysis that correlates log data from across the entire enterprise. Some companies may want to orchestrate the analysis process to include the use of Application Programming Interfaces (APIs) for collection, correlation, and the automation of responses based on programed rulesets.</p>
<div class="sub-header-2">Example</div>
<p>You are a member of a cyber defense team responsible for audit log analysis. You run an automated tool that analyzes all the audit logs across a Local Area Network (LAN) segment simultaneously looking for similar anomalies on separate systems at separate locations. Some of these systems store CUI. After extracting anomalous information and performing a correlation analysis [b], you determine that four different systems have had their event log information cleared between 2:00 AM to 3:00 AM, although the associated dates are different. The team monitors all systems on the same LAN segment between 2:00 AM to 3:00 AM for the next 30 days.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are mechanisms used across different repositories to integrate audit review, analysis, correlation, and reporting processes [b]?</li>
</ul>

', NULL, NULL, 37, 5, 19, NULL, NULL, 1206, NULL, N'Audit Correlation', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5315, N'AU.L2-3.3.6', N'Provide audit record reduction and report generation to support on-demand analysis and reporting.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>an audit record reduction capability that supports on-demand analysis is provided; and</li>
<li>a report generation capability that supports on-demand reporting is provided.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Audit and accountability policy; procedures addressing audit record reduction and report generation; system design documentation; system security plan; system configuration settings and associated documentation; audit record reduction, review, analysis, and reporting tools; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with audit record reduction and report generation responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Audit record reduction and report generation capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Audit record reduction is a process that manipulates collected audit information and organizes such information in a summary format that is more meaningful to analysts. Audit record reduction and report generation capabilities do not always emanate from the same system or organizational entities conducting auditing activities. Audit record reduction capability can include, for example, modern data mining techniques with advanced data filters to identify anomalous behavior in audit records. The report generation capability provided by the system can help generate customizable reports. Time ordering of audit records can be a significant issue if the granularity of the time stamp in the record is insufficient.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Raw audit log data is difficult to review, analyze, and report because of the volume of data. Audit record reduction is an automated process that interprets raw audit log data and extracts meaningful and relevant information without altering the original logs. An example of log reduction for files to be analyzed would be the removal of details associated with nightly backups. Report generation on reduced log information allows you to create succinct customized reports without the need to burden the reader with unimportant information. In addition, the security-relevant audit information must be made available to personnel on demand for immediate review, analysis, reporting, and event investigation support. Performing audit log reduction and providing on-demand reports may allow the analyst to take mitigating action before an adversary completes its malicious actions.</p>
<div class="sub-header-2">Example</div>
<p>You are in charge of IT operations in a company that processes CUI. You are responsible for providing audit record reduction and report generation capability. To support this function, you deploy an open-source solution that will collect and analyze data for signs of anomalies. The solution queries your central log repository to extract relevant data and provide you with a concise and comprehensive view for further analysis to identify potentially malicious activity [a]. In addition to creating on-demand data sets for analysis, you create customized reports explaining the contents of the data set [b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does the system support on-demand audit review, analysis, and reporting requirements and after-the-fact security investigations [b]?</li>
</ul>

', NULL, NULL, 37, 6, 19, NULL, NULL, 1206, NULL, N'Reduction & Reporting', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5316, N'AU.L2-3.3.7', N'Provide a system capability that compares and synchronizes internal system clocks with an authoritative source to generate time stamps for audit records.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>internal system clocks are used to generate time stamps for audit records;</li>
<li>an authoritative source with which to compare and synchronize internal system clocks is specified; and</li>
<li>internal system clocks used to generate time stamps for audit records are compared to and synchronized with the specified authoritative time source.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Audit and accountability policy; procedures addressing time stamp generation; system design documentation; system security plan; system configuration settings and associated documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with information security responsibilities; system or network administrators; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing time stamp generation; mechanisms implementing internal information system clock synchronization].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Internal system clocks are used to generate time stamps, which include date and time. Time is expressed in Coordinated Universal Time (UTC), a modern continuation of Greenwich Mean Time (GMT), or local time with an offset from UTC. The granularity of time measurements refers to the degree of synchronization between system clocks and reference clocks, for example, clocks synchronizing within hundreds of milliseconds or within tens of milliseconds. Organizations may define different time granularities for different system components. Time service can also be critical to other security capabilities such as access control and identification and authentication, depending on the nature of the mechanisms used to support those capabilities. This requirement provides uniformity of time stamps for systems with multiple system clocks and systems connected over a network.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Each system must synchronize its time with a central time server to ensure that all systems are recording audit logs using the same time source. Reviewing audit logs from multiple systems can be a difficult task if time is not synchronized. Systems can be synchronized to a network device or directory service or configured manually.</p>
<div class="sub-header-2">Example</div>
<p>You are setting up several new computers on your company’s network, which contains CUI. You update the time settings on each machine to use the same authoritative time server on the internet [b,c]. When you review audit logs, all your machines will have synchronized time, which aids in any potential security investigations.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Can the records’ time stamps map to Coordinated Universal Time (UTC), compare system clocks with authoritative Network Time Protocol (NTP) servers, and synchronize system clocks when the time difference is greater than 1 second [c]?</li>
<li>Does the system synchronize internal system clocks on a defined frequency [c]?</li>
</ul>

', NULL, NULL, 37, 7, 19, NULL, NULL, 1206, NULL, N'Authoritative Time Source', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5317, N'AU.L2-3.3.8', N'Protect audit information and audit logging tools from unauthorized access, modification, and deletion.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>audit information is protected from unauthorized access;</li>
<li>audit information is protected from unauthorized modification;</li>
<li>audit information is protected from unauthorized deletion;</li>
<li>audit logging tools are protected from unauthorized access;</li>
<li>audit logging tools are protected from unauthorized modification; and</li>
<li>audit logging tools are protected from unauthorized deletion.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Audit and accountability policy; access control policy and procedures; procedures addressing protection of audit information; system security plan; system design documentation; system configuration settings and associated documentation, system audit logs and records; audit logging tools; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with audit and accountability responsibilities; personnel with information security responsibilities; system or network administrators; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing audit information protection].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Audit information includes all information (e.g., audit records, audit log settings, and audit reports) needed to successfully audit system activity. Audit logging tools are those programs and devices used to conduct audit and logging activities. This requirement focuses on the technical protection of audit information and limits the ability to access and execute audit logging tools to authorized individuals. Physical protection of audit information is addressed by media protection and physical and environmental protection requirements.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Audit information is a critical record of what events occurred, the source of the events, and the outcomes of the events; this information needs to be protected. The logs must be properly secured so that the information may not be modified or deleted, either intentionally or unintentionally. Only those with a legitimate need-to-know should have access to audit information, whether that information is being accessed directly from logs or from audit tools.</p>
<div class="sub-header-2">Example</div>
<p>You are in charge of IT operations in a company that handles CUI. Your responsibilities include protecting audit information and audit logging tools. You protect the information from modification or deletion by having audit log events forwarded to a central server and by restricting the local audit logs to only be viewable by the system administrators [a,b,c]. Only a small group of security professionals can view the data on the central audit server [b,c,d]. For an additional layer of protection, you back up the server daily and encrypt the backups before sending them to a cloud data repository [a,b,c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is there a list of authorized users for audit systems and tools [a]?</li>
</ul>

', NULL, NULL, 37, 8, 19, NULL, NULL, 1206, NULL, N'Audit Protection', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5318, N'AU.L2-3.3.9', N'Limit management of audit logging functionality to a subset of privileged users.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>a subset of privileged users granted access to manage audit logging functionality is defined; and</li>
<li>management of audit logging functionality is limited to the defined subset of privileged users.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Audit and accountability policy; access control policy and procedures; procedures addressing protection of audit information; system security plan; system design documentation; system configuration settings and associated documentation; access authorizations; system-generated list of privileged users with access to management of audit logging functionality; access control list; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with audit and accountability responsibilities; personnel with information security responsibilities; system or network administrators; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms managing access to audit logging functionality].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Individuals with privileged access to a system and who are also the subject of an audit by that system, may affect the reliability of audit information by inhibiting audit logging activities or modifying audit records. This requirement specifies that privileged access be further defined between audit-related privileges and other privileges, thus limiting the users with audit-related privileges.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Companies should restrict access to audit logging functions to a limited number of privileged users who can modify audit logs and audit settings. General users should not be granted permissions to perform audit management. All audit managers should be privileged users, but only a small subset of privileged users will be given audit management responsibilities. Functions performed by privileged users must be distinctly separate from the functions performed by users who have audit-related responsibilities to reduce the potential of fraudulent activities by privileged users not being detected or reported. When possible, individuals who manage audit logs should not have access to other privileged functions.</p>
<div class="sub-header-2">Example</div>
<p>You are responsible for the administration of select company infrastructure that contains CUI, but you are not responsible for managing audit information. You are not permitted to review audit logs, delete audit logs, or modify audit log settings [b]. Full control of audit logging functions has been given to senior system administrators [a,b]. This separation of system administration duties from audit logging management is necessary to prevent possible log file tampering.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are audit records of nonlocal accesses to privileged accounts and the execution of privileged functions protected [b]?</li>
</ul>

', NULL, NULL, 37, 9, 19, NULL, NULL, 1206, NULL, N'Audit Management', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5319, N'CM.L2-3.4.1', N'Establish and maintain baseline configurations and inventories of organizational systems (including hardware, software, firmware, and documentation) throughout the respective system development life cycles.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>a baseline configuration is established;</li>
<li>the baseline configuration includes hardware, software, firmware, and documentation;</li>
<li>the baseline configuration is maintained (reviewed and updated) throughout the system development life cycle;</li>
<li>a system inventory is established;</li>
<li>the system inventory includes hardware, software, firmware, and documentation; and</li>
<li>the inventory is maintained (reviewed and updated) throughout the system development life cycle.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Configuration management policy; procedures addressing the baseline configuration of the system; procedures addressing system inventory; system security plan; configuration management plan; system inventory records; inventory review and update records; enterprise architecture documentation; system design documentation; system architecture and configuration documentation; system configuration settings and associated documentation; change control records; system component installation records; system component removal records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with configuration management responsibilities; personnel with responsibilities for establishing the system inventory; personnel with responsibilities for updating the system inventory; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for managing baseline configurations; mechanisms supporting configuration control of the baseline configuration; organizational processes for developing and documenting an inventory of system components; organizational processes for updating inventory of system components; mechanisms supporting or implementing the system inventory; mechanisms implementing updating of the system inventory].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement establishes and maintains baseline configurations for systems and system components including for system communications and connectivity. Baseline configurations are documented, formally reviewed, and agreed-upon sets of specifications for systems or configuration items within those systems. Baseline configurations serve as a basis for future builds, releases, and changes to systems. Baseline configurations include information about system components (e.g., standard software packages installed on workstations, notebook computers, servers, network components, or mobile devices; current version numbers and update and patch information on operating systems and applications; and configuration settings and parameters), network topology, and the logical placement of those components within the system architecture. Baseline configurations of systems also reflect the current enterprise architecture. Maintaining effective baseline configurations requires creating new baselines as organizational systems change over time. Baseline configuration maintenance includes reviewing and updating the baseline configuration when changes are made based on security risks and deviations from the established baseline configuration.</p>
<p>Organizations can implement centralized system component inventories that include components from multiple organizational systems. In such situations, organizations ensure that the resulting inventories include system-specific information required for proper component accountability (e.g., system association, system owner). Information deemed necessary for effective accountability of system components includes hardware inventory specifications, software license information, software version numbers, component owners, and for networked components or devices, machine names and network addresses. Inventory specifications include manufacturer, device type, model, serial number, and physical location.</p>
<p>NIST SP 800-128 provides guidance on security-focused configuration management.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>An effective cybersecurity program depends on consistent, secure system and component configuration and management. Build and configure systems from a known, secure, and approved configuration baseline. This includes:</p>
<ul>
<li>documenting the software and configuration settings of a system;</li>
<li>placement within the network; and</li>
<li>other specifications as required by the organization.</li>
</ul>
<div class="sub-header-2">Example</div>
<p>You are in charge of upgrading the computer operating systems of your office’s computers. Some of these computers process, store, or transmit CUI. You research how to set up and configure a workstation with the least functionality and highest security and use that as the framework for creating a configuration that minimizes functionality while still allowing users to do their tasks. After testing the new baseline on a single workstation, you document this configuration and apply it to the other computers [a]. You then check to make sure that the software changes are accurately reflected in your master system inventory [e]. Finally, you set a calendar reminder to review the baseline in three months [f].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Do baseline configurations include software versions and patch level, configuration parameters, network information, and communications with connected systems [a,b]?</li>
<li>Are baseline configurations updated as needed to accommodate security risks or software changes [c]?</li>
</ul>

', NULL, NULL, 37, 1, 19, NULL, NULL, 1207, NULL, N'System Baselining', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5320, N'CM.L2-3.4.2', N'Establish and enforce security configuration settings for information technology products employed in organizational systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>security configuration settings for information technology products employed in the system are established and included in the baseline configuration; and</li>
<li>security configuration settings for information technology products employed in the system are enforced.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Configuration management policy; baseline configuration; procedures addressing configuration settings for the system; configuration management plan; system security plan; system design documentation; system configuration settings and associated documentation; security configuration checklists; evidence supporting approved deviations from established configuration settings; change control records; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with security configuration management responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for managing configuration settings; mechanisms that implement, monitor, and/or control system configuration settings; mechanisms that identify and/or document deviations from established configuration settings; processes for managing baseline configurations; mechanisms supporting configuration control of baseline configurations].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Configuration settings are the set of parameters that can be changed in hardware, software, or firmware components of the system that affect the security posture or functionality of the system. Information technology products for which security-related configuration settings can be defined include mainframe computers, servers, workstations, input and output devices (e.g., scanners, copiers, and printers), network components (e.g., firewalls, routers, gateways, voice and data switches, wireless access points, network appliances, sensors), operating systems, middleware, and applications.</p>
<p>Security parameters are those parameters impacting the security state of systems including the parameters required to satisfy other security requirements. Security parameters include: registry settings; account, file, directory permission settings; and settings for functions, ports, protocols, and remote connections. Organizations establish organization-wide configuration settings and subsequently derive specific configuration settings for systems. The established settings become part of the systems configuration baseline.</p>
<p>Common secure configurations (also referred to as security configuration checklists, lockdown and hardening guides, security reference guides, security technical implementation guides) provide recognized, standardized, and established benchmarks that stipulate secure configuration settings for specific information technology platforms/products and instructions for configuring those system components to meet operational requirements. Common secure configurations can be developed by a variety of organizations including information technology product developers, manufacturers, vendors, consortia, academia, industry, federal agencies, and other organizations in the public and private sectors.</p>
<p>NIST SP 800-70 and SP 800-128 provide guidance on security configuration settings.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Information security is an integral part of a company’s configuration management process. Security-related configuration settings are customized to satisfy the company’s security requirements and are applied them to all systems once tested and approved. The configuration settings must reflect the most restrictive settings that are appropriate for the system. Any required deviations from the baseline are reviewed, documented, and approved.</p>
<div class="sub-header-2">Example</div>
<p>You manage baseline configurations for your company’s systems, including those that process, store, and transmit CUI. As part of this, you download a secure configuration guide for each of your asset types (servers, workstations, network components, operating systems, middleware, and applications) from a well-known and trusted IT security organization. You then apply all of the settings that you can while still ensuring the assets can perform the role for which they are needed. Once you have the configuration settings identified and tested, you document them to ensure all applicable machines can be configured the same way [a,b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Do security settings reflect the most restrictive settings appropriate [a]?</li>
<li>Are changes or deviations to security settings documented [b]?</li>
</ul>

', NULL, NULL, 37, 2, 19, NULL, NULL, 1207, NULL, N'Security Configuration Enforcement', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5321, N'CM.L2-3.4.3', N'Track, review, approve or disapprove, and log changes to organizational systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>changes to the system are tracked;</li>
<li>changes to the system are reviewed;</li>
<li>changes to the system are approved or disapproved; and</li>
<li>changes to the system are logged.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Configuration management policy; procedures addressing system configuration change control; configuration management plan; system architecture and configuration documentation; system security plan; change control records; system audit logs and records; change control audit and review reports; agenda/minutes from configuration change control oversight meetings; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with configuration change control responsibilities; personnel with information security responsibilities; system or network administrators; members of change control board or similar].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for configuration change control; mechanisms that implement configuration change control].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Tracking, reviewing, approving/disapproving, and logging changes is called configuration change control. Configuration change control for organizational systems involves the systematic proposal, justification, implementation, testing, review, and disposition of changes to the systems, including system upgrades and modifications. Configuration change control includes changes to baseline configurations for components and configuration items of systems, changes to configuration settings for information technology products (e.g., operating systems, applications, firewalls, routers, and mobile devices), unscheduled and unauthorized changes, and changes to remediate vulnerabilities.</p>
<p>Processes for managing configuration changes to systems include Configuration Control Boards or Change Advisory Boards that review and approve proposed changes to systems. For new development systems or systems undergoing major upgrades, organizations consider including representatives from development organizations on the Configuration Control Boards or Change Advisory Boards. Audit logs of changes include activities before and after changes are made to organizational systems and the activities required to implement such changes.</p>
<p>NIST SP 800-128 provides guidance on configuration change control.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>You must track, review, and approve configuration changes before committing to production. Changes to computing environments can create unintended and unforeseen issues that can affect the security and availability of the systems, including those that process CUI. Relevant experts and stakeholders must review and approve proposed changes. They should discuss potential impacts before the organization puts the changes in place. Relevant items include changes to the physical environment and to the systems hosted within it.</p>
<div class="sub-header-2">Example</div>
<p>Once a month, the management and technical team leads join a change control board meeting. During this meeting, everyone reviews all proposed changes to the environment [b,c]. This includes changes to the physical and computing environments. The meeting ensures that relevant subject-matter experts review changes and propose alternatives where needed.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are changes to the system authorized by company management and documented [a,b,c,d]?</li>
<li>Are changes documented and tracked (e.g., manually written down or included in a tracking service such as a ticketing system) [d]?</li>
</ul>

', NULL, NULL, 37, 3, 19, NULL, NULL, 1207, NULL, N'System Change Management', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5322, N'CM.L2-3.4.4', N'Analyze the security impact of changes prior to implementation.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the security impact of changes to the system is analyzed prior to implementation.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Configuration management policy; procedures addressing security impact analysis for system changes; configuration management plan; security impact analysis documentation; system security plan; analysis tools and associated outputs; change control records; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with responsibility for conducting security impact analysis; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for security impact analysis].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizational personnel with information security responsibilities (e.g., system administrators, system security officers, system security managers, and systems security engineers) conduct security impact analyses. Individuals conducting security impact analyses possess the necessary skills and technical expertise to analyze the changes to systems and the associated security ramifications. Security impact analysis may include reviewing security plans to understand security requirements and reviewing system design documentation to understand the implementation of controls and how specific changes might affect the controls. Security impact analyses may also include risk assessments to better understand the impact of the changes and to determine if additional controls are required.</p>
<p>NIST SP 800-128 provides guidance on configuration change control and security impact analysis.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Changes to complex environments are reviewed for potential security impact before implemented. Changes to IT systems can cause unforeseen problems and have unintended consequences for both users and the security of the operating environment. Analyze the security impact of changes prior to implementing them. This can uncover and mitigate potential problems before they occur.</p>
<div class="sub-header-2">Example</div>
<p>You have been asked to deploy a new web browser plug-in. Your standard change management process requires that you produce a detailed plan for the change, including a review of its potential security impact. A subject-matter expert who did not submit the change reviews the plan and tests the new plug-in for functionality and security. You update the change plan based on the expert’s findings and submit it to the change control board for final approval [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are configuration changes tested, validated, and documented before installing them on the operational system [a]?</li>
</ul>

', NULL, NULL, 37, 4, 19, NULL, NULL, 1207, NULL, N'Security Impact Analysis', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5323, N'CM.L2-3.4.5', N'Define, document, approve, and enforce physical and logical access restrictions associated with changes to organizational systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>physical access restrictions associated with changes to the system are defined;</li>
<li>physical access restrictions associated with changes to the system are documented;</li>
<li>physical access restrictions associated with changes to the system are approved;</li>
<li>physical access restrictions associated with changes to the system are enforced;</li>
<li>logical access restrictions associated with changes to the system are defined;</li>
<li>logical access restrictions associated with changes to the system are documented;</li>
<li>logical access restrictions associated with changes to the system are approved; and</li>
<li>logical access restrictions associated with changes to the system are enforced.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Configuration management policy; procedures addressing access restrictions for changes to the system; system security plan; configuration management plan; system design documentation; system architecture and configuration documentation; system configuration settings and associated documentation; logical access approvals; physical access approvals; access credentials; change control records; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with logical access control responsibilities; personnel with physical access control responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for managing access restrictions associated with changes to the system; mechanisms supporting, implementing, and enforcing access restrictions associated with changes to the system].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Any changes to the hardware, software, or firmware components of systems can potentially have significant effects on the overall security of the systems. Therefore, organizations permit only qualified and authorized individuals to access systems for purposes of initiating changes, including upgrades and modifications. Access restrictions for change also include software libraries. Access restrictions include physical and logical access control requirements, workflow automation, media libraries, abstract layers (e.g., changes implemented into external interfaces rather than directly into systems), and change windows (e.g., changes occur only during certain specified times). In addition to security concerns, commonly-accepted due diligence for configuration management includes access restrictions as an essential part in ensuring the ability to effectively manage the configuration.</p>
<p>NIST SP 800-128 provides guidance on configuration change control.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Define, identify, and document qualified individuals authorized to make physical and logical changes to the organization’s hardware, software, software libraries, or firmware components. Control of configuration management activities may involve:</p>
<ul>
<li>physical access control that prohibits unauthorized users from gaining physical access to an asset (e.g., requiring a special key card to enter a server room);</li>
<li>logical access control that prevents unauthorized users from logging onto a system to make configuration changes (e.g., requiring specific credentials for modifying configuration settings, patching software, or updating software libraries);</li>
<li>workflow automation in which configuration management workflow rules define human tasks and data or files are routed between people authorized to do configuration management based on pre-defined business rules (e.g., passing an electronic form to a manager requesting approval of configuration change made by an authorized employee);</li>
<li>an abstraction layer for configuration management that requires changes be made from an external system through constrained interface (e.g., software updates can only be made from a patch management system with a specific IP address); and</li>
<li>utilization of a configuration management change window (e.g., software updates are only allowed between 8:00 AM and 10:00 AM or between 6:00 PM and 8:00 PM).</li>
</ul>
<div class="sub-header-2">Example</div>
<p>Your datacenter requires expanded storage capacity in a server. The change has been approved, and security is planning to allow an external technician to access the building at a specific date and time under the supervision of a manager [a,b,c,d]. A system administrator creates a temporary privileged account that can be used to log into the server’s operating system and update storage settings [e,f,g]. On the appointed day, the technician is escorted into the datacenter, upgrades the hardware, expands the storage in the operating system (OS), and departs. The manager verifies the upgrade and disables the privileged account [h].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are only employees who are approved to make physical or logical changes on systems allowed to do so [a,d,e,h]?</li>
<li>Are authorized personnel approved and documented by the service owner and IT security [a,e]?</li>
<li>Does all change documentation include the name of the authorized employee making the change [b,d,f,h]?</li>
</ul>

', NULL, NULL, 37, 5, 19, NULL, NULL, 1207, NULL, N'Access Restrictions For Change', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5324, N'CM.L2-3.4.6', N'Employ the principle of least functionality by configuring organizational systems to provide only essential capabilities.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>essential system capabilities are defined based on the principle of least functionality; and</li>
<li>the system is configured to provide only the defined essential capabilities.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Configuration management policy; configuration management plan; procedures addressing least functionality in the system; system security plan; system design documentation; system configuration settings and associated documentation; security configuration checklists; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with security configuration management responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes prohibiting or restricting functions, ports, protocols, or services; mechanisms implementing restrictions or prohibition of functions, ports, protocols, or services].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Systems can provide a wide variety of functions and services. Some of the functions and services routinely provided by default, may not be necessary to support essential organizational missions, functions, or operations. It is sometimes convenient to provide multiple services from single system components. However, doing so increases risk over limiting the services provided by any one component. Where feasible, organizations limit component functionality to a single function per component.</p>
<p>Organizations review functions and services provided by systems or components of systems, to determine which functions and services are candidates for elimination. Organizations disable unused or unnecessary physical and logical ports and protocols to prevent unauthorized connection of devices, transfer of information, and tunneling. Organizations can utilize network scanning tools, intrusion detection and prevention systems, and end- point protections such as firewalls and host-based intrusion detection systems to identify and prevent the use of prohibited functions, ports, protocols, and services.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>You should customize organizational systems to remove non-essential applications and disable unnecessary services. Systems come with many unnecessary applications and settings enabled by default including unused ports and protocols. Leave only the fewest capabilities necessary for the systems to operate effectively.</p>
<div class="sub-header-2">Example</div>
<p>You have ordered a new server, which has arrived with a number of free utilities installed in addition to the operating system. Before you deploy the server, you research the utilities to determine which ones can be eliminated without impacting functionality. You remove the unneeded software, then move on to disable unused ports and services. The server that enters production therefore has only the essential capabilities enabled for the system to function in its role [a,b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are the roles and functions for each system identified along with the software and services required to perform those functions [a]?</li>
<li>Are the software and services required for those defined functions identified [a]?</li>
<li>Is the information system configured to exclude any function not needed in the operational environment [b]?</li>
</ul>

', NULL, NULL, 37, 6, 19, NULL, NULL, 1207, NULL, N'Least Functionality', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5325, N'CM.L2-3.4.7', N'Restrict, disable, or prevent the use of nonessential programs, functions, ports, protocols, and services.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>essential programs are defined;</li>
<li>the use of nonessential programs is defined;</li>
<li>the use of nonessential programs is restricted, disabled, or prevented as defined;</li>
<li>essential functions are defined;</li>
<li>the use of nonessential functions is defined;</li>
<li>the use of nonessential functions is restricted, disabled, or prevented as defined;</li>
<li>essential ports are defined;</li>
<li>the use of nonessential ports is defined;</li>
<li>the use of nonessential ports is restricted, disabled, or prevented as defined;</li>
<li>essential protocols are defined;</li>
<li>the use of nonessential protocols is defined;</li>
<li>the use of nonessential protocols is restricted, disabled, or prevented as defined;</li>
<li>essential services are defined;</li>
<li>the use of nonessential services is defined; and</li>
<li>the use of nonessential services is restricted, disabled, or prevented as defined.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Configuration management policy; procedures addressing least functionality in the system; configuration management plan; system security plan; system design documentation; security configuration checklists; system configuration settings and associated documentation; specifications for preventing software program execution; documented reviews of programs, functions, ports, protocols, and/or services; change control records; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with responsibilities for reviewing programs, functions, ports, protocols, and services on the system; personnel with information security responsibilities; system or network administrators; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for reviewing and disabling nonessential programs, functions, ports, protocols, or services; mechanisms implementing review and handling of nonessential programs, functions, ports, protocols, or services; organizational processes preventing program execution on the system; organizational processes for software program usage and restrictions; mechanisms supporting or implementing software program usage and restrictions; mechanisms preventing program execution on the system].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Restricting the use of nonessential software (programs) includes restricting the roles allowed to approve program execution; prohibiting auto-execute; program blacklisting and whitelisting; or restricting the number of program instances executed at the same time. The organization makes a security-based determination which functions, ports, protocols, and/or services are restricted. Bluetooth, File Transfer Protocol (FTP), and peer-to-peer networking are examples of protocols organizations consider preventing the use of, restricting, or disabling.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Organizations should only use the minimum set of programs, services, ports, and protocols required for to accomplish the organization’s mission. This has several implications:</p>
<ul>
<li>All unnecessary programs and accounts are removed from all endpoints and servers.</li>
<li>The organization makes a policy decision to control the execution of programs through either whitelisting or blacklisting. Whitelisting means a program can only run if the software has been vetted in some way, and the executable name has been entered onto a list of allowed software. Blacklisting means any software can execute as long it is not on a list of known malicious software. Whitelisting provides far more security than blacklisting, but the organization’s policy can direct the implementation of either approach. Control of execution applies to both servers and endpoints.</li>
<li>The organization restricts the use of all unnecessary ports, protocols, and system services in order to limit entry points that attackers can use. For example, the use of the FTP service is eliminated from all computers, and the associated ports are blocked unless a required service utilizes those ports. The elimination of nonessential functionality on the network and systems provides a smaller attack surface for an attacker to gain access and take control of your network or systems.</li>
</ul>
<p>This requirement, CM.L2-3.4.7, which requires limiting functionality to essential programs, ports, protocols, and services, extends CM.L2-3.4.6, which requires adherence to the principle of least functionality but does not specifically address which elements of a system should be limited.</p>
<div class="sub-header-2">Example</div>
<p>You are responsible for purchasing new endpoint hardware, installing organizationally required software to the hardware, and configuring the endpoint in accordance with the organization’s policy. The organization has a system imaging capability that loads all necessary software, but it does not remove unnecessary services, eliminate the use of certain protocols, or close unused ports. After imaging the systems, you close all ports and block the use of all protocols except the following:</p>
<ul>
<li>TCP for SSH on port 22;</li>
<li>SMTP on port 25;</li>
<li>TCP and UDP on port 53; and</li>
<li>HTTP and HTTPS on port 443.</li>
</ul>
<p>The use of any other ports or protocols are allowed by exception only [i,l,o].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are only applications and services that are needed for the function of the system configured and enabled [a,b,c,d,e,f]?</li>
<li>Are only those ports and protocols necessary to provide the service of the information system configured for that system [g,h,i,j,k,l]?</li>
<li>Are systems services reviewed to determine what is essential for the function of that system [m]?</li>
</ul>

', NULL, NULL, 37, 7, 19, NULL, NULL, 1207, NULL, N'Nonessential Functionality', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5326, N'CM.L2-3.4.8', N'Apply deny-by-exception (blacklisting) policy to prevent the use of unauthorized software or deny-all, permit-by-exception (whitelisting) policy to allow the execution of authorized software.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>a policy specifying whether whitelisting or blacklisting is to be implemented is specified;</li>
<li>the software allowed to execute under whitelisting or denied use under blacklisting is specified; and</li>
<li>whitelisting to allow the execution of authorized software or blacklisting to prevent the use of unauthorized software is implemented as specified.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Configuration management policy; procedures addressing least functionality in the system; system security plan; configuration management plan; system design documentation; system configuration settings and associated documentation; list of software programs not authorized to execute on the system; list of software programs authorized to execute on the system; security configuration checklists; review and update records associated with list of authorized or unauthorized software programs; change control records; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with responsibilities for identifying software authorized or not authorized to execute on the system; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational process for identifying, reviewing, and updating programs authorized or not authorized to execute on the system; process for implementing blacklisting or whitelisting; mechanisms supporting or implementing blacklisting or whitelisting].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>The process used to identify software programs that are not authorized to execute on systems is commonly referred to as blacklisting. The process used to identify software programs that are authorized to execute on systems is commonly referred to as whitelisting. Whitelisting is the stronger of the two policies for restricting software program execution. In addition to whitelisting, organizations consider verifying the integrity of whitelisted software programs using, for example, cryptographic checksums, digital signatures, or hash functions. Verification of whitelisted software can occur either prior to execution or at system startup.</p>
<p>NIST SP 800-167 provides guidance on application whitelisting.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Organizations should determine their blacklisting or whitelisting policy and configure the system to manage software that is allowed to run. Blacklisting or deny-by-exception allows all software to run except if on an unauthorized software list such as what is maintained in antivirus solutions. Whitelisting or permit-by-exception does not allow any software to run except if on an authorized software list. The stronger policy of the two is whitelisting.</p>
<p>This requirement, CM.L2-3.4.8, requires the implementation of allow-lists and deny-lists for application software. It leverages CM.L2-3.4.1, which requires the organization to establish and maintain software inventories.</p>
<p>This requirement, CM.L2-3.4.8, also extends CM.L2-3.4.9, which only requires control and monitoring of any user installed software.</p>
<div class="sub-header-2">Example</div>
<p>To improve your company’s protection from malware, you have decided to allow only designated programs to run. With additional research you identify a capability within the latest operating system that can control executables, scripts, libraries, or application installers run in your environment [c]. To ensure success you begin by authorizing digitally signed executables. Once they are deployed, you then plan to evaluate and deploy whitelisting for software libraries and scripts [c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is the information system configured to only allow authorized software to run [a,b,c]?</li>
<li>Is the system configured to disallow running unauthorized software [a,b,c]?</li>
<li>Is there a defined list of software programs authorized to execute on the system [b]?</li>
<li>Is the authorization policy a deny-all, permit by exception for software allowed to execute on the system [a,b,c]?</li>
<li>Are automated mechanisms used to prevent program execution in accordance with defined lists (e.g., whitelisting) [a,b,c]?</li>
</ul>

', NULL, NULL, 37, 8, 19, NULL, NULL, 1207, NULL, N'Application Execution Policy', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5327, N'CM.L2-3.4.9', N'Control and monitor user-installed software.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>a policy for controlling the installation of software by users is established;</li>
<li>installation of software by users is controlled based on the established policy; and</li>
<li>installation of software by users is monitored.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Configuration management policy; procedures addressing user installed software; configuration management plan; system security plan; system design documentation; system configuration settings and associated documentation; list of rules governing user-installed software; system monitoring records; system audit logs and records; continuous monitoring strategy; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with responsibilities for governing user-installed software; personnel operating, using, or maintaining the system; personnel monitoring compliance with user-installed software policy; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes governing user-installed software on the system; mechanisms enforcing rules or methods for governing the installation of software by users; mechanisms monitoring policy compliance].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Users can install software in organizational systems if provided the necessary privileges. To maintain control over the software installed, organizations identify permitted and prohibited actions regarding software installation through policies. Permitted software installations include updates and security patches to existing software and applications from organization-approved “app stores.” Prohibited software installations may include software with unknown or suspect pedigrees or software that organizations consider potentially malicious. The policies organizations select governing user-installed software may be organization-developed or provided by some external entity. Policy enforcement methods include procedural methods, automated methods, or both.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Software that users have the ability to install is limited to items that the organization approves. When not controlled, users could install software that can create unnecessary risk. This risk applies both to the individual machine and to the larger operating environment. Policies and technical controls reduce risk to the organization by preventing users from installing unauthorized software.</p>
<div class="sub-header-2">Example</div>
<p>You are a system administrator. A user calls you for help installing a software package. They are receiving a message asking for a password because they do not have permission to install the software. You explain that the policy prohibits users from installing software without approval [a]. When you set up workstations for users, you do not provide administrative privileges. After the call, you redistribute the policy to all users ensuring everyone in the company is aware of the restrictions.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are user controls in place to prohibit the installation of unauthorized software [a]?</li>
<li>Is all software in use on the information systems approved [b]?</li>
<li>Is there a mechanism in place to monitor the types of software a user is permitted to download (e.g., is there a whitelist of approved software) [c]?</li>
</ul>

', NULL, NULL, 37, 9, 19, NULL, NULL, 1207, NULL, N'User-Installed Software', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5328, N'IA.L2-3.5.1', N'Identify system users, processes acting on behalf of users, and devices.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>system users are identified;</li>
<li>processes acting on behalf of users are identified; and</li>
<li>devices accessing the system are identified.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Identification and authentication policy; procedures addressing user identification and authentication; system security plan, system design documentation; system configuration settings and associated documentation; system audit logs and records; list of system accounts; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with system operations responsibilities; personnel with information security responsibilities; system or network administrators; personnel with account management responsibilities; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for uniquely identifying and authenticating users; mechanisms supporting or implementing identification and authentication capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Common device identifiers include media access control (MAC), Internet Protocol (IP) addresses, or device-unique token identifiers. Management of individual identifiers is not applicable to shared system accounts. Typically, individual identifiers are the user names associated with the system accounts assigned to those individuals. Organizations may require unique identification of individuals in group accounts or for detailed accountability of individual activity. In addition, this requirement addresses individual identifiers that are not necessarily associated with system accounts. Organizational devices requiring identification may be defined by type, by device, or by a combination of type/device. NIST SP 800-63-3 provides guidance on digital identities.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Make sure to assign individual, unique identifiers (e.g., user names) to all users and processes that access company systems. Authorized devices also should have unique identifiers. Unique identifiers can be as simple as a short set of alphanumeric characters (e.g., SW001 could refer to a network switch, SW002 could refer to a different network switch).</p>
<p>This requirement, IA.L2-3.5.1, provides a vetted and trusted identity that supports the access control mechanism required by AC.L2-3.1.1.</p>
<div class="sub-header-2">Example</div>
<p>You want to make sure that all employees working on a project can access important information about it. Because this is work for the DoD and may contain CUI, you also need to prevent employees who are not working on that project from being able to access the information. You assign each employee is assigned a unique user ID, which they use to log into the system [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are unique identifiers issued to individual users (e.g., usernames) [a]?</li>
<li>Are the processes and service accounts that an authorized user initiates identified (e.g., scripts, automatic updates, configuration updates, vulnerability scans) [b]?</li>
<li>Are unique device identifiers used for devices that access the system identified [c]?</li>
</ul>

', NULL, NULL, 37, 3, 19, NULL, NULL, 1208, NULL, N'Identification', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5329, N'IA.L2-3.5.2', N'Authenticate (or verify) the identities of users, processes, or devices, as a prerequisite to allowing access to organizational systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the identity of each user is authenticated or verified as a prerequisite to system access;</li>
<li>the identity of each process acting on behalf of a user is authenticated or verified as a prerequisite to system access; and</li>
<li>the identity of each device accessing or connecting to the system is authenticated or verified as a prerequisite to system access.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Identification and authentication policy; system security plan; procedures addressing authenticator management; procedures addressing user identification and authentication; system design documentation; list of system authenticator types; system configuration settings and associated documentation; change control records associated with managing system authenticators; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with authenticator management responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting or implementing authenticator management capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Individual authenticators include the following: passwords, key cards, cryptographic devices, and one-time password devices. Initial authenticator content is the actual content of the authenticator, for example, the initial password. In contrast, the requirements about authenticator content include the minimum password length. Developers ship system components with factory default authentication credentials to allow for initial installation and configuration. Default authentication credentials are often well known, easily discoverable, and present a significant security risk.</p>
<p>Systems support authenticator management by organization-defined settings and restrictions for various authenticator characteristics including minimum password length, validation time window for time synchronous one-time tokens, and number of allowed rejections during the verification stage of biometric authentication. Authenticator management includes issuing and revoking, when no longer needed, authenticators for temporary access such as that required for remote maintenance. Device authenticators include certificates and passwords.</p>
<p>NIST SP 800-63-3 provides guidance on digital identities.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Before a person or device is given system access, verify that the user or device is who or what it claims to be. This verification is called authentication. The most common way to verify identity is using a username and a hard-to-guess password.</p>
<p>Some devices ship with default usernames and passwords. Some devices ship with a default username (e.g., admin) and password. A default username and password must be immediately changed to something unique. Default passwords may be well known to the public, easily found in a search, or easy to guess, allowing an unauthorized person to access the system.</p>
<div class="sub-header-2">Example 1</div>
<p>You are in charge of purchasing. You know that some laptops come with a default username and password. You notify IT that all default passwords should be reset prior to laptop use [a]. You ask IT to explain the importance of resetting default passwords and convey how easily they are discovered using internet searches during next week’s cybersecurity awareness training.</p>
<div class="sub-header-2">Example 2</div>
<p>Your company decides to use cloud services for email and other capabilities. Upon reviewing this requirement, you realize every user or device that connects to the cloud service must be authenticated. As a result, you work with your cloud service provider to ensure that only properly authenticated users and devices are allowed to connect to the system [a,c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are unique authenticators used to verify user identities (e.g., passwords) [a]?</li>
<li>An example of a process acting on behalf of users could be a script that logs in as a person or service account [b]. Can the OSA show that it maintains a record of all of those service accounts for use when reviewing log data or responding to an incident?</li>
<li>Are user credentials authenticated in system processes (e.g., credentials binding, certificates, tokens) [b]?</li>
<li>Are device identifiers used in authentication processes (e.g., MAC address, non- anonymous computer name, certificates) [c]?</li>
</ul>

', NULL, NULL, 37, 4, 19, NULL, NULL, 1208, NULL, N'Authentication', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5330, N'IA.L2-3.5.3', N'Use multifactor authentication for local and network access to privileged accounts and for network access to non-privileged accounts.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>privileged accounts are identified;</li>
<li>multifactor authentication is implemented for local access to privileged accounts;</li>
<li>multifactor authentication is implemented for network access to privileged accounts; and</li>
<li>multifactor authentication is implemented for network access to non-privileged accounts.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Identification and authentication policy; procedures addressing user identification and authentication; system security plan; system design documentation; system configuration settings and associated documentation; system audit logs and records; list of system accounts; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with authenticator management responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting or implementing authenticator management capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Multifactor authentication requires the use of two or more different factors to authenticate. The factors are defined as something you know (e.g., password, personal identification number [PIN]); something you have (e.g., cryptographic identification device, token); or something you are (e.g., biometric). Multifactor authentication solutions that feature physical authenticators include hardware authenticators providing time-based or challenge- response authenticators and smart cards. In addition to authenticating users at the system level (i.e., at logon), organizations may also employ authentication mechanisms at the application level, when necessary, to provide increased information security. Access to organizational systems is defined as local access or network access. Local access is any access to organizational systems by users (or processes acting on behalf of users) where such access is obtained by direct connections without the use of networks. Network access is access to systems by users (or processes acting on behalf of users) where such access is obtained through network connections (i.e., nonlocal accesses). Remote access is a type of network access that involves communication through external networks. The use of encrypted virtual private networks for connections between organization-controlled and non-organization controlled endpoints may be treated as internal networks with regard to protecting the confidentiality of information.</p>
<p>NIST SP 800-63-3 provides guidance on digital identities.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Implement a combination of two or more factors of authentication to verify privileged account holders’ identity regardless of how the user is accessing the account. Implement a combination of two or more factors for non-privileged users accessing the system over a network.</p>
<p>The implementation of multi-factor authentication will depend on the environment and business needs. Although two-factor authentication directly on the computer is most common, there are situations (e.g., multi-factor identification for a mission system that cannot be altered) where additional technical or physical solutions can provide security. If a mobile device is used to access a system or application containing CUI, multi-factor authentication is required.</p>
<p>This requirement, IA.L2-3.5.3, requires multifactor authentication for network access to non-privileged accounts and complements five other requirements dealing with remote access (AC.L2-3.1.12, AC.L2-3.1.14, AC.L2-3.1.13, AC.L2-3.1.15, and MA.L2-3.7.5:</p>
<ul>
<li>AC.L2-3.1.12 requires the control of remote access sessions.</li>
<li>AC.L2-3.1.14 limits remote access to specific access control points.</li>
<li>AC.L2-3.1.13 requires the use of cryptographic mechanisms when enabling remote sessions.</li>
<li>AC.L2-3.1.15 requires authorization for privileged commands executed during a remote.</li>
<li>Finally, MA.L2-3.7.5 requires the addition of multifactor authentication for remote maintenance sessions.</li>
</ul>
<p>This requirement, IA.L2-3.5.3, also enhances IA.L2-3.5.2, which is a requirement for a less rigorous form of user authentication.</p>
<div class="sub-header-2">Example</div>
<p>You decide to implement multifactor authentication (MFA) to improve security of your network. Your first step is enabling MFA on VPN access to your internal network [c,d]. When users initiate remote access, they will be prompted for the additional authentication factor.</p>
<p>Because you also use a cloud-based email solution, you require MFA for access to that resource as well [c,d]. Finally, you enable MFA for both local and network logins for the system administrator accounts used to patch and manage servers [a,b,c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does the system uniquely identify and authenticate users, including privileged accounts [b,c,d]?</li>
</ul>

', NULL, NULL, 37, 5, 19, NULL, NULL, 1208, NULL, N'Multifactor Authentication', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5331, N'IA.L2-3.5.4', N'Employ replay-resistant authentication mechanisms for network access to privileged and non-privileged accounts.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>replay-resistant authentication mechanisms are implemented for network account access to privileged and non-privileged accounts.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Identification and authentication policy; procedures addressing user identification and authentication; system security plan; system design documentation; system configuration settings and associated documentation; system audit logs and records; list of privileged system accounts; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with system operations responsibilities; personnel with account management responsibilities; personnel with information security responsibilities; system or network administrators; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting or implementing identification and authentication capability or replay resistant authentication mechanisms].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Authentication processes resist replay attacks if it is impractical to successfully authenticate by recording or replaying previous authentication messages. Replay-resistant techniques include protocols that use nonces or challenges such as time synchronous or challenge- response one-time authenticators.</p>
<p>NIST SP 800-63-3 provides guidance on digital identities.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>When insecure protocols are used for access to computing resources, an adversary may be able to capture login information and immediately reuse (replay) it for other purposes. It is important to use mechanisms that resist this technique.</p>
<div class="sub-header-2">Example</div>
<p>To protect your IT infrastructure, you understand that the methods for authentication must not be easily copied and re-sent to your systems by an adversary. You select Kerberos for authentication because of its built-in resistance to replay attacks. As a next step you upgrade all of your web applications to require Transport Layer Security (TLS), which also is replay- resistant. Your use of MFA to protect remote access also confers some replay resistance.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are only anti-replay authentication mechanisms used [a]?</li>
</ul>

', NULL, NULL, 37, 6, 19, NULL, NULL, 1208, NULL, N'Replay-Resistant Authentication', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5332, N'IA.L2-3.5.5', N'Prevent reuse of identifiers for a defined period.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>a period within which identifiers cannot be reused is defined; and</li>
<li>reuse of identifiers is prevented within the defined period.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Identification and authentication policy; system security plan; procedures addressing authenticator management; procedures addressing user identification and authentication; system design documentation; list of system authenticator types; system configuration settings and associated documentation; change control records associated with managing system authenticators; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with authenticator management responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting or implementing authenticator management capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Identifiers are provided for users, processes acting on behalf of users, or devices (IA.L2- 3.5.1). Preventing reuse of identifiers implies preventing the assignment of previously used individual, group, role, or device identifiers to different individuals, groups, roles, or devices.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Identifiers uniquely associate a user ID to an individual, group, role, or device. Establish guidelines and implement mechanisms to prevent identifiers from being reused for the period of time established in the policy.</p>
<div class="sub-header-2">Example</div>
<p>As a system administrator, you maintain a central directory/domain that holds the accounts for users, computers, and network devices. As part of your job, you issue unique usernames (e.g., riley@acme.com) for the staff to access resources. When you issue staff computers you also rename the computer to reflect to whom it is assigned (e.g., riley-laptop01). Riley has recently left the organization, so you must manage the former staff member’s account. Incidentally, their replacement is also named Riley. In the directory, you do not assign the previous account to the new user, as policy has defined an identifier reuse period of 24 months [a]. In accordance with policy, you create an account called riley02 [b]. This account is assigned the appropriate permissions for the new user. A new laptop is also provided with the identifier of riley02-laptop01.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are accounts uniquely assigned to employees, contractors, and subcontractors [b]?</li>
<li>Are account identifiers reused [b]?</li>
</ul>

', NULL, NULL, 37, 7, 19, NULL, NULL, 1208, NULL, N'Identifier Reuse', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5333, N'IA.L2-3.5.6', N'Disable identifiers after a defined period of inactivity.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>a period of inactivity after which an identifier is disabled is defined; and</li>
<li>identifiers are disabled after the defined period of inactivity.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Identification and authentication policy; procedures addressing identifier management; procedures addressing account management; system security plan; system design documentation; system configuration settings and associated documentation; list of system accounts; list of identifiers generated from physical access control devices; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with identifier management responsibilities; personnel with information security responsibilities; system or network administrators; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting or implementing identifier management].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Inactive identifiers pose a risk to organizational information because attackers may exploit an inactive identifier to gain undetected access to organizational devices. The owners of the inactive accounts may not notice if unauthorized access to the account has been obtained.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Identifiers are uniquely associated with an individual, account, process, or device. An inactive identifier is one that has not been used for a defined extended period of time. For example, a user account may be needed for a certain time to allow for transition of business processes to existing or new staff. Once use of the identifier is no longer necessary, it should be disabled as soon as possible. Failure to maintain awareness of accounts that are no longer needed yet still active could allow an adversary to exploit IT services.</p>
<div class="sub-header-2">Example</div>
<p>One of your responsibilities is to enforce your company’s inactive account policy: any account that has not been used in the last 45 days must be disabled [a]. You enforce this by writing a script that runs once a day to check the last login date for each account and generates a report of the accounts with no login records for the last 45 days. After reviewing the report, you notify each inactive employee’s supervisor and disable the account [b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are user accounts or identifiers monitored for inactivity [b]?</li>
</ul>

', NULL, NULL, 37, 8, 19, NULL, NULL, 1208, NULL, N'Identifier Handling', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5334, N'IA.L2-3.5.7', N'Enforce a minimum password complexity and change of characters when new passwords are created.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>password complexity requirements are defined;</li>
<li>password change of character requirements are defined;</li>
<li>minimum password complexity requirements as defined are enforced when new passwords are created; and</li>
<li>minimum password change of character requirements as defined are enforced when new passwords are created.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Identification and authentication policy; password policy; procedures addressing authenticator management; system security plan; system configuration settings and associated documentation; system design documentation; password configurations and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with authenticator management responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting or implementing authenticator management capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement applies to single-factor authentication of individuals using passwords as individual or group authenticators, and in a similar manner, when passwords are used as part of multifactor authenticators. The number of changed characters refers to the number of changes required with respect to the total number of positions in the current password. To mitigate certain brute force attacks against passwords, organizations may also consider salting passwords.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Password complexity means using different types of characters as well as a specified number of characters. This applies to both the creation of new passwords and the modification of existing passwords. Characters to manage complexity include numbers, lowercase and uppercase letters, and symbols. Minimum complexity requirements are left up to the organization to define. Define the lowest level of password complexity required. Define the number of characters that must be changed when an existing password is changed. Enforce these rules for all passwords. Salting passwords adds a string of random characters (salt) to a password prior to hashing. This ensures the randomness of the resulting hash value.</p>
<div class="sub-header-2">Example</div>
<p>You work with management to define password complexity rules and ensure they are listed in the company’s security policy. You define and enforce a minimum number of characters for each password and ensure that a certain number of characters must be changed when updating passwords [a,b]. Characters include numbers, lowercase and uppercase letters, and symbols [a]. These rules help create hard-to-guess passwords, which help to secure your network.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is a degree of complexity specified for passwords, (e.g., are account passwords a minimum of 12 characters and a mix of upper/lower case, numbers, and special characters), including minimum requirements for each type [a,b,c]?</li>
<li>Is a change of characters required when new passwords are created [d]?</li>
</ul>

', NULL, NULL, 37, 9, 19, NULL, NULL, 1208, NULL, N'Password Complexity', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5335, N'IA.L2-3.5.8', N'Prohibit password reuse for a specified number of generations.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the number of generations during which a password cannot be reused is specified and</li>
<li>reuse of passwords is prohibited during the specified number of generations.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Identification and authentication policy; password policy; procedures addressing authenticator management; system security plan; system design documentation; system configuration settings and associated documentation; password configurations and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with authenticator management responsibilities; personnel with information security responsibilities; system or network administrators; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting or implementing password-based authenticator management capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Password lifetime restrictions do not apply to temporary passwords.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Individuals may not reuse their passwords for a defined period of time and a set number of passwords generated.</p>
<div class="sub-header-2">Example</div>
<p>You explain in your company’s security policy that changing passwords regularly provides increased security by reducing the ability of adversaries to exploit stolen or purchased passwords over an extended period. You define how often individuals can reuse their passwords and the minimum number of password generations before reuse [a]. If a user tries to reuse a password before the number of password generations has been exceeded, an error message is generated, and the user is required to enter a new password [b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>How many generations of password changes need to take place before a password can be reused [a]?</li>
</ul>

', NULL, NULL, 37, 10, 19, NULL, NULL, 1208, NULL, N'Password Reuse', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5336, N'IA.L2-3.5.9', N'Allow temporary password use for system logons with an immediate change to a permanent password.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>an immediate change to a permanent password is required when a temporary password is used for system logon.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Identification and authentication policy; password policy; procedures addressing authenticator management; system security plan; system configuration settings and associated documentation; system design documentation; password configurations and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with authenticator management responsibilities; personnel with information security responsibilities; system or network administrators; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting or implementing password-based authenticator management capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Changing temporary passwords to permanent passwords immediately after system logon ensures that the necessary strength of the authentication mechanism is implemented at the earliest opportunity, reducing the susceptibility to authenticator compromises.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Users must change their temporary passwords the first time they log in. Temporary passwords often follow a consistent style within an organization and can be more easily guessed than passwords created by the unique user. This approach to temporary passwords should be avoided.</p>
<div class="sub-header-2">Example</div>
<p>One of your duties as a systems administrator is to create accounts for new users. You configure all systems with user accounts to require users to change a temporary password upon initial login to a permanent password [a]. When a user logs on for the first time, they are prompted to create a unique password that meets all of the defined complexity rules.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are temporary passwords only valid to allow a user to perform a password reset [a]?</li>
<li>Does the system enforce an immediate password change after logon when a temporary password is issued [a]?</li>
</ul>

', NULL, NULL, 37, 11, 19, NULL, NULL, 1208, NULL, N'Temporary Passwords', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5337, N'IA.L2-3.5.10', N'Store and transmit only cryptographically-protected passwords.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>passwords are cryptographically protected in storage; and</li>
<li>passwords are cryptographically protected in transit.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Identification and authentication policy; system security plan; procedures addressing authenticator management; procedures addressing user identification and authentication; system design documentation; list of system authenticator types; system configuration settings and associated documentation; change control records associated with managing system authenticators; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with authenticator management responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting or implementing authenticator management capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Cryptographically-protected passwords use salted one-way cryptographic hashes of passwords.</p>
<p>See NIST Cryptographic Standards and Guidelines.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>All passwords must be cryptographically protected using a one-way function for storage and transmission. This type of protection changes passwords into another form, or a hashed password. A one-way transformation makes it theoretically impossible to turn the hashed password back into the original password, but inadequate complexity (IA.L2-3.5.7) may still facilitate offline cracking of hashes.</p>
<div class="sub-header-2">Example</div>
<p>You are responsible for managing passwords for your organization. You protect all passwords with a one-way transformation, or hashing, before storing them. Passwords are never transmitted across a network unencrypted [a,b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are passwords prevented from being stored in reversible encryption form in any company systems [a]?</li>
<li>Are passwords stored as one-way hashes constructed from passwords [a]?</li>
</ul>

', NULL, NULL, 37, 12, 19, NULL, NULL, 1208, NULL, N'Cryptographically-Protected Passwords', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5338, N'IA.L2-3.5.11', N'Obscure feedback of authentication information.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>authentication information is obscured during the authentication process.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Identification and authentication policy; procedures addressing authenticator feedback; system security plan; system design documentation; system configuration settings and associated documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with information security responsibilities; system or network administrators; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting or implementing the obscuring of feedback of authentication information during authentication].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>The feedback from systems does not provide any information that would allow unauthorized individuals to compromise authentication mechanisms. For some types of systems or system components, for example, desktop or notebook computers with relatively large monitors, the threat (often referred to as shoulder surfing) may be significant. For other types of systems or components, for example, mobile devices with small displays, this threat may be less significant, and is balanced against the increased likelihood of typographic input errors due to the small keyboards. Therefore, the means for obscuring the authenticator feedback is selected accordingly. Obscuring authenticator feedback includes displaying asterisks when users type passwords into input devices or displaying feedback for a very limited time before fully obscuring it.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Authentication information includes passwords. When users enter a password, the system displays a symbol, such as an asterisk, to obscure feedback preventing others from seeing the actual characters. Feedback is obscured based on a defined policy (e.g., smaller devices may briefly show characters before obscuring).</p>
<div class="sub-header-2">Example</div>
<p>As a system administrator, you configure your systems to display an asterisk when users enter their passwords into a computer system [a]. For mobile devices, the password characters are briefly displayed to the user before being obscured. This prevents people from figuring out passwords by looking over someone’s shoulder.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is the feedback immediately obscured when the authentication is presented on a larger display (e.g., desktop or notebook computers with relatively large monitors) [a]?</li>
</ul>

', NULL, NULL, 37, 13, 19, NULL, NULL, 1208, NULL, N'Obscure Feedback', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5339, N'IR.L2-3.6.1', N'Establish an operational incident-handling capability for organizational systems that includes preparation, detection, analysis, containment, recovery, and user response activities.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>an operational incident-handling capability is established;</li>
<li>the operational incident-handling capability includes preparation;</li>
<li>the operational incident-handling capability includes detection;</li>
<li>the operational incident-handling capability includes analysis;</li>
<li>the operational incident-handling capability includes containment;</li>
<li>the operational incident-handling capability includes recovery; and</li>
<li>the operational incident-handling capability includes user response activities.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Incident response policy; contingency planning policy; procedures addressing incident handling; procedures addressing incident response assistance; incident response plan; contingency plan; system security plan; procedures addressing incident response training; incident response training curriculum; incident response training materials; incident response training records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with incident handling responsibilities; personnel with contingency planning responsibilities; personnel with incident response training and operational responsibilities; personnel with incident response assistance and support responsibilities; personnel with access to incident response support and assistance capability; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Incident-handling capability for the organization; organizational processes for incident response assistance; mechanisms supporting or implementing incident response assistance].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations recognize that incident handling capability is dependent on the capabilities of organizational systems and the mission/business processes being supported by those systems. Organizations consider incident handling as part of the definition, design, and development of mission/business processes and systems. Incident-related information can be obtained from a variety of sources including audit monitoring, network monitoring, physical access monitoring, user and administrator reports, and reported supply chain events. Effective incident handling capability includes coordination among many organizational entities including mission/business owners, system owners, authorizing officials, human resources offices, physical and personnel security offices, legal departments, operations personnel, procurement offices, and the risk executive.</p>
<p>As part of user response activities, incident response training is provided by organizations and is linked directly to the assigned roles and responsibilities of organizational personnel to ensure that the appropriate content and level of detail is included in such training. For example, regular users may only need to know who to call or how to recognize an incident on the system; system administrators may require additional training on how to handle or remediate incidents; and incident responders may receive more specific training on forensics, reporting, system recovery, and restoration. Incident response training includes user training in the identification/reporting of suspicious activities from external and internal sources. User response activities also includes incident response assistance which may consist of help desk support, assistance groups, and access to forensics services or consumer redress services, when required.</p>
<p>NIST SP 800-61 provides guidance on incident handling. SP 800-86 and SP 800-101 provide guidance on integrating forensic techniques into incident response. SP 800-161 provides guidance on supply chain risk management.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Incident handling capabilities prepare your organization to respond to incidents and may:</p>
<ul>
<li>identify people inside and outside your organization you may need to contact during an incident;</li>
<li>establish a way to report incidents, such as an email address or a phone number;</li>
<li>establish a system for tracking incidents; and</li>
<li>determine a place and a way to store evidence of an incident.</li>
</ul>
<p>Software and hardware may be required to analyze incidents when they occur. Incident prevention activities are also part of an incident-handling capability. The incident-handling team provides input for such things as risk assessments and training.</p>
<p>OSAs detect incidents using different indicators. Indicators may include:</p>
<ul>
<li>alerts from sensors or antivirus software;</li>
<li>a filename that looks unusual; and</li>
<li>log entries that raise concern.</li>
</ul>
<p>After detecting an incident, an incident response team performs analysis. This requires some knowledge of normal network operations. The incident should be documented including all the log entries associated with the incident.</p>
<p>Containment of the incident is a critical step to stop the damage the incident is causing to your network. Containment activities should be based on previously defined organizational priorities and assessment of risk.</p>
<p>Recovery activities restore systems to pre-incident functionality and address its underlying causes. Organizations should use recovery activities as a means of improving their overall resilience to future attacks.</p>
<div class="sub-header-2">Example</div>
<p>Your manager asks you to set up your company’s incident-response capability [a]. First, you create an email address to collect information on possible incidents. Next, you draft a contact list of all the people who need to know when an incident occurs. You document a procedure for how to submit incidents that includes roles and responsibilities when a potential incident is detected or reported. The procedure also explains how to track incidents, from initial creation to closure [b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is there an incident response policy which specifically outlines requirements for handling of incidents involving CUI [a]?</li>
</ul>

', NULL, NULL, 37, 1, 19, NULL, NULL, 1209, NULL, N'Incident Handling', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5340, N'IR.L2-3.6.2', N'Track, document, and report incidents to designated officials and/or authorities both internal and external to the organization.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>incidents are tracked;</li>
<li>incidents are documented;</li>
<li>authorities to whom incidents are to be reported are identified;</li>
<li>organizational officials to whom incidents are to be reported are identified;</li>
<li>identified authorities are notified of incidents; and</li>
<li>identified organizational officials are notified of incidents.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Incident response policy; procedures addressing incident monitoring; incident response records and documentation; procedures addressing incident reporting; incident reporting records and documentation; incident response plan; system security plan; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with incident monitoring responsibilities; personnel with incident reporting responsibilities; personnel who have or should have reported incidents; personnel (authorities) to whom incident information is to be reported; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Incident monitoring capability for the organization; mechanisms supporting or implementing tracking and documenting of system security incidents; organizational processes for incident reporting; mechanisms supporting or implementing incident reporting].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Tracking and documenting system security incidents includes maintaining records about each incident, the status of the incident, and other pertinent information necessary for forensics, evaluating incident details, trends, and handling. Incident information can be obtained from a variety of sources including incident reports, incident response teams, audit monitoring, network monitoring, physical access monitoring, and user/administrator reports. Reporting incidents addresses specific incident reporting requirements within an organization and the formal incident reporting requirements for the organization. Suspected security incidents may also be reported and include the receipt of suspicious email communications that can potentially contain malicious code. The types of security incidents reported, the content and timeliness of the reports, and the designated reporting authorities reflect applicable laws, Executive Orders, directives, regulations, and policies.</p>
<p>NIST SP 800-61 provides guidance on incident handling.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Incident handling is the actions the organization takes to prevent or contain the impact of an incident to the organization while it is occurring or shortly after it has occurred. The majority of the process consists of incident identification, containment, eradication, and recovery. During this process, it is essential to track the work processes required in order to effectively respond. Designate a central hub to serve as the point to coordinate, communicate, and track activities. The hub should receive and document information from system administrators, incident handlers, and others involved throughout the process. As the incident process moves toward eradication, executives, affected business units, and any required external stakeholders should be kept aware of the incident in order to make decisions affecting the business. Report to designated authorities, taking into account applicable laws, directives, regulations, and other guidance. Specify staff responsible for communicating about the incident to internal and external stakeholders.</p>
<div class="sub-header-2">Example</div>
<p>You notice unusual activity on a server and determine a potential security incident has occurred. You open a tracking ticket with the Security Operations Center (SOC), which assigns an incident handler to work the ticket [a]. The handler investigates and documents initial findings, which lead to a determination that unauthorized access occurred on the server [b]. The SOC establishes an incident management team consisting of security, database, network, and system administrators. The team meets daily to update progress and plan courses of action to contain the incident [a]. At the end of the day, the team provides a status report to IT executives [d,f]. Two days later, the team declares the incident contained. The team produces a final report as the database system is rebuilt and placed back into operation.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is there an incident response policy that directs the establishment of requirements for tracking and reporting of incidents involving CUI to appropriate officials [a,d]?</li>
<li>Is cybersecurity incident information promptly reported to management [e,f]?</li>
</ul>

', NULL, NULL, 37, 2, 19, NULL, NULL, 1209, NULL, N'Incident Reporting', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5341, N'IR.L2-3.6.3', N'Test the organizational incident response capability.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the incident response capability is tested.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Incident response policy; contingency planning policy; procedures addressing incident response testing; procedures addressing contingency plan testing; incident response testing material; incident response test results; incident response test plan; incident response plan; contingency plan; system security plan; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with incident response testing responsibilities; personnel with information security responsibilities; personnel with responsibilities for testing plans related to incident response].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms and processes for incident response].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations test incident response capabilities to determine the effectiveness of the capabilities and to identify potential weaknesses or deficiencies. Incident response testing includes the use of checklists, walk-through or tabletop exercises, simulations (both parallel and full interrupt), and comprehensive exercises. Incident response testing can also include a determination of the effects on organizational operations (e.g., reduction in mission capabilities), organizational assets, and individuals due to incident response.</p>
<p>NIST SP 800-84 provides guidance on testing programs for information technology capabilities.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Testing incident response capability validates existing plans and highlights potential deficiencies. The test should address questions such as what happens during an incident; who is responsible for incident management; what tasks are assigned within the IT organization; what support is needed from legal, public affairs, or other business components; how resources are added if needed during the incident; and how law enforcement is involved. Any negative impacts to the normal day-to-day operations when responding to an incident should also be identified and documented.</p>
<div class="sub-header-2">Example</div>
<p>You decide to conduct an incident response table top exercise that simulates an attacker gaining access to the network through a compromised server. You include relevant IT staff such as security, database, network, and system administrators as participants. You also request representatives from legal, human resources, and communications. You provide a scenario to the group and have prepared key questions aligned with the response plans to guide the exercise. During the exercise, you focus on how the team executes the incident response plan. Afterward, you conduct a debrief with everyone that was involved to provide feedback and develop improvements to the incident response plan [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does the incident response policy outline requirements for regular incident response plan testing and reviews of incident response capabilities [a]?</li>
</ul>

', NULL, NULL, 37, 3, 19, NULL, NULL, 1209, NULL, N'Incident Response Testing', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5342, N'MA.L2-3.7.1', N'Perform maintenance on organizational systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>system maintenance is performed.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System maintenance policy; procedures addressing controlled system maintenance; maintenance records; manufacturer or vendor maintenance specifications; equipment sanitization records; media sanitization records; system security plan; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with system maintenance responsibilities; personnel with information security responsibilities; personnel responsible for media sanitization; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for scheduling, performing, documenting, reviewing, approving, and monitoring maintenance and repairs for systems; organizational processes for sanitizing system components; mechanisms supporting or implementing controlled maintenance; mechanisms implementing sanitization of system components].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement addresses the information security aspects of the system maintenance program and applies to all types of maintenance to any system component (including hardware, firmware, applications) conducted by any local or nonlocal entity. System maintenance also includes those components not directly associated with information processing and data or information retention such as scanners, copiers, and printers.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>One common form of computer security maintenance is regular patching of discovered vulnerabilities in software and operating systems, though there are others that require attention.</p>
<p>System maintenance includes:</p>
<ul>
<li>corrective maintenance (e.g., repairing problems with the technology);</li>
<li>preventative maintenance (e.g., updates to prevent potential problems);</li>
<li>adaptive maintenance (e.g., changes to the operative environment); and</li>
<li>perfective maintenance (e.g., improve operations).</li>
</ul>
<div class="sub-header-2">Example</div>
<p>You are responsible for maintenance activities on your company’s machines. This includes regular planned maintenance, unscheduled maintenance, reconfigurations when required, and damage repairs [a]. You know that failing to conduct maintenance activities can impact system security and availability, so you ensure that maintenance is regularly performed. You track all maintenance performed to assist with troubleshooting later if needed.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are systems, devices, and supporting systems maintained per manufacturer recommendations or company defined schedules [a]?</li>
</ul>

', NULL, NULL, 37, 1, 19, NULL, NULL, 1210, NULL, N'Perform Maintenance', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5343, N'MA.L2-3.7.2', N'Provide controls on the tools, techniques, mechanisms, and personnel used to conduct system maintenance.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>tools used to conduct system maintenance are controlled;</li>
<li>techniques used to conduct system maintenance are controlled;</li>
<li>mechanisms used to conduct system maintenance are controlled; and</li>
<li>personnel used to conduct system maintenance are controlled.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System maintenance policy; procedures addressing system maintenance tools and media; maintenance records; system maintenance tools and associated documentation; maintenance tool inspection records; system security plan; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with system maintenance responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for approving, controlling, and monitoring maintenance tools; mechanisms supporting or implementing approval, control, and monitoring of maintenance tools; organizational processes for inspecting maintenance tools; mechanisms supporting or implementing inspection of maintenance tools; organizational process for inspecting media for malicious code; mechanisms supporting or implementing inspection of media used for maintenance].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement addresses security-related issues with maintenance tools that are not within the organizational system boundaries that process, store, or transmit CUI, but are used specifically for diagnostic and repair actions on those systems. Organizations have flexibility in determining the controls in place for maintenance tools, but can include approving, controlling, and monitoring the use of such tools. Maintenance tools are potential vehicles for transporting malicious code, either intentionally or unintentionally, into a facility and into organizational systems. Maintenance tools can include hardware, software, and firmware items, for example, hardware and software diagnostic test equipment and hardware and software packet sniffers.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Tools used to perform maintenance must remain secure so they do not introduce viruses or other malware into your system. Controlling your maintenance techniques prevents intentional or unintentional harm to your network and systems. Additionally, the personnel responsible for maintenance activities should be supervised considering their elevated privilege on company assets.</p>
<div class="sub-header-2">Example</div>
<p>You are responsible for maintenance activities on your company’s machines. To avoid introducing additional vulnerability into the systems you are maintaining, you make sure that all maintenance tools are approved and their usage is monitored and controlled [a,b]. You ensure the tools are kept current and up-to-date [a]. You and your backup are the only people authorized to use these tools and perform system maintenance [d].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are physical or logical access controls used to limit access to maintenance tools to authorized personnel [a]?</li>
<li>Are physical or logical access controls used to limit access to system documentation and organizational maintenance process documentation to authorized personnel [b]?</li>
<li>Are physical or logical access controls used to limit access to automated mechanisms (e.g., automated scripts, scheduled jobs) to authorized personnel [c]?</li>
<li>Are physical or logical access controls used to limit access to the system entry points that enable maintenance (e.g., administrative portals, local and remote console access, and physical equipment panels) to authorized personnel [d]?</li>
</ul>

', NULL, NULL, 37, 2, 19, NULL, NULL, 1210, NULL, N'System Maintenance Control', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5344, N'MA.L2-3.7.3', N'Ensure equipment removed for off-site maintenance is sanitized of any CUI.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>equipment to be removed from organizational spaces for off-site maintenance is sanitized of any CUI.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System maintenance policy; procedures addressing controlled system maintenance; maintenance records; manufacturer or vendor maintenance specifications; equipment sanitization records; media sanitization records; system security plan; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with system maintenance responsibilities; personnel with information security responsibilities; personnel responsible for media sanitization; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for scheduling, performing, documenting, reviewing, approving, and monitoring maintenance and repairs for systems; organizational processes for sanitizing system components; mechanisms supporting or implementing controlled maintenance; mechanisms implementing sanitization of system components].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement addresses the information security aspects of system maintenance that are performed off-site and applies to all types of maintenance to any system component (including applications) conducted by a local or nonlocal entity (e.g., in-contract, warranty, in-house, software maintenance agreement).</p>
<p>NIST SP 800-88 provides guidance on media sanitization.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Sanitization is a process that makes access to data infeasible on media such as a hard drive. The process may overwrite the entire media with a fixed pattern such as binary zeros. In addition to clearing the data an organization could purge (e.g., degaussing, secure erasing, or disassembling) the data, or even destroy the media (e.g., incinerating, shredding, or pulverizing). Performing one of these activities ensures that the data is extremely hard to recover, thus ensuring its confidentiality.</p>
<p>For additional guidance on which specific sanitization actions should be taken on any specific type of media, review the description of the Purge actions given in NIST SP 800-88 Revision 1 – Guidelines for Media Sanitization.</p>
<div class="sub-header-2">Example</div>
<p>You manage your organization’s IT equipment. A recent DoD project has been using a storage array to house CUI. Recently, the array has experienced disk issues. After troubleshooting with the vendor, they recommend several drives be replaced in the array. Knowing the drives may contain CUI, you reference NIST 800-88 Rev. 1 and determine a strategy you can implement on the defective equipment – processing the drives with a degaussing unit [a]. Once all the drives have been wiped, you document the action and ship the faulty drives to the vendor.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is there a process for sanitizing (e.g., erasing, wiping, degaussing) equipment that was used to store, process, or transmit CUI before it is removed from the facility for off-site maintenance (e.g., manufacturer or contracted maintenance support) [a]?</li>
</ul>

', NULL, NULL, 37, 3, 19, NULL, NULL, 1210, NULL, N'Equipment Sanitization', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5345, N'MA.L2-3.7.4', N'Check media containing diagnostic and test programs for malicious code before the media are used in organizational systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>media containing diagnostic and test programs are checked for malicious code before being used in organizational systems that process, store, or transmit CUI.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System maintenance policy; procedures addressing system maintenance tools; system maintenance tools and associated documentation; maintenance records; system security plan; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with system maintenance responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational process for inspecting media for malicious code; mechanisms supporting or implementing inspection of media used for maintenance].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>If, upon inspection of media containing maintenance diagnostic and test programs, organizations determine that the media contain malicious code, the incident is handled consistent with incident handling policies and procedures.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>As part of troubleshooting, a vendor may provide a diagnostic application to install on a system. As this is executable code, there is a chance that the file is corrupt or infected with malicious code. Implement procedures to scan any files prior to installation. The same level of scrutiny must be made as with any file a staff member may download.</p>
<p>This requirement, MA.L2-3.7.4, extends both SI.L2-3.14.2 and SI.L2-3.14.4. SI.L2-3.14.2 and SI.L2-3.14.4 require the implementation and updating of mechanisms to protect systems from malicious code, and MA.L2-3.7.4 extends this requirement to diagnostic and testing tools.</p>
<div class="sub-header-2">Example</div>
<p>You have recently been experiencing performance issues on one of your servers. After troubleshooting for much of the morning, the vendor has asked to install a utility that will collect more data from the server. The file is stored on the vendor’s FTP server. The support technician gives you the FTP site so you can anonymously download the utility file. You also ask him for a hash of the utility file. As you download the file to your local computer, you realize it is compressed. You unzip the file and perform a manual antivirus scan, which reports no issues [a]. To verify the utility file has not been altered, you run an application to see that the hash from the vendor matches.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are media containing diagnostic and test programs (e.g., downloaded or copied utilities or tools from manufacturer, third-party, or in-house support teams) checked for malicious code (e.g., using antivirus or antimalware scans) before the media are used on organizational systems [a]?</li>
</ul>

', NULL, NULL, 37, 4, 19, NULL, NULL, 1210, NULL, N'Media Inspection', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5346, N'MA.L2-3.7.5', N'Require multifactor authentication to establish nonlocal maintenance sessions via external network connections and terminate such connections when nonlocal maintenance is complete.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>multifactor authentication is used to establish nonlocal maintenance sessions via external network connections; and</li>
<li>nonlocal maintenance sessions established via external network connections are terminated when nonlocal maintenance is complete.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System maintenance policy; procedures addressing nonlocal system maintenance; system security plan; system design documentation; system configuration settings and associated documentation; maintenance records; diagnostic records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with system maintenance responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for managing nonlocal maintenance; mechanisms implementing, supporting, and managing nonlocal maintenance; mechanisms for strong authentication of nonlocal maintenance diagnostic sessions; mechanisms for terminating nonlocal maintenance sessions and network connections].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Nonlocal maintenance and diagnostic activities are those activities conducted by individuals communicating through an external network. The authentication techniques employed in the establishment of these nonlocal maintenance and diagnostic sessions reflect the network access requirements in IA.L2-3.5.3.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Nonlocal maintenance activities must use multifactor authentication. Multifactor authentication requires at least two factors, such as:</p>
<ul>
<li>something you know (e.g., password, personal identification number [PIN]);</li>
<li>something you have (e.g., cryptographic identification device, token); or</li>
<li>something you are (e.g., biometric fingerprint or facial scan).</li>
</ul>
<p>Requiring two or more factors to prove your identity increases the security of the connection. Nonlocal maintenance activities are activities conducted from external network connections such as over the internet. After nonlocal maintenance activities are complete, shut down the external network connection.</p>
<p>This requirement, MA.L2-3.7.5 specifies the addition of multifactor authentication for remote maintenance sessions and complements five other requirements dealing with remote access (AC.L2-3.1.12, AC.L2-3.1.14, AC.L2-3.1.13, AC.L2-3.1.15, and IA.L2-3.5.3):</p>
<ul>
<li>AC.L2-3.1.12 requires the control of remote access sessions.</li>
<li>AC.L2-3.1.14 limits remote access to specific access control points.</li>
<li>AC.L2-3.1.13 requires the use of cryptographic mechanisms when enabling remote sessions.</li>
<li>AC.L2-3.1.15 requires authorization for privileged commands executed during a remote session.</li>
<li>Finally, IA.L2-3.5.3 requires multifactor authentication for network access to non- privileged accounts.</li>
</ul>
<div class="sub-header-2">Example</div>
<p>You are responsible for maintaining your company’s firewall. In order to conduct maintenance while working remotely, you connect to the firewall’s management interface and log in using administrator credentials. The firewall then sends a verification request to the multifactor authentication app on your smartphone [a]. You need both of these things to prove your identity [a]. After you respond to the multifactor challenge, you have access to the maintenance interface. When you finish your activities, you shut down the remote connection by logging out and quitting your web browser [b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is multifactor authentication required prior to maintenance of a system when connecting remotely from outside the system boundary [a]?</li>
<li>Are personnel required to manually terminate remote maintenance sessions established via external network connections when maintenance is complete, or are connections terminated automatically through system session management mechanisms [b]?</li>
</ul>

', NULL, NULL, 37, 5, 19, NULL, NULL, 1210, NULL, N'Nonlocal Maintenance', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5347, N'MA.L2-3.7.6', N'Supervise the maintenance activities of maintenance personnel without required access authorization.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>maintenance personnel without required access authorization are supervised during maintenance activities.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System maintenance policy; procedures addressing maintenance personnel; service provider contracts; service-level agreements; list of authorized personnel; maintenance records; access control records; system security plan; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with system maintenance responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for authorizing and managing maintenance personnel; mechanisms supporting or implementing authorization of maintenance personnel].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement applies to individuals who are performing hardware or software maintenance on organizational systems, while PE.L2-3.10.1 addresses physical access for individuals whose maintenance duties place them within the physical protection perimeter of the systems (e.g., custodial staff, physical plant maintenance personnel). Individuals not previously identified as authorized maintenance personnel, such as information technology manufacturers, vendors, consultants, and systems integrators, may require privileged access to organizational systems, for example, when required to conduct maintenance activities with little or no notice. Organizations may choose to issue temporary credentials to these individuals based on organizational risk assessments. Temporary credentials may be for one-time use or for very limited time periods.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Individuals without proper permissions must be supervised while conducting maintenance on organizational machines. Consider creating temporary accounts with short-term expiration periods rather than regular user accounts. Additionally, limit the permissions and access these accounts have to the most restrictive settings possible.</p>
<div class="sub-header-2">Example</div>
<p>One of your software providers has to come on-site to update the software on your company’s computers. You give the individual a temporary logon and password that expires in 12 hours and is limited to accessing only the computers necessary to complete the work [a]. This gives the technician access long enough to perform the update. You monitor the individual’s physical and network activity while the maintenance is taking place [a] and revoke access when the job is done.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are there processes for escorting and supervising maintenance personnel without required access authorization (e.g., vendor support personnel, short-term maintenance contractors) during system maintenance [a]?</li>
</ul>

', NULL, NULL, 37, 6, 19, NULL, NULL, 1210, NULL, N'Maintenance Personnel', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5348, N'MP.L2-3.8.1', N'Protect (i.e., physically control and securely store) system media containing CUI, both paper and digital.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>paper media containing CUI is physically controlled;</li>
<li>digital media containing CUI is physically controlled;</li>
<li>paper media containing CUI is securely stored; and</li>
<li>digital media containing CUI is securely stored.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System media protection policy; procedures addressing media storage; procedures addressing media access restrictions; access control policy and procedures; physical and environmental protection policy and procedures; system security plan; media storage facilities; access control records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with system media protection responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for restricting information media; mechanisms supporting or implementing media access restrictions].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>System media includes digital and non-digital media. Digital media includes diskettes, magnetic tapes, external and removable hard disk drives, flash drives, compact disks, and digital video disks. Non-digital media includes paper and microfilm. Protecting digital media includes limiting access to design specifications stored on compact disks or flash drives in the media library to the project leader and any individuals on the development team. Physically controlling system media includes conducting inventories, maintaining accountability for stored media, and ensuring procedures are in place to allow individuals to check out and return media to the media library. Secure storage includes a locked drawer, desk, or cabinet, or a controlled media library.</p>
<p>Access to CUI on system media can be limited by physically controlling such media, which includes conducting inventories, ensuring procedures are in place to allow individuals to check out and return media to the media library, and maintaining accountability for all stored media.</p>
<p>NIST SP 800-111 provides guidance on storage encryption technologies for end user devices.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>CUI can be contained on two types of physical media:</p>
<ul>
<li>hardcopy (e.g., CD drives, USB drives, magnetic tape); and</li>
<li>digital devices (e.g., CD drives, USB drives, video).</li>
</ul>
<p>You should store physical media containing CUI in a secure location. This location should be accessible only to those people with the proper permissions. All who access CUI should follow the process for checking it out and returning it.</p>
<div class="sub-header-2">Example</div>
<p>Your company has CUI for a specific Army contract contained on a USB drive. You store the drive in a locked drawer, and you log it on an inventory [d]. You establish a procedure to check out the USB drive so you have a history of who is accessing it. These procedures help to maintain the confidentiality, integrity, and availability of the data.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is hardcopy media containing CUI handled only by authorized personnel according to defined procedures [a]?</li>
<li>Is digital media containing CUI handled only by authorized personnel according to defined procedures [b]?</li>
<li>Is paper media containing CUI physically secured (e.g., in a locked drawer or cabinet) [c]?</li>
<li>Is digital media containing CUI securely stored (e.g., in access-controlled repositories) [d]?</li>
</ul>

', NULL, NULL, 37, 2, 19, NULL, NULL, 1211, NULL, N'Media Protection', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5349, N'MP.L2-3.8.2', N'Limit access to CUI on system media to authorized users.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>access to CUI on system media is limited to authorized users.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System media protection policy; procedures addressing media storage; physical and environmental protection policy and procedures; access control policy and procedures; system security plan; system media; designated controlled areas; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with system media protection and storage responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for storing media; mechanisms supporting or implementing secure media storage and media protection].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Access can be limited by physically controlling system media and secure storage areas. Physically controlling system media includes conducting inventories, ensuring procedures are in place to allow individuals to check out and return system media to the media library, and maintaining accountability for all stored media. Secure storage includes a locked drawer, desk, or cabinet, or a controlled media library.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Limit physical access to CUI to people permitted to access CUI. Use locked or controlled storage areas and limit access to only those allowed to access CUI. Keep track of who accesses physical CUI in an audit log.</p>
<div class="sub-header-2">Example</div>
<p>Your company has CUI for a specific Army contract contained on a USB drive. In order to control the data, you establish specific procedures for handling the drive. You designate the project manager as the owner of the data and require anyone who needs access to the data to get permission from the data owner [a]. The data owner maintains a list of users that are authorized to access the information. Before an authorized individual can get access to the USB drive that contains the CUI they have to fill out a log and check out the drive. When they are done with the data, they check in the drive and return it to its secure storage location.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is a list of users who are authorized to access the CUI contained on system media maintained [a]?</li>
</ul>

', NULL, NULL, 37, 3, 19, NULL, NULL, 1211, NULL, N'Media Access', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5350, N'MP.L2-3.8.3', N'Sanitize or destroy system media containing CUI before disposal or release for reuse.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>system media containing CUI is sanitized or destroyed before disposal; and</li>
<li>system media containing CUI is sanitized before it is released for reuse.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System media protection policy; procedures addressing media sanitization and disposal; applicable standards and policies addressing media sanitization; system security plan; media sanitization records; system audit logs and records; system design documentation; system configuration settings and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with media sanitization responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for media sanitization; mechanisms supporting or implementing media sanitization].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement applies to all system media, digital and non-digital, subject to disposal or reuse. Examples include: digital media found in workstations, network components, scanners, copiers, printers, notebook computers, and mobile devices; and non-digital media such as paper and microfilm. The sanitization process removes information from the media such that the information cannot be retrieved or reconstructed. Sanitization techniques, including clearing, purging, cryptographic erase, and destruction, prevent the disclosure of information to unauthorized individuals when such media is released for reuse or disposal. Organizations determine the appropriate sanitization methods, recognizing that destruction may be necessary when other methods cannot be applied to the media requiring sanitization.</p>
<p>Organizations use discretion on the employment of sanitization techniques and procedures for media containing information that is in the public domain or publicly releasable or deemed to have no adverse impact on organizations or individuals if released for reuse or disposal. Sanitization of non-digital media includes destruction, removing CUI from documents, or redacting selected sections or words from a document by obscuring the redacted sections or words in a manner equivalent in effectiveness to removing the words or sections from the document. NARA policy and guidance control sanitization processes. NIST SP 800-88 provides guidance on media sanitization.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>“Media” refers to a broad range of items that store information, including paper documents, disks, tapes, digital photography, USB drives, CDs, DVDs, and mobile phones. It is important to know what information is on media so that you can handle it properly. If there is CUI, you or someone in your company should either:</p>
<ul>
<li>shred or destroy the device before disposal so it cannot be read; or</li>
<li>clean or purge the information, if you want to reuse the device.</li>
</ul>
<p>See NIST Special Publication 800-88, Revision 1, Guidelines for Media Sanitization, for more information.</p>
<div class="sub-header-2">Example</div>
<p>As you pack for an office move, you find some old CDs in a file cabinet. You determine that one has information about an old project your company did for the DoD. You shred the CD rather than simply throwing it in the trash [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is all managed data storage erased, encrypted, or destroyed using mechanisms to ensure that no usable data is retrievable [a,b]?</li>
</ul>

', NULL, NULL, 37, 4, 19, NULL, NULL, 1211, NULL, N'Media Disposal', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5351, N'MP.L2-3.8.4', N'Mark media with necessary CUI markings and distribution limitations.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>media containing CUI is marked with applicable CUI markings; and</li>
<li>media containing CUI is marked with distribution limitations.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System media protection policy; procedures addressing media marking; physical and environmental protection policy and procedures; system security plan; list of system media marking security attributes; designated controlled areas; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with system media protection and marking responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for marking information media; mechanisms supporting or implementing media marking].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>The term security marking refers to the application or use of human-readable security attributes. System media includes digital and non-digital media. Marking of system media reflects applicable federal laws, Executive Orders, directives, policies, and regulations.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>All media, hardcopy and digital, must be properly marked to alert individuals to the presence of CUI stored on the media. The National Archives and Records Administration (NARA) has published guidelines for labeling media of different sizes.146</p>
<p>MP.L2-3.8.8 requires that media have an identifiable owner, so organizations may find it desirable to include ownership information on the device label as well.</p>
<p>146 NARA, CUI Notice 2019-01: Controlled Unclassified Information (CUI) Coversheets and Labels</p>
<div class="sub-header-2">Example</div>
<p>You were recently contacted by the project team for a new DoD program. The team said they wanted the CUI in use for the program to be properly protected. When speaking with them, you realize that most of the protections will be provided as part of existing enterprise cybersecurity capabilities. They also mentioned that the project team will use several USB drives to share specific data. You explain that the team must ensure the USB drives are externally marked to indicate the presence of CUI [a]. The project team labels the outside of each USB drive with an appropriate CUI label following NARA guidance [a]. Further, the labels indicate that distribution is limited to those employees supporting the DoD program [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are all media containing CUI identified [a,b]?</li>
</ul>

', NULL, NULL, 37, 5, 19, NULL, NULL, 1211, NULL, N'Media Markings', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5352, N'MP.L2-3.8.5', N'Control access to media containing CUI and maintain accountability for media during transport outside of controlled areas.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>access to media containing CUI is controlled; and</li>
<li>accountability for media containing CUI is maintained during transport outside of controlled areas.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System media protection policy; procedures addressing media storage; physical and environmental protection policy and procedures; access control policy and procedures; system security plan; system media; designated controlled areas; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with system media protection and storage responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for storing media; mechanisms supporting or implementing media storage and media protection].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Controlled areas are areas or spaces for which organizations provide physical or procedural controls to meet the requirements established for protecting systems and information. Controls to maintain accountability for media during transport include locked containers and cryptography. Cryptographic mechanisms can provide confidentiality and integrity protections depending upon the mechanisms used. Activities associated with transport include the actual transport as well as those activities such as releasing media for transport and ensuring that media enters the appropriate transport processes. For the actual transport, authorized transport and courier personnel may include individuals external to the organization. Maintaining accountability of media during transport includes restricting transport activities to authorized personnel and tracking and obtaining explicit records of transport activities as the media moves through the transportation system to prevent and detect loss, destruction, or tampering.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>CUI is protected in both physical and digital formats. Physical control can be accomplished using traditional concepts like restricted access to physical locations or locking papers in a desk or filing cabinet. The digitization of data makes access to CUI much easier. CUI can be stored and transported on magnetic disks, tapes, USB drives, CD-ROMs, and so on. This makes digital CUI data very portable. It is important for an organization to apply mechanisms to prevent unauthorized access to CUI due to ease of transport.</p>
<div class="sub-header-2">Example</div>
<p>Your team has recently completed configuring a server for a DoD customer. The customer has asked that it be ready to plug in and use. An application installed on the server contains data that is considered CUI. You box the server for shipment using tamper-evident packaging and label it with the specific recipient for the shipment [b]. You select a reputable shipping service so you will get a tracking number to monitor the progress. Once the item is shipped, you send the recipients the tracking number so they can monitor and ensure prompt delivery at their facility.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Do only approved individuals have access to media containing CUI [a]?</li>
<li>Is access to the media containing CUI recorded in an audit log [b]?</li>
<li>Is all CUI data on media encrypted or physically locked prior to transport outside of secure locations [b]?</li>
</ul>

', NULL, NULL, 37, 6, 19, NULL, NULL, 1211, NULL, N'Media Accountability', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5353, N'MP.L2-3.8.6', N'Implement cryptographic mechanisms to protect the confidentiality of CUI stored on digital media during transport unless otherwise protected by alternative physical safeguards.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the confidentiality of CUI stored on digital media is protected during transport using cryptographic mechanisms or alternative physical safeguards.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System media protection policy; procedures addressing media transport; system design documentation; system security plan; system configuration settings and associated documentation; system media transport records; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with system media transport responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Cryptographic mechanisms protecting information on digital media during transportation outside controlled areas].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement applies to portable storage devices (e.g., USB memory sticks, digital video disks, compact disks, external or removable hard disk drives).</p>
<p>NIST SP 800-111 provides guidance on storage encryption technologies for end user devices.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>CUI can be stored and transported on a variety of portable media, which increases the chance that the CUI can be lost. When identifying the paths CUI flows through your company, identify devices to include in this requirement.</p>
<p>To mitigate the risk of losing or exposing CUI, implement an encryption scheme to protect the data. Even if the media are lost, proper encryption renders the data inaccessible. When encryption is not an option, apply alternative physical safeguards during transport.</p>
<p>Because the use of cryptography in this requirement is to protect the confidentiality of CUI, the cryptography used must meet the criteria specified in requirement SC.L2-3.13.11.</p>
<p>This requirement, MP.L2-3.8.6, provides additional protections to those provided by MP.L2-</p>
<p>3.8.5. This requirement is intended to protect against situations where control of media access fails, such as through the loss of the media.</p>
<div class="sub-header-2">Example</div>
<p>You manage the backups for file servers in your datacenter. You know that in addition to the company’s sensitive information, CUI is stored on the file servers. As part of a broader plan to protect data, you send the backup tapes off site to a vendor. You are aware that your backup software provides the option to encrypt data onto tape. You develop a plan to test and enable backup encryption for the data sent off site. This encryption provides additional protections for the data on the backup tapes during transport and offsite storage [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are all CUI data on media encrypted or physically protected prior to transport outside of controlled areas [a]?</li>
<li>Are cryptographic mechanisms used to protect digital media during transport outside of controlled areas [a]?</li>
<li>Do cryptographic mechanisms comply with FIPS 140-2 [a]?</li>
</ul>

', NULL, NULL, 37, 7, 19, NULL, NULL, 1211, NULL, N'Portable Storage Encryption', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5354, N'MP.L2-3.8.7', N'Control the use of removable media on system components.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the use of removable media on system components is controlled.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System media protection policy; system use policy; procedures addressing media usage restrictions; system security plan; rules of behavior; system design documentation; system configuration settings and associated documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with system media use responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for media use; mechanisms restricting or prohibiting use of system media on systems or system components].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>In contrast to requirement MP.L2-3.8.1, which restricts user access to media, this requirement restricts the use of certain types of media on systems, for example, restricting or prohibiting the use of flash drives or external hard disk drives. Organizations can employ technical and nontechnical controls (e.g., policies, procedures, and rules of behavior) to control the use of system media. Organizations may control the use of portable storage devices, for example, by using physical cages on workstations to prohibit access to certain external ports, or disabling or removing the ability to insert, read, or write to such devices.</p>
<p>Organizations may also limit the use of portable storage devices to only approved devices including devices provided by the organization, devices provided by other approved organizations, and devices that are not personally owned. Finally, organizations may control the use of portable storage devices based on the type of device, prohibiting the use of writeable, portable devices, and implementing this restriction by disabling or removing the capability to write to such devices. Malicious code protection mechanisms include anti-virus signature definitions and reputation-based technologies. Many technologies and methods exist to limit or eliminate the effects of malicious code. Pervasive configuration management and comprehensive software integrity controls may be effective in preventing execution of unauthorized code. In addition to commercial off-the-shelf software, malicious code may also be present in custom-built software. This could include logic bombs, back doors, and other types of cyber-attacks that could affect organizational missions/business functions. Traditional malicious code protection mechanisms cannot always detect such code. In these situations, organizations rely instead on other safeguards including secure coding practices, configuration management and control, trusted procurement processes, and monitoring technologies to help ensure that software does not perform functions other than the functions intended.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Removable media are any type of media storage that you can remove from your computer or machine (e.g., CDs, DVDs, diskettes, and USB drives). Write a specific policy for removable media. The policy should cover the various types of removable media (e.g., write-once media and rewritable media) and should discuss the company’s approach to removable media. Ensure the following controls are considered and included in the policy:</p>
<ul>
<li>limit the use of removable media to the smallest number needed; and</li>
<li>scan all removable media for viruses.</li>
</ul>
<div class="sub-header-2">Example</div>
<p>You are in charge of IT operations. You establish a policy for removable media that includes USB drives [a]. The policy information such as:</p>
<ul>
<li>only USB drives issued by the organization may be used; and</li>
<li>USB drives are to be used for work purposes only [a].</li>
</ul>
<p>You set up a separate computer to scan these drives before anyone uses them on the network. This computer has anti-virus software installed that is kept up to date.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are removable media allowed [a]?</li>
<li>Are policies and/or procedures in use to control the use of removable media [a]?</li>
</ul>

', NULL, NULL, 37, 8, 19, NULL, NULL, 1211, NULL, N'Removeable Media', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5355, N'MP.L2-3.8.8', N'Prohibit the use of portable storage devices when such devices have no identifiable owner.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the use of portable storage devices is prohibited when such devices have no identifiable owner.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System media protection policy; system use policy; procedures addressing media usage restrictions; system security plan; rules of behavior; system configuration settings and associated documentation; system design documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with system media use responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for media use; mechanisms prohibiting use of media on systems or system components].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Requiring identifiable owners (e.g., individuals, organizations, or projects) for portable storage devices reduces the overall risk of using such technologies by allowing organizations to assign responsibility and accountability for addressing known vulnerabilities in the devices (e.g., insertion of malicious code).</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>A portable storage device is a system component that can be inserted into and removed from a system and is used to store data or information. It typically plugs into a laptop or desktop port (e.g., USB port). These devices can contain malicious files that can lead to a compromise of a connected system. Therefore, use should be prohibited if the device cannot be traced to an owner who is responsible and accountable for its security.</p>
<p>This requirement, MP.L2-3.8.8, furthers the protections provided by MP.L2-3.8.7 by prohibiting unidentified media use even if that media type is allowable.</p>
<div class="sub-header-2">Example</div>
<p>You are the IT manager. One day, a staff member reports finding a USB drive in the parking lot. You investigate and learn that there are no labels on the outside of the drive to indicate who might be responsible for it. You send an email to all employees to remind them that IT policies expressly prohibit plugging unknown devices into company computers. You also direct staff members to turn in to the IT help desk any devices that have no identifiable owner [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Do portable storage devices used have identifiable owners [a]?</li>
</ul>

', NULL, NULL, 37, 9, 19, NULL, NULL, 1211, NULL, N'Shared Media', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5356, N'MP.L2-3.8.9', N'Protect the confidentiality of backup CUI at storage locations.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the confidentiality of backup CUI is protected at storage locations.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Procedures addressing system backup; system configuration settings and associated documentation; security plan; backup storage locations; system backup logs or records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with system backup responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for conducting system backups; mechanisms supporting or implementing system backups].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations can employ cryptographic mechanisms or alternative physical controls to protect the confidentiality of backup information at designated storage locations. Backed-up information containing CUI may include system-level information and user-level information. System-level information includes system-state information, operating system software, application software, and licenses. User-level information includes information other than system-level information.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>You protect CUI to ensure that it remains private (confidentiality) and unchanged (integrity). Methods to ensure confidentiality may include:</p>
<ul>
<li>encrypting files or media;</li>
<li>managing who has access to the information; and</li>
<li>physically securing devices and media that contain CUI.</li>
</ul>
<p>Storage locations for information are varied, and may include:</p>
<ul>
<li>external hard drives;</li>
<li>USB drives;</li>
<li>magnetic media (tape cartridge);</li>
<li>optical disk (CD, DVD);</li>
<li>Networked Attached Storage (NAS);</li>
<li>servers; and</li>
<li>cloud backup.</li>
</ul>
<p>This requirement, MP.L2-3.8.9, requires the confidentiality of backup information at storage locations.</p>
<div class="sub-header-2">Example</div>
<p>You are in charge of protecting CUI for your company. Because the company’s backups contain CUI, you work with IT to protect the confidentiality of backup data. You agree to encrypt all CUI data as it is saved to an external hard drive [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are data backups encrypted on media before removal from a secured facility [a]?</li>
<li>Are cryptographic mechanisms FIPS validated [a]?</li>
</ul>

', NULL, NULL, 37, 10, 19, NULL, NULL, 1211, NULL, N'Protect Backups', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5357, N'PS.L2-3.9.1', N'Screen individuals prior to authorizing access to organizational systems containing CUI.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>individuals are screened prior to authorizing access to organizational systems containing CUI.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Personnel security policy; procedures addressing personnel screening; records of screened personnel; system security plan; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with personnel security responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for personnel screening].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Personnel security screening (vetting) activities involve the evaluation/assessment of individual’s conduct, integrity, judgment, loyalty, reliability, and stability (i.e., the trustworthiness of the individual) prior to authorizing access to organizational systems containing CUI. The screening activities reflect applicable federal laws, Executive Orders, directives, policies, regulations, and specific criteria established for the level of access required for assigned positions.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Ensure all employees who need access to CUI undergo organization-defined screening before being granted access. Base the types of screening on the requirements for a given position and role.</p>
<p>The effective screening of personnel provided by this requirement, PS.L2-3.9.1, improves upon the effectiveness of authentication performed in IA.L2-3.5.2.</p>
<div class="sub-header-2">Example</div>
<p>You are in charge of security at your organization. You complete standard criminal background and credit checks of all individuals you hire before they can access CUI [a]. Your screening program follows appropriate laws, policies, regulations, and criteria for the level of access required for each position.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are appropriate background checks completed prior granting access to organizational systems containing CUI [a]?</li>
</ul>

', NULL, NULL, 37, 1, 19, NULL, NULL, 1212, NULL, N'Screen Individuals', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5358, N'PS.L2-3.9.2', N'Ensure that organizational systems containing CUI are protected during and after personnel actions such as terminations and transfers.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>a policy and/or process for terminating system access and any credentials coincident with personnel actions is established;</li>
<li>system access and credentials are terminated consistent with personnel actions such as termination or transfer; and</li>
<li>the system is protected during and after personnel transfer actions.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Personnel security policy; procedures addressing personnel transfer and termination; records of personnel transfer and termination actions; list of system accounts; records of terminated or revoked authenticators and credentials; records of exit interviews; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with personnel security responsibilities; personnel with account management responsibilities; system or network administrators; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for personnel transfer and termination; mechanisms supporting or implementing personnel transfer and termination notifications; mechanisms for disabling system access and revoking authenticators].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Protecting CUI during and after personnel actions may include returning system-related property and conducting exit interviews. System-related property includes hardware authentication tokens, identification cards, system administration technical manuals, keys, and building passes. Exit interviews ensure that individuals who have been terminated understand the security constraints imposed by being former employees and that proper accountability is achieved for system-related property. Security topics of interest at exit interviews can include reminding terminated individuals of nondisclosure agreements and potential limitations on future employment. Exit interviews may not be possible for some terminated individuals, for example, in cases related to job abandonment, illnesses, and non- availability of supervisors. For termination actions, timely execution is essential for individuals terminated for cause. In certain situations, organizations consider disabling the system accounts of individuals that are being terminated prior to the individuals being notified.</p>
<p>This requirement applies to reassignments or transfers of individuals when the personnel action is permanent or of such extended durations as to require protection. Organizations define the CUI protections appropriate for the types of reassignments or transfers, whether permanent or extended. Protections that may be required for transfers or reassignments to other positions within organizations include returning old and issuing new keys, identification cards, and building passes; changing system access authorizations (i.e., privileges); closing system accounts and establishing new accounts; and providing for access to official records to which individuals had access at previous work locations and in previous system accounts.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Employee access to CUI is removed when they change jobs or leave the company. When employment or program access is terminated for any reason, the following actions may occur within the defined time frame:</p>
<ul>
<li>all company IT equipment (e.g., laptops, cell phones, storage devices) is returned;</li>
<li>all identification, access cards, and keys are returned; and</li>
<li>an exit interview is conducted to remind the employee of their obligations to not discuss CUI, even after employment.</li>
</ul>
<p>Additionally, perform the following:</p>
<ul>
<li>remove access to all accounts granting access to CUI or modify access to CUI as appropriate for a new work role;</li>
<li>disable or close employee accounts for departing employees; and</li>
<li>limit access to physical spaces with CUI for departing employees or those who transition to a work role that does not require access to CUI.</li>
</ul>
<p>This requirement, PS.L2-3.9.2, leverages the identification of system users required by IA.L2-</p>
<p>3.5.1 in order to ensure that all accesses are identified and removed.</p>
<div class="sub-header-2">Example 1</div>
<p>You are in charge of IT operations. Per organizational policies, when workers leave the company, you remove them from any physical CUI access lists. If you are not their supervisor, you contact their supervisor or human resources immediately and ask them to:</p>
<ul>
<li>turn in the former employees’ computers for proper handling;</li>
<li>inform help desk or system administrators to have the former employees’ system access revoked;</li>
<li>retrieve the former employees’ identification and access cards; and</li>
<li>have the former employees attend an exit interview where you or human resources remind them of their obligations to not discuss CUI [b].</li>
</ul>
<div class="sub-header-2">Example 2</div>
<p>An employee transfers from one working group in your company to another. Human resources team notifies IT of the transfer date, and the employee’s new manager follows procedure by submitting a ticket to the IT help desk to provide information on the access rights the employee will require in their new role. IT implements the rights for the new position and revokes the access for the prior position on the official date of the transfer [c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is information system access disabled upon employee termination or transfer [c]?</li>
<li>Are authenticators/ credentials associated with the employee revoked upon termination or transfer within a certain time frame [b,c]?</li>
<li>Is all company information system-related property retrieved from the terminated or transferred employee within a certain timeframe [a,c]?</li>
<li>Is access to company information and information systems formerly controlled by the terminated or transferred employee retained for a certain timeframe [a,c]?</li>
<li>Is the information security office and data owner of the change in authorization notified within a certain timeframe [a]?</li>
</ul>

', NULL, NULL, 37, 2, 19, NULL, NULL, 1212, NULL, N'Personnel Actions', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5359, N'PE.L2-3.10.1', N'Limit physical access to organizational systems, equipment, and the respective operating environments to authorized individuals.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>authorized individuals allowed physical access are identified;</li>
<li>physical access to organizational systems is limited to authorized individuals;</li>
<li>physical access to equipment is limited to authorized individuals; and</li>
<li>physical access to operating environments is limited to authorized individuals.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Physical and environmental protection policy; procedures addressing physical access authorizations; system security plan; authorized personnel access list; authorization credentials; physical access list reviews; physical access termination records and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with physical access authorization responsibilities; personnel with physical access to system facility; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for physical access authorizations; mechanisms supporting or implementing physical access authorizations].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement applies to employees, individuals with permanent physical access authorization credentials, and visitors. Authorized individuals have credentials that include badges, identification cards, and smart cards. Organizations determine the strength of authorization credentials needed consistent with applicable laws, directives, policies, regulations, standards, procedures, and guidelines. This requirement applies only to areas within facilities that have not been designated as publicly accessible.</p>
<p>Limiting physical access to equipment may include placing equipment in locked rooms or other secured areas and allowing access to authorized individuals only, and placing equipment in locations that can be monitored by organizational personnel. Computing devices, external disk drives, networking devices, monitors, printers, copiers, scanners, facsimile machines, and audio devices are examples of equipment.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>This addresses the company’s physical space (e.g., office, testing environments, equipment rooms), technical assets, and non-technical assets that need to be protected from unauthorized physical access. Specific environments are limited to authorized employees, and access is controlled with badges, electronic locks, physical key locks, etc.</p>
<p>Output devices, such as printers, are placed in areas where their use does not expose data to unauthorized individuals. Lists of personnel with authorized access are developed and maintained, and personnel are issued appropriate authorization credentials.</p>
<div class="sub-header-2">Example</div>
<p>You manage a DoD project that requires special equipment used only by project team members [b,c]. You work with the facilities manager to put locks on the doors to the areas where the equipment is stored and used [b,c,d]. Project team members are the only individuals issued with keys to the space. This restricts access to only those employees who work on the DoD project and require access to that equipment.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are lists of personnel with authorized access developed and maintained, and are appropriate authorization credentials issued [a]?</li>
<li>Has the facility/building manager designated building areas as “sensitive” and designed physical security protections (e.g., guards, locks, cameras, card readers) to limit physical access to the area to only authorized employees [b,c,d]?</li>
<li>Are output devices such as printers placed in areas where their use does not expose data to unauthorized individuals [c]?</li>
</ul>

', NULL, NULL, 37, 3, 19, NULL, NULL, 1213, NULL, N'Limit Physical Access', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5360, N'PE.L2-3.10.2', N'Protect and monitor the physical facility and support infrastructure for organizational systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the physical facility where organizational systems reside is protected;</li>
<li>the support infrastructure for organizational systems is protected;</li>
<li>the physical facility where organizational systems reside is monitored; and</li>
<li>the support infrastructure for organizational systems is monitored.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Physical and environmental protection policy; procedures addressing physical access monitoring; system security plan; physical access logs or records; physical access monitoring records; physical access log reviews; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with physical access monitoring responsibilities; personnel with incident response responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for monitoring physical access; mechanisms supporting or implementing physical access monitoring; mechanisms supporting or implementing the review of physical access logs].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Monitoring of physical access includes publicly accessible areas within organizational facilities. This can be accomplished, for example, by the employment of guards; the use of sensor devices; or the use of video surveillance equipment such as cameras. Examples of support infrastructure include system distribution, transmission, and power lines. Security controls applied to the support infrastructure prevent accidental damage, disruption, and physical tampering. Such controls may also be necessary to prevent eavesdropping or modification of unencrypted transmissions. Physical access controls to support infrastructure include locked wiring closets; disconnected or locked spare jacks; protection of cabling by conduit or cable trays; and wiretapping sensors.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>The infrastructure inside of a facility, such as power and network cables, is protected so that visitors and unauthorized employees cannot access it. The protection is also monitored by security guards, video cameras, sensors, or alarms.</p>
<div class="sub-header-2">Example</div>
<p>You are responsible for protecting your IT facilities. You install video cameras at each entrance and exit, connect them to a video recorder, and show the camera feeds on a display at the reception desk [c,d]. You also make sure there are secure locks on all entrances, exits, and windows to the facilities [a,b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is physical access monitored to detect and respond to physical security incidents [c, d]?</li>
</ul>

', NULL, NULL, 37, 4, 19, NULL, NULL, 1213, NULL, N'Monitor Facility', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5361, N'PE.L2-3.10.3', N'Escort visitors and monitor visitor activity.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>visitors are escorted; and</li>
<li>visitor activity is monitored.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Physical and environmental protection policy; procedures addressing physical access control; system security plan; physical access control logs or records; inventory records of physical access control devices; system entry and exit points; records of key and lock combination changes; storage locations for physical access control devices; physical access control devices; list of security safeguards controlling access to designated publicly accessible areas within facility; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with physical access control responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for physical access control; mechanisms supporting or implementing physical access control; physical access control devices].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Individuals with permanent physical access authorization credentials are not considered visitors. Audit logs can be used to monitor visitor activity.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Do not allow visitors, even those people you know well, to walk around your facility without an escort. Make sure that all non-employees wear special visitor badges and/or are escorted by an employee at all times while on the property.</p>
<div class="sub-header-2">Example</div>
<p>Coming back from a meeting, you see the friend of a coworker walking down the hallway near your office. You know this person well and trust them, but are not sure why they are in the building. You stop to talk, and the person explains that they are meeting a coworker for lunch, but cannot remember where the lunchroom is. You walk the person back to the reception area to get a visitor badge and wait until someone can escort them to the lunch room [a]. You report this incident and the company decides to install a badge reader at the main door so visitors cannot enter without an escort [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are personnel required to accompany visitors to areas in a facility with physical access to organizational systems [a]?</li>
<li>Are visitors clearly distinguishable from regular personnel [b]?</li>
<li>Is visitor activity monitored (e.g., use of cameras or guards, reviews of secure areas upon visitor departure, review of visitor audit logs) [b]?</li>
</ul>

', NULL, NULL, 37, 5, 19, NULL, NULL, 1213, NULL, N'Escort Visitors', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5362, N'PE.L2-3.10.4', N'Maintain audit logs of physical access.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>audit logs of physical access are maintained.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Physical and environmental protection policy; procedures addressing physical access control; system security plan; physical access control logs or records; inventory records of physical access control devices; system entry and exit points; records of key and lock combination changes; storage locations for physical access control devices; physical access control devices; list of security safeguards controlling access to designated publicly accessible areas within facility; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with physical access control responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for physical access control; mechanisms supporting or implementing physical access control; physical access control devices].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations have flexibility in the types of audit logs employed. Audit logs can be procedural (e.g., written log of individuals accessing the facility), automated (e.g., capturing ID provided by a PIV card), or some combination thereof. Physical access points can include facility access points, interior access points to systems or system components requiring supplemental access controls, or both. System components (e.g., workstations, notebook computers) may be in areas designated as publicly accessible with organizations safeguarding access to such devices.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Make sure you have a record of who accesses your facility (e.g., office, plant, factory). You can do this in writing by having employees and visitors sign in and sign out or by electronic means such as badge readers. Whatever means you use, you need to retain the access records for the time period that your company has defined.</p>
<div class="sub-header-2">Example</div>
<p>You and your coworkers like to have friends and family join you for lunch at the office on Fridays. Your small company has just signed a contract with the DoD, however, and you now need to document who enters and leaves your facility. You work with the reception staff to ensure that all non-employees sign in at the reception area and sign out when they leave [a]. You retain those paper sign-in sheets in a locked filing cabinet for one year. Employees receive badges or key cards that enable tracking and logging access to company facilities.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are logs of physical access to sensitive areas (both authorized access and visitor access) maintained per retention requirements [a]?</li>
<li>Are visitor access records retained for as long as required [a]?</li>
</ul>

', NULL, NULL, 37, 6, 19, NULL, NULL, 1213, NULL, N'Physical Access Logs', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5363, N'PE.L2-3.10.5', N'Control and manage physical access devices.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>physical access devices are identified;</li>
<li>physical access devices are controlled; and</li>
<li>physical access devices are managed.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Physical and environmental protection policy; procedures addressing physical access control; system security plan; physical access control logs or records; inventory records of physical access control devices; system entry and exit points; records of key and lock combination changes; storage locations for physical access control devices; physical access control devices; list of security safeguards controlling access to designated publicly accessible areas within facility; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with physical access control responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for physical access control; mechanisms supporting or implementing physical access control; physical access control devices].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Physical access devices include keys, locks, combinations, and card readers.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Identifying and controlling physical access devices (e.g., locks, badges, key cards) is just as important as monitoring and limiting who is able to physically access certain equipment. Physical access devices are only strong protection if you know who has them and what access they allow. Physical access devices can be managed using manual or automatic processes such a list of who is assigned what key, or updating the badge access system as personnel change roles.</p>
<div class="sub-header-2">Example</div>
<p>You are a facility manager. A team member retired today and returns their company keys to you. The project on which they were working requires access to areas that contain equipment with CUI. You receive the keys, check your electronic records against the serial numbers on the keys to ensure all have been returned, and mark each key returned [c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are lists or inventories of physical access devices maintained (e.g., keys, facility badges, key cards) [a]?</li>
<li>Is access to physical access devices limited (e.g., granted to, and accessible only by, authorized individuals) [b]?</li>
<li>Are physical access devices managed (e.g., revoking key card access when necessary, changing locks as needed, maintaining access control devices and systems) [c]?</li>
</ul>

', NULL, NULL, 37, 7, 19, NULL, NULL, 1213, NULL, N'Manage Physical Access', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5364, N'PE.L2-3.10.6', N'Enforce safeguarding measures for CUI at alternate work sites.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>safeguarding measures for CUI are defined for alternate work sites; and</li>
<li>safeguarding measures for CUI are enforced for alternate work sites.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Physical and environmental protection policy; procedures addressing alternate work sites for personnel; system security plan; list of safeguards required for alternate work sites; assessments of safeguards at alternate work sites; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel approving use of alternate work sites; personnel using alternate work sites; personnel assessing controls at alternate work sites; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for security at alternate work sites; mechanisms supporting alternate work sites; safeguards employed at alternate work sites; means of communications between personnel at alternate work sites and security personnel].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Alternate work sites may include government facilities or the private residences of employees. Organizations may define different security requirements for specific alternate work sites or types of sites depending on the work-related activities conducted at those sites.</p>
<p>NIST SP 800-46 and NIST SP 800-114 provide guidance on enterprise and user security when teleworking.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Many people work from home or travel as part of their job. Define and implement safeguards to account for protection of information beyond the enterprise perimeter. Safeguards may include physical protections, such as locked file drawers, as well as electronic protections such as encryption, audit logging, and proper access controls.</p>
<div class="sub-header-2">Example</div>
<p>Many of your company’s project managers work remotely as they often travel to sponsor locations or even work from home. Because the projects on which they work require access to CUI, you must ensure the same level of protection is afforded as when they work in the office. You ensure that each laptop is deployed with patch management and anti-virus software protection [b]. Because data may be stored on the local hard drive, you have enabled full-disk encryption on their laptops [b]. When a remote staff member needs access to the internal network you require VPN connectivity that also disconnects the laptop from the remote network (i.e., prevents split tunneling) [b]. The VPN requires multifactor authentication to verify remote users are who they claim to be [b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Do all alternate sites where CUI data is stored or processed meet the same physical security requirements as the main site [b]?</li>
<li>Does the alternate processing site provide information security measures equivalent to those of the primary site [b]?</li>
</ul>

', NULL, NULL, 37, 8, 19, NULL, NULL, 1213, NULL, N'Alternative Work Sites', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5365, N'RA.L2-3.11.1', N'Periodically assess the risk to organizational operations (including mission, functions, image, or reputation), organizational assets, and individuals, resulting from the operation of organizational systems and the associated processing, storage, or transmission of CUI.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the frequency to assess risk to organizational operations, organizational assets, and individuals is defined; and</li>
<li>risk to organizational operations, organizational assets, and individuals resulting from the operation of an organizational system that processes, stores, or transmits CUI is assessed with the defined frequency.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Risk assessment policy; security planning policy and procedures; procedures addressing organizational risk assessments; system security plan; risk assessment; risk assessment results; risk assessment reviews; risk assessment updates; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with risk assessment responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for risk assessment; mechanisms supporting or for conducting, documenting, reviewing, disseminating, and updating the risk assessment].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Clearly defined system boundaries are a prerequisite for effective risk assessments. Such risk assessments consider threats, vulnerabilities, likelihood, and impact to organizational operations, organizational assets, and individuals based on the operation and use of organizational systems. Risk assessments also consider risk from external parties (e.g., service providers, contractor operating systems on behalf of the organization, individuals accessing organizational systems, outsourcing entities). Risk assessments, either formal or informal, can be conducted at the organization level, the mission or business process level, or the system level, and at any phase in the system development life cycle.</p>
<p>NIST SP 800-30 provides guidance on conducting risk assessments.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Risk arises from anything that can reduce an organization’s assurance of mission/business success; cause harm to image or reputation; or harm individuals, other organizations, or the Nation.</p>
<p>Organizations assess the risk to their operations and assets at regular intervals. Areas where weakness or vulnerabilities could lead to risk may include:</p>
<ul>
<li>poorly designed and executed business processes;</li>
<li>inadvertent actions of people, such as disclosure or modification of information;</li>
<li>intentional actions of people inside and outside the organization;</li>
<li>failure of systems to perform as intended;</li>
<li>failures of technology; and</li>
<li>external events, such as natural disasters, public infrastructure and supply chain failures.</li>
</ul>
<p>When conducting risk assessments use established criteria and procedures. The results of formal risk assessments are documented. It is important to note that risk assessments differ from vulnerability assessments (see RA.L2-3.11.2). A vulnerability assessment provides input to a risk assessment along with other information such as results from likelihood analysis and analysis of potential treat sources.</p>
<p>Risk assessments should be performed at defined regular intervals. Mission risks include anything that will keep an organization from meeting its mission. Function risk is anything that will prevent the performance of a function. Image and reputation risks refer to intangible risks that have value and could cause damage to potential or future trust relationships.173</p>
<p>This requirement, RA.L2-3.11.1, which requires periodically assessing the risk to organization systems, assets, and individuals, is a baseline Risk Assessment requirement. RA.L2-3.11.1 enables other Risk Assessment requirements (e.g., RA.L2-3.11.3, Vulnerability Remediation), as well as CA.L2-3.12.2, Plan of Action.</p>
<div class="sub-header-2">Example</div>
<p>You are a system administrator. You and your team members are working on a big government contract requiring you to store CUI. As part of your periodic (e.g., annual) risk assessment exercise, you evaluate the new risk involved with storing CUI [a,b]. When conducting the assessment you consider increased legal exposure, financial requirements of safeguarding CUI, potentially elevated attention from external attackers, and other factors.</p>
<p>173 NIST SP 800-30, Guide for Conducting Risk Assessments, September 2012.</p>
<p>After determining how storing CUI affects your overall risk profile, you use that as a basis for a conversation on how that risk should be mitigated.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Have initial and periodic risk assessments been conducted [b]?</li>
<li>Are methods defined for assessing risk (e.g., reviewing security assessments, incident reports, and security advisories, identifying threat sources, threat events, and vulnerabilities, and determining likelihood, impact, and overall risk to the confidentiality of CUI) [b]?</li>
</ul>

', NULL, NULL, 37, 1, 19, NULL, NULL, 1214, NULL, N'Risk Assessments', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5366, N'RA.L2-3.11.2', N'Scan for vulnerabilities in organizational systems and applications periodically and when new vulnerabilities affecting those systems and applications are identified.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the frequency to scan for vulnerabilities in organizational systems and applications is defined;</li>
<li>vulnerability scans are performed on organizational systems with the defined frequency;</li>
<li>vulnerability scans are performed on applications with the defined frequency;</li>
<li>vulnerability scans are performed on organizational systems when new vulnerabilities are identified; and</li>
<li>vulnerability scans are performed on applications when new vulnerabilities are identified.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Risk assessment policy; procedures addressing vulnerability scanning; risk assessment; system security plan; security assessment report; vulnerability scanning tools and associated configuration documentation; vulnerability scanning results; patch and vulnerability management records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with risk assessment, security assessment and vulnerability scanning responsibilities; personnel with vulnerability scan analysis and remediation responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for vulnerability scanning, analysis, remediation, and information sharing; mechanisms supporting or implementing vulnerability scanning, analysis, remediation, and information sharing].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations determine the required vulnerability scanning for all system components, ensuring that potential sources of vulnerabilities such as networked printers, scanners, and copiers are not overlooked. The vulnerabilities to be scanned are readily updated as new vulnerabilities are discovered, announced, and scanning methods developed. This process ensures that potential vulnerabilities in the system are identified and addressed as quickly as possible. Vulnerability analyses for custom software applications may require additional approaches such as static analysis, dynamic analysis, binary analysis, or a hybrid of the three approaches. Organizations can employ these analysis approaches in source code reviews and in a variety of tools (e.g., static analysis tools, web-based application scanners, binary analyzers). Vulnerability scanning includes: scanning for patch levels; scanning for functions, ports, protocols, and services that should not be accessible to users or devices; and scanning for improperly configured or incorrectly operating information flow control mechanisms.</p>
<p>To facilitate interoperability, organizations consider using products that are Security Content Automated Protocol (SCAP)-validated, scanning tools that express vulnerabilities in the Common Vulnerabilities and Exposures (CVE) naming convention, and that employ the Open Vulnerability Assessment Language (OVAL) to determine the presence of system vulnerabilities. Sources for vulnerability information include the Common Weakness Enumeration (CWE) listing and the National Vulnerability Database (NVD).</p>
<p>Security assessments, such as red team exercises, provide additional sources of potential vulnerabilities for which to scan. Organizations also consider using scanning tools that express vulnerability impact by the Common Vulnerability Scoring System (CVSS). In certain situations, the nature of the vulnerability scanning may be more intrusive or the system component that is the subject of the scanning may contain highly sensitive information. Privileged access authorization to selected system components facilitates thorough vulnerability scanning and protects the sensitive nature of such scanning.</p>
<p>NIST SP 800-40 provides guidance on vulnerability management.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>A vulnerability scanner is an application that identifies vulnerabilities in organizational assets. Most scanners can create a prioritized list of vulnerabilities ordered by their level of severity. Scan for vulnerabilities on all devices connected to the network including servers, desktops, laptops, virtual machines, containers, firewalls, switches, and printers. All assets that are within the scope of the CMMC assessment must be scanned, including assets such as laptop computers that may not routinely connect to an organization’s network.</p>
<p>Perform reviews of your organization’s custom-developed software. Vulnerability analysis of a custom-made solution may require a penetration tester to properly test and validate findings. Automated vulnerability scanners may not be as thorough when scanning custom developed applications. Source code scanners can help identify weaknesses and vulnerabilities within code prior to compilation and use.</p>
<p>The vulnerability scanning process is a regular activity, not a single occurrence. Organizations put in place a vulnerability scanner that updates its database each time it performs a scan so it can identify the most current known vulnerabilities. Schedule scans with consideration of the potential for impact to normal operations and use caution when scanning critical assets.</p>
<p>This requirement, RA.L2-3.11.2, which ensures scanning for vulnerabilities in organizational systems and application, is a baseline Risk Assessment requirement. RA.L2- 3.11.2, contributes to performing risk assessments as described in RA.L2-3.11.1.</p>
<div class="sub-header-2">Example</div>
<p>You are a system administrator. Your organization has assessed its risk and determined that it needs to scan for vulnerabilities in systems and applications once each quarter [a]. You conduct some tests and decide that it is important to be able to schedule scans after standard business hours. You also realize that you have remote workers and that you will need to be sure to scan their remote computers as well [b]. After some final tests, you integrate the scans into normal IT operations, running as scheduled [b,c]. You verify that the scanner application receives the latest updates on vulnerabilities and that those are included in future scans [d,e].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is the frequency specified for vulnerability scans to be performed in organizational systems and applications (e.g., continuous passive scanning, scheduled active scans) [a]?</li>
<li>Are vulnerability scans performed on a defined frequency or randomly in accordance with company policy [a,b,c]?</li>
<li>Are systems periodically scanned for common and new vulnerabilities [d,e]?</li>
<li>Is the list of scanned system vulnerabilities updated on a defined frequency or when new vulnerabilities are identified and reported [d,e]?</li>
</ul>

', NULL, NULL, 37, 2, 19, NULL, NULL, 1214, NULL, N'Vulnerability Scan', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5367, N'RA.L2-3.11.3', N'Remediate vulnerabilities in accordance with risk assessments.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>vulnerabilities are identified; and</li>
<li>vulnerabilities are remediated in accordance with risk assessments.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Risk assessment policy; procedures addressing vulnerability scanning; risk assessment; system security plan; security assessment report; vulnerability scanning tools and associated configuration documentation; vulnerability scanning results; patch and vulnerability management records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with risk assessment, security assessment and vulnerability scanning responsibilities; personnel with vulnerability scan analysis responsibilities; personnel with vulnerability remediation responsibilities; personnel with information security responsibilities; system or network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for vulnerability scanning, analysis, remediation, and information sharing; mechanisms supporting or implementing vulnerability scanning, analysis, remediation, and information sharing].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Vulnerabilities discovered, for example, via the scanning conducted in response to RA.L2- 3.11.2, are remediated with consideration of the related assessment of risk. The consideration of risk influences the prioritization of remediation efforts and the level of effort to be expended in the remediation for specific vulnerabilities.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Not all vulnerabilities captured in a vulnerability scanner may pose the same level of risk to an organization. Prioritize mitigation efforts to close the most critical vulnerabilities first.</p>
<p>Track all vulnerability remediation to ensure completion; also track vulnerabilities that you have determined not to remediate.</p>
<p>This requirement, RA.L2-3.11.3, benefits from CA.L2-3.12.2. RA.L2-3.11.3 allows remediation of vulnerabilities to take place based on the developed plans of actions for vulnerabilities from CA.L2-3.12.2.</p>
<div class="sub-header-2">Example</div>
<p>You are a system administrator. Each quarter you receive a list of vulnerabilities generated by your company’s vulnerability scanner [a]. You prioritize that list and note which vulnerabilities should be targeted as soon as possible as well as which vulnerabilities you can safely defer addressing at this time. You document the reasoning behind accepting the risk of the unremediated flaws and note to continue to monitor these vulnerabilities in case you need to revise the decision at a later date [b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are the results of risk assessments used to prioritize vulnerabilities for remediation [b]?</li>
<li>For any given vulnerability is action taken for remediation, acceptance, avoidance, or transference of the vulnerability risk [b]?</li>
<li>Are all high risk vulnerabilities prioritized [b]?</li>
</ul>

', NULL, NULL, 37, 3, 19, NULL, NULL, 1214, NULL, N'Vulnerability Remediation', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5368, N'CA.L2-3.12.1', N'Periodically assess the security controls in organizational systems to determine if the controls are effective in their application.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the frequency of security control assessments is defined; and</li>
<li>security controls are assessed with the defined frequency to determine if the controls are effective in their application.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Security assessment and authorization policy; procedures addressing security assessment planning; procedures addressing security assessments; security assessment plan; system security plan; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with security assessment responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting security assessment, security assessment plan development, and security assessment reporting].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations assess security controls in organizational systems and the environments in which those systems operate as part of the system development life cycle. Security controls are the safeguards or countermeasures organizations implement to satisfy security requirements. By assessing the implemented security controls, organizations determine if the security safeguards or countermeasures are in place and operating as intended. Security control assessments ensure that information security is built into organizational systems; identify weaknesses and deficiencies early in the development process; provide essential information needed to make risk-based decisions; and ensure compliance to vulnerability mitigation procedures. Assessments are conducted on the implemented security controls as documented in system security plans.</p>
<p>Security assessment reports document assessment results in sufficient detail as deemed necessary by organizations, to determine the accuracy and completeness of the reports and whether the security controls are implemented correctly, operating as intended, and producing the desired outcome with respect to meeting security requirements. Security assessment results are provided to the individuals or roles appropriate for the types of assessments being conducted.</p>
<p>Organizations ensure that security assessment results are current, relevant to the determination of security control effectiveness, and obtained with the appropriate level of assessor independence. Organizations can choose to use other types of assessment activities such as vulnerability scanning and system monitoring to maintain the security posture of systems during the system life cycle.</p>
<p>NIST SP 800-53 provides guidance on security and privacy controls for systems and organizations. SP 800-53A provides guidance on developing security assessment plans and conducting assessments.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Avoid a “set it and forget it” mentality when implementing security controls. The security landscape is constantly changing. Reassess existing controls at periodic intervals in order to validate their effectiveness in your environment. Set the assessment schedule according to organizational needs. Consider regulatory obligations and internal policies when assessing the controls.</p>
<p>Outputs from security control assessments typically include:</p>
<ul>
<li>documented assessment results;</li>
<li>proposed new controls, or updates to existing controls;</li>
<li>remediation plans; and</li>
<li>newly identified risks.</li>
</ul>
<p>This requirement, CA.L2-3.12.1, which ensures determining security controls are implemented properly, promotes effective security assessments for organizational systems mandated by CA.L2-3.12.3.</p>
<div class="sub-header-2">Example</div>
<p>You are in charge of IT operations. You need to ensure that the security controls implemented within the system are achieving their objectives [b]. Taking the requirements outlined in your SSP as a guide, you conduct annual written reviews of the security controls to ensure they meet your organization’s needs. When you find controls that do not meet requirements, you propose updated or new controls, develop a written implementation plan, document new risks, and execute the changes.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are security controls assessed at least annually [a]?</li>
<li>Is the output of the security controls assessment documented [b]?</li>
</ul>

', NULL, NULL, 37, 1, 19, NULL, NULL, 1215, NULL, N'Security Control Assessment', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5369, N'CA.L2-3.12.2', N'Develop and implement plans of action designed to correct deficiencies and reduce or eliminate vulnerabilities in organizational systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>deficiencies and vulnerabilities to be addressed by the plan of action are identified;</li>
<li>a plan of action is developed to correct identified deficiencies and reduce or eliminate identified vulnerabilities; and</li>
<li>the plan of action is implemented to correct identified deficiencies and reduce or eliminate identified vulnerabilities.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Security assessment and authorization policy; procedures addressing plan of action; system security plan; security assessment plan; security assessment report; security assessment evidence; plan of action; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with plan of action development and implementation responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms for developing, implementing, and maintaining plan of action].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>The plan of action is a key document in the information security program. Organizations develop plans of action that describe how any unimplemented security requirements will be met and how any planned mitigations will be implemented. Organizations can document the system security plan and plan of action as separate or combined documents and in any chosen format.</p>
<p>Federal agencies may consider the submitted system security plans and plans of action as critical inputs to an overall risk management decision to process, store, or transmit CUI on a system hosted by a nonfederal organization and whether it is advisable to pursue an agreement or contract with the nonfederal organization.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>When you write a plan of action, define the clear goal or objective of the plan. You may include the following in the action plan:</p>
<ul>
<li>ownership of who is accountable for ensuring the plan’s performance;</li>
<li>specific steps or milestones that are clear and actionable;</li>
<li>assigned responsibility for each step or milestone;</li>
<li>milestones to measure plan progress; and</li>
<li>completion dates.</li>
</ul>
<p>This requirement, CA.L2-3.12.2, which ensures developing and implementing operational plans of action to correct and reduce vulnerabilities in systems, is driven by risk management requirement RA.L2-3.11.1, which promotes periodically assessing risk to organizational systems. CA.L2-3.12.2 promotes monitoring security controls on an ongoing basis as defined in requirement CA.L2-3.12.3.</p>
<p>An operational plan of action in accordance with CA.L2-3.12.2 differs from a CMMC assessment POA&M as described in 32 CFR § 170.21. The assessment POA&M places conditions on which security requirements can be assessed as NOT MET and allows the OSA to qualify for a CMMC Status of Conditional Level 2 (Self), Conditional Level 2 (C3PAO), or Conditional Level 3 (DIBCAC). Operational plans of action are not subject to the 180 day POA&M closeout requirement. Severity, availability of remediation, and business requirements are among the factors to consider when creating and maintaining operational plans of action.</p>
<div class="sub-header-2">Example</div>
<p>As IT director, one of your duties is to develop action plans when you discover that your company is not meeting security requirements or when a security issue arises [b]. A recent vulnerability scan identified several items that need to be addressed so you develop a plan to fix them [b]. Your plan identifies the people responsible for fixing the issues, how to do it, and when the remediation will be completed [b]. You also define how to verify that the person responsible has fixed the vulnerability [b]. You document this in an operational plan of action that is updated as milestones are reached [b]. You have a separate resource review the modifications after they have been completed to ensure the plan has been implemented correctly [c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is there an action plan to remediate identified weaknesses or deficiencies [a]?</li>
<li>Is the action plan maintained as remediation is performed [b]?</li>
<li>Does the action plan designate remediation dates and milestones for each item [c]?</li>
</ul>

', NULL, NULL, 37, 2, 19, NULL, NULL, 1215, NULL, N'Operational Plan Of Action', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5370, N'CA.L2-3.12.3', N'Monitor security controls on an ongoing basis to ensure the continued effectiveness of the controls.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>security controls are monitored on an ongoing basis to ensure the continued effectiveness of those controls.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Security planning policy; organizational procedures addressing system security plan development and implementation; procedures addressing system security plan reviews and updates; enterprise architecture documentation; system security plan; records of system security plan reviews and updates; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with security planning and system security plan implementation responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for system security plan development, review, update, and approval; mechanisms supporting the system security plan].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Continuous monitoring programs facilitate ongoing awareness of threats, vulnerabilities, and information security to support organizational risk management decisions. The terms continuous and ongoing imply that organizations assess and analyze security controls and information security-related risks at a frequency sufficient to support risk-based decisions. The results of continuous monitoring programs generate appropriate risk response actions by organizations. Providing access to security information on a continuing basis through reports or dashboards gives organizational officials the capability to make effective and timely risk management decisions. Automation supports more frequent updates to hardware, software, firmware inventories, and other system information. Effectiveness is further enhanced when continuous monitoring outputs are formatted to provide information that is specific, measurable, actionable, relevant, and timely. Monitoring requirements, including the need for specific monitoring, may also be referenced in other requirements.</p>
<p>NIST SP 800-137 provides guidance on continuous monitoring.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Provide a plan for monitoring the state of security controls on a recurring basis that occurs more frequently than the periodic assessments discussed in CA.L2-3.12.1. This process provides a mechanism to assess the overall security posture of your organization, which directly relates to activities discussed in CA.L2-3.12.4. As a result, the process not only maintains awareness of vulnerabilities and threats, but it also informs management of the effectiveness of the security controls in determining if security controls are current and for management to make an acceptable risk decision.</p>
<div class="sub-header-2">Example</div>
<p>You are responsible for ensuring your company fulfills all cybersecurity requirements for its DoD contracts. You review those requirements and the security controls your company has put in place to meet them. You then create a plan to evaluate each control regularly over the next year. You mark several controls to be evaluated by a third-party security assessor. You assign other IT resources in the organization to evaluate controls within their area of responsibility. To ensure progress you establish recurring meetings with the accountable IT staff to assess continuous monitoring progress, review security information, evaluate risks from gaps in continuous monitoring, and produce reports for your management [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are the security controls that need to be continuously monitored identified [a]?</li>
<li>Is the timeframe for continuous monitoring activities to support risk-based decision making defined [a]?</li>
<li>Is the output of continuous monitoring activities provided to stakeholders [a]?</li>
</ul>

', NULL, NULL, 37, 3, 19, NULL, NULL, 1215, NULL, N'Security Control Monitoring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5371, N'CA.L2-3.12.4', N'Develop, document, and periodically update system security plans that describe system boundaries, system environments of operation, how security requirements are implemented, and the relationships with or connections to other systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>a system security plan is developed;</li>
<li>the system boundary is described and documented in the system security plan;</li>
<li>the system environment of operation is described and documented in the system security plan;</li>
<li>the security requirements identified and approved by the designated authority as non-applicable are identified;</li>
<li>the method of security requirement implementation is described and documented in the system security plan;</li>
<li>the relationship with or connection to other systems is described and documented in the system security plan;</li>
<li>the frequency to update the system security plan is defined; and</li>
<li>system security plan is updated with the defined frequency.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Security planning policy; procedures addressing system security plan development and implementation; procedures addressing system security plan reviews and updates; enterprise architecture documentation; system security plan; records of system security plan reviews and updates; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with security planning and system security plan implementation responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for system security plan development, review, update, and approval; mechanisms supporting the system security plan].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>System security plans relate security requirements to a set of security controls. System security plans also describe, at a high level, how the security controls meet those security requirements, but do not provide detailed, technical descriptions of the design or implementation of the controls. System security plans contain sufficient information to enable a design and implementation that is unambiguously compliant with the intent of the plans and subsequent determinations of risk if the plan is implemented as intended. Security plans need not be single documents; the plans can be a collection of various documents including documents that already exist. Effective security plans make extensive use of references to policies, procedures, and additional documents (e.g., design and implementation specifications) where more detailed information can be obtained. This reduces the documentation requirements associated with security programs and maintains security-related information in other established management/operational areas related to enterprise architecture, system development life cycle, systems engineering, and acquisition.</p>
<p>Federal agencies may consider the submitted system security plans and plans of action as critical inputs to an overall risk management decision to process, store, or transmit CUI on a system hosted by a nonfederal organization and whether it is advisable to pursue an agreement or contract with the nonfederal organization.</p>
<p>NIST SP 800-18 provides guidance on developing security plans.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>A system security plan (SSP) is a document that outlines how an organization implements its security requirements. OSAs must have an SSP in place at the time of assessment to describe each information system within the CMMC Assessment Scope. The absence of an up-to-date SSP at the time of the assessment would result in a finding that an assessment could not be completed due to incomplete information and noncompliance with DFARS clause 252.204-7012. OSAs are free to choose the format of their SSP. At a minimum, an SSP must include:</p>
<ul>
<li>Description of the CMMC Assessment Scope;</li>
<li>CMMC Assessment Scope Description: high-level description of the assets within the assessment scope186;</li>
<li>Description of the Environment of Operation: physical surroundings in which an information system processes, stores, and transmits information;</li>
<li>Identified and Approved Security Requirements: requirements levied on an information system that are derived from applicable laws, Executive Orders, directives, policies, standards, instructions, regulations, procedures, or organizational mission/business case needs to ensure the confidentiality, integrity, and availability of the information being processed, stored, or transmitted;</li>
</ul>
<p>186 There is no requirement to embed every asset in the SSP. .</p>
<ul>
<li>Implementation Method for Security Requirements: description of how the identified and approved security requirements are implemented with the system or environment;</li>
<li>Connections and Relationships to Other Systems and Networks: description of related, dependent, and interconnected systems; and</li>
<li>Defined Frequency of Updates: at least annually.</li>
</ul>
<p>In addition to the requirements above, an SSP often includes:</p>
<ul>
<li>general information system description: technical and functional description;</li>
<li>design philosophies: defense-in-depth strategies and allowed interfaces and network protocols; and</li>
<li>roles and responsibilities: description of the roles and responsibilities for key personnel, which may include the system owner, system custodian, authorizing officials, and other stakeholders</li>
</ul>
<p>This requirement, CA.L2-3.12.4, which requires developing, documenting, and updating system security plans, promotes effective information security within organizational systems required by SC.L2-3.13.2, as well as other system and communications protection requirements.</p>
<div class="sub-header-2">Example</div>
<p>You are in charge of system security. You develop an SSP and have senior leadership formally approve the document [a]. The SSP explains how your organization handles CUI and defines how that data is stored, transmitted, and protected [d,e]. The criteria outlined in the SSP is used to guide configuration of the network and other information resources to meet your company’s goals. Knowing that it is important to keep the SSP current, you establish a policy that requires a formal review and update of the SSP each year [g,h].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Do mechanisms exist to develop and periodically update an SSP [a,g]?</li>
<li>Are security requirements identified and approved by the designated authority as non-applicable documented [d]?</li>
</ul>

', NULL, NULL, 37, 4, 19, NULL, NULL, 1215, NULL, N'System Security Plan', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5372, N'SC.L2-3.13.1', N'Monitor, control, and protect communications (i.e., information transmitted or received by organizational systems) at the external boundaries and key internal boundaries of organizational systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the external system boundary is defined;</li>
<li>key internal system boundaries are defined;</li>
<li>communications are monitored at the external system boundary;</li>
<li>communications are monitored at key internal boundaries;</li>
<li>communications are controlled at the external system boundary;</li>
<li>communications are controlled at key internal boundaries;</li>
<li>communications are protected at the external system boundary; and</li>
<li>communications are protected at key internal boundaries.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing boundary protection; system security plan; list of key internal boundaries of the system; system design documentation; boundary protection hardware and software; enterprise security architecture documentation; system audit logs and records; system configuration settings and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developers; personnel with boundary protection responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing boundary protection capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Communications can be monitored, controlled, and protected at boundary components and by restricting or prohibiting interfaces in organizational systems. Boundary components include gateways, routers, firewalls, guards, network-based malicious code analysis and virtualization systems, or encrypted tunnels implemented within a system security architecture (e.g., routers protecting firewalls or application gateways residing on protected subnetworks). Restricting or prohibiting interfaces in organizational systems includes restricting external web communications traffic to designated web servers within managed interfaces and prohibiting external traffic that appears to be spoofing internal addresses.</p>
<p>Organizations consider the shared nature of commercial telecommunications services in the implementation of security requirements associated with the use of such services. Commercial telecommunications services are commonly based on network components and consolidated management systems shared by all attached commercial customers and may also include third party-provided access lines and other service elements. Such transmission services may represent sources of increased risk despite contract security provisions. NIST SP 800-41 provides guidance on firewalls and firewall policy. NIST SP 800-125B provides guidance on security for virtualization technologies.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Fences, locks, badges, and key cards help keep non-employees out of your physical facilities. Similarly, your company’s IT network or system has boundaries that must be protected. Many companies use a web proxy and a firewall.</p>
<p>When an employee uses a company computer to go to a website, a web proxy makes the request on the user’s behalf, looks at the web request, and decides if it should let the employee go to the website.</p>
<p>A firewall controls access from the inside and outside, protecting valuable information and resources stored on the company’s network. A firewall stops unwanted traffic on the internet from passing through an outside “fence” to the company’s networks and information systems. Internal boundaries determine where data can flow, for instance a software development environment may have its own boundary controlling, monitoring, and protecting the data that can leave that boundary.</p>
<p>It may be wise to monitor, control, or protect one part of the company network from another. This can also be accomplished with a firewall and limits the ability of attackers and disgruntled employees from entering sensitive parts of your internal network and causing damage.</p>
<div class="sub-header-2">Example</div>
<p>You are setting up the new network and want to keep your company’s information and resources safe. You start by sketching out a simple diagram that identifies the external boundary of your network and any internal boundaries that are needed [a,b]. The first piece of equipment you install is the firewall, a device to separate your internal network from the internet. The firewall also has a feature that allows you to block access to potentially malicious websites, and you configure that service as well [a,c,e,g]. Some of your coworkers complain that they cannot get onto certain websites [c,e,g]. You explain that the new network blocks websites that are known for spreading malware. The firewall sends you a daily digest of blocked activity so that you can monitor the system for attack trends [c,d].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>What are the external system boundary components that make up the entry and exit points for data flow (e.g., firewalls, gateways, cloud service boundaries), behind which all system components that handle regulated data are contained? What are the supporting system components necessary for the protection of regulated data [a]?</li>
<li>What are the internal system boundary components that make up the entry and exit points for key internal data flow (e.g., internal firewalls, routers, any devices that can bridge the connection between one segment of the system and another) that separate segments of the internal network – including devices that separate internal network segments such as development and production networks as well as a traditional Demilitarized Zone (DMZ) at the edge of the network [b]?</li>
<li>Is data flowing in and out of the external and key internal system boundaries monitored (e.g., connections are logged and able to be reviewed, suspicious traffic generates alerts) [c,d]?</li>
<li>Is data traversing the external and internal system boundaries controlled such that connections are denied by default and only authorized connections are allowed [e,f]?</li>
<li>Is data flowing in and out of the external and key internal system boundaries protected (e.g., applying encryption when required or prudent, tunneling traffic as needed) [g,h]?</li>
</ul>

', NULL, NULL, 37, 3, 19, NULL, NULL, 1216, NULL, N'Boundary Protection', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5373, N'SC.L2-3.13.2', N'Employ architectural designs, software development techniques, and systems engineering principles that promote effective information security within organizational systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>architectural designs that promote effective information security are identified;</li>
<li>software development techniques that promote effective information security are identified;</li>
<li>systems engineering principles that promote effective information security are identified;</li>
<li>identified architectural designs that promote effective information security are employed;</li>
<li>identified software development techniques that promote effective information security are employed; and</li>
<li>identified systems engineering principles that promote effective information security are employed.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Security planning policy; procedures addressing system security plan development and implementation; procedures addressing system security plan reviews and updates; enterprise architecture documentation; system security plan; records of system security plan reviews and updates; system and communications protection policy; procedures addressing security engineering principles used in the specification, design, development, implementation, and modification of the system; security architecture documentation; security requirements and specifications for the system; system design documentation; system configuration settings and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with responsibility for determining information system security requirements; personnel with information system design, development, implementation, and modification responsibilities; personnel with security planning and system security plan implementation responsibilities; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for system security plan development, review, update, and approval; mechanisms supporting the system security plan; processes for applying security engineering principles in system specification, design, development, implementation, and modification; automated mechanisms supporting the application of security engineering principles in information system specification, design, development, implementation, and modification].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations apply systems security engineering principles to new development systems or systems undergoing major upgrades. For legacy systems, organizations apply systems security engineering principles to system upgrades and modifications to the extent feasible, given the current state of hardware, software, and firmware components within those systems. The application of systems security engineering concepts and principles helps to develop trustworthy, secure, and resilient systems and system components and reduce the susceptibility of organizations to disruptions, hazards, and threats. Examples of these concepts and principles include developing layered protections; establishing security policies, architecture, and controls as the foundation for design; incorporating security requirements into the system development life cycle; delineating physical and logical security boundaries; ensuring that developers are trained on how to build secure software; and performing threat modeling to identify use cases, threat agents, attack vectors and patterns, design patterns, and compensating controls needed to mitigate risk. Organizations that apply security engineering concepts and principles can facilitate the development of trustworthy, secure systems, system components, and system services; reduce risk to acceptable levels; and make informed risk-management decisions.</p>
<p>NIST SP 800-160-1 provides guidance on systems security engineering.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Familiarity with security engineering principles and their successful application to your infrastructure will increase the security of your environment. NIST SP 800-160 System Security Engineering: Considerations for a Multidisciplinary Approach in the Engineering of Trustworthy Secure Systems can serve as a source of security engineering and design principles.</p>
<p>Decide which designs and principles to apply. Some will not be possible or appropriate for a given company or for specific systems or components.</p>
<p>Designs and principles should be applied to policies and security standards. Starting with the baseline configuration, they should be extended through all layers of the technology stack (e.g., hardware, software, firmware) and throughout all the components of the infrastructure. The application of these chosen designs and principles should drive you towards a secure architecture with the required security capabilities and intrinsic behaviors present throughout the lifecycle of your technology.</p>
<p>As legacy components age, it may become increasingly difficult for those components to meet security principles and requirements. This should factor into life-cycle decisions for those components (e.g., replacing legacy hardware, upgrading or re-writing software, upgrading run-time environments).</p>
<div class="sub-header-2">Example</div>
<p>You are responsible for developing strategies to protect data and harden your infrastructure. You are on a team responsible for performing a major upgrade to a legacy system. You refer to your documented security engineering principles [c]. Reviewing each, you decide which are appropriate and applicable [c]. You apply the chosen designs and principles when creating your design for the upgrade [f].</p>
<p>You document the security requirements for the software and hardware changes to ensure the principles are followed. You review the upgrade at critical points in the workflow to ensure the requirements are met. You assist in updating the policies covering the use of the upgraded system so user behavior stays aligned with the principles.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does the organization have a defined system architecture [a,d]?</li>
<li>Are system security engineering principles applied in the specification, design, development and implementation of the systems [d,e,f]?</li>
</ul>

', NULL, NULL, 37, 4, 19, NULL, NULL, 1216, NULL, N'Security Engineering', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5374, N'SC.L2-3.13.3', N'Separate user functionality from system management functionality.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>user functionality is identified;</li>
<li>system management functionality is identified; and</li>
<li>user functionality is separated from system management functionality.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing application partitioning; system design documentation; system configuration settings and associated documentation; system security plan; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developer].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Separation of user functionality from system management functionality].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>System management functionality includes functions necessary to administer databases, network components, workstations, or servers, and typically requires privileged user access. The separation of user functionality from system management functionality is physical or logical. Organizations can implement separation of system management functionality from user functionality by using different computers, different central processing units, different instances of operating systems, or different network addresses; virtualization techniques; or combinations of these or other methods, as appropriate. This type of separation includes web administrative interfaces that use separate authentication methods for users of any other system resources. Separation of system and user functionality may include isolating administrative interfaces on different domains and with additional access controls.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Prevent users and user services from accessing system management functionality on IT components (e.g., databases, network components, workstations, servers). This reduces the attack surface to those critical interfaces by limiting who can access and how they can be accessed. By separating the user functionality from system management functionality, the administrator or privileged functions are not available to the general user.</p>
<p>The intent of this requirement is to ensure:</p>
<ul>
<li>general users are not permitted to perform system administration functions; and</li>
<li>system administrators only perform system administration functions from their privileged account.</li>
</ul>
<p>This can be accomplished using separation like VLANs or logical separation using strong access control methods.</p>
<div class="sub-header-2">Example</div>
<p>As a system administrator, you are responsible for managing a number of core systems. Policy prevents you from conducting any administration from the computer or system account you use for day-to-day work [a,b]. The servers you manage also are isolated from the main corporate network. To work with them you use a special unique account to connect to a “jump” server that has access to the systems you routinely administer.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are physical or logical controls used to separate user functionality from system management-related functionality (e.g., to ensure that administration (e.g., privilege) options are not available to general users) [c]?</li>
</ul>

', NULL, NULL, 37, 5, 19, NULL, NULL, 1216, NULL, N'Role Separation', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5375, N'SC.L2-3.13.4', N'Prevent unauthorized and unintended information transfer via shared system resources.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>unauthorized and unintended information transfer via shared system resources is prevented.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing application partitioning; system security plan; system design documentation; system configuration settings and associated documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developer].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Separation of user functionality from system management functionality].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>The control of information in shared system resources (e.g., registers, cache memory, main memory, hard disks) is also commonly referred to as object reuse and residual information protection. This requirement prevents information produced by the actions of prior users or roles (or the actions of processes acting on behalf of prior users or roles) from being available to any current users or roles (or current processes acting on behalf of current users or roles) that obtain access to shared system resources after those resources have been released back to the system. This requirement also applies to encrypted representations of information. This requirement does not address information remnants, which refers to residual representation of data that has been nominally deleted; covert channels (including storage or timing channels) where shared resources are manipulated to violate information flow restrictions; or components within systems for which there are only single users or roles.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>No shared system resource, such as cache memory, hard disks, registers, or main memory may pass information from one user to another user. In other words, when objects are reused no residual information should exist on that object. This protects the confidentiality of the information. This is typically a feature provided by operating system and software vendors.</p>
<div class="sub-header-2">Example</div>
<p>You are a system administrator responsible for creating and deploying the system hardening procedures for your company’s computers. You ensure that the computer baselines include software patches to prevent attackers from exploiting flaws in the processor architecture to read data (e.g., the Meltdown and Spectre exploits). You also verify that the computer operating system is configured to prevent users from accessing other users’ folders [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are shared system resources identified and documented [a]?</li>
</ul>

', NULL, NULL, 37, 6, 19, NULL, NULL, 1216, NULL, N'Shared Resource Control', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5376, N'SC.L2-3.13.5', N'Implement subnetworks for publicly accessible system components that are physically or logically separated from internal networks.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>publicly accessible system components are identified; and</li>
<li>subnetworks for publicly accessible system components are physically or logically separated from internal networks.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing boundary protection; system security plan; list of key internal boundaries of the system; system design documentation; boundary protection hardware and software; system configuration settings and associated documentation; enterprise security architecture documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developers; personnel with boundary protection responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing boundary protection capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Subnetworks that are physically or logically separated from internal networks are referred to as demilitarized zones (DMZs). DMZs are typically implemented with boundary control devices and techniques that include routers, gateways, firewalls, virtualization, or cloud- based technologies.</p>
<p>NIST SP 800-41 provides guidance on firewalls and firewall policy. SP 800-125B provides guidance on security for virtualization technologies.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Separate the publicly accessible systems from the internal systems that need to be protected. Do not place internal systems on the same network as the publicly accessible systems and block access by default from DMZ networks to internal networks.</p>
<p>One method of accomplishing this is to create a DMZ network, which enhances security by providing public access to a specific set of resources while preventing connections from those resources to the rest of the IT environment. Some OSAs achieve a similar result through the use of a cloud computing environment that is separated from the rest of the company’s infrastructure.</p>
<div class="sub-header-2">Example</div>
<p>The head of recruiting at your company wants to launch a website to post job openings and allow the public to download an application form [a]. After some discussion, your team realizes it needs to use a firewall to create a perimeter network to do this [b]. You host the server separately from the company’s internal network and make sure the network on which it resides is isolated with the proper firewall rules [b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are any system components reachable by the public (e.g., internet-facing web servers, VPN gateways, publicly accessible cloud services) [a]?</li>
<li>Are publicly accessible system components on physically or logically separated subnetworks (e.g., isolated subnetworks using separate, dedicated VLAN segments such as DMZs) [b]?</li>
</ul>

', NULL, NULL, 37, 7, 19, NULL, NULL, 1216, NULL, N'Public-Access System Separation', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5377, N'SC.L2-3.13.6', N'Deny network communications traffic by default and allow network communications traffic by exception (i.e., deny all, permit by exception).', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>network communications traffic is denied by default; and</li>
<li>network communications traffic is allowed by exception.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing boundary protection; system security plan; system design documentation; system configuration settings and associated documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developer; personnel with boundary protection responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing traffic management at managed interfaces].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement applies to inbound and outbound network communications traffic at the system boundary and at identified points within the system. A deny-all, permit-by-exception network communications traffic policy ensures that only those connections which are essential and approved are allowed.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Block all traffic entering and leaving the network, but permit specific traffic based on organizational policies, exceptions, or criteria. This process of permitting only authorized traffic to the network is called whitelisting and limits the number of unintentional connections to the network.</p>
<p>This requirement, SC.L2-3.13.6, requires a deny-all permit by exception approach for all network communications. In doing so, it adds specifics for SC.L2-3.13.1, which only requires monitoring, control, and protection of communication channels.</p>
<div class="sub-header-2">Example</div>
<p>You are setting up a new environment to house CUI. To properly isolate the CUI network, you install a firewall between it and other networks and set the firewall rules to deny all traffic [a]. You review each service and application that runs in the new environment and determine that you only need to allow http and https traffic outbound [b]. You test the functionality of the required services and make some needed adjustments, then comment each firewall rule so there is documentation of why it is required. You review the firewall rules on a regular basis to make sure no unauthorized changes were made.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are network communications traffic on relevant system components (e.g., host and network firewalls, routers, gateways) denied by default (e.g., configured with an implicit deny rule that takes effect in the absence of any other matching traffic rules) [a]?</li>
<li>Are network communications traffic on relevant system components (e.g., host and network firewalls, routers, gateways) allowed by exception (e.g., configured with explicit allow rules that takes effect only when network traffic matches one or more rules) [b]?</li>
</ul>

', NULL, NULL, 37, 8, 19, NULL, NULL, 1216, NULL, N'Network Communication By Exception', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5378, N'SC.L2-3.13.7', N'Prevent remote devices from simultaneously establishing non-remote connections with organizational systems and communicating via some other connection to resources in external networks (i.e., split tunneling).', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>remote devices are prevented from simultaneously establishing non-remote connections with the system and communicating via some other connection to resources in external networks (i.e., split tunneling).</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing boundary protection; system security plan; system design documentation; system hardware and software; system architecture; system configuration settings and associated documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developer; personnel with boundary protection responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing boundary protection capability; mechanisms supporting or restricting non-remote connections].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Split tunneling might be desirable by remote users to communicate with local system resources such as printers or file servers. However, split tunneling allows unauthorized external connections, making the system more vulnerable to attack and to exfiltration of organizational information. This requirement is implemented in remote devices (e.g., notebook computers, smart phones, and tablets) through configuration settings to disable split tunneling in those devices, and by preventing configuration settings from being readily configurable by users. This requirement is implemented in the system by the detection of split tunneling (or of configuration settings that allow split tunneling) in the remote device, and by prohibiting the connection if the remote device is using split tunneling.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Split tunneling for a remote user utilizes two connections: accessing resources on the internal network via a VPN and simultaneously accessing an external network such as a public network or the internet.</p>
<p>Split tunneling presents a potential opportunity where an open unencrypted connection from a public network could allow an adversary to access resources on internal network. As a mitigation strategy, the split tunneling setting should be disabled on all devices so that all traffic, including traffic for external networks or the internet, goes through the VPN.</p>
<div class="sub-header-2">Example</div>
<p>You are a system administrator responsible for configuring the network to prevent remote users from using split tunneling. You review the configuration of remote user laptops. You discover that remote users are able to access files, email, database and other services through the VPN connection while also being able to print and access resources on their local network. You change the configuration settings for all company computers to disable split tunneling [a]. You test a laptop that has had the new hardening procedures applied and verify that all traffic from the laptop is now routed through the VPN connection.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does the system prevent remote devices that have established connections (e.g., remote laptops) with the system from communicating outside that communications path with resources on uncontrolled/unauthorized networks [a]?</li>
</ul>

', NULL, NULL, 37, 9, 19, NULL, NULL, 1216, NULL, N'Split Tunneling', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5379, N'SC.L2-3.13.8', N'Implement cryptographic mechanisms to prevent unauthorized disclosure of CUI during transmission unless otherwise protected by alternative physical safeguards.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>cryptographic mechanisms intended to prevent unauthorized disclosure of CUI are identified;</li>
<li>alternative physical safeguards intended to prevent unauthorized disclosure of CUI are identified; and</li>
<li>either cryptographic mechanisms or alternative physical safeguards are implemented to prevent unauthorized disclosure of CUI during transmission.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing transmission confidentiality and integrity; system security plan; system design documentation; system configuration settings and associated documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developer].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Cryptographic mechanisms or mechanisms supporting or implementing transmission confidentiality; organizational processes for defining and implementing alternative physical safeguards].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement applies to internal and external networks and any system components that can transmit information including servers, notebook computers, desktop computers, mobile devices, printers, copiers, scanners, and facsimile machines. Communication paths outside the physical protection of controlled boundaries are susceptible to both interception and modification. Organizations relying on commercial providers offering transmission services as commodity services rather than as fully dedicated services (i.e., services which can be highly specialized to individual customer needs), may find it difficult to obtain the necessary assurances regarding the implementation of the controls for transmission confidentiality. In such situations, organizations determine what types of confidentiality services are available in commercial telecommunication service packages. If it is infeasible or impractical to obtain the necessary safeguards and assurances of the effectiveness of the safeguards through appropriate contracting vehicles, organizations implement compensating safeguards or explicitly accept the additional risk. An example of an alternative physical safeguard is a protected distribution system (PDS) where the distribution medium is protected against electronic or physical intercept, thereby ensuring the confidentiality of the information being transmitted.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>The intent of this requirement is to ensure CUI is cryptographically protected during transit, particularly on the internet. The most common way to accomplish this is to establish a TLS tunnel between the source and destination using the most current version of TLS. This requirement does not specify a mutually authenticated handshake, but mutual authentication is the most secure approach to creating a tunnel.</p>
<p>Because the use of cryptography in this requirement is to protect the confidentiality of CUI, the cryptography used must meet the criteria specified in requirement SC.L2-3.13.11.</p>
<p>This requirement, SC.L2-3.13.8, requires cryptographic mechanisms be used to prevent the disclosure of CUI in-transit and leverages SC.L2-3.13.11, which specifies that the algorithms used must be FIPS-validated cryptography.</p>
<div class="sub-header-2">Example</div>
<p>You are a system administrator responsible for configuring encryption on all devices that contain CUI. Because your users regularly store CUI on laptops and take them out of the office, you encrypt the hard drives with a FIPS-validated encryption tool built into the operating system. For users who need to share CUI, you install a Secure FTP server to allow CUI to be transmitted in a compliant manner [a]. You verify that the server is using a FIPS- validated encryption module by checking the NIST Cryptographic Module Validation Program website [c]. You turn on the “FIPS Compliance” setting for the server during configuration because that is what is required for this product in order to use only FIPS- validated cryptography [c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are cryptographic mechanisms used to prevent unauthorized disclosure of information during transmission unless otherwise protected by alternative physical measures (e.g., PDS) [c]?</li>
</ul>

', NULL, NULL, 37, 10, 19, NULL, NULL, 1216, NULL, N'Data In Transit', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5380, N'SC.L2-3.13.9', N'Terminate network connections associated with communications sessions at the end of the sessions or after a defined period of inactivity.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>a period of inactivity to terminate network connections associated with communications sessions is defined;</li>
<li>network connections associated with communications sessions are terminated at the end of the sessions; and</li>
<li>network connections associated with communications sessions are terminated after the defined period of inactivity.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing network disconnect; system design documentation; system security plan; system configuration settings and associated documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developer].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting or implementing network disconnect capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>This requirement applies to internal and external networks. Terminating network connections associated with communications sessions include de-allocating associated TCP/IP address or port pairs at the operating system level, or de-allocating networking assignments at the application level if multiple application sessions are using a single, operating system-level network connection. Time periods of user inactivity may be established by organizations and include time periods by type of network access or for specific network accesses.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Prevent malicious actors from taking advantage of an open network session or an unattended computer at the end of the connection. Balance user work patterns and needs against security to determine the length of inactivity that will force a termination.</p>
<p>This requirement, SC.L2-3.13.9, specifies network connections be terminated under certain conditions, which complements AC.L2-3.1.18 that specifies control of mobile device connections.</p>
<div class="sub-header-2">Example</div>
<p>You are an administrator of a server that provides remote access. Your company’s policies state that network connections must be terminated after being idle for 60 minutes [a]. You edit the server configuration file and set the timeout to 60 minutes and restart the remote access software [c]. You test the software and verify that the connection is terminated appropriately.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are the network connections requiring management and time-out for inactivity documented [a]?</li>
<li>Are the network connections requiring management and time-out for inactivity configured and implemented [c]?</li>
</ul>

', NULL, NULL, 37, 11, 19, NULL, NULL, 1216, NULL, N'Connections Termination', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5381, N'SC.L2-3.13.10', N'Establish and manage cryptographic keys for cryptography employed in organizational systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>cryptographic keys are established whenever cryptography is employed; and</li>
<li>cryptographic keys are managed whenever cryptography is employed.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing cryptographic key establishment and management; system security plan; system design documentation; cryptographic mechanisms; system configuration settings and associated documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; personnel with responsibilities for cryptographic key establishment and management].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting or implementing cryptographic key establishment and management].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Cryptographic key management and establishment can be performed using manual procedures or mechanisms supported by manual procedures. Organizations define key management requirements in accordance with applicable federal laws, Executive Orders, policies, directives, regulations, and standards specifying appropriate options, levels, and parameters.</p>
<p>NIST SP 800-56A and NIST SP 800-57-1 provide guidance on cryptographic key management and key establishment.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Develop processes and technical mechanisms to protect the cryptographic keys’ confidentiality, authenticity, and authorized use in accordance with industry standards and regulations. Key management systems provide oversight, assurance, and the capability to demonstrate the cryptographic keys are created in a secure manner and protected from loss or misuse throughout their lifecycle (e.g., active, expired, revoked). For a small number of keys, this can be accomplished with manual procedures and mechanisms. As the number of keys and cryptographic units increase, automation and tool support will be required.</p>
<p>The first intent of this requirement is to ensure cryptographic keys are properly created in a secure manner that prevents them from being reproduced by an adversary. The second intent of this requirement is to ensure cryptographic keys are managed in a secure manner that prevents them from being stolen by an adversary.</p>
<p>Key establishment involves the creation of keys and coordination among parties that will use the keys of the methodology for generating the final keying material. This is discussed in detail in SP 800-56A, B, and C.</p>
<p>Key management involves protecting keys when they are distributed, when they are stored, when they are being used, and when they are being recovered.</p>
<p>Key establishment best practices are identified in NIST SP 800-56A, B, and C. Key management best practices are identified in NIST SP 800-57 Parts 1, 2, and 3.</p>
<p>This requirement, SC.L2-3.13.10, complements AC.L2-3.1.19 by specifying that any cryptographic keys in use must be protected.</p>
<div class="sub-header-2">Example 1</div>
<p>You are a system administrator responsible for providing key management. You have generated a public-private key pair to exchange CUI [a]. You require all system administrators to read the key management policy before you allow them to install the private key on their machines [b]. No one else is allowed to know or have a copy of the private key per the policy. You provide the public key to the other parties who will be sending you CUI and test the Public Key Infrastructure (PKI) to ensure the encryption is working [a]. You set a revocation period of one year on all your certificates per organizational policy [b].</p>
<div class="sub-header-2">Example 2</div>
<p>You encrypt all of your company’s computers using the disk encryption utility built into the operating system. As you configure encryption on each device, it generates a cryptographic key. You associate each key with the correct computer in your inventory spreadsheet and restrict access to the spreadsheet to the system administrators whose work role requires them to manage the computers [b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are cryptographic keys established whenever cryptography is employed (e.g., digital signatures, authentication, authorization, transport, or other cryptographic mechanisms) [a]?</li>
<li>Are cryptographic keys maintained whenever cryptography is employed (e.g., key storage, backup, recovery, revocation, destruction, etc.) [b]?</li>
</ul>

', NULL, NULL, 37, 12, 19, NULL, NULL, 1216, NULL, N'Key Management', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5382, N'SC.L2-3.13.11', N'Employ FIPS-validated cryptography when used to protect the confidentiality of CUI.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>FIPS-validated cryptography is employed to protect the confidentiality of CUI.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing cryptographic protection; system security plan; system design documentation; system configuration settings and associated documentation; cryptographic module validation certificates; list of FIPS-validated cryptographic modules; system audit logs and records; any other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developers; personnel with responsibilities for cryptographic protection].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting or implementing cryptographic protection].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Cryptography can be employed to support many security solutions including the protection of controlled unclassified information, the provision of digital signatures, and the enforcement of information separation when authorized individuals have the necessary clearances for such information but lack the necessary formal access approvals. Cryptography can also be used to support random number generation and hash generation. Cryptographic standards include FIPS-validated cryptography and/or NSA-approved cryptography.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>FIPS-validated cryptography means the cryptographic module has to have been tested and validated to meet FIPS 140-2 requirements. Simply using an approved algorithm is not sufficient – the module (software and/or hardware) used to implement the algorithm must be separately validated under FIPS 140. Accordingly, FIPS-validated cryptography is required to protect CUI when transmitted or stored outside the protected environment of the covered OSA information system (including wireless/remote access). Encryption used for other purposes, such as within applications or devices within the protected environment of the covered OSA information system, would not need to use FIPS-validated cryptography.</p>
<p>This requirement, SC.L2-3.13.11, complements AC.L2-3.1.19, MP.L2-3.8.6, SC.L2-3.13.8, and SC.L2-3.13.16 by specifying that FIPS-validated cryptography must be used. While FIPS- validated modules and algorithms are critical for protecting CUI, in limited cases Enduring Exceptions and temporary deficiencies may apply when implementing such cryptographic mechanisms.</p>
<div class="sub-header-2">Example</div>
<p>You are a system administrator responsible for deploying encryption on all devices that contain CUI. You must ensure that the encryption you use on the devices is FIPS-validated cryptography [a]. An employee informs you of a need to carry a large volume of CUI offsite and asks for guidance on how to do so. You provide the user with disk encryption software that you have verified via the NIST website that uses a CMVP-validated encryption module [a]. Once the encryption software is active, the user copies the CUI data onto the drive for transport.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is cryptography implemented to protect the confidentiality of CUI at rest and in transit, through the configuration of systems and applications or through the use of encryption tools [a]?</li>
</ul>

', NULL, NULL, 37, 13, 19, NULL, NULL, 1216, NULL, N'CUI Encryption', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5383, N'SC.L2-3.13.12', N'Prohibit remote activation of collaborative computing devices and provide indication of devices in use to users present at the device.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>collaborative computing devices are identified;</li>
<li>collaborative computing devices provide indication to users of devices in use; and</li>
<li>remote activation of collaborative computing devices is prohibited.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing collaborative computing; access control policy and procedures; system security plan; system design documentation; system audit logs and records; system configuration settings and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developer; personnel with responsibilities for managing collaborative computing devices].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting or implementing management of remote activation of collaborative computing devices; mechanisms providing an indication of use of collaborative computing devices].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Collaborative computing devices include networked white boards, cameras, and microphones. Indication of use includes signals to users when collaborative computing devices are activated. Dedicated video conferencing systems, which rely on one of the participants calling or connecting to the other party to activate the video conference, are excluded.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Notification that a device is in use can include an indicator light that turns on or a specific text window that appears on screen. If a device does not have the means to alert a user when in use, the organization should provide manual means. Manual means can include, as necessary:</p>
<ul>
<li>paper notification on entryways; and</li>
<li>locking entryways when a collaborative computing device is in use.</li>
</ul>
<p>This requirement is not intended to include technologies that enable users to share the contents of their computer screens via the internet.</p>
<div class="sub-header-2">Example</div>
<p>A group of remote employees at your company routinely collaborate using cameras and microphones attached to their computers [a]. To prevent the misuse of these devices, you disable the ability to turn on cameras or microphones remotely [c]. You ensure the machines alert users when the camera or microphone are in use with a light beside the camera and an onscreen notification [b]. Although remote activation is blocked, this enables users to see if the devices are active.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are the collaborative computing devices configured to provide indication to users when in use (e.g., a light, text notification, or audio tone) or are users alerted before entering a space (e.g., written notice posted outside the space) where they are in use [b]?</li>
<li>Are the collaborative computing devices configured to prevent them from being turned on without user interaction or consent [c]?</li>
</ul>

', NULL, NULL, 37, 14, 19, NULL, NULL, 1216, NULL, N'Collaborative Device Control', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5384, N'SC.L2-3.13.13', N'Control and monitor the use of mobile code.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>use of mobile code is controlled; and</li>
<li>use of mobile code is monitored.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing mobile code; mobile code usage restrictions, mobile code implementation policy and procedures; system audit logs and records; system security plan; list of acceptable mobile code and mobile code technologies; list of unacceptable mobile code and mobile technologies; authorization records; system monitoring records; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; personnel with responsibilities for managing mobile code].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational process for controlling, authorizing, monitoring, and restricting mobile code; mechanisms supporting or implementing the management of mobile code; mechanisms supporting or implementing the monitoring of mobile code].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Mobile code technologies include Java, JavaScript, ActiveX, Postscript, PDF, Flash animations, and VBScript. Decisions regarding the use of mobile code in organizational systems are based on the potential for the code to cause damage to the systems if used maliciously. Usage restrictions and implementation guidance apply to the selection and use of mobile code installed on servers and mobile code downloaded and executed on individual workstations, notebook computers, and devices (e.g., smart phones). Mobile code policy and procedures address controlling or preventing the development, acquisition, or introduction of unacceptable mobile code in systems, including requiring mobile code to be digitally signed by a trusted source.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Ensure mobile code is authorized to execute in company systems only in accordance with policy and technical configuration, and that unauthorized mobile code is not. Monitor the use of mobile code through boundary devices (e.g., firewalls), audit logs, or security utilities (e.g., mobile device management, advanced endpoint protection) and implement remediation activities as needed.</p>
<p>The first intent of this requirement is to ensure the limits of mobile code usage and usage restrictions are documented and enforced. This includes documenting all authorizations for the use of mobile code and ensuring it is not used in other ways. Usage restrictions and implementation guidance apply to the selection and use of mobile code installed on servers and mobile code downloaded and executed on individual workstations and devices to include all mobile devices and smart phones.</p>
<p>The second intent is to monitor the use of mobile code and implement remediation steps if its use does not align with policy.</p>
<div class="sub-header-2">Example</div>
<p>Your company has decided to prohibit the use of Flash, ActiveX, and Java plug-ins for web browsers on all of its computers [a]. To enforce this policy you configure the computer baseline configuration to disable and deny the execution of mobile code [a]. You implement an exception process to re-enable mobile code execution only for those users with a legitimate business need [a].</p>
<p>One department complains that a web application they need to perform their job no longer works. You meet with them and verify that the web application uses ActiveX in the browser. You submit a change request with the Change Review Board. Once the change is approved, you reconfigure the department’s computers to allow the running of ActiveX in the browser. You also configure the company firewall to alert you if ActiveX is used by any website but the allowed one [b]. You set a reminder for yourself to check in with the department at the end of the year to verify they still need that web application.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are there defined limits of mobile code usage and established usage restrictions, which specifically authorize use of mobile code (e.g., Java, JavaScript, ActiveX, PDF, Flash, Shockwave, Postscript, VBScript) within the information system [a]?</li>
<li>Is the use of mobile code documented, monitored, and managed (e.g., Java, JavaScript, ActiveX, PDF, Flash, Shockwave, Postscript, VBScript) [b]?</li>
</ul>

', NULL, NULL, 37, 15, 19, NULL, NULL, 1216, NULL, N'Mobile Code', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5385, N'SC.L2-3.13.14', N'Control and monitor the use of Voice over Internet Protocol (VoIP) technologies.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>use of Voice over Internet Protocol (VoIP) technologies is controlled; and</li>
<li>use of Voice over Internet Protocol (VoIP) technologies is monitored.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing VoIP; VoIP usage restrictions; VoIP implementation guidance; system security plan; system design documentation; system audit logs and records; system configuration settings and associated documentation; system monitoring records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; personnel with responsibilities for managing VoIP].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational process for authorizing, monitoring, and controlling VoIP; mechanisms supporting or implementing authorizing, monitoring, and controlling VoIP].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>VoIP has different requirements, features, functionality, availability, and service limitations when compared with the Plain Old Telephone Service (POTS) (i.e., the standard telephone service). In contrast, other telephone services are based on high-speed, digital communications lines, such as Integrated Services Digital Network (ISDN) and Fiber Distributed Data Interface (FDDI). The main distinctions between POTS and non-POTS services are speed and bandwidth. To address the threats associated with VoIP, usage restrictions and implementation guidelines are based on the potential for the VoIP technology to cause damage to the system if it is used maliciously. Threats to VoIP are similar to those inherent with any Internet-based application.</p>
<p>NIST SP 800-58 provides guidance on Voice Over IP Systems.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Controlling VoIP technologies starts with establishing guidelines and enforcing the appropriate usage that is described in organizational policies. Monitoring should include the users’ activity for anything other than what is permitted and authorized and detection of insecure or unauthorized use of the VoIP technology. Security concerns for VoIP include eavesdropping on calls and using ID spoofing to impersonate trusted individuals.</p>
<p>Selecting a solution that can encrypt VoIP traffic is helpful in maintaining the confidentiality and integrity of the voice data.</p>
<div class="sub-header-2">Example</div>
<p>You are a system administrator responsible for the VoIP system. You configure VoIP for new users after being notified that they have signed the Acceptable Use Policy for VoIP technology [a]. You verify that the VoIP solution is configured to use encryption and have enabled requirements for passwords on voice mailboxes and on phone extension management. You require phone system administrators to log in using multifactor authentication when managing the system [a]. You add the VoIP software to the list of applications that are patched monthly as needed [a,b]. Finally, you configure the VoIP system to send logs to your log aggregator so that they can be correlated with those from other systems and examined for signs of suspicious activity [b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are VoIP technologies (e.g., approved and managed products or solutions) that may or may not be used in the system defined [a]?</li>
<li>Is monitoring for unapproved VoIP technologies or unapproved use of the allowed VoIP solutions employed [b]?</li>
</ul>

', NULL, NULL, 37, 16, 19, NULL, NULL, 1216, NULL, N'Voice Over Internet Protocol', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5386, N'SC.L2-3.13.15', N'Protect the authenticity of communications sessions.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the authenticity of communications sessions is protected.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing session authenticity; system security plan; system design documentation; system configuration settings and associated documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting or implementing session authenticity]</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Authenticity protection includes protecting against man-in-the-middle attacks, session hijacking, and the insertion of false information into communications sessions. This requirement addresses communications protection at the session versus packet level (e.g., sessions in service-oriented architectures providing web-based services) and establishes grounds for confidence at both ends of communications sessions in ongoing identities of other parties and in the validity of information transmitted.</p>
<p>NIST SP 800-77, NIST SP 800-95, and NIST SP 800-113 provide guidance on secure communications sessions.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>The intent of this requirement is to ensure a trust relationship is established between both ends of a communication session. Each end can be assured that the other end is who it is supposed to be. This is often implemented using a mutual authentication handshake when the session is established, especially between devices. Session authenticity is usually provided by a security protocol enforced for a communication session. Choosing and enforcing a protocol will provide authenticity throughout a communications session.</p>
<div class="sub-header-2">Example</div>
<p>You are a system administrator responsible for ensuring that the two-factor user authentication mechanism for the servers is configured correctly. You purchase and maintain the digital certificate and replace it with a new one before the old one expires. You ensure the TLS configuration settings on the web servers, VPN solution, and other components that use TLS are correct, using secure settings that address risks against attacks on the encrypted sessions [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is a communications protocol used that ensures the sending and receiving parties do not change during a communications session [a]?</li>
<li>Are controls in place to validate the identities and information transmitted to protect against man-in-the-middle attacks, session hijacking, and insertion of false information into communications sessions [a]?</li>
</ul>

', NULL, NULL, 37, 17, 19, NULL, NULL, 1216, NULL, N'Communications Authenticity', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5387, N'SC.L2-3.13.16', N'Protect the confidentiality of CUI at rest.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the confidentiality of CUI at rest is protected.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing protection of information at rest; system security plan; system design documentation; list of information at rest requiring confidentiality protections; system configuration settings and associated documentation; cryptographic mechanisms and associated configuration documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; system developer].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting or implementing confidentiality protections for information at rest].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Information at rest refers to the state of information when it is not in process or in transit and is located on storage devices as specific components of systems. The focus of protection at rest is not on the type of storage device or the frequency of access but rather the state of the information. Organizations can use different mechanisms to achieve confidentiality protections, including the use of cryptographic mechanisms and file share scanning. Organizations may also use other controls including secure off-line storage in lieu of online storage when adequate protection of information at rest cannot otherwise be achieved or continuous monitoring to identify malicious code at rest.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>CUI at rest means information that is not moving through the network; typically this means data currently stored on hard drives, media, and mobile devices. Implement the necessary security controls to protect the confidentiality of CUI at rest. Although an approved encryption method protects data stored at rest, there are other technical and physical solutions. The methods chosen should depend on the environment and business needs.</p>
<p>Implementing encryption for CUI is one approach to this requirement, but it is not mandatory. Physical security is often employed to restrict access to CUI, particularly when it resides on servers within a company’s offices. Other approaches for protecting CUI include system-related protections such as configurations and rule sets for firewalls, gateways, intrusion detection/prevention systems, filtering routers, and authenticator content that eliminate attempts at exfiltration. You may also employ other security requirements including secure off-line storage.</p>
<p>Because the use of cryptography in this requirement is to protect the confidentiality of CUI, the cryptography used must meet the criteria specified in requirement SC.L2-3.13.11.</p>
<p>This requirement, SC.L2-3.13.16, specifies confidentially be provided for CUI at rest and complements MP.L2-3.8.9, which specifies confidentially of CUI at backup storage locations. This requirement, SC.L2-3.13.16, also leverages SC.L2-3.13.11, which specifies that the algorithms used must be FIPS-validated cryptography.</p>
<div class="sub-header-2">Example 1</div>
<p>Your company has a policy stating CUI must be protected at rest and you work to enforce that policy. You research Full Disk Encryption (FDE) products that meet the FIPS encryption requirement. After testing, you deploy the encryption to all computers to protect CUI at rest [a].</p>
<div class="sub-header-2">Example 2</div>
<p>You have used encryption to protect the CUI on most of the computers at your company, but you have some devices that do not support encryption. You create a policy requiring these devices to be signed out when needed, stay in possession of the signer when checked out, and to be signed back in and locked up in a secured closet when the user is done with the device [a]. At the end of the day each Friday, you audit the sign-out sheet and make sure all devices are returned to the closet.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is the confidentiality of CUI at rest protected using encryption of storage devices and/or appropriate physical methods [a]?</li>
</ul>

', NULL, NULL, 37, 18, 19, NULL, NULL, 1216, NULL, N'Data At Rest', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5388, N'SI.L2-3.14.1', N'Identify, report, and correct system flaws in a timely manner.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the time within which to identify system flaws is specified;</li>
<li>system flaws are identified within the specified time frame;</li>
<li>the time within which to report system flaws is specified;</li>
<li>system flaws are reported within the specified time frame;</li>
<li>the time within which to correct system flaws is specified; and</li>
<li>system flaws are corrected within the specified time frame.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and information integrity policy; procedures addressing flaw remediation; procedures addressing configuration management; system security plan; list of flaws and vulnerabilities potentially affecting the system; list of recent security flaw remediation actions performed on the system (e.g., list of installed patches, service packs, hot fixes, and other software updates to correct system flaws); test results from the installation of software and firmware updates to correct system flaws; installation/change control records for security-relevant software and firmware updates; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; personnel installing, configuring, and maintaining the system; personnel with responsibility for flaw remediation; personnel with configuration management responsibility].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for identifying, reporting, and correcting system flaws; organizational process for installing software and firmware updates; mechanisms supporting or implementing reporting, and correcting system flaws; mechanisms supporting or implementing testing software and firmware updates].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations identify systems that are affected by announced software and firmware flaws including potential vulnerabilities resulting from those flaws and report this information to designated personnel with information security responsibilities. Security-relevant updates include patches, service packs, hot fixes, and anti-virus signatures. Organizations address flaws discovered during security assessments, continuous monitoring, incident response activities, and system error handling. Organizations can take advantage of available resources such as the Common Weakness Enumeration (CWE) database or Common Vulnerabilities and Exposures (CVE) database in remediating flaws discovered in organizational systems.</p>
<p>Organization-defined time periods for updating security-relevant software and firmware may vary based on a variety of factors including the criticality of the update (i.e., severity of the vulnerability related to the discovered flaw). Some types of flaw remediation may require more testing than other types of remediation. NIST SP 800-40 provides guidance on patch management technologies.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>All software and firmware have potential flaws. Many vendors work to remedy those flaws by releasing vulnerability information and updates to their software and firmware. OSAs must have a process to review relevant vendor notifications and updates about problems or weaknesses. After reviewing the information, the OSA must implement a patch management process that allows for software and firmware flaws to be fixed without adversely affecting the system functionality. OSAs must define the time frames within which flaws are identified, reported, and corrected for all systems. OSAs should consider purchasing support from their vendors to ensure timely access to updates.</p>
<div class="sub-header-2">Example</div>
<p>You know that software vendors typically release patches, service packs, hot fixes, etc. and want to make sure your software is up to date. You develop a policy that requires checking vendor websites for flaw notifications every week [a]. The policy further requires that those flaws be assessed for severity and patched on end-user computers once each week and servers once each month [c,e]. Consistent with that policy, you configure the system to check for updates weekly or daily depending on the criticality of the software [b,e]. Your team reviews available updates and implements the applicable ones according to the defined schedule [f].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is the time frame (e.g., a set number of days) within which system flaw identification activities (e.g., vulnerability scans, configuration scans, manual review) must be performed defined and documented [a]?</li>
<li>Are system flaws (e.g., vulnerabilities, misconfigurations) identified in accordance with the specified time frame [b]?</li>
<li>Is the time frame (e.g., a set number of days dependent on the assessed severity of a flaw) within which system flaws must be corrected defined and documented [e]?</li>
<li>Are system flaws (e.g., applied security patches, made configuration changes, or implemented workarounds or mitigations) corrected in accordance with the specified time frame [f]?</li>
</ul>

', NULL, NULL, 37, 5, 19, NULL, NULL, 1217, NULL, N'Flaw Remediation', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5389, N'SI.L2-3.14.2', N'Provide protection from malicious code at designated locations within organizational systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>designated locations for malicious code protection are identified; and</li>
<li>protection from malicious code at designated locations is provided.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and information integrity policy; configuration management policy and procedures; procedures addressing malicious code protection; records of malicious code protection updates; malicious code protection mechanisms; system security plan; system configuration settings and associated documentation; record of actions initiated by malicious code protection mechanisms in response to malicious code detection; scan results from malicious code protection mechanisms; system design documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; personnel installing, configuring, and maintaining the system; personnel with responsibility for malicious code protection; personnel with configuration management responsibility].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for employing, updating, and configuring malicious code protection mechanisms; organizational process for addressing false positives and resulting potential impact; mechanisms supporting or implementing employing, updating, and configuring malicious code protection mechanisms; mechanisms supporting or implementing malicious code scanning and subsequent actions].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Designated locations include system entry and exit points which may include firewalls, remote access servers, workstations, electronic mail servers, web servers, proxy servers, notebook computers, and mobile devices. Malicious code includes viruses, worms, Trojan horses, and spyware. Malicious code can be encoded in various formats (e.g., UUENCODE,</p>
<p>Unicode), contained within compressed or hidden files, or hidden in files using techniques such as steganography. Malicious code can be inserted into systems in a variety of ways including web accesses, electronic mail, electronic mail attachments, and portable storage devices. Malicious code insertions occur through the exploitation of system vulnerabilities.</p>
<p>Malicious code protection mechanisms include anti-virus signature definitions and reputation-based technologies. A variety of technologies and methods exist to limit or eliminate the effects of malicious code. Pervasive configuration management and comprehensive software integrity controls may be effective in preventing execution of unauthorized code. In addition to commercial off-the-shelf software, malicious code may also be present in custom-built software. This could include logic bombs, back doors, and other types of cyber-attacks that could affect organizational missions/business functions. Traditional malicious code protection mechanisms cannot always detect such code. In these situations, organizations rely instead on other safeguards including secure coding practices, configuration management and control, trusted procurement processes, and monitoring technologies to help ensure that software does not perform functions other than the functions intended. NIST SP 800-83 provides guidance on malware incident prevention.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>A designated location may be a network device such as a firewall or an end user’s computer.</p>
<p>Malicious code, which can be delivered by a range of means (e.g., email, removable media, or websites), includes the following:</p>
<ul>
<li>virus – program designed to damage, steal information, change data, send email, show messages, or any combination of these things;</li>
<li>spyware – program designed to gather information about a person’s activity in secret when they click on a link, usually installed without the person knowing ;</li>
<li>trojan horse – type of malware made to look like legitimate software and used by cyber criminals to get access to a company’s systems; and</li>
<li>ransomware – type of malware that threatens to publish the victim’s data or perpetually block access to it unless a ransom is paid.</li>
</ul>
<p>Use anti-malware tools to stop or lessen the impact of malicious code.</p>
<div class="sub-header-2">Example</div>
<p>You are buying a new computer and want to protect your company’s information from viruses, spyware, etc. You buy and install anti-malware software [a,b].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are system components (e.g., workstations, servers, email gateways, mobile devices) for which malicious code protection must be provided identified and documented [a]?</li>
</ul>

', NULL, NULL, 37, 6, 19, NULL, NULL, 1217, NULL, N'Malicious Code Protection', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5390, N'SI.L2-3.14.3', N'Monitor system security alerts and advisories and take action in response.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>response actions to system security alerts and advisories are identified;</li>
<li>system security alerts and advisories are monitored; and</li>
<li>actions in response to system security alerts and advisories are taken.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and information integrity policy; procedures addressing security alerts, advisories, and directives; system security plan; records of security alerts and advisories; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Personnel with security alert and advisory responsibilities; personnel implementing, operating, maintaining, and using the system; personnel, organizational elements, and external organizations to whom alerts, advisories, and directives are to be disseminated; system or network administrators; personnel with information security responsibilities].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for defining, receiving, generating, disseminating, and complying with security alerts, advisories, and directives; mechanisms supporting or implementing definition, receipt, generation, and dissemination of security alerts, advisories, and directives; mechanisms supporting or implementing security directives].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>There are many publicly available sources of system security alerts and advisories. The United States Computer Emergency Readiness Team (US-CERT) generates security alerts and advisories to maintain situational awareness across the federal government and in nonfederal organizations. Software vendors, subscription services, and relevant industry information sharing and analysis centers (ISACs) may also provide security alerts and advisories. Examples of response actions include notifying relevant external organizations, for example, external mission/business partners, supply chain partners, external service providers, and peer or supporting organizations.</p>
<p>NIST SP 800-161 provides guidance on supply chain risk management.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Solicit and receive security alerts, advisories, and directives from reputable external organizations. Identify sources relevant to the industry and technology used by your company. Methods to receive alerts and advisories may include:</p>
<ul>
<li>signing up for email distributions;</li>
<li>subscribing to RSS feeds; and</li>
<li>attending meetings.</li>
</ul>
<p>Review alerts and advisories for applicability as they are received. The frequency of the reviews should be based on the frequency of the alerts and advisories to ensure you have the most up-to-date information.</p>
<p>External alerts and advisories may prompt you to generate internal security alerts, advisories, or directives, and share these with all personnel with a need-to-know. The individuals should assess the risk related to a given alert and act to respond as appropriate. Sometimes it may require a configuration update. Other times, the information may also require adjusting system architecture in order to thwart a threat described in an advisory.</p>
<div class="sub-header-2">Example</div>
<p>You monitor security advisories each week. You review the alert emails and online subscription service alerts to determine which ones apply [b]. You create a list of the applicable alerts and research what steps you need to take to address them. Next, you generate a plan that you review with your change management group so that the work can be scheduled [c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are the responses to system security alerts and advisories identified in relation to the assessed severity of potential flaws (e.g., communicating with responsible personnel, initiating vulnerability scans, initiating system flaw remediation activities) [a]?</li>
<li>Are system security alerts and advisories addressed (e.g., assessing potential severity or likelihood, communicating with responsible personnel, initiating vulnerability scans, initiating system flaw remediation activities) [a,c]?</li>
</ul>

', NULL, NULL, 37, 7, 19, NULL, NULL, 1217, NULL, N'Security Alerts & Advisories', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5391, N'SI.L2-3.14.4', N'Update malicious code protection mechanisms when new releases are available.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>malicious code protection mechanisms are updated when new releases are available.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and information integrity policy; configuration management policy and procedures; procedures addressing malicious code protection; malicious code protection mechanisms; records of malicious code protection updates; system security plan; system design documentation; system configuration settings and associated documentation; scan results from malicious code protection mechanisms; record of actions initiated by malicious code protection mechanisms in response to malicious code detection; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; personnel installing, configuring, and maintaining the system; personnel with responsibility for malicious code protection; personnel with configuration management responsibility].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for employing, updating, and configuring malicious code protection mechanisms; organizational process for addressing false positives and resulting potential impact; mechanisms supporting or implementing malicious code protection mechanisms (including updates and configurations); mechanisms supporting or implementing malicious code scanning and subsequent actions].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Malicious code protection mechanisms include anti-virus signature definitions and reputation-based technologies. A variety of technologies and methods exist to limit or eliminate the effects of malicious code. Pervasive configuration management and comprehensive software integrity controls may be effective in preventing execution of unauthorized code. In addition to commercial off-the-shelf software, malicious code may also be present in custom-built software. This could include logic bombs, back doors, and other types of cyber-attacks that could affect organizational missions/business functions.</p>
<p>Traditional malicious code protection mechanisms cannot always detect such code. In these situations, organizations rely instead on other safeguards including secure coding practices, configuration management and control, trusted procurement processes, and monitoring technologies to help ensure that software does not perform functions other than the functions intended.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Malware changes on an hourly or daily basis, and it is important to update detection and protection mechanisms frequently to maintain the effectiveness of the protection.</p>
<div class="sub-header-2">Example</div>
<p>You have installed anti-malware software to protect a computer from malicious code. Knowing that malware evolves rapidly, you configure the software to automatically check for malware definition updates every day and update as needed [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is there a defined frequency by which malicious code protection mechanisms must be updated (e.g., frequency of automatic updates or manual processes) [a]?</li>
</ul>

', NULL, NULL, 37, 8, 19, NULL, NULL, 1217, NULL, N'Update Malicious Code Protection', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5392, N'SI.L2-3.14.5', N'Perform periodic scans of organizational systems and real-time scans of files from external sources as files are downloaded, opened, or executed.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the frequency for malicious code scans is defined;</li>
<li>malicious code scans are performed with the defined frequency; and</li>
<li>real-time malicious code scans of files from external sources as files are downloaded, opened, or executed are performed.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and information integrity policy; configuration management policy and procedures; procedures addressing malicious code protection; malicious code protection mechanisms; records of malicious code protection updates; system security plan; system design documentation; system configuration settings and associated documentation; scan results from malicious code protection mechanisms; record of actions initiated by malicious code protection mechanisms in response to malicious code detection; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; personnel installing, configuring, and maintaining the system; personnel with responsibility for malicious code protection; personnel with configuration management responsibility].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for employing, updating, and configuring malicious code protection mechanisms; organizational process for addressing false positives and resulting potential impact; mechanisms supporting or implementing malicious code protection mechanisms (including updates and configurations); mechanisms supporting or implementing malicious code scanning and subsequent actions].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Periodic scans of organizational systems and real-time scans of files from external sources can detect malicious code. Malicious code can be encoded in various formats (e.g.,</p>
<p>UUENCODE, Unicode), contained within compressed or hidden files, or hidden in files using techniques such as steganography. Malicious code can be inserted into systems in a variety of ways including web accesses, electronic mail, electronic mail attachments, and portable storage devices. Malicious code insertions occur through the exploitation of system vulnerabilities.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Use anti-malware software to scan for and identify viruses in your computer systems and determine how often scans are conducted. Real-time scans look at the system whenever new files are downloaded, opened, and saved. Periodic scans check previously saved files against updated malware information.</p>
<div class="sub-header-2">Example</div>
<p>You work with your company’s email provider to enable enhanced protections that will scan all attachments to identify and quarantine those that may be harmful prior to a user opening them [c]. In addition, you configure antivirus software on each computer to scan for malicious code every day [a,b]. The software also scans files that are downloaded or copied from removable media such as USB drives. It quarantines any suspicious files and notifies the security team [c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are files from media (e.g., USB drives, CD-ROM) included in the definition of external sources and are they being scanned [c]?</li>
</ul>

', NULL, NULL, 37, 9, 19, NULL, NULL, 1217, NULL, N'System & File Scanning', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5393, N'SI.L2-3.14.6', N'Monitor organizational systems, including inbound and outbound communications traffic, to detect attacks and indicators of potential attacks.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>the system is monitored to detect attacks and indicators of potential attacks;</li>
<li>inbound communications traffic is monitored to detect attacks and indicators of potential attacks; and</li>
<li>outbound communications traffic is monitored to detect attacks and indicators of potential attacks.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and information integrity policy; procedures addressing system monitoring tools and techniques; continuous monitoring strategy; system and information integrity policy; procedures addressing system monitoring tools and techniques; facility diagram or layout; system security plan; system monitoring tools and techniques documentation; system design documentation; locations within system where monitoring devices are deployed; system protocols; system configuration settings and associated documentation; system audit logs and records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; personnel installing, configuring, and maintaining the system; personnel with responsibility monitoring the system; personnel with responsibility for the intrusion detection system].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for system monitoring; mechanisms supporting or implementing intrusion detection capability and system monitoring; mechanisms supporting or implementing system monitoring capability; organizational processes for intrusion detection and system monitoring; mechanisms supporting or implementing the monitoring of inbound and outbound communications traffic].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>System monitoring includes external and internal monitoring. External monitoring includes the observation of events occurring at the system boundary (i.e., part of perimeter defense and boundary protection). Internal monitoring includes the observation of events occurring within the system. Organizations can monitor systems, for example, by observing audit record activities in real time or by observing other system aspects such as access patterns, characteristics of access, and other actions. The monitoring objectives may guide determination of the events. System monitoring capability is achieved through a variety of tools and techniques (e.g., intrusion detection systems, intrusion prevention systems, malicious code protection software, scanning tools, audit record monitoring software, network monitoring software). Strategic locations for monitoring devices include selected perimeter locations and near server farms supporting critical applications, with such devices being employed at managed system interfaces. The granularity of monitoring information collected is based on organizational monitoring objectives and the capability of systems to support such objectives.</p>
<p>System monitoring is an integral part of continuous monitoring and incident response programs. Output from system monitoring serves as input to continuous monitoring and incident response programs. A network connection is any connection with a device that communicates through a network (e.g., local area network, Internet). A remote connection is any connection with a device communicating through an external network (e.g., the Internet). Local, network, and remote connections can be either wired or wireless.</p>
<p>Unusual or unauthorized activities or conditions related to inbound/outbound communications traffic include internal traffic that indicates the presence of malicious code in systems or propagating among system components, the unauthorized exporting of information, or signaling to external systems. Evidence of malicious code is used to identify potentially compromised systems or system components. System monitoring requirements, including the need for specific types of system monitoring, may be referenced in other requirements.</p>
<p>NIST SP 800-94 provides guidance on intrusion detection and prevention systems.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Think of indicators of attack as a set of footprints an adversary leaves during an attack. Indicators of attack provide information on the steps the adversary followed and its intent. Indicators of attacks on organizational systems may include:</p>
<ul>
<li>internal traffic that indicates the presence of malicious code;</li>
<li>anomalous activity detected during non-business hours;</li>
<li>unauthorized data leaving the organization; and</li>
<li>communicating to external information systems.</li>
</ul>
<p>To detect attacks and indicators of attacks, deploy monitoring devices or agents. Place these sensors at strategic points within the systems and networks to collect essential information. Strategic points include internal and external system boundaries. Monitor both inbound traffic and outbound traffic as well as actions on hosts.</p>
<p>This requirement, SI.L2-3.14.6, provides details for the communications of organizational systems. SI.L2-3.14.6 supports the requirement AU.L2-3.3.1, which involves creating and retaining records for monitoring, analysis, and investigations.</p>
<div class="sub-header-2">Example</div>
<p>It is your job to look for known indicators of attack or anomalous activity within your systems and communications traffic [a,b,c]. Because these indicators can show up in a variety of places on your network, you have created a checklist of places to check each week. These include the office firewall logs, the audit logs of the file server where CUI is stored, and the connection log for your VPN gateway [b].</p>
<p>You conduct additional reviews when you find an indicator, or something that does not perform as it should [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are details provided for the methodology of determining attacks and indicators of attack [a]?</li>
<li>Are monitoring devices deployed within the information system to collect information that may indicate an attack [a]?</li>
<li>Are communications traffic flows understood and is there a deployed capability to review that traffic [b,c]?</li>
</ul>

', NULL, NULL, 37, 10, 19, NULL, NULL, 1217, NULL, N'Monitor Communications For Attacks', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5394, N'SI.L2-3.14.7', N'Identify unauthorized use of organizational systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>authorized use of the system is defined; and</li>
<li>unauthorized use of the system is identified.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Continuous monitoring strategy; system and information integrity policy; procedures addressing system monitoring tools and techniques; facility diagram/layout; system security plan; system design documentation; system monitoring tools and techniques documentation; locations within system where monitoring devices are deployed; system configuration settings and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System or network administrators; personnel with information security responsibilities; personnel installing, configuring, and maintaining the system; personnel with responsibility for monitoring the system].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for system monitoring; mechanisms supporting or implementing system monitoring capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>System monitoring includes external and internal monitoring. System monitoring can detect unauthorized use of organizational systems. System monitoring is an integral part of continuous monitoring and incident response programs. Monitoring is achieved through a variety of tools and techniques (e.g., intrusion detection systems, intrusion prevention systems, malicious code protection software, scanning tools, audit record monitoring software, network monitoring software). Output from system monitoring serves as input to continuous monitoring and incident response programs.</p>
<p>Unusual/unauthorized activities or conditions related to inbound and outbound communications traffic include internal traffic that indicates the presence of malicious code in systems or propagating among system components, the unauthorized exporting of information, or signaling to external systems. Evidence of malicious code is used to identify potentially compromised systems or system components. System monitoring requirements, including the need for specific types of system monitoring, may be referenced in other requirements.</p>
<p>NIST SP 800-94 provides guidance on intrusion detection and prevention systems.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Define authorized use of your systems. Create an acceptable use policy to establish the baseline for how users access devices, internal network services, and the internet. Define authorized use by specific roles such as: user, administrator, and technician. After authorized use is defined, identify unauthorized use of systems.</p>
<p>Monitor systems by observing audit activities from the system logs. This can be accomplished in real time using automated solutions or by manual means. To identify unauthorized use, leverage existing tools and techniques, such as:</p>
<ul>
<li>intrusion detection systems;</li>
<li>intrusion prevention systems;</li>
<li>malicious code protection software;</li>
<li>scanning tools;</li>
<li>audit record monitoring software; and</li>
<li>network monitoring software.</li>
</ul>
<p>This requirement, SI.L2-3.14.7, which deals with identifying unauthorized use of organizational systems, is related to requirements: AC.L2-3.1.1, AU.L2-3.3.1, IA.L2-3.5.1, and IA.L2-3.5.2. All of these requirements help create the building blocks that support SI.L2-3.14.7.</p>
<div class="sub-header-2">Example 1</div>
<p>You are in charge of IT operations. You need to ensure that everyone using an organizational system is authorized to do so and conforms to the written authorized use policy. To do this, you deploy an application that monitors user activity and records the information for later analysis. You review the data from this application for signs of activity that does not conform to the acceptable use policy [a,b].</p>
<div class="sub-header-2">Example 2</div>
<p>You are alerted through your Intrusion Detection System (IDS) that one of your users is connecting to a server that is from a high-risk domain (based on your commercial domain reputation service). You investigate and determine that it’s not the user, but instead an unauthorized connection attempt [b]. You add the domain to your list of blocked domains to prevent connections in the future.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Is authorized use of systems defined (e.g., data types permitted for storage or processing, personnel authorized to access, times or days of permitted use, permitted software) [a]?</li>
<li>Is unauthorized use of systems defined (e.g., not authorized to use systems for bitcoin mining, not authorized for pornographic content, not authorized to access gambling games/content) [b]?</li>
</ul>

', NULL, NULL, 37, 11, 19, NULL, NULL, 1217, NULL, N'Identify Unauthorized Use', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5395, N'AC.L3-3.1.2E', N'Restrict access to systems and system components to only those information resources that are owned, provisioned, or issued by the organization.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>Information resources that are owned, provisioned, or issued by the organization are identified; and</li>
<li>Access to systems and system components is restricted to only those information resources that are owned, provisioned, or issued by the organization.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; procedures addressing the use of external systems; list of information resources owned, provisioned, or issued by the organization; security plan; system design documentation; system configuration settings and associated documentation; system connection or processing agreements; system audit records; account management documents; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for restricting or prohibiting the use of non-organizationally owned systems, system components, or devices; system and network administrators; organizational personnel responsible for system security].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing restrictions on the use of non-organizationally owned systems, components, or devices].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Information resources that are not owned, provisioned, or issued by the organization include systems or system components owned by other organizations and personally owned devices. Non-organizational information resources present significant risks to the organization and complicate the ability to employ a “comply-to-connect” policy or implement component or device attestation techniques to ensure the integrity of the organizational system.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Implementing this requirement ensures that an organization has control over the systems that can connect to organizational assets. This control will allow more effective and efficient application of security policy. The terms “has control over” provides policy for systems that are not owned outright by the organization. Control includes policies, regulations or standards that are enforced on the resource accessing contractor systems. Control may also be exercised through contracts or agreements with the external party. Provisioned includes setting configuration, whether through direct technical means or by policy or agreement. For purposes of this requirement, GFE can be considered provisioned by the OSA.</p>
<div class="sub-header-2">Example 1</div>
<p>You are the chief network architect for your company. Company policy states that all company-owned assets must be separated from all non-company-owned (i.e., guest or employee) assets. You decide the best way forward is to modify the corporate wired and wireless networks to only allow company-owned devices to connect [b]. All other devices are connected to a second (untrusted) network that non-corporate devices may use to access the internet. The two environments are physically separated and are not allowed to be connected. You also decide to limit the virtual private network (VPN) services of the company to devices owned by the corporation by installing certificate keys and have the VPN validate the configuration of connecting devices before they are allowed in [b].</p>
<div class="sub-header-2">Example 2</div>
<p>You are a small company that uses an External Service Provider (ESP) to provide your audit logging. Access between the ESP and the organization is controlled by the agreement between the organization and the ESP. That agreement will include the policies, standards, and configuration for the required access. Technical controls should be documented and in place which limit the ESP’s access to the minimum required to perform the logging service.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Can the organization demonstrate a non-company-owned device failing to access information resources owned by the company [b]?</li>
<li>How is this requirement met for organizational devices that are specialized assets (GFE, restricted information systems) [a,b]?</li>
<li>Does the company allow employees to charge personal cell phones on organizational systems [b]?</li>
</ul>

', NULL, NULL, 38, 27, 19, NULL, NULL, 1204, NULL, N'Organizationally Controlled Assets', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5396, N'AC.L3-3.1.3E', N'Employ secure information transfer solutions to control information flows between security domains on connected systems.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>[ODP1] Secure information transfer solutions are defined;</li>
<li>Information flows between security domains on connected systems are identified; and</li>
<li>Secure information transfer solutions are employed to control information flows between security domains on connected systems.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; information flow control policies; procedures addressing information flow enforcement; system design documentation; security plan; system configuration settings and associated documentation; system audit records; system baseline configuration; list of information flow authorizations; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: System and network administrators; organizational personnel responsible for information security; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing information flow enforcement policy; mechanisms implementing secure information transfer solutions].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations employ information flow control policies and enforcement mechanisms to control the flow of information between designated sources and destinations within systems and between connected systems. Flow control is based on the characteristics of the information and/or the information path. Enforcement occurs, for example, in boundary protection devices that employ rule sets or establish configuration settings that restrict system services, provide a packet-filtering capability based on header information, or provide a message-filtering capability based on message content. Organizations also consider the trustworthiness of filtering and inspection mechanisms (i.e., hardware, firmware, and software components) that are critical to information flow enforcement.</p>
<p>Transferring information between systems in different security domains with different security policies introduces the risk that the transfers violate one or more domain security</p>
<p>policies. In such situations, information owners or information stewards provide guidance at designated policy enforcement points between connected systems. Organizations mandate specific architectural solutions when required to enforce logical or physical separation between systems in different security domains. Enforcement includes prohibiting information transfers between connected systems, employing hardware mechanisms to enforce one-way information flows, verifying write permissions before accepting information from another security domain or connected system, and implementing trustworthy regrading mechanisms to reassign security attributes and labels.</p>
<p>Secure information transfer solutions often include one or more of the following properties: use of cross-domain solutions when traversing security domains, mutual authentication of the sender and recipient (using hardware-based cryptography), encryption of data in transit and at rest, isolation from other domains, and logging of information transfers (e.g., title of file, file size, cryptographic hash of file, sender, recipient, transfer time and Internet Protocol [IP] address, receipt time, and IP address).</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>The organization implementing this requirement must decide on the secure information transfer solutions they will use. The solutions must be configured to have strong protection mechanisms for information flow between security domains. Secure information transfer solutions control information flow between a Level 3 enclave and other CMMC or non-CMMC enclaves. If CUI requiring Level 3 protection resides in one area of the environment or within a given enclave outside of the normal working environment, protection to prevent unauthorized personnel from accessing, disseminating, and sharing the protected information is required. Physical and virtual methods can be employed to implement secure information transfer solutions.</p>
<div class="sub-header-2">Example</div>
<p>You are the administrator for an enterprise that stores and processes CUI requiring Level 3 protection. The files containing CUI information are tagged by the company as CUI. To ensure secure information transfer, you use an intermediary device to check the transfer of any CUI files. The device sits at the boundary of the CUI enclave, is aware of all other CUI domains in the enterprise, and has the ability to examine the metadata in the encrypted payload. The tool checks all outbound communications paths. It first checks the metadata for all data being transferred. If that data is identified as CUI, the device checks the destination to see if the transfer is to another, sufficiently certified CUI domain. If the destination is not a sufficient CUI domain, the tool blocks the communication path and does not allow the transfer to take place. If the destination is a sufficient CUI domain, the transfer is allowed. The intermediary device logs all blocks.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Has the organization defined the secure information transfer solutions it is using [b]?</li>
<li>Has the organization defined domains, boundaries, and flows between those domains that need to be controlled [a]?</li>
<li>Has the organization defined attributes to be associated with the CUI, and both source and destination objects [b]?</li>
<li>Has the organization defined metadata or some other tagging mechanism to be used as a means of enforcing CUI flow control [b]?</li>
<li>Has the organization defined filters to be used as a basis for enforcing flow control decisions [b]?</li>
<li>Has the organization identified CUI flows for which flow control decisions are to be applied and enforced [a,b]?</li>
</ul>

', NULL, NULL, 38, 28, 19, NULL, NULL, 1204, NULL, N'Secured Information Transfer', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5397, N'AT.L3-3.2.1E', N'Provide awareness training upon initial hire, following a significant cyber event, and at least annually, focused on recognizing and responding to threats from social engineering, advanced persistent threat actors, breaches, and suspicious behaviors; update the training at least annually or when there are significant changes to the threat.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>Threats from social engineering, advanced persistent threat actors, breaches, and suspicious behaviors are identified;</li>
<li>Awareness training focused on recognizing and responding to threats from social engineering, advanced persistent threat actors, breaches, and suspicious behaviors is provided upon initial hire, following a significant cyber event, and at least annually;</li>
<li>Significant changes to the threats from social engineering, advanced persistent threat actors, breaches, and suspicious behaviors are identified; and</li>
<li>Awareness training is updated at least annually or when there are significant changes to the threat.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Awareness training policy; procedures addressing awareness training implementation; appropriate codes of federal regulations; awareness training curriculum; awareness training materials; security plan; training records; threat information on social engineering, advanced persistent threat actors, suspicious behaviors, and breaches; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for awareness training; organizational personnel responsible for information security; organizational personnel comprising the general system user community].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms managing awareness training; mechanisms managing threat information].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>An effective method to detect APT activities and reduce the effectiveness of those activities is to provide specific awareness training for individuals. A well-trained and security-aware workforce provides another organizational safeguard that can be employed as part of a defense-in-depth strategy to protect organizations against malicious code injections via email or web applications. Threat awareness training includes educating individuals on the various ways that APTs can infiltrate organizations, including through websites, emails, advertisement pop-ups, articles, and social engineering. Training can include techniques for recognizing suspicious emails, the use of removable systems in non-secure settings, and the potential targeting of individuals by adversaries outside the workplace. Awareness training is assessed and updated periodically to ensure that the training is relevant and effective, particularly with respect to the threat since it is constantly, and often rapidly, evolving.</p>
<p>[NIST SP 800-50] provides guidance on security awareness and training programs.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>All organizations, regardless of size, should have a cyber training program that helps employees understand threats they will face on a daily basis. This training must include knowledge about APT actors, breaches, and suspicious behaviors.</p>
<div class="sub-header-2">Example</div>
<p>You are the cyber training coordinator for a small business with eight employees. You do not have your own in-house cyber training program. Instead, you use a third-party company to provide cyber training. New hires take the course when they start, and all current staff members receive refresher training at least once a year [b]. When significant changes to the threat landscape take place, the company contacts you and informs you that an update to the training has been completed [c,d] and everyone will need to receive training [b]. You keep a log of all employees who have gone through the cyber training program and the dates of training.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does the organization have evidence that employees participate in cyber awareness training at initial hire and at least annually thereafter or when there have been significant changes to the threat [b]?</li>
</ul>

', NULL, NULL, 38, 4, 19, NULL, NULL, 1205, NULL, N'Advanced Threat Awareness', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5398, N'AT.L3-3.2.2E', N'Include practical exercises in awareness training for all users, tailored by roles, to include general users, users with specialized roles, and privileged users, that are aligned with current threat scenarios and provide feedback to individuals involved in the training and their supervisors.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>Practical exercises are identified;</li>
<li>Current threat scenarios are identified;</li>
<li>Individuals involved in training and their supervisors are identified;</li>
<li>Practical exercises that are aligned with current threat scenarios are included in awareness training for all users, tailored by roles, to include general users, users with specialized roles, and privileged users; and</li>
<li>Feedback is provided to individuals involved in the training and their supervisors.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Awareness training policy; procedures addressing awareness training implementation; appropriate codes of federal regulations; awareness training curriculum; awareness training materials; security plan; training records; threat information on social engineering, advanced persistent threat actors, suspicious behaviors, breaches, or other relevant adversary tactics, techniques, or procedures; feedback on practical exercises and awareness training; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for awareness training; organizational personnel responsible for information security; organizational personnel with roles identified for practical exercises; supervisors of personnel with roles identified for practical exercises].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms managing awareness training; mechanisms managing threat information].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Awareness training is most effective when it is complemented by practical exercises tailored to the tactics, techniques, and procedures (TTP) of the threat. Examples of practical exercises include unannounced social engineering attempts to gain unauthorized access, collect information, or simulate the adverse impact of opening malicious email attachments or invoking, via spear phishing attacks, malicious web links. Rapid feedback is essential to reinforce desired user behavior. Training results, especially failures of personnel in critical roles, can be indicative of a potentially serious problem. It is important that senior management are made aware of such situations so that they can take appropriate remediating actions.</p>
<p>[NIST SP 800-181] provides guidance on role-based security training, including a lexicon and taxonomy that describes cybersecurity work via work roles.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>This requirement can be performed by the organization or by a third-party company. Training exercises (including unannounced exercises, such as phishing training) should be performed at various times throughout the year to encourage employee readiness. After each exercise session has been completed, the results should be recorded (date, time, what and who the training tested, and the percent of successful and unsuccessful responses). The purpose of training is to help employees in all roles act appropriately for any given training situation, which should reflect real-life scenarios. Collected results will help identify shortcomings in the cyber training and/or whether additional instructional training may be needed.</p>
<p>General exercises can be included for all users, but exercises tailored for specific roles are important, too. Training tailored for specific roles helps make sure individuals are ready for actions and events specific to their positions in a company. Privileged users receive training that emphasizes what permissions their privileged account has in a given environment and what extra care is required when using their privileged account.</p>
<div class="sub-header-2">Example</div>
<p>You are the cyber training coordinator for a medium-sized business. You and a coworker have developed a specialized awareness training to increase cybersecurity awareness around your organization. Your training includes social media campaigns, social engineering phone calls, and phishing emails with disguised links to staff to train them beyond the standard cybersecurity training [a,b].</p>
<p>To send simulated phishing emails to staff, you subscribe to a third-party service that specializes in this area [a]. The service sets up fictitious websites with disguised links to help train general staff against this TTP used by APTs [d]. The third-party company tracks the individuals who were sent phishing emails and whether they click on any of the of the links within the emails. After the training action is completed, you receive a report from the third- party company. The results show that 20% of the staff clicked on one or more phishing email links, demonstrating a significant risk to your company. As the cyber training coordinator,</p>
<p>you notify the individuals, informing them they failed the training and identifying the area(s) of concern [e]. You send an email to the supervisors informing them who in their organization has received training. You also send an email out to the entire company explaining the training that just took place and the overall results [e].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are the individuals being trained and the results recorded [e]?</li>
<li>Are the training exercises performed [c]?</li>
<li>Are the exercises set up for all users? Are there tailored exercises based on roles within the organization (general users, users with specialized roles, and privileged users) [d]?</li>
<li>Does the organization have documentation recording the training exercises, who participated, and feedback provided to those who participated in a training session [c,e]?</li>
</ul>

', NULL, NULL, 38, 5, 19, NULL, NULL, 1205, NULL, N'Practical Training Exercises', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5399, N'CM.L3-3.4.1E', N'Establish and maintain an authoritative source and repository to provide a trusted source and accountability for approved and implemented system components.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>Approved system components are identified;</li>
<li>Implemented system components are identified;</li>
<li>An authoritative source and repository are established to provide a trusted source and accountability for approved and implemented system components; and</li>
<li>An authoritative source and repository are maintained to provide a trusted source and accountability for approved and implemented system components.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Configuration management policy; procedures addressing the baseline configuration of the system; configuration management plan; enterprise architecture documentation; system design documentation; system architecture and configuration documentation; system configuration settings and associated documentation; change control records; system and system component inventory records; inventory reviews and update records; security plan; system audit records; change control audit and review reports; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for configuration management; organizational personnel responsible for system component inventory; organizational personnel responsible for configuration change control; organizational personnel responsible for information security; system/network administrators; members of a change control board or similar].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms that implement configuration change control; mechanisms supporting configuration control of the baseline configuration; mechanisms supporting and/or implementing the system component inventory].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>The establishment and maintenance of an authoritative source and repository includes a system component inventory of approved hardware, software, and firmware; approved system baseline configurations and configuration changes; and verified system software and firmware, as well as images and/or scripts. The authoritative source implements integrity controls to log changes or attempts to change software, configurations, or data in the repository. Additionally, changes to the repository are subject to change management procedures and require authentication of the user requesting the change. In certain situations, organizations may also require dual authorization for such changes. Software changes are routinely checked for integrity and authenticity to ensure that the changes are legitimate when updating the repository and when refreshing a system from the known, trusted source. The information in the repository is used to demonstrate adherence to or identify deviation from the established configuration baselines and to restore system components from a trusted source. From an automated assessment perspective, the system description provided by the authoritative source is referred to as the desired state. The desired state is compared to the actual state to check for compliance or deviations. [NIST SP 800-128] provides guidance on security configuration management, including security configuration settings and configuration change control.</p>
<p>[NIST IR 8011-1] provides guidance on automation support to assess system and system component configurations.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Trusted software, whether securely developed in house or obtained from a trusted source, should have baseline data integrity established when first created or obtained, such as by using hash algorithms to obtain a hash value that would be used to validate the source prior to use of the software in a given system. Hardware in the repository should be stored in boxes or containers with tamper-evident seals. Hashes and seals should be checked on a regular basis employing the principle of separation of duties.</p>
<div class="sub-header-2">Example</div>
<p>You are the primary system build technician at a medium-sized company. You have been put in charge of creating, documenting, and implementing a baseline configuration for all user systems [c]. You have identified a minimum set of software that is needed by all employees to complete their work (e.g., office automation software). You acquire trusted versions of the software and build one or more baselines of all system software, firmware, and applications required by the organization. The gold version of each baseline is stored in a secure configuration management system repository and updated as required to maintain integrity and security. Access to the build repository for updates and use is carefully controlled using access control mechanisms that limit access to you and your staff. All interactions with the repository are logged. Using an automated build tool, your team builds each organizational system using the standard baseline</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does an authoritative source and repository exist to provide a trusted source and accountability for approved and implemented system components [c,d]?</li>
</ul>

', NULL, NULL, 38, 10, 19, NULL, NULL, 1207, NULL, N'Authoritative Repository', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5400, N'CM.L3-3.4.2E', N'Employ automated mechanisms to detect misconfigured or unauthorized system components; after detection, remove the components or place the components in a quarantine or remediation network to facilitate patching, re-configuration, or other mitigations.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>Automated mechanisms to detect misconfigured or unauthorized system components are identified;</li>
<li>Automated mechanisms are employed to detect misconfigured or unauthorized system components;</li>
<li>Misconfigured or unauthorized system components are detected; and</li>
<li>After detection, system components are removed or placed in a quarantine or remediation network to facilitate patching, re-configuration, or other mitigations.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Configuration management policy; procedures addressing the baseline configuration of the system; configuration management plan; authoritative source or repository; enterprise architecture documentation; system design documentation; system architecture and configuration documentation; system procedures addressing system configuration change control; configuration settings and associated documentation; change control records; change control audit and review reports; agenda/minutes from configuration change control oversight meetings; alerts/notifications of unauthorized baseline configuration changes; security plan; system audit records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for configuration management; organizational personnel responsible for information security; organizational personnel responsible for configuration change control; system developers; system/network administrators; members of a change control board or similar roles].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Automated mechanisms supporting configuration control of the baseline configuration; automated mechanisms that implement security responses to changes to the baseline configurations; automated mechanisms that implement configuration change control; automated mechanisms that detect misconfigured or unauthorized system components].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>System components used to process, store, transmit, or protect CUI are monitored and checked against the authoritative source (i.e., hardware and software inventory and associated baseline configurations). From an automated assessment perspective, the system description provided by the authoritative source is referred to as the desired state. Using automated tools, the desired state is compared to the actual state to check for compliance or deviations. Security responses to system components that are unknown or that deviate from approved configurations can include removing the components; halting system functions or processing; placing the system components in a quarantine or remediation network that facilitates patching, re-configuration, or other mitigations; or issuing alerts and/or notifications to personnel when there is an unauthorized modification of an organization- defined configuration item. Responses can be automated, manual, or procedural. Components that are removed from the system are rebuilt from the trusted configuration baseline established by the authoritative source.</p>
<p>[NIST IR 8011-1] provides guidance on using automation support to assess system configurations</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>For this requirement, the organization is required to implement automated tools to help identify misconfigured components. Once under an attacker’s control, the system may be modified in some manner and the automated tool should detect this. Or, if a user performs a manual configuration adjustment, the system will be viewed as misconfigured, and that change should be detected. Another common example is if a component has been offline and not updated, the tool should detect the incorrect configuration. If any of these scenarios occurs, the automated configuration management system (ACMS) will notice a change and can take the system offline, quarantine the system, or send an alert so the component(s) can be manually removed. Quarantining a misconfigured component does not require it to be removed from the network. Quarantining only requires that a temporary limitation be put in place eliminating the component’s ability to process, store, or transmit CUI until it is properly configured. If a component has the potential of disrupting business operations then the OSC should take extra care to ensure configuration updates are properly tested and that components are properly configured and tested before being added to the network. Once one of these actions is accomplished, a system technician may need to manually inspect the system or rebuild it using the baseline configuration. Another option is for an ACMS to make adjustments while the system is running rather than performing an entire rebuild. These adjustments can include replacing configuration files, executable files, scripts, or library files on the fly.</p>
<div class="sub-header-2">Example 1</div>
<p>As the system administrator, you implement company policy stating that every system connecting to the company network via VPN will be checked for specific configuration settings and software versioning before it is allowed to connect to the network, after it passes authentication [a,b]. If any deviations from the authoritative baseline are identified, the</p>
<p>system is placed in a VPN quarantine zone (remediation network) using a virtual local area network (VLAN) [b,c,d]. This VLAN is set up for system analysis, configuration changes, and rebuilding after forensic information is pulled from the system. Once the system updates are complete, the system will be removed from the quarantine zone and placed on the network through the VPN connection.</p>
<div class="sub-header-2">Example 2</div>
<p>As the system administrator, you have chosen to use a network access control (NAC) solution to validate system configurations before they are allowed to connect to the corporate network [a]. When a system plugs into or connects to a local network port or the VPN, the NAC solution checks the hash of installed system software [b,c]. If the system does not pass the configuration check, it is put in quarantine until an administrator can examine it or the ACMS updates the system to pass the system checks [d].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Can the organization explain the automated process that identifies, quarantines, and remediates a system when a misconfiguration or unauthorized system component is identified [a,b,c,d]?</li>
<li>Does the organization have a patching and rebuild process for all assets that may be taken offline [d]?</li>
</ul>

', NULL, NULL, 38, 11, 19, NULL, NULL, 1207, NULL, N'Automated Detection & Remediation', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5401, N'CM.L3-3.4.3E', N'Employ automated discovery and management tools to maintain an up-to-date, complete, accurate, and readily available inventory of system components.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>Automated discovery and management tools for the inventory of system components are identified;</li>
<li>An up-to-date, complete, accurate, and readily available inventory of system components exists; and</li>
<li>Automated discovery and management tools are employed to maintain an up-to-date, complete, accurate, and readily available inventory of system components.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Configuration management policy; configuration management plan; procedures addressing system component inventory; procedures addressing the baseline configuration of the system; configuration management plan; system design documentation; system architecture and configuration documentation; security plan; system configuration settings and associated documentation; configuration change control records; system inventory records; change control records; system maintenance records; system audit records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for information security; organizational personnel responsible for configuration management; organizational personnel responsible for managing the automated mechanisms implementing the system component inventory; system developers; system/network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Automated mechanisms implementing baseline configuration maintenance; automated mechanisms implementing the system component inventory].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>The system component inventory includes system-specific information required for component accountability and to provide support to identify, control, monitor, and verify configuration items in accordance with the authoritative source. The information necessary for effective accountability of system components includes the system name, hardware and software component owners, hardware inventory specifications, software license</p>
<p>information, software version numbers, and— for networked components—the machine names and network addresses. Inventory specifications include the manufacturer, supplier information, component type, date of receipt, cost, model, serial number, and physical location. Organizations also use automated mechanisms to implement and maintain authoritative (i.e., up-to-date, complete, accurate, and available) baseline configurations for systems that include hardware and software inventory tools, configuration management tools, and network management tools. Tools can be used to track version numbers on operating systems, applications, types of software installed, and current patch levels.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Organizations use an automated capability to discover components connected to the network and system software installed. The automated capability must also be able to identify attributes associated with those components. For systems that have already been coupled to the environment, they should allow remote access for inspection of the system software configuration and components. Another option is to place an agent on systems that performs internal system checks to identify system software configuration and components. Collection of switch and router data can also be used to identify systems on networks.</p>
<div class="sub-header-2">Example</div>
<p>Within your organization, you are in charge of implementing an authoritative inventory of system components. You first create a list of the automated technologies you will use and what each technology will be responsible for identifying [a]. This includes gathering information from switches, routers, access points, primary domain controllers, and all connected systems or devices, whether wired or wireless (printers, IoT, IIoT, OT, IT, etc.) [b]. To keep the data up-to-date, you set a very short search frequency for identifying new components. To maximize availability of this data, all information will be placed in a central inventory/configuration management system, and automated reporting is performed every day [c]. A user dashboard is set up that allows you and other administrators to run reports at any time.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Can the organization explain the process by which current inventory information is acquired [a]?</li>
<li>Is the organization able to produce an inventory of components on the network [b,c]?</li>
<li>Has the organization implemented a valid frequency for the component discovery solution [b,c]?</li>
<li>Can the organization demonstrate that the inventory is current and accurate [b]?</li>
<li>Has the organization developed a defined list of identifiable attributes for each component type, and is that list adequate to support component accountability [a]?</li>
<li>Is the organization able to track, monitor, and verify configuration items in accordance with the organization’s authoritative list of components [b,c]?</li>
</ul>

', NULL, NULL, 38, 12, 19, NULL, NULL, 1207, NULL, N'Automated Inventory', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5402, N'IA.L3-3.5.1E', N'Identify and authenticate systems and system components, where possible, before establishing a network connection using bidirectional authentication that is cryptographically based and replay resistant.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>[ODP1] Systems and system components to identify and authenticate are defined;</li>
<li>Bidirectional authentication that is cryptographically-based is implemented;</li>
<li>Bidirectional authentication that is replay-resistant is implemented; and</li>
<li>Systems and system components, where possible, are identified and authenticated before establishing a network connection using bidirectional authentication that is cryptographically-based and replay-resistant.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Identification and authentication policy; procedures addressing device identification and authentication; network connection policy; security plan; system configuration settings and associated documentation; system design documentation; list of devices requiring unique identification and authentication; device connection reports; system audit records; list of privileged system accounts; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for system operations; organizational personnel responsible for account management; organizational personnel responsible for device identification and authentication; organizational personnel responsible for information security; system/network administrators; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Cryptographically-based bidirectional authentication mechanisms; mechanisms supporting and/or implementing network connection policy; mechanisms supporting and/or implementing replay-resistant authentication mechanisms; mechanisms supporting and/or implementing an identification and authentication capability; mechanisms supporting and/or implementing a device identification and authentication capability].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Cryptographically-based and replay-resistant authentication between systems, components, and devices addresses the risk of unauthorized access from spoofing (i.e., claiming a false identity). The requirement applies to client-server authentication, server-server authentication, and device authentication (including mobile devices). The cryptographic key for authentication transactions is stored in suitably secure storage available to the authenticator application (e.g., keychain storage, Trusted Platform Module [TPM], Trusted Execution Environment [TEE], or secure element). Mandating authentication requirements at every connection point may not be practical, and therefore, such requirements may only be applied periodically or at the initial point of network connection.</p>
<p>[NIST SP 800-63-3] provides guidance on identity and authenticator management.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>The intent of this practice is to prevent unauthorized devices from connecting to one another. One example satisfying this requirement is a web server configured with transport layer security (TLS) using mutual authentication. At a lower level in the OSI stack, IPsec provides application-transparent mutual authentication. Another example would be implementing 802.1X technology to enforce port-based NAC. This is done by enabling 802.1X on switches, wireless access points, and VPN connections for a given network. 802.1X defines authentication controls for devices trying to access a given network. NAC controls authorization and policy management. For this to be implemented, bidirectional authentication must be turned on via 802.1X. Once successfully authenticated, the device may communicate on the network. A final example, at the application-server level, involves the use of Kerberos to control 1) which files a client can access and 2) the transmission of sensitive data from the client to the server.</p>
<div class="sub-header-2">Example 1</div>
<p>You are the network engineer in charge of implementing this requirement. You have been instructed to implement a technology that will provide mutual authentication for client server connections. You implement Kerberos.</p>
<p>On the server side, client authentication is implemented by having the client establish a local security context. This is initially accomplished by having the client present credentials which are confirmed by the Active Directory Domain Controller (DC). After that, the client may establish context via a session of a logged-in user. The service does not accept connections from any unauthenticated client.</p>
<p>On the client side, server authentication requires registration, using administrator privileges, of unique Service Provider Names (SPNs) for each service instance offered. The names are registered in the Active Directory Domain Controller. When a client requests a connection to a service, it composes an SPN for a service instance, using known data or data provided by the user. For authentication, the client presents its SPN to the Key Distribution Center (KDC), and the KDC searches for computers with the registered SPN before allowing a connection via an encrypted message passed to the client for forwarding to the server.</p>
<div class="sub-header-2">Example 2</div>
<p>You are the network engineer in charge of implementing this requirement. You have been instructed to implement a technology that will provide authentication for each system prior to connecting to the environment. You implement the company-approved scheme that uses cryptographic keys installed on each system for it to authenticate to the environment, as well as user-based cryptographic keys that are used in combination with a user’s password for user-level authentication [a,c]. Your authentication implementation is finalized on each system using an ACM solution. When a system connects to the network, the system uses the system-level certificate to authenticate itself to the switch before the switch will allow it to access the corporate network [a,c]. This is accomplished using 802.1x technology on the switch and by authenticating with a RADIUS server that authenticates itself with the system via cryptographic keys. If either system fails to authenticate to the other, the trust is broken, and the system will not be able to connect to or communicate on the network. You also set up a similar implementation in your wireless access point.</p>
<div class="sub-header-2">Example 3</div>
<p>You are the network engineer in charge of implementing the VPN solution used by the organization. To meet this requirement, you use a VPN gateway server and public key infrastructure (PKI) certificates via a certification authority (CA) and a chain of trust. When a client starts a VPN connection, the server presents its certificate to the client and if the certificate is trusted, the client then presents its certificate to the server [a]. If the server validates the client certificate, an established communications channel is opened for the client to finish the authentication process and gain access to the network via the VPN gateway server [c]. If the client fails final authentication, fails the certification validation, or the VPN gateway fails the certificate check by the client, the communication channel will be denied.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Are cryptographic keys stored securely [a]?</li>
<li>Has the requirement been implemented for any of the three use cases, where applicable: client-server authentication, server-server authentication, and device authentication [b,c]?</li>
</ul>

', NULL, NULL, 38, 14, 19, NULL, NULL, 1208, NULL, N'Bidirectional Authentication', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5403, N'IA.L3-3.5.3E', N'Employ automated or manual/procedural mechanisms to prohibit system components from connecting to organizational systems unless the components are known, authenticated, in a properly configured state, or in a trust profile.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>System components that are known, authenticated, in a properly configured state, or in a trust profile are identified;</li>
<li>Automated or manual/procedural mechanisms to prohibit system components from connecting to organizational systems are identified; and</li>
<li>Automated or manual/procedural mechanisms are employed to prohibit system components from connecting to organizational systems unless the components are known, authenticated, in a properly configured state, or in a trust profile.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Configuration management policy; identification and authentication policy; system and information integrity policy; procedures addressing system component inventory; procedures addressing device identification and authentication; procedures addressing device configuration management; procedures addressing system monitoring tools and techniques; configuration management plan; security plan; system design documentation; system configuration settings and associated documentation; system inventory records; configuration management records; system monitoring records; alerts/notifications of unauthorized components within the system; change control records; system audit records; system monitoring tools and techniques documentation; documented authorization/approval of network services; notifications or alerts of unauthorized network services; system monitoring logs or records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for managing the mechanisms implementing unauthorized system component detection; organizational personnel responsible for device identification and authentication; organizational personnel responsible for information security; organizational personnel responsible for installing, configuring, and/or maintaining the system; system/network administrators; organizational personnel responsible for monitoring the system; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing the detection of unauthorized system components; mechanisms supporting and/or implementing a device identification and authentication capability; mechanisms for providing alerts; mechanisms supporting and/or implementing configuration management; cryptographic mechanisms supporting device attestation; mechanisms supporting and/or implementing a system monitoring capability; mechanisms for auditing network services].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Identification and authentication of system components and component configurations can be determined, for example, via a cryptographic hash of the component. This is also known as device attestation and known operating state or trust profile. A trust profile based on factors such as the user, authentication method, device type, and physical location is used to make dynamic decisions on authorizations to data of varying types. If device attestation is the means of identification and authentication, then it is important that patches and updates to the device are handled via a configuration management process such that the patches and updates are done securely and do not disrupt the identification and authentication of other devices.</p>
<p>[NIST IR 8011-1] provides guidance on using automation support to assess system configurations.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>This requirement can be achieved in several ways, such as blocking based on posture assessments, conditional access, or trust profiles. A posture assessment can be used to assess a given system’s posture to validate that it meets the standards set by the organization before allowing it to connect. Conditional access is the set of policies and configurations that control devices receiving access to services and data sources. Conditional access helps an organization build rules that manage security controls, perform blocking, and restrict components. A trust profile is a set of factors that are checked to inform a device that a system can be trusted.</p>
<div class="sub-header-2">Example 1</div>
<p>In a Windows environment, you authorize devices to connect to systems by defining configuration rules in one or more Group Policy Objects (GPO) that can be automatically applied to all relevant devices in a domain [a]. This provides you with a mechanism to apply rules for which devices are authorized to connect to any given system and prevent devices that are not within the defined list from connecting [b,c]. For instance, universal serial bus (USB) device rules for authorization can be defined by using a USB device’s serial number, model number, and manufacturer information. This information can be used to build a trust profile for a device and authorize it for use by a given system. You use security policies to prevent unauthorized components from connecting to systems [c].</p>
<div class="sub-header-2">Example 2</div>
<p>You have been assigned to build trust profiles for all devices allowed to connect to your organization’s systems. You want to test the capability starting with printers. You talk to your purchasing department, and they tell you that policy states every printer must be from a specific manufacturer; they only purchase four different models. They also collect all serial numbers from purchased printers. You gather this information and build trust profiles for each device [a,b]. Because your organization shares printers, you push the trust profiles out to organizational systems. Now, the systems are not allowed to connect to a network printer unless they are within the trust profiles you have provided [b,c].</p>
<div class="sub-header-2">Example 3</div>
<p>Your organization has implemented a network access control solution (NAC) to help ensure that only properly configured computers are allowed to connect to the corporate network [a,b]. The solution first checks for the presence of a certificate to indicate that the device is company-owned. It next reviews the patch state of the computer and forces the installation of any patches that are required by the organization. Finally, it reviews the computer’s configuration to ensure that the firewall is active and that the appropriate security policies have been applied. Once the computer has passed all of these requirements, it is allowed access to network resources and defined as a trusted asset for the length of its session [a]. Devices that do not meet all of the requirements are automatically blocked from connecting to the network [c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>If the organization is using a manual method, is the method outlined in detail so any user will be able to follow it without making an error [b,c]?</li>
<li>If the organization is using an automated method, can the organization explain how the technology performs the task? Can they explain the steps needed to implement [a,b,c]?</li>
<li>Can the organization provide evidence showing they have trust profiles for specific devices [a,b,c]?</li>
<li>Can the organization explain how their system components authenticate to a system if they are not using trust profiles [b,c]?</li>
</ul>

', NULL, NULL, 38, 15, 19, NULL, NULL, 1208, NULL, N'Block Untrusted Assets', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5404, N'IR.L3-3.6.1E', N'Establish and maintain a security operations center capability that operates 24/7, with allowance for remote/on-call staff.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>A security operations center capability is established;</li>
<li>The security operations center capability operates 24/7, with allowance for remote/on- call staff; and</li>
<li>The security operations center capability is maintained.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Incident response policy; contingency planning policy; procedures addressing incident handling; procedures addressing the security operations center operations; mechanisms supporting dynamic response capabilities; incident response plan; contingency plan; security plan; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for incident handling; organizational personnel responsible for contingency planning; security operations center personnel; organizational personnel responsible for information security].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms that support and/or implement the security operations center capability; mechanisms that support and/or implement the incident handling process].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>A security operations center (SOC) is the focal point for security operations and computer network defense for an organization. The purpose of the SOC is to defend and monitor an organization’s systems and networks (i.e., cyber infrastructure) on an ongoing basis. The SOC is also responsible for detecting, analyzing, and responding to cybersecurity incidents in a timely manner. The SOC is staffed with skilled technical and operational personnel (e.g., security analysts, incident response personnel, systems security engineers); in some instances operates 24 hours per day, seven days per week; and implements technical, management, and operational controls (e.g., monitoring, scanning, and forensics tools) to</p>
<p>monitor, fuse, correlate, analyze, and respond to security-relevant event data from multiple sources. Sources of event data include perimeter defenses, network devices (e.g., gateways, routers, and switches), and endpoint agent data feeds. The SOC provides a holistic situational awareness capability to help organizations determine the security posture of the system and organization. An SOC capability can be obtained in many ways. Larger organizations may implement a dedicated SOC while smaller organizations may employ third-party organizations to provide such a capability.</p>
<p>[NIST SP 800-61] provides guidance on incident handling. [NIST SP 800-86] and [NIST SP 800-101] provide guidance on integrating forensic techniques into incident response. [NIST SP 800-150] provides guidance on cyber threat information sharing. [NIST SP 800-184] provides guidance on cybersecurity event recovery.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Security operations centers are created to monitor and respond to suspicious activities across an organization’s IT applications and infrastructure. A SOC may be implemented in a variety of physical, virtual, and geographic constructs. The organization may also opt to not hire their own staff but to engage a third-party external service provider to serve as their SOC.</p>
<p>The SOC is typically comprised of multiple levels of cybersecurity analysts. Each tier of cybersecurity analysts works on increasingly complex aspects of Incident Response. The SOC may also have dedicated cybersecurity engineers to support configuration and management of defensive cyber tools. The SOC may work with staff in IT operations who provide support to the SOC.</p>
<p>SOC capabilities run 24/7, and while staff may not always be performing tasks for the SOC, the capability alerts staff members and directs them to go to a facility or perform SOC actions from a remote location. Staff members should be scheduled or on call to ensure they are available when needed.</p>
<div class="sub-header-2">Example</div>
<p>You are the Chief Information Security Officer (CISO) of a medium-sized organization. To meet the goal of 24/7 SOC operation, you have decided to adjust the current SOC, which operates five days a week for 12 hours a day, by minimizing active staff members and hiring trusted expert consultants to have on call at all times (i.e., seven days a week, 24 hours a day) [a,b]. You design your SOC to be remotely accessible so your experts can access your environment when needed. You also decide to set up a very strong automated capability that is good at identifying questionable activities and alerting the appropriate staff. You create a policy stating that after an alert goes out, two members of the SOC team must remotely connect to the environment within 15 minutes to address the problem. All staff members also have regular working hours during which they perform other SOC activities, such as updating information to help the automated tool perform its functions [c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>How does the organization enable 24/7 SOC capabilities? Does the organization have people in seats 24/7 or on-call members? If on-call members are used, what are the trigger and alerting mechanisms that allow for 24/7 coverage [a,b]?</li>
<li>Does the organization have sufficient trained full-time equivalent staff to enable 24/7 SOC services [a,b]?</li>
</ul>

', NULL, NULL, 38, 4, 19, NULL, NULL, 1209, NULL, N'Security Operations Center', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5405, N'IR.L3-3.6.2E', N'Establish and maintain a cyber incident response team that can be deployed by the organization within 24 hours.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>A cyber incident response team is established;</li>
<li>The cyber incident response team can be deployed by the organization within 24 hours; and</li>
<li>The cyber incident response team is maintained.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Incident response policy; procedures addressing incident response; incident response plan; security plan; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for incident response; organizational personnel from the incident response team; organizational personnel responsible for information security].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting and/or implementing incident response].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>A cyber incident response team (CIRT) is a team of experts that assesses, documents, and responds to cyber incidents so that organizational systems can recover quickly and implement the necessary controls to avoid future incidents. CIRT personnel include, for example, forensic analysts, malicious code analysts, systems security engineers, and real- time operations personnel. The incident handling capability includes performing rapid forensic preservation of evidence and analysis of and response to intrusions. The team members may or may not be full-time but need to be available to respond in the time period required. The size and specialties of the team are based on known and anticipated threats. The team is typically pre-equipped with the software and hardware (e.g., forensic tools) necessary for rapid identification, quarantine, mitigation, and recovery and is familiar with how to preserve evidence and maintain chain of custody for law enforcement or counterintelligence uses. For some organizations, the CIRT can be implemented as a cross organizational entity or as part of the Security Operations Center (SOC).</p>
<p>[NIST SP 800-61] provides guidance on incident handling. [NIST SP 800-86] and [NIST SP 800-101] provide guidance on integrating forensic techniques into incident response. [NIST SP 800-150] provides guidance on cyber threat information sharing. [NIST SP 800-184] provides guidance on cybersecurity event recovery.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>The CIRT’s primary function is to handle information security incident management and response for the environments the SOC oversees. The primary goals of the CIRT are triage and initial response to an incident. They also communicate with all the proper people to ensure understanding of an incident and the response actions, including collection of forensic evidence, have been conveyed.</p>
<p>If and when an incident is detected by the organization’s SOC, the IR team is responsible for handling the incident and communicating what has happened to the appropriate people within the organization, as well to the authorities (as needed).</p>
<p>The deployment of a team does not necessarily mean they are “physically deployed.” Deployment may simply mean connecting to a remote system in a manner that is equivalent to being on the system’s keyboard. Remote access can provide just as much capability as local access in many cases.</p>
<p>Some situations require physical access. For instance, if the company has a physically isolated environment located at a remote location, a team must be physically present at the remote facility to perform the duties required.</p>
<div class="sub-header-2">Example</div>
<p>You are the lead for an IR team within your organization. Your manager is the SOC lead, and she reports to the chief information officer (CIO). As the SOC is alerted and/or identifies incidents within the organization’s environments, you lead and deploy teams to resolve the issues, including incidents involving cloud-based systems. You use a custom dashboard that was created for your team members to view and manage incidents, perform response actions, and record actions and notes for each case. You also have your team create an after action report for all incidents to which they respond; this information is used to determine if a given incident requires additional action and reporting [a].</p>
<p>One day, you receive a message from the SOC that your website has become corrupted. Within minutes, you have a team on the system inspecting logs, analyzing applications, preserving key information, and looking for evidence of tampering/attack [b]. Your team runs through a procedure set for this specific incident type based on a handbook the organization has created and maintains [c]. It is found that a cyberattack caused the corruption, but the corruption caused a crash, which prevented the attack from continuing. Your team takes note of all actions they perform, and at the end of the incident analysis, you send a message to the website lead to inform them of the issue, case number, and notes created by the team. The website lead has their team rebuild the system and validate that the attack no longer works. At the end of the incident, the CISO and CIO are informed of the issue.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does the organization have a response capability that has remote access to the organization’s systems and system components within 24 hours in place of physical access [a,b]?</li>
</ul>

', NULL, NULL, 38, 5, 19, NULL, NULL, 1209, NULL, N'Cyber Incident Response Team', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5406, N'PS.L3-3.9.2E', N'Ensure that organizational systems are protected if adverse information develops or is obtained about individuals with access to CUI.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>Individuals with access to CUI are identified;</li>
<li>Adverse information about individuals with access to CUI is defined;</li>
<li>Organizational systems to which individuals have access are identified; and</li>
<li>Mechanisms are in place to protect organizational systems if adverse information develops or is obtained about individuals with access to CUI.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Personnel security policy; system and services acquisition policy; procedures addressing personnel screening; records of screened personnel; enterprise architecture documentation; system design documentation; system architecture and configuration documentation; security plan; list of individuals who have been identified as posing an increased level of risk; list of appropriate access authorizations required for system personnel; personnel screening criteria and associated documentation; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for personnel security; organizational personnel responsible for information security; organizational personnel responsible for system and services acquisition; organizational personnel responsible for personnel screening].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for personnel screening; mechanisms supporting personnel screening].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>If adverse information develops or is obtained about an individual with access to CUI which calls into question whether the individual should have continued access to systems containing CUI, actions are taken (e.g., preclude or limit further access by the individual, audit actions taken by the individual) to protect the CUI while the adverse information is resolved.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>According to Defense Counterintelligence and Security Agency, or DCSA (Industrial Security Letter ISL 2011-04, revised July 15, 2020), adverse information consists of any information that negatively reflects the integrity or character of an individual. This pertains to an individual’s ability to safeguard sensitive information, such as CUI. Adverse information may simply be a report showing someone has sent sensitive information outside the organization or used unapproved software, against company policy. An organization may receive adverse information about an individual through police reports, reported violations of company policies (including social media posts that directly violate company policies), and revocation or suspension of DoD clearance.</p>
<p>When adverse information is identified about a given individual, the organization should take action to validate that information resources accessible by the individual have been identified and appropriate protection mechanisms are in place to safeguard information and system configurations. Based on organizational policy, an individual’s access to resources may be more closely monitored or restricted until further review. Logs should be examined to identify any attempt to perform unauthorized actions.</p>
<div class="sub-header-2">Example</div>
<p>You learn that one of your employees has been convicted on shoplifting charges. Based on organizational policy, you report this information to human resources (HR), which verifies the information with a criminal background check [a,b,c]. Per policy, you increase the monitoring of the employee’s access to ensure that the employee does not exhibit patterns of behavior consistent with an insider threat [d]. You maintain contact with HR as they investigate the adverse information so that you can take stronger actions if required, such as removing access to organizational systems.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does the organization define the protection mechanisms for organizational systems if adverse information develops or is obtained about an individual with access to CUI [d]?</li>
</ul>

', NULL, NULL, 38, 3, 19, NULL, NULL, 1212, NULL, N'Adverse Information', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5407, N'RA.L3-3.11.1E', N'Employ threat intelligence, at a minimum from open or commercial sources, and any DoD- provided sources, as part of a risk assessment to guide and inform the development of organizational systems, security architectures, selection of security solutions, monitoring, threat hunting, and response and recovery activities.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>[ODP1] Sources of threat intelligence are defined;</li>
<li>A risk assessment methodology is identified;</li>
<li>Threat intelligence, at a minimum from open or commercial sources, and any DoD-provided sources, are employed as part of a risk assessment to guide and inform the development of organizational systems and security architectures;</li>
<li>Threat intelligence, at a minimum from open or commercial sources, and any DoD-provided sources, are employed as part of a risk assessment to guide and inform the selection of security solutions;</li>
<li>Threat intelligence, at a minimum from open or commercial sources, and any DoD-provided sources, are employed as part of a risk assessment to guide and inform system monitoring activities;</li>
<li>Threat intelligence, at a minimum from open or commercial sources, and any DoD-provided sources, are employed as part of a risk assessment to guide and inform threat hunting activities; and</li>
<li>Threat intelligence, at a minimum from open or commercial sources, and any DoD-provided sources, are employed as part of a risk assessment to guide and inform response and recovery activities.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Information security program plan; risk assessment policy; threat awareness program documentation; procedures for the threat awareness program; security planning policy and procedures; procedures addressing organizational assessments of risk; threat hunting program documentation; procedures for the threat hunting program; risk assessment results relevant to threat awareness; threat hunting results; list or other documentation on the cross-organization, information-sharing capability; security plan; risk assessment; risk assessment results; risk assessment reviews; risk assessment updates;</p>
<p>contingency planning policy; contingency plan; incident response policy; incident response plan; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for information security program planning and plan implementation; organizational personnel responsible for the threat awareness and threat hunting programs; organizational personnel responsible for risk assessments; organizational personnel responsible for the cross-organization, information- sharing capability; organizational personnel responsible for information security; organizational personnel responsible for contingency planning; organizational personnel responsible for incident response; personnel with whom threat awareness information is shared by the organization].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting and/or implementing the threat awareness program; mechanisms supporting and/or implementing the cross-organization, information-sharing capability; mechanisms supporting and/or implementing the threat hunting program; mechanisms for conducting, documenting, reviewing, disseminating, and updating risk assessments; mechanisms supporting and/or implementing contingency plans; mechanisms supporting and/or implementing incident response plans].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>The constant evolution and increased sophistication of adversaries, especially the APT, makes it more likely that adversaries can successfully compromise or breach organizational systems. Accordingly, threat intelligence can be integrated into each step of the risk management process throughout the system development life cycle. This risk management process includes defining system security requirements, developing system and security architectures, selecting security solutions, monitoring (including threat hunting), and remediation efforts.</p>
<p>[NIST SP 800-30] provides guidance on risk assessments. [NIST SP 800-39] provides guidance on the risk management process. [NIST SP 800-160-1] provides guidance on security architectures and systems security engineering. [NIST SP 800-150] provides guidance on cyber threat information sharing.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>An organization consumes threat intelligence and improves their security posture based on the intelligence relevant to that organization and/or a system(s). The organization can obtain threat intelligence from open or commercial sources but must also use any DoD-provided sources. Threat information can be received in high volumes from various providers and must be processed and analyzed by the organization. It is the responsibility of the organization to process the threat information in a manner that is useful and actionable to their needs. Processing, analyzing, and extracting the intelligence from the threat feeds</p>
<p>and applying it to all organizational security engineering needs is the primary benefit of this requirement. Note that more than one source is required to meet assessment objectives.</p>
<div class="sub-header-2">Example</div>
<p>Your organization receives a commercial threat intelligence feed from FIRST and government threat intelligence feeds from both USCERT and DoD/DC3 to help learn about recent threats and any additional information the threat feeds provide [b,c,d,e,f]. Your organization uses the threat intelligence for multiple purposes:</p>
<ul>
<li>To perform up-to-date risk assessments for the organization [a];</li>
<li>To add rules to the automated system put in place to identify threats (indicators of compromise, or IOCs) on the organization’s network [e];</li>
<li>To guide the organization in making informed selections of security solutions [c];</li>
<li>To shape the way the organization performs system monitoring activities [d];</li>
<li>To manage the escalation process for identified incidents, handling specific events, and performing recovery actions [f];</li>
<li>To provide additional information to the hunt team to identify threat activities [e];</li>
<li>To inform the development and design decisions for organizational systems and the overall security architecture, as well as the network architecture [b,c];</li>
<li>To assist in decision-making regarding systems that are part of the primary network and systems that are placed in special enclaves for additional protections [b]; and</li>
<li>To determine additional security measures based on current threat activities taking place in similar industry networks [c,d,e,f].</li>
</ul>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does the organization detail how threat feed information is to be ingested, analyzed, and used [a]?</li>
<li>Can the organization’s SOC or hunt teams discuss how they use the threat feed information after it is processed [e,f]?</li>
</ul>

', NULL, NULL, 38, 4, 19, NULL, NULL, 1214, NULL, N'Threat-Informed Risk Assessment', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5408, N'RA.L3-3.11.2E', N'Conduct cyber threat hunting activities on an on-going aperiodic basis or when indications warrant, to search for indicators of compromise in organizational systems and detect, track, and disrupt threats that evade existing controls.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>[ODP4] Organizational systems to search for indicators of compromise are defined;</li>
<li>Indicators of compromise are identified;</li>
<li>Cyber threat hunting activities are conducted on an on-going aperiodic basis or when indications warrant, to search for indicators of compromise in organizational systems; and</li>
<li>Cyber threat hunting activities are conducted on an on-going aperiodic basis or when indications warrant, to detect, track, and disrupt threats that evade existing controls.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and information integrity policy; policy and procedures addressing system monitoring; threat hunting program documentation; procedures for the threat hunting program; threat hunting results; system design documentation; security plan; system monitoring tools and techniques documentation; security planning policy and procedures; system configuration settings and associated documentation; system monitoring logs or records; system audit records; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for threat hunting program; system/network administrators; organizational personnel responsible for information security; system developers; organizational personnel installing, configuring, and/or maintaining the system; organizational personnel responsible for monitoring the system and/or network].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting and/or implementing a threat hunting program; mechanisms supporting and/or implementing a system monitoring capability; mechanisms supporting and/or supporting and/or implementing incident response plans].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Threat hunting is an active means of defense that contrasts with traditional protection measures, such as firewalls, intrusion detection and prevention systems, quarantining</p>
<p>malicious code in sandboxes, and Security Information and Event Management (SIEM) technologies and systems. Cyber threat hunting involves proactively searching organizational systems, networks, and infrastructure for advanced threats. The objective is to track and disrupt cyber adversaries as early as possible in the attack sequence and to measurably improve the speed and accuracy of organizational responses. Indicators of compromise are forensic artifacts from intrusions that are identified on organizational systems at the host or network level and can include unusual network traffic, unusual file changes, and the presence of malicious code.</p>
<p>Threat hunting teams use existing threat intelligence and may create new threat information, which may be shared with peer organizations, Information Sharing and Analysis Organizations (ISAO), Information Sharing and Analysis Centers (ISAC), and relevant government departments and agencies. Threat indicators, signatures, tactics, techniques, procedures, and other indicators of compromise may be available via government and non- government cooperatives, including Forum of Incident Response and Security Teams, United States Computer Emergency Response Team, Defense Industrial Base Cybersecurity Information Sharing Program, and CERT Coordination Center.</p>
<p>[NIST SP 800-30] provides guidance on threat and risk assessments, risk analyses, and risk modeling. [NIST SP 800-160-2] provides guidance on systems security engineering and cyber resiliency. [NIST SP 800-150] provides guidance on cyber threat information sharing.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>For this requirement, threat hunting is conducted on an on-going aperiodic basis. On-going aperiodic refers to activities that happen over and over but without an identifiable repeating pattern over time. For threat hunting, on-going activities take place in an automated manner (e.g., collecting logs, automated analysis, and alerts). Aperiodicity includes humans performing the hunt activities, which take place on an as-needed or as-planned basis.</p>
<p>APTs can penetrate an environment by means that defeat or avoid conventional monitoring methods and alert triggers—for example, by using zero-day attacks. Zero-day attacks become known only after the attack has happened and alerts are sent via threat intelligence feeds based on expert analysis. Because of the nature of zero-day attacks, automated alerts do not generally trigger when the event occurs but the activity is captured in system logs and forwarded for analysis and retention by the SIEM. Threat intelligence information is typically used by hunt teams to search SIEM systems, system event and security logs, and other components to identify activity that has already taken place on an environment. The hunt team will identify systems related to the event(s) and pass the case to Incident Response team for action on the event(s). The hunt team will also use indicators to identify smaller components of an attack and search for that activity, which may help uncover a broader attack on the environment.</p>
<p>Threat hunting can also look for anomalous behavior or activity based on an organization’s normal pattern of activity. Understanding the roles and information flows within an organization can help identify activity that might be indicative of adversary behavior before the adversary completes their attack or mission.</p>
<div class="sub-header-2">Example</div>
<p>You are the lead for your organization’s cyber threat hunting team. You have local and remote staff on the team to process threat intelligence. Your team is tied closely with the SOC and IR teams. Through a DoD (DC3) intelligence feed, you receive knowledge of a recent APT’s attacks on defense contractors. The intelligence feed provided the indicators of compromise for a zero-day attack that most likely started within the past month. After receiving the IOCs, you use a template for your organization to place the information in a standard format your team understands. You then email the information to your team members and place the information in your hunt team’s dashboard, which tracks all IOCs [a].</p>
<p>Your team starts by using the information to hunt for IOCs on the environment [b]. One of your team members quickly responds, providing information from the SIEM that an HR system’s logs show evidence that IOCs related to this threat occurred three days ago. The team contacts the owner of the system as they take the system offline into a quarantined environment. Your team pulls all logs from the system and clones the storage on the system. Members go through the logs to look for other systems that may be part of the APT’s attack [c]. While the team is cloning the storage system for evidence, you alert the IR team about the issue. After full forensics of the system, your team has verified your company has been hit by the APT, but nothing was taken and no additional attacks happened. You also alert DoD (DC3) about the finding and discuss the matter with them. There is an after action report and a briefing given to management to make them aware of the issue.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does the organization have a methodology for performing cyber threat hunting actions [b,c]?</li>
<li>Has the organization defined all organizational systems within scope of cyber threat hunting, including valid and approved documentation for any organization systems that are not within scope [b,c]?</li>
<li>Has the organization identified a specific set of individuals to perform cyber threat hunting [b,c]?</li>
<li>Does the threat hunting team have qualified staff members using the threat feed information [b,c]?</li>
<li>Does the threat hunting team use combinations of events to determine suspicious behaviors [b,c]?</li>
<li>Does the organization have a documented list of trusted threat feeds that are used by their cyber hunt teams as the latest indicators of compromise during their efforts [a]?</li>
<li>Does the organization have a clear methodology for processing threat feed information and turning it into actionable information they can use for their threat hunting approach [a]?</li>
</ul>

', NULL, NULL, 38, 5, 19, NULL, NULL, 1214, NULL, N'Threat Hunting', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5409, N'RA.L3-3.11.3E', N'Employ advanced automation and analytics capabilities in support of analysts to predict and identify risks to organizations, systems, and system components.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>Advanced automation and analytics capabilities to predict and identify risks to organizations, systems, and system components are identified;</li>
<li>Analysts to predict and identify risks to organizations, systems, and system components are identified; and</li>
<li>Advanced automation and analytics capabilities are employed in support of analysts to predict and identify risks to organizations, systems, and system components.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and information integrity policy; risk assessment policy; security planning policy and procedures; procedures addressing organizational assessments of risk; procedures addressing system monitoring; enterprise architecture documentation; system design documentation; system architecture and configuration documentation; system monitoring tools and techniques documentation; system configuration settings and associated documentation; system monitoring logs or records; system audit records; security plan; risk assessment artifacts; risk assessment results; risk assessment reviews; risk assessment updates; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for information security; organizational personnel responsible for risk assessments; risk analysts; system developers; organizational personnel installing, configuring, and/or maintaining the system; organizational personnel responsible for monitoring; system/network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Automated mechanisms supporting and/or implementing risk analytics capabilities; automated mechanisms supporting and/or implementing system monitoring capability; automated mechanisms supporting and/or implementing the discovery, collection, distribution, and use of indicators of compromise; automated mechanisms for conducting, documenting, reviewing, disseminating, and updating risk assessments].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>A properly resourced Security Operations Center (SOC) or Computer Incident Response Team (CIRT) may be overwhelmed by the volume of information generated by the proliferation of security tools and appliances unless it employs advanced automation and analytics to analyze the data. Advanced automation and predictive analytics capabilities are typically supported by artificial intelligence concepts and machine learning. Examples include Automated Workflow Operations, Automated Threat Discovery and Response (which includes broad-based collection, context-based analysis, and adaptive response capabilities), and machine-assisted decision tools.</p>
<p>[NIST SP 800-30] provides guidance on risk assessments and risk analyses.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Advanced automation includes tools to correlate and reduce the cyber data overload created by defensive tools, making the data understandable to the analyst. Automation also allows the defensive mechanisms to respond rapidly when adversary events are identified. Examples of such capabilities are SIEM; Security Orchestration, Automation, and Response (SOAR); and Extended Detection and Response (XDR) tools. An example of an automated rapid response action is a security alert being pushed to the SIEM while the organization’s SOAR solution communicates to the network firewall to block communications to the remote system identified in the security alert.</p>
<p>SIEM is primarily a log collection tool intended to support data storage and analysis. It collects and sends alerts to security personnel for further investigation. SOAR is a software stack that enables an organization to collect data about security threats and respond to security events without human assistance in order to improve security operations. Orchestration connects and integrates disparate internal and external tools. Automation, fed by the data and alerts collected from security orchestration, ingests and analyzes data and creates repeated, automated responses. SOAR incorporates these capabilities based on the SIEM data and enables disparate security tools to coordinate with one another. SOAR can use artificial intelligence to predict and respond to similar future threats, if such tools are employed.</p>
<p>XDR streamlines security data ingestion, analysis, prevention, and remediation workflows across an organization’s entire security stack, providing a single console to view and act on threat data. However, the presence of these tools by themselves does not necessarily provide an advanced capability. It is essential that the security team employ critical thinking in support of the intrusion detection and threat hunting processes.</p>
<div class="sub-header-2">Example</div>
<p>You are responsible for information security in your organization. The organization holds and processes CUI in an enterprise. To protect that data, you want to minimize phishing attacks through the use of Security Orchestration and Automated Response (SOAR). Rather than relying on analysts to manually inspect each inbound item, emails containing links and/or attachments are processed by your automation playbook. Implementation of these</p>
<p>processes involves sending all email links and attachments to detonation chambers or sandboxes prior to delivery to the recipient. When the email is received, SOAR extracts all URL links and attachments from the content and sends them for analysis and testing [a]. The domains in the URLs and the full URLs are processed against bad domain and URL lists. Next, a browser in a sandbox downloads the URLs for malware testing. Lastly, any attachments are sent to detonation chambers to identify if they attempt malicious activities. The hash of the attachments is sent to services to identify if it is known malware [b]. If any one of the items triggers a malware warning from the sandbox, detonation chamber, domain/URL validation service, attachment hash check services, or AV software, an alert about the original email is sent to team members with the recommendation to quarantine it. The team is given the opportunity to select a “take action” button, which would have the SOAR solution take actions to block that email and similar emails from being received by the organization [c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Has the organization implemented a security information and event management system [a,c]?</li>
<li>Has the organization implemented security orchestration, automation, and response tools [a,b,c]?</li>
<li>Does the organization use automated processing integrated with the SIEM system to perform analytics [c]?</li>
<li>Can the organization demonstrate use of relevant threat data to inform detection methods that in turn provide automated alerts/recommendations [c]?</li>
<li>Has the organization implemented an extended detection capability [c]?</li>
<li>Does the organization have the ability to merge traditional cyber data, such as network packet captures (e.g., PCAP), or process logs with enrichment data, such as reputation or categorization data [c]?</li>
<li>Can the organization provide examples of both basic and emerging analytics used to analyze alert anomalies, e.g., both simple queries and unsupervised machine learning algorithms that both improve their effectiveness and automatically filter, reduce, or enrich alerting capabilities [c]?</li>
</ul>

', NULL, NULL, 38, 6, 19, NULL, NULL, 1214, NULL, N'Advanced Risk Identification', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5410, N'RA.L3-3.11.4E', N'Document or reference in the system security plan the security solution selected, the rationale for the security solution, and the risk determination.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>The system security plan documents or references the security solution selected;</li>
<li>The system security plan documents or references the rationale for the security solution; and</li>
<li>The system security plan documents or references the risk determination.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: system security plan; records of security plan reviews and updates; system design documentation; security planning policy; procedures addressing security plan development; procedures addressing security plan reviews and updates; enterprise architecture documentation; enterprise security architecture documentation; system interconnection security agreements and other information exchange agreements; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for information security; organizational personnel responsible for developing, implementing, or approving system interconnection and information exchange agreements; personnel managing the systems to which the Interconnection Security Agreement/Information Exchange Agreement applies; system developers; organizational personnel responsible for security planning and plan implementation; organizational personnel responsible for boundary protection; system developers; system/network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Organizational processes for security plan development, review, update, and approval].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>System security plans relate security requirements to a set of security controls and solutions. The plans describe how the controls and solutions meet the security requirements. For the enhanced security requirements selected when the APT is a concern, the security plan provides traceability between threat and risk assessments and the risk-based selection of a security solution, including discussion of relevant analyses of alternatives and rationale for</p>
<p>key security-relevant architectural and design decisions. This level of detail is important as the threat changes, requiring reassessment of the risk and the basis for previous security decisions.</p>
<p>When incorporating external service providers into the system security plan, organizations state the type of service provided (e.g., software as a service, platform as a service), the point and type of connections (including ports and protocols), the nature and type of the information flows to and from the service provider, and the security controls implemented by the service provider. For safety critical systems, organizations document situations for which safety is the primary reason for not implementing a security solution (i.e., the solution is appropriate to address the threat but causes a safety concern).</p>
<p>[NIST SP 800-18] provides guidance on the development of system security plans.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>The System Security Plan (SSP) is a fundamental component of an organization’s security posture. When solutions for implementing a requirement have differing levels of capabilities associated with their implementation, it is essential that the plan specifically document the rationale for the selected solution and what was acquired for the implementation. This information allows the organization to monitor the environment for threat changes and identify which solutions may no longer be applicable. While not required, it may also be useful to document alternative solutions reviewed and differing levels of risk associated with each alternative, as that information may facilitate future analyses when the threat changes. In addition to the implementations required for Level 2 certification, which may not be risk based, at Level 3, the SSP must carefully document the link between the assessed threat and the risk-based selection of a security solution for the enhanced security requirements (i.e., all CMMC L3 requirements derived from NIST SP 800-172).</p>
<div class="sub-header-2">Example</div>
<p>You are responsible for information security in your organization. Following CMMC requirement RA.L3-3.11.1e – Threat Informed Risk Assessment, your team uses threat intelligence to complete a risk assessment and make a risk determination for all elements of your enterprise. Based on that view of risk, your team decides that requirement RA.L3-3.11.2e – Threat Hunting is a requirement that is very important in protecting your organization’s use of CUI, and you have determined the solution selected could potentially add risk. You want to detect an adversary as soon as possible when they breach the network before any CUI can be exfiltrated. However, there are multiple threat hunting solutions, and each solution has a different set of features that will provide different success rates in identifying IOCs.</p>
<p>As a result, some solutions increase the risk to the organization by being less capable in detecting and tracking an adversary in your networks. To reduce risk, you evaluate five threat hunting solutions and in each case determine the number of IOCs for which there is a monitoring mechanism. You pick the solution that is cost effective, easy to operate, and optimizes IOC detection for your enterprise; purchase, install, and train SOC personnel on its use; and document the risk-based analysis of alternatives in the SSP. In creating that</p>
<p>documentation in the SSP, you follow the guidance found in NIST SP 800-18, Guide for Developing Security Plans for Federal Information Systems [a,b,c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Has the organization completed a risk assessment and made a risk determinations for enterprise components that need to be protected [c]?</li>
<li>Can the organization identify what is being protected and explain why specific protection solutions were selected [a,b]?</li>
<li>Have all the decisions been documented in the SSP [a,b,c]?</li>
</ul>

', NULL, NULL, 38, 7, 19, NULL, NULL, 1214, NULL, N'Security Solution Rationale', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5411, N'RA.L3-3.11.5E', N'Assess the effectiveness of security solutions at least annually or upon receipt of relevant cyber threat information, or in response to a relevant cyber incident, to address anticipated risk to organizational systems and the organization based on current and accumulated threat intelligence.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>Security solutions are identified;</li>
<li>Current and accumulated threat intelligence is identified;</li>
<li>Anticipated risk to organizational systems and the organization based on current and accumulated threat intelligence is identified; and</li>
<li>The effectiveness of security solutions is assessed at least annually or upon receipt of relevant cyber threat information, or in response to a relevant cyber incident, to address anticipated risk to organizational systems and the organization based on current and accumulated threat intelligence.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Risk assessment policy; security planning policy and procedures; security assessment policy and procedures; security assessment plans; security assessment results; procedures addressing organizational assessments of risk; security plan; risk assessment; risk assessment results; risk assessment reviews; risk assessment updates; threat intelligence information; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for security assessments; organizational personnel responsible for risk assessments; organizational personnel responsible for threat analysis; organizational personnel responsible for information security].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting, conducting, documenting, reviewing, disseminating, and updating risk assessments; mechanisms supporting and/or implementing security assessments].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Threat awareness and risk assessment of the organization are dynamic, continuous, and inform system operations, security requirements for the system, and the security solutions employed to meet those requirements. Threat intelligence (i.e., threat information that has been aggregated, transformed, analyzed, interpreted, or enriched to help provide the necessary context for decision making) is infused into the risk assessment processes and information security operations of the organization to identify any changes required to address the dynamic threat environment.</p>
<p>[NIST SP 800-30] provides guidance on risk assessments, threat assessments, and risk analyses.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>This requirement requires the organization to analyze threat intelligence and consider the effectiveness of currently deployed cybersecurity solutions against existing, new, and emerging threats. The goal is to understand the risk to the systems and the organization based on threat intelligence and to make adjustments to security solutions to reduce the risk to an acceptable level. Analysis of solutions should include analysis of operational system settings of the deployed systems and not be solely a conceptual capability analysis. This analysis includes verifying configuration settings are configured as desired by the organization and have not been changed over time.</p>
<p>Threat information can be thought of as raw data that may be limited in terms of evaluating the effectiveness of controls across the enterprise. For example, knowledge of a threat that has not been correlated with other threats may result in evaluation of an implementation that only provides partial protection for one set of systems when, in fact, the emerging threat is applicable to the entire enterprise. Large organizations may also have the resources to aggregate, transform, analyze, correlate, interpret, and enrich information to support decision-making about adequacy of existing security mechanisms and methods.</p>
<div class="sub-header-2">Example</div>
<p>You are responsible for information security in your organization, which holds and processes CUI. The organization subscribes to multiple threat intelligence sources [b]. In order to assess the effectiveness of current security solutions, the security team analyzes any new incidents reported in the threat feed. They identify weaknesses that were leveraged by malicious actors and subsequently look for similar weaknesses in their own security architecture[a,c]. This analysis is passed to the architecture team for engineering change recommendations, including system patching guidance, new sensors, and associated alerts that should be generated, and to identify ways to mitigate, transfer, or accept the risk necessary to respond to events if they occur within their own organization [d].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does the organization make adjustments during an incident or operational improvements after an incident has occurred [d]?</li>
<li>Has the organization implemented an analytical process to assess the effectiveness of security solutions against new or compiled threat intelligence [b,c,d]?</li>
<li>Has the organization implemented a process to identify if an operational security solution fails to contribute to the protections needed against specific adversarial actions based on new threat intelligence [a,b,c,d]?</li>
</ul>

', NULL, NULL, 38, 8, 19, NULL, NULL, 1214, NULL, N'Security Solution Effectiveness', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5412, N'RA.L3-3.11.6E', N'Assess, respond to, and monitor supply chain risks associated with organizational systems and system components.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>Supply chain risks associated with organizational systems and system components are identified;</li>
<li>Supply chain risks associated with organizational systems and system components are assessed;</li>
<li>Supply chain risks associated with organizational systems and system components are responded to; and</li>
<li>Supply chain risks associated with organizational systems and system components are monitored.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Risk assessment policy; procedures addressing organizational assessments of risk; security planning policy and procedures; supply chain risk management plan; security plan; risk assessment; risk assessment results; risk assessment reviews; risk assessment updates; threat intelligence information; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for information security; organizational personnel responsible for risk assessments; organizational personnel responsible for supply chain risk management].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting, conducting, documenting, reviewing, disseminating, and updating risk assessments].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Supply chain events include disruption, use of defective components, insertion of counterfeits, theft, malicious development practices, improper delivery practices, and insertion of malicious code. These events can have a significant impact on a system and its information and, therefore, can also adversely impact organizational operations (i.e., mission, functions, image, or reputation), organizational assets, individuals, other organizations, and the Nation. The supply chain-related events may be unintentional or malicious and can occur at any point during the system life cycle. An analysis of supply chain</p>
<p>risk can help an organization identify systems or components for which additional supply chain risk mitigations are required.</p>
<p>[NIST SP 800-30] provides guidance on risk assessments, threat assessments, and risk analyses. [NIST SP 800-161 Rev. 1] provides guidance on supply chain risk management.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Organizations will have varying policies, definitions, and actions for this requirement. It is important for a single organization to be consistent and to build a process that makes sense for their organization, strategy, unique supply chain, and the technologies available to them.</p>
<div class="sub-header-2">Example</div>
<p>You are responsible for information security in your organization, which holds and processes CUI. One of your responsibilities is to manage risk associated with your supply chain that may provide an entry point for the adversary. First, you acquire threat information by subscribing to reports that identify supply chain attacks in enough detail that you are able to identify the risk points in your organization’s supply chain [a]. You create an organization- defined prioritized list of risks the organization may encounter and determine the responses to be implemented to mitigate those risks [b,c].</p>
<p>In addition to incident information, the intelligence provider also makes recommendations for monitoring and auditing your supply chain. You assess, integrate, correlate, and analyze this information so you can use it to acquire monitoring tools to help identify supply chain events that could be an indicator of an incident. This monitoring tool provides visibility of the entire attack surface, including your vendors’ security posture [d]. Second, you analyze the incident information in the intelligence report to help identify defensive tools that will help respond to each of those known supply chain attack techniques as soon as possible after such an incident is detected, thus mitigating risk associated with known techniques.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Has the organization prioritized risks to the supply chain [a,b]?</li>
<li>Does the organization have viable service-level agreements that describe and enable responses to supply chain incidents [c,d]?</li>
</ul>

', NULL, NULL, 38, 9, 19, NULL, NULL, 1214, NULL, N'Supply Chain Risk Response', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5413, N'RA.L3-3.11.7E', N'Develop a plan for managing supply chain risks associated with organizational systems and system components; update the plan at least annually, and upon receipt of relevant cyber threat information, or in response to a relevant cyber incident.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>Supply chain risks associated with organizational systems and system components are identified;</li>
<li>Organizational systems and system components to include in a supply chain risk management plan are identified;</li>
<li>A plan for managing supply chain risks associated with organizational systems and system components is developed; and</li>
<li>The plan for managing supply chain risks is updated at least annually, and upon receipt of relevant cyber threat information, or in response to a relevant cyber incident.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Risk assessment policy; supply chain risk management plan; security planning policy and procedures; procedures addressing organizational assessments of risk; security plan; risk assessment; risk assessment results; risk assessment reviews; risk assessment updates; threat intelligence information; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for information security; organizational personnel responsible for risk assessments; organizational personnel responsible for supply chain risk management].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Automated mechanisms supporting, conducting, documenting, reviewing, disseminating, and updating risk assessments].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>The growing dependence on products, systems, and services from external providers, along with the nature of the relationships with those providers, present an increasing level of risk to an organization. Threat actions that may increase risk include the insertion or use of counterfeits, unauthorized production, tampering, theft, insertion of malicious software and hardware, and poor manufacturing and development practices in the supply chain. Supply chain risks can be endemic or systemic within a system element or component, a system, an</p>
<p>organization, a sector, or the Nation. Managing supply chain risk is a multifaceted undertaking that requires a coordinated effort across an organization to build trust relationships and communicate with both internal and external stakeholders. Supply chain risk management (SCRM) activities involve identifying and assessing risks, determining appropriate mitigating actions, developing SCRM plans to document selected mitigating actions, and monitoring performance against plans. SCRM plans address requirements for developing trustworthy, secure, and resilient systems and system components, including the application of the security design principles implemented as part of life cycle-based systems security engineering processes.</p>
<p>[NIST SP 800-161 Rev. 1] provides guidance on supply chain risk management.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>An organization is required to have a supply chain risk management plan that assesses and responds to the identified risks from those organizations that provide IT products or services, including any cloud or other third-party services with a role in the operation of the system. The organization should be cognizant of services outside the scope of the system but required for the operation of the system as part of their plan. Since the cyber environment changes rapidly and continuously, it is equally important for the organization to update the plan in response to supply chain cyber incidents or emerging information.</p>
<div class="sub-header-2">Example</div>
<p>You are responsible for information security in your organization, and you have created a supply chain risk management plan [a,b,c]. One of the organization’s suppliers determines that it has been the victim of a cyberattack. Your security team meets with the supplier to determine the nature of the attack and to understand the adversary, the attack, the potential for corruption of delivered goods or services, and current as well as future risks. The understanding of the supply chain will help protect the local environment. Subsequently, you update the risk management plan to include a description of the necessary configuration changes or upgrades to monitoring tools to improve the ability to identify the new risks, and when improved tools are available, you document the acquisition of defensive tools and associated functionality to help mitigate any of the identified techniques [d].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does the organization’s current supply chain risk management plan apply across the</li>
</ul>
<p>enterprise, or does it only apply to a limited portion of the supply chain [b]?</p>

', NULL, NULL, 38, 10, 19, NULL, NULL, 1214, NULL, N'Supply Chain Risk Plan', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5414, N'CA.L3-3.12.1E', N'Conduct penetration testing at least annually or when significant security changes are made to the system, leveraging automated scanning tools and ad hoc tests using subject matter experts.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>Automated scanning tools are identified;</li>
<li>Ad hoc tests using subject matter experts are identified; and</li>
<li>Penetration testing is conducted at least annually or when significant security changes are made to the system, leveraging automated scanning tools and ad hoc tests using subject matter experts.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Security assessment policy; procedures addressing penetration testing; security plan; security assessment plan; penetration test report; security assessment report; security assessment evidence; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for security assessments; penetration testing team; system/network administrators; organizational personnel responsible for information security].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Automated mechanisms supporting security assessments; automated mechanisms supporting penetration testing].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Penetration testing is a specialized type of assessment conducted on systems or individual system components to identify vulnerabilities that could be exploited by adversaries. Penetration testing goes beyond automated vulnerability scanning. It is conducted by penetration testing agents and teams with particular skills and experience that include technical expertise in network, operating system, and application-level security. Penetration testing can be used to validate vulnerabilities or determine a system’s penetration resistance to adversaries within specified constraints. Such constraints include time, resources, and</p>
<p>skills. Organizations may also supplement penetration testing with red team exercises. Red teams attempt to duplicate the actions of adversaries in carrying out attacks against organizations and provide an in-depth analysis of security-related weaknesses or deficiencies.</p>
<p>Organizations can use the results of vulnerability analyses to support penetration testing activities. Penetration testing can be conducted internally or externally on the hardware, software, or firmware components of a system and can exercise both physical and technical controls. A standard method for penetration testing includes pretest analysis based on full knowledge of the system, pretest identification of potential vulnerabilities based on the pretest analysis, and testing designed to determine the exploitability of vulnerabilities. All parties agree to the specified rules of engagement before the commencement of penetration testing. Organizations correlate the rules of engagement for penetration tests and red teaming exercises (if used) with the tools, techniques, and procedures that they anticipate adversaries may employ. The penetration testing or red team exercises may be organization- based or external to the organization. In either case, it is important that the team possesses the necessary skills and resources to do the job and is objective in its assessment.</p>
<p>[NIST SP 800-53A] provides guidance on conducting security assessments.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>It is important that the organization has a repeatable penetration testing capability, regardless of who performs the penetration testing. This requirement entails performing tests against components of the organization’s architecture to identify cyber weaknesses and vulnerabilities. It does not mean everything in the architecture requires penetration testing. This requirement provides findings and mitigation strategies that benefit the organization and help create a stronger environment against adversary efforts. It may be beneficial for the organization to define the scope of penetration testing. The organization’s approach may involve hiring an expert penetration testing team to perform testing on behalf of the organization. When an organization has penetration testing performed, either by an internal team or external firm, they should establish rules of engagement and impose limits on what can be performed by the penetration test team(s).</p>
<p>Ensuring the objectivity of the test team is important as well. Potential conflicts of interest, such as having internal testers report directly or indirectly to network defenders or an external test team contracted by network defense leadership, must be carefully managed by organizational leadership.</p>
<p>Reports on the findings should be used by the organization to determine where to focus funding, staffing, training, or technical improvements for future mitigation strategies.</p>
<div class="sub-header-2">Example</div>
<p>You are responsible for information security in your organization. Leveraging a contract managed by the CIO, you hire an external expert penetration team annually to test the security of the organization’s enclave that stores and processes CUI [a,c]. You hire the same firm annually or on an ad hoc basis when significant changes are made to the architecture or components that affect security [b,c].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does the organization have internal team members who possess the proper level of expertise to perform a valued penetration testing effort [b]?</li>
<li>If the penetration testing is performed by an internal team, are the individuals performing the testing objectively [b]?</li>
<li>Is a penetration testing final report provided to the internal team responsible for organizational defense?</li>
<li>If previous penetration tests have been conducted, can the organization provide samples of penetration test plans, findings reports, and mitigation guidance based on the findings [a,b,c]?</li>
</ul>

', NULL, NULL, 38, 5, 19, NULL, NULL, 1215, NULL, N'Penetration Testing', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5415, N'SC.L3-3.13.4E', N'Employ physical isolation techniques or logical isolation techniques or both in organizational systems and system components.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>[ODP1] One or more of the following is/are selected: physical isolation techniques; logical isolation techniques;</li>
<li>[ODP2] Physical isolation techniques are defined (if selected); [ODP3] Logical isolation techniques are defined (if selected);</li>
<li>Physical isolation techniques or logical isolation techniques or both are employed in organizational systems and system components.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and communications protection policy; procedures addressing boundary protection; system design documentation; procedures addressing the use of thin nodes; list of key internal boundaries of the system; security plan; boundary protection hardware and software; system configuration settings and associated documentation; enterprise architecture documentation; system architecture; security architecture documentation; system audit records; system component inventory; list of security tools and support components to be isolated from other system components; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for information security; system/network administrators; system developers; organizational personnel responsible for boundary protection].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing the boundary protection capability; mechanisms implementing physical isolation techniques; mechanisms supporting and/or implementing the isolation of information security tools, mechanisms, and support components; mechanisms supporting and/or implementing the capability to separate system components supporting organizational missions and business functions; mechanisms implementing</p>
<p>logical isolation techniques; mechanisms supporting or implementing separate network addresses/different subnets; mechanisms supporting and/or implementing thin nodes].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>A mix of physical and logical isolation techniques (described below) implemented as part of the system architecture can limit the unauthorized flow of CUI, reduce the system attack surface, constrain the number of system components that must be secure, and impede the movement of an adversary. When implemented with a set of managed interfaces, physical and logical isolation techniques for organizational systems and components can isolate CUI into separate security domains where additional protections can be implemented. Any communications across the managed interfaces (i.e., across security domains), including for management or administrative purposes, constitutes remote access even if the communications remain within the organization. Separating system components with boundary protection mechanisms allows for the increased protection of individual components and more effective control of information flows between those components. This enhanced protection limits the potential harm from and susceptibility to hostile cyber- attacks and errors. The degree of isolation can vary depending on the boundary protection mechanisms selected. Boundary protection mechanisms include routers, gateways, and firewalls separating system components into physically separate networks or subnetworks; virtualization and micro-virtualization techniques; encrypting information flows among system components using distinct encryption keys; cross-domain devices separating subnetworks; and complete physical separation (i.e., air gaps).</p>
<p>System architectures include logical isolation, partial physical and logical isolation, or complete physical isolation between subsystems and at system boundaries between resources that store, process, transmit, or protect CUI and other resources. Examples include:</p>
<p>· Logical isolation: Data tagging, digital rights management (DRM), and data loss prevention (DLP) that tags, monitors, and restricts the flow of CUI; virtual machines or containers that separate CUI and other information on hosts; and virtual local area networks (VLAN) that keep CUI and other information separate on networks.</p>
<p>· Partial physical and logical isolation: Physically or cryptographically isolated networks, dedicated hardware in data centers, and secure clients that (a) may not directly access resources outside of the domain (i.e., all applications with cross-enclave connectivity execute as remote virtual applications hosted in a demilitarized zone [DMZ] or internal and protected enclave), (b) access via remote virtualized applications or virtual desktop with no file transfer capability other than with dual authorization, or (c) employ dedicated client hardware (e.g., a zero or thin client) or hardware approved for multi- level secure (MLS) usage.</p>
<p>· Complete physical isolation: Dedicated (not shared) client and server hardware; physically isolated, stand-alone enclaves for clients and servers; and (a) logically separate network traffic (e.g., using a VLAN) with end-to-end encryption using Public Key Infrastructure (PKI)-based cryptography or (b) physical isolation from other networks.</p>
<p>Isolation techniques are selected based on a risk management perspective that balances the threat, the information being protected, and the cost of the options for protection. Architectural and design decisions are guided and informed by the security requirements and selected solutions. Organizations consider the trustworthiness of the isolation techniques employed (e.g., the logical isolation relies on information technology that could be considered a high value target because of the function being performed), introducing its own set of vulnerabilities.</p>
<p>[NIST SP 800-160-1] provides guidance on developing trustworthy, secure, and cyber resilient systems using systems security engineering practices and security design concepts.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>For this requirement, organizations must identify the systems or enclaves that need to be isolated, then design and implement the isolation. The resulting isolation solutions are documented or referenced in the SSP. Documentation will be dependent on the design selected and may include a high-level diagram, but specific details that may change on some frequency would be omitted. During an assessment, providing details such as subnet and VLAN implementation identifiers, internal boundary protection hardware and software, interface device functionality, and system configuration and Access Control List (ACL) settings will be useful.</p>
<div class="sub-header-2">Example</div>
<p>You are responsible for information security in your organization, which holds and processes CUI. You have decided to isolate the systems processing CUI by limiting all communications in and out that enclave with cross-domain interface devices that implement access control [a]. Your security team has identified all the systems containing such CUI, documented network design details, developed network diagrams showing access control points, documented the logic for the access control enforcement decisions, described the interface and protocol to the identification and authentication mechanisms, and documented all details associated with the ACLs, including review, updates, and credential revocation procedures.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Has the organization clearly identified where they use physical, logical, or both isolation techniques [a]?</li>
<li>Can the organization describe the isolation techniques they have employed [a]?</li>
<li>Has the organization deployed subnetting, internal firewalls, and VLANs to control packet flow between internal segments [a]?</li>
<li>Does the organization employ metadata to inform isolation techniques [a]?</li>
</ul>

', NULL, NULL, 38, 19, 19, NULL, NULL, 1216, NULL, N'Isolation', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5416, N'SI.L3-3.14.1E', N'Verify the integrity of security critical and essential software using root of trust mechanisms or cryptographic signatures.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>[ODP1] Security critical or essential software is defined;</li>
<li>Root of trust mechanisms or cryptographic signatures are identified; and</li>
<li>The integrity of security critical and essential software is verified using root of trust mechanisms or cryptographic signatures.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and information integrity policy; procedures addressing software, firmware, and information integrity; system design documentation; security plan; system configuration settings and associated documentation; system component inventory; integrity verification tools and associated documentation; records of integrity verification scans; system audit records; cryptographic mechanisms and associated documentation; records of detected unauthorized changes to software, firmware, and information; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for information security; organizational personnel responsible for software, firmware, and/or information integrity; system developers; system/network administrators].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Software, firmware, and information integrity verification tools; mechanisms supporting and/or implementing integrity verification of the boot process; mechanisms supporting and/or implementing protection of the integrity of boot firmware; cryptographic mechanisms implementing software, firmware, and information integrity; safeguards implementing protection of the integrity of boot firmware].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Verifying the integrity of the organization’s security-critical or essential software is an important capability since corrupted software is the primary attack vector used by adversaries to undermine or disrupt the proper functioning of organizational systems. There are many ways to verify software integrity throughout the system development life cycle. Root of trust mechanisms (e.g., secure boot, trusted platform modules, Unified Extensible Firmware Interface [UEFI]), verify that only trusted code is executed during boot processes. This capability helps system components protect the integrity of boot firmware in organizational systems by verifying the integrity and authenticity of updates to the firmware prior to applying changes to the system component and preventing unauthorized processes from modifying the boot firmware. The employment of cryptographic signatures ensures the integrity and authenticity of critical and essential software that stores, processes, or transmits, CUI. Cryptographic signatures include digital signatures and the computation and application of signed hashes using asymmetric cryptography, protecting the confidentiality of the key used to generate the hash, and using the public key to verify the hash information. Hardware roots of trust are considered to be more secure. This requirement supports 3.4.1e and 3.4.3.e.</p>
<p>[FIPS 140-3] provides security requirements for cryptographic modules. [FIPS 180-4] and [FIPS 202] provide secure hash standards. [FIPS 186-4] provides a digital signature standard. [NIST SP 800-147] provides BIOS protection guidance. [NIST TRUST] provides guidance on the roots of trust project.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Organizations verify the integrity of security critical and essential software every time that software is executed. Secure boot mechanisms for firmware and a cryptographically protected boot chain ensure the integrity of the operating system (OS) and security critical software, and cryptographic techniques ensure the essential software has not been tampered with after development prior to execution. If software is itself considered to be CUI or if it uses CUI, this requirement ensures it has not been compromised.</p>
<p>Software and information integrity verification tools can help check the integrity during the development process for those organizations developing software. As critical software is updated, the integrity of any configuration data and the software must result in updated signatures and an ongoing verification process.</p>
<p>Operating systems include mechanisms to validate digital signatures for installed software. Most software packages use signatures to prove the integrity of the provided software, and the organization should leverage these capabilities. Similarly, most hardware appliance vendors have secure boot checks in place for their devices and built-in features that check the digital signature of an upgrade/update package before they allow an upgrade to take place. For locally developed software, the organization should sign the software to ensure its integrity.</p>
<div class="sub-header-2">Example 1</div>
<p>You are responsible for information security in your organization. Your security team has identified the software used to process CUI, and the organization has decided it is mission- critical software that must be protected. You take three actions. First, you ensure all of the platform’s configuration information used at boot is hashed and stored in a TPM [a]. Second, you ensure that the platforms used to execute the software are started with a digitally signed software chain to a secure boot process using the TPM. Finally, you ensure the essential applications are cryptographically protected with a digital signature when stored and the signature is verified prior to execution [b].</p>
<div class="sub-header-2">Example 2</div>
<p>Your organization has a software security team, and they are required to validate unsigned essential software provided to systems that do not have TPM modules. The organization has a policy stating no software can be executed on a system unless its hash value matches that of a hash stored in the approved software library kept by the software security team [a]. This action is performed by implementing software restriction policies on systems. The team tests the software on a sandbox system, and once it is proven safe, they run a hashing function on the software to create a hash value. This hash value is placed in a software library so the system will know it can execute the software [b]. Any changes to the software without the software security team’s approval will result in the software failing the security tests, and it will be prevented from executing.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Does the organization use cryptographic signatures to ensure the integrity and authenticity of critical and essential software and data [b]?</li>
<li>Has the organization identified those devices that require integrity verification of the boot process [a]?</li>
<li>Does the organization use a TPM to store hashes of pre-run time configuration parameters for those systems [b]?</li>
<li>Does the organization leverage the TPM configuration hash to verify the hardware and software configuration is unchanged in order to determine that a system is trustworthy before running mission-essential applications [b,c]?</li>
<li>Does the organization use the TPM for remote attestation to determine to which extent information can be trusted from another system [b,c]?</li>
<li>Has the organization identified devices requiring organization-defined security safeguards that must be implemented to protect the integrity of boot firmware [a]?</li>
<li>Has the organization defined security safeguards that will be implemented to protect the integrity of boot firmware in mission-essential devices [a]?</li>
<li>Has the organization implemented organization-defined security safeguards to protect the integrity of boot firmware in organization-defined essential devices [b]?</li>
</ul>

', NULL, NULL, 38, 12, 19, NULL, NULL, 1217, NULL, N'Integrity Verification', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5417, N'SI.L3-3.14.3E', N'Ensure that specialized assets including IoT, IIoT, OT, GFE, Restricted Information Systems and test equipment are included in the scope of the specified enhanced security requirements or are segregated in purpose-specific networks.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>Specialized assets including IoT, IIoT, OT, GFE, Restricted Information Systems and test equipment are included in the scope of the specified enhanced security requirements; and</li>
<li>Systems and system components that are not included in specialized assets including IoT, IIoT, OT, GFE, Restricted Information Systems and test equipment are segregated in purpose-specific networks.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: Access control policy; information flow control policies; system and services acquisition policy; system and communications protection policy; procedures addressing security function isolation; procedures addressing application partitioning; procedures addressing security engineering principles used in the specification, design, development, implementation, and modification of the system; procedures addressing information flow enforcement; procedures addressing access enforcement; system architecture; system design documentation; security plan; system component inventory; system configuration settings and associated documentation; system baseline configuration; list of security functions to be isolated from non-security functions; system audit records; security requirements and specifications for the system; list of approved authorizations (user privileges); list of information flow authorizations; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for access enforcement; system/network administrators; organizational personnel responsible for information security; system developers; system integrators; organizational personnel responsible for acquisition/contracting; organizational personnel responsible for determining system security requirements; system security architects; enterprise architects; organizational personnel responsible for system specification, design, development, implementation, and modification].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms implementing the access control policy; mechanisms implementing the information flow enforcement policy; mechanisms supporting the</p>
<p>application of security engineering principles in system specification, design, development, implementation, and modification].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Organizations may have a variety of systems and system components in their inventory, including Information Technology (IT), Internet of Things (IoT), Operational Technology (OT), and Industrial Internet of Things (IIoT). The convergence of IT, OT, IoT, and IIoT significantly increases the attack surface of organizations and provides attack vectors that are challenging to address. Compromised IoT, OT, and IIoT system components can serve as launching points for attacks on organizational IT systems that handle CUI. Some IoT, OT, and IIoT system components can store, transmit, or process CUI (e.g., specifications or parameters for objects manufactured in support of critical programs). Most of the current generation of IoT, OT, and IIoT system components are not designed with security as a foundational property and may not be able to be configured to support security functionality. Connections to and from such system components are generally not encrypted, do not provide the necessary authentication, are not monitored, and are not logged. Therefore, these components pose a significant cyber threat. Gaps in IoT, OT, and IIoT security capabilities may be addressed by employing intermediary system components that can provide encryption, authentication, security scanning, and logging capabilities—thus, preventing the components from being accessible from the Internet. However, such mitigation options are not always available or practicable. The situation is further complicated because some of the IoT, OT, and IIoT devices may be needed for essential missions and business functions. In those instances, it is necessary for such devices to be isolated from the Internet to reduce the susceptibility to cyber-attacks.</p>
<p>[NIST SP 800-160-1] provides guidance on security engineering practices and security design concepts.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>Specialized Assets are addressed in the scoping guidance, which should be overlaid on this requirement. The OSC must document Specialized Assets in the asset inventory; develop, document, and periodically update system security plans; and include Specialized Assets in the network diagram. The Specialized Asset section of the SSP should describe associated system boundaries, system environments of operation, how security requirements are implemented, and the relationships with or connections to other systems.</p>
<p>Specialized Assets within the Level 3 CMMC assessment scope must be either assessed against all CMMC security requirements or separated into purpose-specific networks. Specialized Assets may have limitations on the application of certain security requirements. To accommodate such issues, the SSP should describe any mitigations.</p>
<p>Intermediary devices are permitted to mitigate an inability for the asset itself to implement one or more CMMC requirements. An example of an intermediary device used in conjunction with a specialized asset is a boundary device or a proxy.</p>
<p>The high-level list of Specialized Assets includes:</p>
<ul>
<li>Government Furnished Equipment;</li>
<li>IoT and IIoT devices (physical or virtual) with sensing/actuation capability and programmability features;</li>
<li>OT used in manufacturing systems, industrial control systems (ICS), or supervisory control and data acquisition (SCADA) systems;</li>
<li>Restricted Information Systems, which can include systems and IT components that are configured based on government requirements; and</li>
<li>Test equipment.</li>
</ul>
<div class="sub-header-2">Example</div>
<p>You are responsible for information security in your organization, which processes CUI on the network, and this same network includes GFE for which the configuration is mandated by the government. The GFE is needed to process CUI information [a]. Because the company cannot manage the configuration of the GFE, it has been augmented by placing a bastion host between it and the network. The bastion host meets the requirements that the GFE cannot, and is used to send CUI files to and from the GFE for processing. You and your security team document in the SSP all of the GFE to include GFE connectivity diagrams, a description of the isolation mechanism, and a description of how your organization manages risk associated with that GFE [a].</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Has the organization documented all specialized assets in asset inventory [a]?</li>
<li>Has the organization documented all specialized assets in the SSP to show how risk is managed [b]?</li>
<li>Has the organization provided a network diagram for specialized assets [a,b]?</li>
</ul>

', NULL, NULL, 38, 13, 19, NULL, NULL, 1217, NULL, N'Specialized Asset Security', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_QUESTIONS] ([Mat_Question_Id], [Question_Title], [Question_Text], [Supplemental_Info], [Category], [Sub_Category], [Maturity_Level_Id], [Sequence], [Maturity_Model_Id], [Parent_Question_Id], [Ranking], [Grouping_Id], [Examination_Approach], [Short_Name], [Mat_Question_Type], [Parent_Option_Id], [Supplemental_Fact], [Scope], [Recommend_Action], [Risk_Addressed], [Services], [Outcome], [Security_Practice], [Implementation_Guides]) VALUES (5418, N'SI.L3-3.14.6E', N'Use threat indicator information and effective mitigations obtained from, at a minimum, open or commercial sources, and any DoD-provided sources, to guide and inform intrusion detection and threat hunting.', N'<div class="sub-header-1">ASSESSMENT OBJECTIVES [NIST SP 800-171A]</div>
Determine if:
<ol class="alpha-bracket">
<li>[ODP1] External organizations from which to obtain threat indicator information and effective mitigations are defined;</li>
<li>Threat indicator information is identified;</li>
<li>Effective mitigations are identified;</li>
<li>Intrusion detection approaches are identified;</li>
<li>Threat hunting activities are identified; and</li>
<li>Threat indicator information and effective mitigations obtained from, at a minimum, open or commercial sources and any DoD-provided sources, are used to guide and inform intrusion detection and threat hunting.</li>
</ol>

<div class="sub-header-1">POTENTIAL ASSESSMENT METHODS AND OBJECTS</div>
<div class="sub-header-2">Examine</div>
<p>[SELECT FROM: System and information integrity policy; information security program plan; procedures addressing security alerts, advisories, and directives; threat awareness program documentation; procedures addressing system monitoring; procedures for the threat awareness program; risk assessment results relevant to threat awareness; records of security alerts and advisories; system design documentation; security plan; system monitoring tools and techniques documentation; system configuration settings and associated documentation; system monitoring logs or records; system audit records; documentation on the cross-organization information-sharing capability; other relevant documents or records].</p>
<div class="sub-header-2">Interview</div>
<p>[SELECT FROM: Organizational personnel responsible for information security program planning and plan implementation; system/network administrators; organizational personnel responsible for the threat awareness program; organizational personnel responsible for the cross-organization information-sharing capability; organizational personnel responsible for information security; organizational personnel responsible for installing, configuring, and/or maintaining the system; organizational personnel security alerts and advisories; organizational personnel responsible for implementing, operating, maintaining, and using the system; organizational personnel, organizational elements, and/or external organizations to whom alerts, advisories, and directives are to be</p>
<p>disseminated; personnel with whom threat awareness information is shared by the organization; system developers].</p>
<div class="sub-header-2">Test</div>
<p>[SELECT FROM: Mechanisms supporting and/or implementing the threat awareness program; mechanisms supporting and/or implementing the cross-organization information- sharing capability; mechanisms supporting and/or implementing the system monitoring capability; mechanisms supporting and/or implementing the definition, receipt, generation, and dissemination of security alerts, advisories, and directives; mechanisms supporting and/or implementing security directives; mechanisms supporting and/or implementing threat hunting; mechanisms supporting and/or implementing intrusion detection; mechanisms supporting and/or implementing the discovery, collection, distribution, and use of indicators of compromise].</p>

<div class="sub-header-1">DISCUSSION</div>
<p>Threat information related to specific threat events (e.g., TTPs, targets) that organizations have experienced, threat mitigations that organizations have found to be effective against certain types of threats, and threat intelligence (i.e., indications and warnings about threats that can occur) are sourced from and shared with trusted organizations. This threat information can be used by organizational Security Operations Centers (SOC) and incorporated into monitoring capabilities. Threat information sharing includes threat indicators, signatures, and adversary TTPs from organizations participating in threat- sharing consortia, government-commercial cooperatives, and government-government cooperatives (e.g., CERTCC, CISA/US-CERT, FIRST, ISAO, DIB CS Program). Unclassified indicators, based on classified information but which can be readily incorporated into organizational intrusion detection systems, are available to qualified nonfederal organizations from government sources.</p>

<div class="sub-header-1">FURTHER DISCUSSION</div>
<p>One way to effectively leverage threat indicator information is to access human- or machine- readable threat intelligence feeds. Effectiveness may also require the organization to create TTPs in support of operational requirements, which will typically include defensive cyber tools supporting incident detection, alerts, incident response, and threat hunting. It is possible that this requirement will be implemented by a third-party managed service provider, and in that case, it will be necessary to carefully define the boundary and responsibilities between the OSC and the ESP to guarantee a robust implementation. It is also important that the OSC validate threat indicator integration into the defensive cyber toolset by being able to (1) implement mitigations for sample industry relevant indicators of compromise (e.g., IP address, file hash), (2) identify sample indicators of compromise across sample endpoints, and (3) identify sample indicators of compromise using analytical processes on a system data repository.</p>
<div class="sub-header-2">Example</div>
<p>You are responsible for information security in your organization. You have maintained an effective intrusion detection capability for some time, but now you decide to introduce a threat hunting capability informed by internal and external threat intelligence [a,c,d,e]. You install a SIEM system that leverages threat information to provide functionality to:</p>
<ul>
<li>analyze logs, data sources, and alerts;</li>
<li>query data to identify anomalies;</li>
<li>identify variations from baseline threat levels;</li>
<li>provide machine learning capabilities associated with the correlation of anomalous data characteristics across the enterprise; and</li>
<li>categorize data sets based on expected data values.</li>
</ul>
<p>Your team also manages an internal mitigation plan (playbook) for all known threats for your environment. This playbook is used to implement effective mitigation strategies across the environment [b]. Some of the mitigation strategies are developed by team members, and others are obtained by threat feed services.</p>
<div class="sub-header-2">Potential Assessment Considerations</div>
<ul>
<li>Which external sources has the organization identified as threat information sources [a]?</li>
<li>Does the organization understand the TTPs of key attackers [c,d]?</li>
<li>Does the organization deploy threat indicators to EDR systems, network intrusion detection systems, or both [c,d,e]?</li>
<li>What actions does the organization implement when a threat alert/indicator is signaled [c,d,e]?</li>
<li>Does the organization use internal threat capabilities within their existing security tools [e]?</li>
<li>How does the organization respond to a third-party notification of a threat indicator [e]?</li>
</ul>

', NULL, NULL, 38, 14, 19, NULL, NULL, 1217, NULL, N'Threat-Guided Intrusion Detection', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
SET IDENTITY_INSERT [dbo].[MATURITY_QUESTIONS] OFF
PRINT(N'Operation applied to 149 rows out of 149')

PRINT(N'Add rows to [dbo].[MATURITY_REFERENCES]')
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5270, 693, N'FAR_52_204_21__d3096e66', 0, NULL, N'FAR Clause 52.204-21 b.1.i', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5270, 3970, N'3.1.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5271, 693, N'FAR_52_204_21__d3096e71', 0, NULL, N'FAR Clause 52.204-21 b.1.ii', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5271, 3970, N'3.1.2', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5272, 693, N'FAR_52_204_21__d3096e76', 0, NULL, N'FAR Clause 52.204-21 b.1.iii', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5272, 3970, N'3.1.20', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5273, 693, N'FAR_52_204_21__d3096e81', 0, NULL, N'FAR Clause 52.204-21 b.1.iv', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5273, 3970, N'3.1.22', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5274, 693, N'FAR_52_204_21__d3096e86', 0, NULL, N'FAR Clause 52.204-21 b.1.v', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5274, 3970, N'3.5.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5275, 693, N'FAR_52_204_21__d3096e91', 0, NULL, N'FAR Clause 52.204-21 b.1.vi', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5275, 3970, N'3.5.2', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5276, 693, N'FAR_52_204_21__d3096e96', 0, NULL, N'FAR Clause 52.204-21 b.1.vii', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5276, 3970, N'3.8.3', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5277, 693, N'FAR_52_204_21__d3096e101', 0, NULL, N'FAR Clause 52.204-21 b.1.viii', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5277, 3970, N'3.10.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5278, 693, N'FAR_52_204_21__d3096e106', 0, NULL, N'FAR Clause 52.204-21 b.1.ix', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5278, 3970, N'3.10.3', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5278, 3970, N'3.10.4', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5278, 3970, N'3.10.5', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5279, 693, N'FAR_52_204_21__d3096e111', 0, NULL, N'FAR Clause 52.204-21 b.1.x', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5279, 3970, N'3.13.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5280, 693, N'FAR_52_204_21__d3096e119', 0, NULL, N'FAR Clause 52.204-21 b.1.xi', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5280, 3970, N'3.13.5', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5281, 693, N'FAR_52_204_21__d3096e125', 0, NULL, N'FAR Clause 52.204-21 b.1.xii', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5281, 3970, N'3.14.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5282, 693, N'FAR_52_204_21__d3096e130', 0, NULL, N'FAR Clause 52.204-21 b.1.xiii', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5282, 3970, N'3.14.2', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5283, 693, N'FAR_52_204_21__d3096e135', 0, NULL, N'FAR Clause 52.204-21 b.1.xiv', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5283, 3970, N'3.14.4', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5284, 693, N'FAR_52_204_21__d3096e140', 0, NULL, N'FAR Clause 52.204-21 b.1.xv', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5284, 3970, N'3.14.5', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5285, 693, N'FAR_52_204_21__d3096e66', 0, NULL, N'FAR Clause 52.204-21 b.1.i', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5285, 3970, N'3.1.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5286, 693, N'FAR_52_204_21__d3096e71', 0, NULL, N'FAR Clause 52.204-21 b.1.ii', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5286, 3970, N'3.1.2', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5287, 3970, N'3.1.3', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5288, 3970, N'3.1.4', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5289, 3970, N'3.1.5', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5290, 3970, N'3.1.6', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5291, 3970, N'3.1.7', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5292, 3970, N'3.1.8', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5293, 3970, N'3.1.9', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5294, 3970, N'3.1.10', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5295, 3970, N'3.1.11', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5296, 3970, N'3.1.12', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5297, 3970, N'3.1.13', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5298, 3970, N'3.1.14', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5299, 3970, N'3.1.15', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5300, 3970, N'3.1.16', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5301, 3970, N'3.1.17', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5302, 3970, N'3.1.18', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5303, 3970, N'3.1.19', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5304, 693, N'FAR_52_204_21__d3096e76', 0, NULL, N'FAR Clause 52.204-21 b.1.iii', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5304, 3970, N'3.1.20', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5305, 3970, N'3.1.21', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5306, 693, N'FAR_52_204_21__d3096e81', 0, NULL, N'FAR Clause 52.204-21 b.1.iv', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5306, 3970, N'3.1.22', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5307, 3970, N'3.2.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5308, 3970, N'3.2.2', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5309, 3970, N'3.2.3', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5310, 3970, N'3.3.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5311, 3970, N'3.3.2', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5312, 3970, N'3.3.3', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5313, 3970, N'3.3.4', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5314, 3970, N'3.3.5', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5315, 3970, N'3.3.6', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5316, 3970, N'3.3.7', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5317, 3970, N'3.3.8', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5318, 3970, N'3.3.9', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5319, 3970, N'3.4.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5320, 3970, N'3.4.2', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5321, 3970, N'3.4.3', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5322, 3970, N'3.4.4', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5323, 3970, N'3.4.5', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5324, 3970, N'3.4.6', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5325, 3970, N'3.4.7', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5326, 3970, N'3.4.8', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5327, 3970, N'3.4.9', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5328, 693, N'FAR_52_204_21__d3096e86', 0, NULL, N'FAR Clause 52.204-21 b.1.v', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5328, 3970, N'3.5.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5329, 693, N'FAR_52_204_21__d3096e91', 0, NULL, N'FAR Clause 52.204-21 b.1.vi', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5329, 3970, N'3.5.2', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5330, 3970, N'3.5.3', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5331, 3970, N'3.5.4', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5332, 3970, N'3.5.5', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5333, 3970, N'3.5.6', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5334, 3970, N'3.5.7', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5335, 3970, N'3.5.8', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5336, 3970, N'3.5.9', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5337, 3970, N'3.5.10', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5338, 3970, N'3.5.11', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5339, 3970, N'3.6.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5340, 3970, N'3.6.2', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5341, 3970, N'3.6.3', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5342, 3970, N'3.7.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5343, 3970, N'3.7.2', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5344, 3970, N'3.7.3', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5345, 3970, N'3.7.4', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5346, 3970, N'3.7.5', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5347, 3970, N'3.7.6', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5348, 3970, N'3.8.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5349, 3970, N'3.8.2', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5350, 693, N'FAR_52_204_21__d3096e96', 0, NULL, N'FAR Clause 52.204-21 b.1.vii', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5350, 3970, N'3.8.3', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5351, 3970, N'3.8.4', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5352, 3970, N'3.8.5', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5353, 3970, N'3.8.6', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5354, 3970, N'3.8.7', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5355, 3970, N'3.8.8', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5356, 3970, N'3.8.9', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5357, 3970, N'3.9.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5358, 3970, N'3.9.2', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5359, 693, N'FAR_52_204_21__d3096e101', 0, NULL, N'FAR Clause 52.204-21 b.1.viii', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5359, 3970, N'3.10.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5360, 3970, N'3.10.2', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5361, 693, N'FAR_52_204_21__d3096e106', 0, NULL, N'FAR Clause 52.204-21 Partial b.1.ix', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5361, 3970, N'3.10.3', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5362, 693, N'FAR_52_204_21__d3096e106', 0, NULL, N'FAR Clause 52.204-21 Partial b.1.ix', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5362, 3970, N'3.10.4', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5363, 693, N'FAR_52_204_21__d3096e106', 0, NULL, N'FAR Clause 52.204-21 Partial b.1.ix', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5363, 3970, N'3.10.5', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5364, 3970, N'3.10.6', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5365, 3970, N'3.11.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5366, 3970, N'3.11.2', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5367, 3970, N'3.11.3', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5368, 3970, N'3.12.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5369, 3970, N'3.12.2', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5370, 3970, N'3.12.3', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5371, 3970, N'3.12.4', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5372, 693, N'FAR_52_204_21__d3096e111', 0, NULL, N'FAR Clause 52.204-21 b.1.x', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5372, 3970, N'3.13.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5373, 3970, N'3.13.2', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5374, 3970, N'3.13.3', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5375, 3970, N'3.13.4', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5376, 693, N'FAR_52_204_21__d3096e119', 0, NULL, N'FAR Clause 52.204-21 b.1.xi', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5376, 3970, N'3.13.5', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5377, 3970, N'3.13.6', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5378, 3970, N'3.13.7', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5379, 3970, N'3.13.8', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5380, 3970, N'3.13.9', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5381, 3970, N'3.13.10', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5382, 3970, N'3.13.11', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5383, 3970, N'3.13.12', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5384, 3970, N'3.13.13', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5385, 3970, N'3.13.14', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5386, 3970, N'3.13.15', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5387, 3970, N'3.13.16', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5388, 693, N'FAR_52_204_21__d3096e125', 0, NULL, N'FAR Clause 52.204-21 b.1.xii', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5388, 3970, N'3.14.1', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5389, 693, N'FAR_52_204_21__d3096e130', 0, NULL, N'FAR Clause 52.204-21 b.1.xiii', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5389, 3970, N'3.14.2', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5390, 3970, N'3.14.3', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5391, 693, N'FAR_52_204_21__d3096e135', 0, NULL, N'FAR Clause 52.204-21 b.1.xiv', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5391, 3970, N'3.14.4', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5392, 693, N'FAR_52_204_21__d3096e140', 0, NULL, N'FAR Clause 52.204-21 b.1.xv', NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5392, 3970, N'3.14.5', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5393, 3970, N'3.14.6', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5394, 3970, N'3.14.7', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5395, 3971, N'3.1.2e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5396, 3971, N'3.1.3e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5397, 3971, N'3.2.1e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5398, 3971, N'3.2.2e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5399, 3971, N'3.4.1e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5400, 3971, N'3.4.2e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5401, 3971, N'3.4.3e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5402, 3971, N'3.5.1e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5403, 3971, N'3.5.3e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5404, 3971, N'3.6.1e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5405, 3971, N'3.6.2e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5406, 3971, N'3.9.2e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5407, 3971, N'3.11.1e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5408, 3971, N'3.11.2e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5409, 3971, N'3.11.3e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5410, 3971, N'3.11.4e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5411, 3971, N'3.11.5e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5412, 3971, N'3.11.6e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5413, 3971, N'3.11.7e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5414, 3971, N'3.12.1e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5415, 3971, N'3.13.4e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5416, 3971, N'3.14.1e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5417, 3971, N'3.14.3e', 0, NULL, NULL, NULL)
INSERT INTO [dbo].[MATURITY_REFERENCES] ([Mat_Question_Id], [Gen_File_Id], [Section_Ref], [Source], [Page_Number], [Destination_String], [Sequence]) VALUES (5418, 3971, N'3.14.6e', 0, NULL, NULL, NULL)
PRINT(N'Operation applied to 183 rows out of 183')

PRINT(N'Add constraints to [dbo].[MATURITY_REFERENCES]')
ALTER TABLE [dbo].[MATURITY_REFERENCES] CHECK CONSTRAINT [FK_MATURITY_REFERENCES_GEN_FILE]
ALTER TABLE [dbo].[MATURITY_REFERENCES] WITH CHECK CHECK CONSTRAINT [FK_MATURITY_REFERENCES_MATURITY_QUESTIONS]

PRINT(N'Add constraints to [dbo].[MATURITY_QUESTIONS]')
ALTER TABLE [dbo].[MATURITY_QUESTIONS] CHECK CONSTRAINT [FK__MATURITY___Matur__5B638405]
ALTER TABLE [dbo].[MATURITY_QUESTIONS] WITH CHECK CHECK CONSTRAINT [FK_MATURITY_QUESTIONS_MATURITY_GROUPINGS]
ALTER TABLE [dbo].[MATURITY_QUESTIONS] WITH CHECK CHECK CONSTRAINT [FK_MATURITY_QUESTIONS_MATURITY_LEVELS]
ALTER TABLE [dbo].[MATURITY_QUESTIONS] CHECK CONSTRAINT [FK_MATURITY_QUESTIONS_MATURITY_MODELS]
ALTER TABLE [dbo].[MATURITY_QUESTIONS] WITH CHECK CHECK CONSTRAINT [FK_MATURITY_QUESTIONS_MATURITY_OPTIONS]
ALTER TABLE [dbo].[MATURITY_QUESTIONS] WITH CHECK CHECK CONSTRAINT [FK_MATURITY_QUESTIONS_MATURITY_QUESTION_TYPES]
ALTER TABLE [dbo].[HYDRO_DATA] WITH CHECK CHECK CONSTRAINT [FK__HYDRO_DAT__Mat_Q__38652BE2]
ALTER TABLE [dbo].[ISE_ACTIONS] WITH CHECK CHECK CONSTRAINT [FK_MATURITY_QUESTIONS_MAT_QUESTION_ID]
ALTER TABLE [dbo].[MATURITY_ANSWER_OPTIONS] WITH CHECK CHECK CONSTRAINT [FK_MATURITY_ANSWER_OPTIONS_MATURITY_QUESTIONS1]
ALTER TABLE [dbo].[MATURITY_QUESTION_PROPS] WITH CHECK CHECK CONSTRAINT [FK_MATURITY_QUESTION_PROPS_MATURITY_QUESTIONS]
ALTER TABLE [dbo].[MATURITY_REFERENCE_TEXT] WITH CHECK CHECK CONSTRAINT [FK_MATURITY_REFERENCE_TEXT_MATURITY_QUESTIONS]
ALTER TABLE [dbo].[MATURITY_SUB_MODEL_QUESTIONS] WITH CHECK CHECK CONSTRAINT [FK_MATURITY_SUB_MODEL_QUESTIONS_MATURITY_QUESTIONS]
ALTER TABLE [dbo].[TTP_MAT_QUESTION] WITH CHECK CHECK CONSTRAINT [FK_TTP_MAT_QUESTION_MATURITY_QUESTIONS]

PRINT(N'Add constraints to [dbo].[REQUIREMENT_QUESTIONS_SETS]')
ALTER TABLE [dbo].[REQUIREMENT_QUESTIONS_SETS] WITH CHECK CHECK CONSTRAINT [FK_REQUIREMENT_QUESTIONS_SETS_NEW_QUESTION]
ALTER TABLE [dbo].[REQUIREMENT_QUESTIONS_SETS] WITH CHECK CHECK CONSTRAINT [FK_REQUIREMENT_QUESTIONS_SETS_NEW_REQUIREMENT]
ALTER TABLE [dbo].[REQUIREMENT_QUESTIONS_SETS] WITH CHECK CHECK CONSTRAINT [FK_REQUIREMENT_QUESTIONS_SETS_SETS]

PRINT(N'Add constraints to [dbo].[PARAMETER_REQUIREMENTS]')
ALTER TABLE [dbo].[PARAMETER_REQUIREMENTS] CHECK CONSTRAINT [FK_Parameter_Requirements_NEW_REQUIREMENT]
ALTER TABLE [dbo].[PARAMETER_REQUIREMENTS] WITH CHECK CHECK CONSTRAINT [FK_Parameter_Requirements_Parameters]

PRINT(N'Add constraints to [dbo].[NEW_QUESTION_LEVELS]')
ALTER TABLE [dbo].[NEW_QUESTION_LEVELS] WITH CHECK CHECK CONSTRAINT [FK_NEW_QUESTION_LEVELS_NEW_QUESTION_SETS]

PRINT(N'Add constraints to [dbo].[NCSF_FULL_TO_MID]')
ALTER TABLE [dbo].[NCSF_FULL_TO_MID] WITH CHECK CHECK CONSTRAINT [FK_NCSF_FULL_TO_MID_NCSF_CONVERSION_MAPPINGS_FULL]
ALTER TABLE [dbo].[NCSF_FULL_TO_MID] WITH CHECK CHECK CONSTRAINT [FK_NCSF_FULL_TO_MID_NCSF_CONVERSION_MAPPINGS_MID]

PRINT(N'Add constraints to [dbo].[NCSF_ENTRY_TO_MID]')
ALTER TABLE [dbo].[NCSF_ENTRY_TO_MID] WITH CHECK CHECK CONSTRAINT [FK_NCSF_ENTRY_TO_MID_NCSF_CONVERSION_MAPPINGS_ENTRY]
ALTER TABLE [dbo].[NCSF_ENTRY_TO_MID] WITH CHECK CHECK CONSTRAINT [FK_NCSF_ENTRY_TO_MID_NCSF_CONVERSION_MAPPINGS_MID]

PRINT(N'Add constraints to [dbo].[MATURITY_LEVELS]')
ALTER TABLE [dbo].[MATURITY_LEVELS] WITH CHECK CHECK CONSTRAINT [FK_MATURITY_LEVELS_MATURITY_MODELS]

PRINT(N'Add constraints to [dbo].[MATURITY_GROUPINGS]')
ALTER TABLE [dbo].[MATURITY_GROUPINGS] WITH CHECK CHECK CONSTRAINT [FK_MATURITY_GROUPINGS_MATURITY_GROUPING_TYPES]
ALTER TABLE [dbo].[MATURITY_DOMAIN_REMARKS] WITH CHECK CHECK CONSTRAINT [FK_MATURITY_DOMAIN_REMARKS_MATURITY_GROUPINGS]

PRINT(N'Add constraints to [dbo].[GALLERY_GROUP_DETAILS]')
ALTER TABLE [dbo].[GALLERY_GROUP_DETAILS] WITH CHECK CHECK CONSTRAINT [FK_GALLERY_GROUP_DETAILS_GALLERY_GROUP]
ALTER TABLE [dbo].[GALLERY_GROUP_DETAILS] WITH CHECK CHECK CONSTRAINT [FK_GALLERY_GROUP_DETAILS_GALLERY_ITEM]
ALTER TABLE [dbo].[PARAMETER_ASSESSMENT] WITH CHECK CHECK CONSTRAINT [FK_ASSESSMENT_PARAMETERS_PARAMETERS]
ALTER TABLE [dbo].[PARAMETER_VALUES] WITH CHECK CHECK CONSTRAINT [FK_PARAMETER_VALUES_PARAMETERS]

PRINT(N'Add constraints to [dbo].[NEW_REQUIREMENT]')
ALTER TABLE [dbo].[NEW_REQUIREMENT] CHECK CONSTRAINT [FK_NEW_REQUIREMENT_NCSF_Category]
ALTER TABLE [dbo].[NEW_REQUIREMENT] WITH CHECK CHECK CONSTRAINT [FK_NEW_REQUIREMENT_QUESTION_GROUP_HEADING]
ALTER TABLE [dbo].[NEW_REQUIREMENT] CHECK CONSTRAINT [FK_NEW_REQUIREMENT_STANDARD_CATEGORY]
ALTER TABLE [dbo].[FINANCIAL_REQUIREMENTS] WITH CHECK CHECK CONSTRAINT [FK_FINANCIAL_REQUIREMENTS_NEW_REQUIREMENT]
ALTER TABLE [dbo].[NERC_RISK_RANKING] CHECK CONSTRAINT [FK_NERC_RISK_RANKING_NEW_REQUIREMENT]
ALTER TABLE [dbo].[REQUIREMENT_LEVELS] CHECK CONSTRAINT [FK_REQUIREMENT_LEVELS_NEW_REQUIREMENT]
ALTER TABLE [dbo].[REQUIREMENT_REFERENCE_TEXT] WITH CHECK CHECK CONSTRAINT [FK_REQUIREMENT_REFERENCE_TEXT_NEW_REQUIREMENT]
ALTER TABLE [dbo].[REQUIREMENT_REFERENCES] CHECK CONSTRAINT [FK_REQUIREMENT_REFERENCES_NEW_REQUIREMENT]
ALTER TABLE [dbo].[REQUIREMENT_SETS] CHECK CONSTRAINT [FK_REQUIREMENT_SETS_NEW_REQUIREMENT]

PRINT(N'Add constraints to [dbo].[NEW_QUESTION_SETS]')
ALTER TABLE [dbo].[NEW_QUESTION_SETS] CHECK CONSTRAINT [FK_NEW_QUESTION_SETS_NEW_QUESTION]
ALTER TABLE [dbo].[NEW_QUESTION_SETS] CHECK CONSTRAINT [FK_NEW_QUESTION_SETS_SETS]

PRINT(N'Add constraints to [dbo].[MATURITY_MODELS]')
ALTER TABLE [dbo].[MATURITY_MODELS] WITH CHECK CHECK CONSTRAINT [FK_MATURITY_MODELS_MATURITY_LEVEL_USAGE_TYPES]
ALTER TABLE [dbo].[ANALYTICS_MATURITY_GROUPINGS] WITH CHECK CHECK CONSTRAINT [FK_ANALYTICS_MATURITY_GROUPINGS_MATURITY_MODELS]
ALTER TABLE [dbo].[AVAILABLE_MATURITY_MODELS] WITH CHECK CHECK CONSTRAINT [FK__AVAILABLE__model__6F6A7CB2]
ALTER TABLE [dbo].[MODES_SETS_MATURITY_MODELS] WITH CHECK CHECK CONSTRAINT [FK_MODES_SETS_MATURITY_MODELS_MATURITY_MODELS]

PRINT(N'Add constraints to [dbo].[GEN_FILE]')
ALTER TABLE [dbo].[GEN_FILE] WITH CHECK CHECK CONSTRAINT [FK_GEN_FILE_FILE_REF_KEYS]
ALTER TABLE [dbo].[GEN_FILE] WITH CHECK CHECK CONSTRAINT [FK_GEN_FILE_FILE_TYPE]
ALTER TABLE [dbo].[FILE_KEYWORDS] CHECK CONSTRAINT [FILE_KEYWORDS_GEN_FILE_FK]
ALTER TABLE [dbo].[GEN_FILE_LIB_PATH_CORL] CHECK CONSTRAINT [FK_GEN_FILE_LIB_PATH_CORL_GEN_FILE]
ALTER TABLE [dbo].[REQUIREMENT_REFERENCES] CHECK CONSTRAINT [FK_REQUIREMENT_REFERENCES_GEN_FILE]
ALTER TABLE [dbo].[SET_FILES] WITH CHECK CHECK CONSTRAINT [FK_SET_FILES_GEN_FILE]
ALTER TABLE [dbo].[ASSESSMENTS] WITH CHECK CHECK CONSTRAINT [FK_ASSESSMENTS_GALLERY_ITEM]

PRINT(N'Add DML triggers to [dbo].[MATURITY_GROUPINGS]')
ALTER TABLE [dbo].[MATURITY_GROUPINGS] ENABLE TRIGGER [trg_update_maturity_groupings]
COMMIT TRANSACTION
GO
